{"version":3,"file":"static/js/main.18d8635c.js","mappings":"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","sources":["constants/Keys.ts","constants/Constants.ts","utilities/utilities.ts","constants/Fonts.ts","styles/global.ts","constants/Images.ts","routes/DrawerRoutes.ts","constants/ExampleData.ts","services/NewsLoaderService/NewsLoaderService.ts","constants/RouteIcons.tsx","components/YellowCircle.tsx","components/DrawerMenuComponent/Styles.ts","services/NewsLoaderService/Constants.ts","components/DrawerMenuComponent/DrawerMenu.tsx","routes/globalDrawer.ts","components/Header.tsx","utilities/getWeekType.ts","utilities/getStrict.ts","constants/Days.ts","models/ScheduleClass/Types.ts","models/ScheduleClass/ScheduleClass.ts","services/SettingsService/Types.ts","contexts/settingsContext.ts","components/shared/AppText.tsx","components/ScheduleComponents/ScheduleText.tsx","contexts/weekTypeContext.ts","components/ScheduleComponents/ScheduleClassComponent/Style.ts","models/TeacherModel/Constants.ts","models/TeacherModel/TeacherModel.ts","components/ScheduleComponents/ScheduleClassComponent/Formatters.ts","components/ScheduleComponents/ScheduleClassComponent/ScheduleClass.tsx","components/shared/Separator.tsx","components/shared/SwipeableItem/SwipeableItem.tsx","components/ScheduleEditorComponents/ScheduleClassUnderlay.tsx","services/EditedScheduleStorageService/EditedScheduleStorageService.ts","services/ScheduleLoaderService/ScheduleLoaderService.ts","services/ScheduleLoaderService/ScheduleLoaderServiceBase.ts","services/LocalNotificationsService/LocalNotificationsService.ts","constants/Events.ts","services/SettingsService/SettingsService.ts","services/ClassNotificationBuilder.ts","services/ScheduleNotificationsService.ts","routes/EditorStackRoutes.ts","constants/Descriptions.ts","components/ScheduleComponents/ScheduleDayComponent/Styles.ts","components/ScheduleComponents/ScheduleDayComponent/ScheduleDay.tsx","models/ScheduleDay/ScheduleDay.ts","models/ScheduleModel/ScheduleModel.ts","components/OptionPickerModalComponent/Styles.ts","components/OptionPickerModalComponent/OptionPickerModal.tsx","screens/IntroductoryCarousel/Pages.tsx","screens/IntroductoryCarousel/IntroductoryCarouselWebStyles.ts","screens/IntroductoryCarousel/IntroductoryCarousel.tsx","components/ScheduleComponents/ScheduleHeaderComponent/Styles.ts","components/ScheduleComponents/ScheduleHeaderComponent/ScheduleHeader.tsx","components/ScheduleEditorComponents/EditActionsExplanatoryCard.tsx","components/ScheduleComponents/DateOverviewCard.tsx","screens/ScheduleScreen/Styles.ts","constants/AsyncStorageKeys.ts","screens/ScheduleScreen/Utils/OnLayoutChange.ts","screens/ScheduleScreen/ScheduleScreen.tsx","screens/ReglamentScreen/Styles.ts","screens/ReglamentScreen/ReglamentClassComponent.tsx","screens/ReglamentScreen/ReglamentScreen.tsx","screens/TeachersScreen.tsx","components/StackHeader.tsx","components/shared/Switch.tsx","components/shared/RadioButtonGroup.tsx","screens/TestTabsScreens/scheduleEditorStack/ScheduleClassForm.tsx","screens/ScheduleEditorScreen.tsx","routes/EditorStack.tsx","screens/TestTabsScreens/FacultiesTestScreen.tsx","routes/ContactsStackRoutes.ts","constants/Contacts.tsx","screens/ContactsScreen/Styles.ts","components/WarningBar.tsx","screens/ContactsScreen/ContactsScreen.tsx","routes/ContactsStack.tsx","screens/NewsScreen/Styles.ts","components/shared/ExtendedAutoLink.tsx","screens/NewsScreen/NewsCard.tsx","screens/NewsScreen/NewsScreen.tsx","components/shared/card.tsx","screens/TestTabsScreens/NotificationTests.tsx","components/shared/Expander.tsx","screens/TestTabsScreens/ScheduledNotificationsScreen.tsx","components/ContentViewModal.tsx","components/shared/Button.tsx","screens/TestTabsScreens/FileSystemScreen.tsx","screens/TestTabsScreens/ScheduleEditor.tsx","routes/testEditorStack.tsx","screens/TestTabsScreens/ContactsModalsTestScreen.tsx","routes/ContactsTestStack.tsx","routes/testTabs.tsx","screens/SettingsScreen/Styles.ts","screens/SettingsScreen/SettingsScreen.tsx","screens/AboutScreen.tsx","components/Table.tsx","components/UnfoldableCard.tsx","screens/QnAScreen.tsx","services/AnalyticsService/AnalyticsService.ts","components/shared/FailureView.tsx","styles/AppStyles.ts","App.tsx","index.ts","node_modules/moment/locale|sync|/^/.*$","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { CONTENTFUL_SPACE, CONTENTFUL_CONTENT_DELIVERY_ACCESS_TOKEN, APTABASE_APP_KEY } from \"@env\"\r\nimport Aptabase from \"@aptabase/react-native\"\r\n\r\nexport const ContentfulSpace = CONTENTFUL_SPACE\r\nexport const ContentfulContentDeliveryAccessToken = CONTENTFUL_CONTENT_DELIVERY_ACCESS_TOKEN\r\n\r\n// async-storage key udner which the app settings are stored. Can be whatever and is not confidential\r\nexport const STORAGE_KEY = \"@noid_schedule_app_settings103\"\r\n\r\nexport const AptabaseAppKey = APTABASE_APP_KEY\r\n","export type REGLAMENT_DATA_ELEM_TYPE = [number, string, string]\r\nexport type REGLAMENT_DATA_TYPE = REGLAMENT_DATA_ELEM_TYPE[]\r\n\r\n// export const REGLAMENT_DATA_OLD: REGLAMENT_DATA_TYPE = [\r\n//   [1, \"8:30\", \"10:05\", \"9:15 – 9:20\"],\r\n//   [2, \"10:15\", \"11:50\", \"11:00 – 11:05\"],\r\n//   [3, \"12:20\", \"13:55\", \"13:05 – 13:10\"],\r\n//   [4, \"14:05\", \"15:40\", \"14:50 – 14:55\"],\r\n//   [5, \"15:50\", \"17:25\", \"16:35 – 16:40\"],\r\n//   [6, \"17:35\", \"19:10\", \"18:20 – 18:25\"],\r\n// ]\r\n\r\nexport const REGLAMENT_DATA: REGLAMENT_DATA_TYPE = [\r\n  [1, \"08:30\", \"09:50\"],\r\n  [2, \"10:05\", \"11:25\"],\r\n  [3, \"11:40\", \"13:00\"],\r\n  [4, \"13:15\", \"14:35\"],\r\n  [5, \"14:50\", \"16:10\"],\r\n  [6, \"16:25\", \"17:45\"],\r\n  [7, \"18:00\", \"19:20\"],\r\n  [8, \"19:30\", \"20:50\"],\r\n]\r\n\r\nexport const suffixesForNumbers = {\r\n  1: \"-ша\",\r\n  2: \"-га\",\r\n  3: \"-тя\",\r\n  4: \"-та\",\r\n  5: \"-та\",\r\n  6: \"-та\",\r\n}\r\n\r\nexport const SEMESTER_MONTHS = 6\r\nexport const MAX_CLASSES_PER_DAY = 6\r\n\r\nexport const NOTIFICATIONS_CHANNEL_ID = \"interactive-schedule-notifications\"\r\n\r\nexport const WEB_VERSION_NAME = \"scheduleuad.live\"\r\nexport const LINK_TO_WEB_VERSION = `https://${WEB_VERSION_NAME}`\r\n","import moment from \"moment\"\r\n\r\nimport constants, { ExecutionEnvironment } from \"expo-constants\"\r\n\r\n// @ts-ignore\r\nimport contentful from \"contentful/dist/contentful.browser.min.js\"\r\n// @ts-ignore\r\nimport { createClient } from \"contentful/dist/contentful.browser.min.js\"\r\nimport { ContentfulClientApi } from \"contentful\"\r\nimport { Platform } from \"react-native\"\r\n\r\nimport { ContentfulContentDeliveryAccessToken, ContentfulSpace } from \"../constants/Keys\"\r\n\r\nimport { REGLAMENT_DATA_ELEM_TYPE, REGLAMENT_DATA } from \"../constants/Constants\"\r\n\r\n/**\r\n * Calculates the difference between two dates in hours, minutes and seconds.\r\n */\r\nexport const GetTimeDifference = (earlier: Date, later: Date) => {\r\n  let momentA = moment(earlier)\r\n  let momentB = moment(later)\r\n  let hourDifference = momentB.diff(momentA, \"hours\") as number\r\n  let minuteDifference = momentB.diff(momentA, \"minutes\") - hourDifference * 60\r\n  let secondDifference = momentB.diff(momentA, \"seconds\") - hourDifference * 60 * 60 - minuteDifference * 60\r\n\r\n  return {\r\n    hours: hourDifference,\r\n    minutes: minuteDifference,\r\n    seconds: secondDifference,\r\n  }\r\n}\r\n\r\n/**\r\n * Creates a sequence of dates, starting from the given date and spaced by the given amount of seconds.\r\n */\r\nexport function createEvenlySpacedTimeSequence(sequenceSize: number, spacingInSeconds: number, start: Date): Date[] {\r\n  const sequence = []\r\n  let next = start\r\n\r\n  let index = 0\r\n  while (index < sequenceSize) {\r\n    sequence.push(next)\r\n    next = new Date(next.getTime() + spacingInSeconds * 1000)\r\n\r\n    index += 1\r\n  }\r\n\r\n  return sequence\r\n}\r\n\r\nexport function setDayOnDate(date: Date, day: number): Date {\r\n  const currentDay = date.getDay()\r\n  const distance = day - currentDay\r\n  date.setDate(date.getDate() + distance)\r\n\r\n  return date\r\n}\r\n\r\nfunction isInRange(value: Date, start: Date, end: Date) {\r\n  return value <= end && value >= start\r\n}\r\n\r\n/**\r\n * Gets time slot of a timepoint. In this case, each time slot represents a class start and end time.\r\n */\r\nexport function determineInterval(timepoint = new Date()): false | REGLAMENT_DATA_ELEM_TYPE {\r\n  let interval: false | REGLAMENT_DATA_ELEM_TYPE = false\r\n\r\n  REGLAMENT_DATA.forEach((class_) => {\r\n    let hourAndMinuteStart = class_[1]\r\n    let hourStart = hourAndMinuteStart.split(\":\")[0]\r\n    let minuteStart = hourAndMinuteStart.split(\":\")[1]\r\n\r\n    let hourAndMinuteEnd = class_[2]\r\n    let hourEnd = hourAndMinuteEnd.split(\":\")[0]\r\n    let minuteEnd = hourAndMinuteEnd.split(\":\")[1]\r\n\r\n    let now = new Date()\r\n    // TODO: annotate\r\n    let earlier = new Date(now.getFullYear(), now.getMonth(), now.getDate(), parseInt(hourStart), parseInt(minuteStart))\r\n    let later = new Date(now.getFullYear(), now.getMonth(), now.getDate(), parseInt(hourEnd), parseInt(minuteEnd))\r\n\r\n    if (isInRange(timepoint, earlier, later)) {\r\n      interval = class_\r\n    }\r\n  })\r\n\r\n  return interval\r\n}\r\n\r\nconsole.log(\"[utilities] current interval is \", determineInterval())\r\n\r\nexport function getContentfulClient() {\r\n  const client: ContentfulClientApi = createClient({\r\n    space: ContentfulSpace,\r\n    environment: \"master\", // defaults to 'master' if not set\r\n    accessToken: ContentfulContentDeliveryAccessToken,\r\n  })\r\n\r\n  return client\r\n}\r\n\r\n/**\r\n * Ensures that the filename has the given extension by appending it if it doesn't.\r\n */\r\nexport function ensureExtension(filename: string, extension: string) {\r\n  if (filename.endsWith(extension)) return filename\r\n\r\n  return filename + extension\r\n}\r\n\r\n/**\r\n * Ensures that the filename doesn't have the given extension by removing it if it does.\r\n */\r\nexport function ensureNoExtension(filename: string, extension: string) {\r\n  if (!filename.endsWith(extension)) return filename\r\n\r\n  return filename.slice(0, -extension.length)\r\n}\r\n\r\n/**\r\n * Ensures that the text ends with the given ending by appending it if it doesn't.\r\n */\r\nexport function ensureEnding(text: string, ending: string) {\r\n  if (text.endsWith(ending)) return text\r\n\r\n  return text + ending\r\n}\r\n\r\nexport const isMail = (text: string) => {\r\n  return text.includes(\"@\") && !text.includes(\"http\")\r\n}\r\n\r\n/**\r\n * Returns true if the app is running in Expo Go.\r\n */\r\nexport function isRunningInExpoGo() {\r\n  const _isRunningInExpo = constants.executionEnvironment == ExecutionEnvironment.StoreClient\r\n  return _isRunningInExpo\r\n}\r\n\r\nexport function isRunningInBrowser() {\r\n  // const isRunningInBrowser = constants.executionEnvironment == ExecutionEnvironment.Bare\r\n\r\n  // debugger\r\n\r\n  const _isRunningInBrowser = Platform.OS === \"web\"\r\n  return _isRunningInBrowser\r\n}\r\n\r\n/**\r\n * Returns true if the device is in horizontal orientation.\r\n */\r\nexport function isHorizontalOrientation() {\r\n  if (isRunningInBrowser()) {\r\n    return window.innerWidth > window.innerHeight\r\n  }\r\n\r\n  return (\r\n    constants.platform.ios.interfaceOrientation === \"landscape\" ||\r\n    constants.platform.android.interfaceOrientation === \"landscape\"\r\n  )\r\n}\r\n\r\nexport function isLandscapeWeb() {\r\n  return isRunningInBrowser() && isHorizontalOrientation()\r\n}\r\n\r\nexport function truncateText(text: string, maxLength: number) {\r\n  if (text.length > maxLength) {\r\n    return text.slice(0, maxLength) + \"...\"\r\n  } else {\r\n    return text\r\n  }\r\n}\r\n","export enum FontName {\r\n  LatoRegular = \"lato-regular\",\r\n  LatoBold = \"lato-bold\",\r\n  CinzelRegular = \"cinzel-regular\",\r\n\r\n  MontserratRegular = \"montserrat-regular\",\r\n  MontserratMedium = \"montserrat-medium\",\r\n  MontserratSemiBold = \"montserrat-semibold\",\r\n\r\n  RalewayRegular = \"raleway-regular\",\r\n  RalewayMedium = \"raleway-medium\",\r\n\r\n  Montserrat500 = \"montserrat-500\",\r\n  Montserrat600 = \"montserrat-600\",\r\n\r\n  MontserratBold = \"montserrat-bold\",\r\n  Raleway500 = \"raleway-500\",\r\n  Raleway600 = \"raleway-600\",\r\n\r\n  CenturyGothic = \"century-gothic\",\r\n  CenturyGothicBold = \"century-gothic-bold\",\r\n  CenturyGothicItalic = \"century-gothic-italic\",\r\n}\r\n\r\nexport function GetAllAppFonts() {\r\n  //   const pathToFontsFolder = \"../assets/fonts/\"\r\n  //  path to fonts folder is hardcoded  because  require() doesn't work with interpolated strings\r\n\r\n  const FONTS = {\r\n    [FontName.LatoRegular]: require(\"../assets/fonts/Lato-Regular.ttf\"),\r\n    [FontName.LatoBold]: require(\"../assets/fonts/Lato-Bold.ttf\"),\r\n    [FontName.CinzelRegular]: require(\"../assets/fonts/CinzelDecorative-Regular.ttf\"),\r\n\r\n    [FontName.MontserratRegular]: require(\"../assets/fonts/Montserrat-Regular.ttf\"),\r\n    [FontName.MontserratMedium]: require(\"../assets/fonts/Montserrat-Medium.ttf\"),\r\n    [FontName.MontserratSemiBold]: require(\"../assets/fonts/Montserrat-SemiBold.ttf\"),\r\n\r\n    [FontName.RalewayRegular]: require(\"../assets/fonts/Raleway-Regular.ttf\"),\r\n    [FontName.RalewayMedium]: require(\"../assets/fonts/Raleway-Medium.ttf\"),\r\n    [FontName.Raleway500]: require(\"../assets/fonts/Raleway-Regular.ttf\"),\r\n    [FontName.Raleway600]: require(\"../assets/fonts/Raleway-Medium.ttf\"),\r\n\r\n    [FontName.Montserrat500]: require(\"../assets/fonts/Montserrat-Medium.ttf\"),\r\n    [FontName.Montserrat600]: require(\"../assets/fonts/Montserrat-SemiBold.ttf\"),\r\n    [FontName.MontserratBold]: require(\"../assets/fonts/Montserrat-Bold.ttf\"),\r\n\r\n    [FontName.CenturyGothic]: require(\"../assets/fonts/CenturyGothic.ttf\"),\r\n    [FontName.CenturyGothicBold]: require(\"../assets/fonts/GOTHICB.ttf\"),\r\n    [FontName.CenturyGothicItalic]: require(\"../assets/fonts/GOTHICI.ttf\"),\r\n  }\r\n\r\n  return FONTS\r\n}\r\n","import { StyleSheet } from \"react-native\"\r\nimport { isLandscapeWeb } from \"../utilities/utilities\"\r\nimport { FontName } from \"../constants/Fonts\"\r\n\r\nexport const palette = {\r\n  background: \"#E6E6E6\",\r\n  backgroundLight: \"#F5F5F5\",\r\n  textOnBackground: \"#5A5A5A\",\r\n  navigationBackground: \"#1C5D8F\",\r\n  text: \"#525252\",\r\n  numbers: \"#888888\",\r\n  grayedOut: \"#888888\",\r\n  grayishBlue: \"#4A6172\",\r\n  ongoingClass: \"rgb(227, 239, 249)\",\r\n}\r\n\r\nexport const globalStyles = StyleSheet.create({\r\n  container: {\r\n    padding: 20,\r\n  },\r\n\r\n  scrollView: {\r\n    marginBottom: 80, // to make sure last item is visible.\r\n    // there is other way to do that: via flex\r\n  },\r\n\r\n  screen: {\r\n    flex: 1,\r\n    // backgroundColor: \"#E6E6E6\",\r\n    backgroundColor: palette.backgroundLight,\r\n    padding: 0, // I don't know what's a sensible value for this. Will figure out later\r\n  },\r\n\r\n  centered: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  text: {\r\n    fontFamily: FontName.CinzelRegular,\r\n    fontSize: 18,\r\n  },\r\n\r\n  paragraph: {\r\n    marginVertical: 8,\r\n    lineHeight: 20,\r\n  },\r\n\r\n  sectionHeader: {\r\n    marginLeft: 24,\r\n  },\r\n\r\n  input: {\r\n    borderWidth: 1,\r\n    borderColor: \"#ddd\",\r\n    padding: 10,\r\n    fontSize: 18,\r\n    borderRadius: 6,\r\n    marginBottom: 10,\r\n  },\r\n\r\n  errorText: {\r\n    color: \"crimson\",\r\n    fontWeight: \"bold\",\r\n    marginBottom: 10,\r\n    marginTop: 6,\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  navIcon: {\r\n    color: \"white\",\r\n    paddingHorizontal: 16,\r\n    paddingRight: 10,\r\n  },\r\n\r\n  separator: {\r\n    height: 1, // haha\r\n    width: \"100%\",\r\n    backgroundColor: \"#E6E6E6\",\r\n  },\r\n\r\n  noDisplay: {\r\n    display: \"none\",\r\n    margin: 0,\r\n    padding: 0,\r\n    width: 0,\r\n    height: 0,\r\n    zIndex: -1,\r\n  },\r\n\r\n  invisible: {\r\n    opacity: 0,\r\n  },\r\n\r\n  row: {\r\n    flexDirection: \"row\",\r\n  },\r\n\r\n  grayIcon: {\r\n    color: \"rgba(136,136,136,1)\",\r\n    fontSize: 26,\r\n  },\r\n\r\n  card: {\r\n    borderRadius: 6,\r\n    backgroundColor: \"white\",\r\n\r\n    paddingVertical: 2,\r\n    paddingHorizontal: 5,\r\n\r\n    elevation: 1,\r\n    shadowOffset: { width: 1, height: 1 },\r\n    shadowColor: \"#333\",\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 2,\r\n  },\r\n\r\n  link: {\r\n    color: palette.navigationBackground,\r\n  },\r\n\r\n  underlinedLink: {\r\n    color: palette.navigationBackground,\r\n    textDecorationLine: \"underline\",\r\n  },\r\n\r\n  captionWithIcon: {\r\n    marginLeft: -3,\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  navigationButton: {\r\n    borderColor: palette.navigationBackground,\r\n    borderWidth: 1,\r\n    borderRadius: 10,\r\n\r\n    // paddingHorizontal: 15,\r\n    paddingVertical: 5,\r\n    width: 75,\r\n\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  modalContentContainer: {\r\n    position: \"absolute\",\r\n    top: \"10%\",\r\n\r\n    margin: 30,\r\n    marginHorizontal: isLandscapeWeb() ? \"35%\" : \"2%\", // 27 + 8 for sidebar\r\n    padding: 20,\r\n    borderRadius: 10,\r\n    backgroundColor: \"white\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: isLandscapeWeb() ? \"45%\" : \"95%\",\r\n  },\r\n\r\n  searchBar: {\r\n    fontSize: 12,\r\n    flex: 1,\r\n    fontFamily: FontName.Montserrat500,\r\n    paddingVertical: 2,\r\n  },\r\n\r\n  horizontalCenteredFlex: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n})\r\n","export const previewImages = {\r\n  schedule: require(\"../assets/images/previews/schedule-preview.png\"),\r\n  scheduleCropped: require(\"../assets/images/previews/schedule-view-cropped-preview-3.png\"),\r\n  reglamentPreview: require(\"../assets/images/previews/reglament-preview.png\"),\r\n  settingsPreview: require(\"../assets/images/previews/settings-preview.png\"),\r\n  editorPreview: require(\"../assets/images/previews/editor-preview.png\"),\r\n}\r\n\r\nexport const previewImagesFull = {\r\n  schedule: require(\"../assets/images/previews/previews-full/schedule-view-highlight.png\"),\r\n  reglamentPreview: require(\"../assets/images/previews/previews-full/reglament.png\"),\r\n  editorPreview: require(\"../assets/images/previews/previews-full/editor-view-preview.png\"),\r\n  settingsPreview: require(\"../assets/images/previews/previews-full/settings.png\"),\r\n}\r\n\r\nexport const images = {\r\n  // uad_logo_text: require(\"../assets/images/uad_logo_text.svg\"),\r\n  uad_logo_text_not_vector: require(\"../assets/images/uad_logo_text_not_vector.png\"),\r\n  uad_logo_text_not_vector_hires: require(\"../assets/images/uad_logo_text_not_vector_hires.png\"),\r\n}\r\n\r\nexport const teamMemberImages = {\r\n  senchyk_andrii: require(\"../assets/images/team/senchyk_andrii.png\"),\r\n  zakharova_zarina: require(\"../assets/images/team/zakharova_zarina.png\"),\r\n  shepita_julia: require(\"../assets/images/team/shepita_julia.png\"),\r\n  ivanov_mykhailo: require(\"../assets/images/team/ivanov_mykhailo.png\"),\r\n}\r\n\r\nexport const editorImages = {\r\n  lightbulb: require(\"../assets/images/editor/lightbulb-nontrasparent-fixed.png\"),\r\n}\r\n\r\nexport const drawerMenuImages = {\r\n  uad_logo_white_outline: require(\"../assets/images/uad-logo-white-outline.png\"),\r\n}\r\n\r\nexport const imageIcons = {\r\n  museum: require(\"../assets/image_icons/museum.png\"),\r\n  tiktok: require(\"../assets/image_icons/tiktok.png\"),\r\n  warning_triangle: require(\"../assets/image_icons/warning-triangle.png\"),\r\n}\r\n","export enum DrawerRoutes {\r\n  VIEWER = \"Мій Розклад\",\r\n  REGLAMENT = \"Регламент\",\r\n  TEACHERS = \"Викладачі\",\r\n  CONTACTS = \"Контакти\",\r\n  NEWS = \"Новини\",\r\n\r\n  TESTS = \"Тести\",\r\n  QnA = \"Q&A\",\r\n  EDITOR = \"Редактор\",\r\n  SETTINGS = \"Налаштування\",\r\n  ABOUT = \"Про Застосунок\",\r\n}\r\n","export const EXAMPLE_NEWS = [\r\n    {\r\n      title: \"Новина 1\",\r\n      body: \"Текст новини 1\",\r\n      createdAt: \"2021-06-01T00:00:00.000Z\",\r\n    },\r\n    {\r\n      title: \"Новина 2\",\r\n      body: \"Текст новини 2\",\r\n      createdAt: \"2022-06-02T00:00:00.000Z\",\r\n    },\r\n    {\r\n      title: \"Новина 3\",\r\n      body: \"Текст новини 3\",\r\n      createdAt: \"2023-06-03T00:00:00.000Z\",\r\n    },\r\n  ]","// This is a singleton service that loads news from contenful and provides it to the rest of the application\r\n\r\nimport { EXAMPLE_NEWS } from \"../../constants/ExampleData\"\r\nimport { getContentfulClient } from \"../../utilities/utilities\"\r\nimport { NewsArticle, ContentfulNewsArticleFields } from \"./Types\"\r\n\r\nexport default class NewsLoaderService {\r\n  protected static instance: NewsLoaderService | null\r\n\r\n  protected _newsCached: NewsArticle[] = []\r\n\r\n  static async GetInstance(): Promise<NewsLoaderService> {\r\n    if (!this.instance) {\r\n      this.instance = new this()\r\n      await this.instance.init()\r\n\r\n      console.log(`[${this.name}] news loader service instance constructed successfully`)\r\n    }\r\n\r\n    return this.instance\r\n  }\r\n\r\n  protected constructor() {}\r\n\r\n  protected async init() {}\r\n\r\n  /**\r\n   * Retrieves news from Contentful. If news are already cached, returns them.\r\n   */\r\n  async getNewsFromContentful(): Promise<NewsArticle[]> {\r\n    // retrieve schedules from contentful\r\n    console.log(`[News Loader] retrieving news from contentful`)\r\n\r\n    if (this._newsCached.length > 0) {\r\n      console.log(`[News Loader] returning cached news`)\r\n      return this._newsCached\r\n    }\r\n\r\n    const entries = await this.fetchContentfulEntries()\r\n\r\n    let news = entries.items.map((entry) => {\r\n      const { title, body } = entry.fields as ContentfulNewsArticleFields\r\n      const createdAt = entry.sys.createdAt\r\n      return {\r\n        title,\r\n        body,\r\n        createdAt,\r\n      }\r\n    })\r\n\r\n    // sort news by date\r\n    news = news.sort((a, b) => {\r\n      return new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()\r\n    })\r\n\r\n    console.log(`[News Loader] entries: ${JSON.stringify(news)}`)\r\n\r\n    this._newsCached = news\r\n    return news\r\n  }\r\n\r\n  /**\r\n   * Fetches raw news entries from Contentful.\r\n   */\r\n  async fetchContentfulEntries() {\r\n    const client = getContentfulClient()\r\n\r\n    const contentType = \"newsArticle\"\r\n    const entries = await client.getEntries({\r\n      content_type: contentType,\r\n    })\r\n\r\n    return entries\r\n  }\r\n\r\n  getExampleNews(): NewsArticle[] {\r\n    return EXAMPLE_NEWS\r\n  }\r\n\r\n  // TODO: move to utilities\r\n  async getNewestArticleDate(): Promise<Date> {\r\n    const news = await this.getNewsFromContentful()\r\n    return new Date(news[0].createdAt)\r\n  }\r\n}\r\n","import { Ionicons, FontAwesome5, FontAwesome } from \"@expo/vector-icons\"\r\nimport { DrawerRoutes } from \"../routes/DrawerRoutes\"\r\n\r\ntype RouteIconsType = {\r\n  [key in DrawerRoutes]: JSX.Element\r\n}\r\n\r\nconst RouteIcons: RouteIconsType = {\r\n  [DrawerRoutes.VIEWER]: <Ionicons name=\"calendar\" color={\"white\"} size={18} />,\r\n  [DrawerRoutes.REGLAMENT]: <Ionicons name=\"time-sharp\" color={\"white\"} size={18} />,\r\n  [DrawerRoutes.TEACHERS]: <FontAwesome5 name=\"user-graduate\" color={\"white\"} size={18} />,\r\n  [DrawerRoutes.CONTACTS]: <Ionicons name=\"call\" color={\"white\"} size={18} />,\r\n  [DrawerRoutes.NEWS]: <Ionicons name=\"chatbox-ellipses\" color={\"white\"} size={18} />,\r\n  [DrawerRoutes.QnA]: <FontAwesome name=\"comments\" color={\"white\"} size={18} />,\r\n\r\n  [DrawerRoutes.TESTS]: <Ionicons name=\"flask\" color={\"white\"} size={18} />,\r\n  [DrawerRoutes.EDITOR]: <Ionicons name=\"options\" color={\"white\"} size={18} />,\r\n  [DrawerRoutes.SETTINGS]: <FontAwesome5 name=\"cog\" color={\"white\"} size={18} />,\r\n  [DrawerRoutes.ABOUT]: <Ionicons name=\"information-circle\" color={\"white\"} size={18} />,\r\n}\r\n\r\nexport default RouteIcons\r\n","import React from \"react\"\r\nimport { View } from \"react-native\"\r\nimport { palette } from \"../styles/global\"\r\n\r\nexport function YellowCircle({ filled = true }: { filled?: boolean }) {\r\n  return (\r\n    <View\r\n      style={{\r\n        marginLeft: 10,\r\n        marginTop: 5,\r\n\r\n        alignSelf: \"flex-start\",\r\n\r\n        width: 5,\r\n        height: 5,\r\n        borderRadius: 10,\r\n        backgroundColor: filled ? \"#FFE600\" : \"transparent\",\r\n        borderWidth: 1,\r\n        borderColor: !filled ? palette.grayedOut : \"transparent\",\r\n      }}\r\n    />\r\n  )\r\n}\r\n","import { StyleSheet } from \"react-native\"\r\n\r\nimport { FontName } from \"../../constants/Fonts\"\r\n\r\nexport const styles = StyleSheet.create({\r\n  pageLinkContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 20,\r\n  },\r\n  pageLink: {\r\n    fontSize: 18,\r\n    marginLeft: 10,\r\n    color: \"white\",\r\n    fontFamily: FontName.CenturyGothic,\r\n  },\r\n\r\n  drawerContainer: {\r\n    flex: 1,\r\n    justifyContent: \"space-between\",\r\n\r\n    backgroundColor: \"#1C5D8F\",\r\n    paddingTop: 35,\r\n    paddingBottom: 25,\r\n  },\r\n\r\n  drawerContainerBottom: {},\r\n\r\n  activePageLink: {\r\n    // backgroundColor: \"lightblue\",\r\n    backgroundColor: \"rgba(37, 150, 190, 0.7)\",\r\n    // opacity: 0.5,\r\n  },\r\n\r\n  drawerContainerHeader: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n\r\n    marginBottom: 25,\r\n    paddingBottom: 15,\r\n\r\n    paddingHorizontal: 20,\r\n\r\n    borderBottomColor: \"rgba(0,0,0,0.1)\",\r\n    borderBottomWidth: 1,\r\n  },\r\n})\r\n","export const ASYNC_STORAGE_KEY_NEWS_CHECKED_DATE = \"newsChecked\"\r\n","// EXTERNAL DEPENDENCIES\r\n\r\nimport React, { useRef } from \"react\"\r\nimport { ActivityIndicator, Text, View, Image } from \"react-native\"\r\nimport { useNavigation, useNavigationState } from \"@react-navigation/native\"\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\"\r\nimport _ from \"lodash\"\r\n\r\n// INTERNAL DEPENDENCIES\r\n\r\nimport { globalStyles, palette } from \"../../styles/global\"\r\nimport { drawerMenuImages } from \"../../constants/Images\"\r\nimport { DrawerRoutes } from \"../../routes/DrawerRoutes\"\r\nimport NewsLoaderService from \"../../services/NewsLoaderService/NewsLoaderService\"\r\nimport { isRunningInExpoGo } from \"../../utilities/utilities\"\r\nimport RouteIcons from \"../../constants/RouteIcons\"\r\nimport { YellowCircle } from \"../YellowCircle\"\r\nimport { FontName } from \"../../constants/Fonts\"\r\nimport { styles } from \"./Styles\"\r\nimport { ASYNC_STORAGE_KEY_NEWS_CHECKED_DATE } from \"../../services/NewsLoaderService/Constants\"\r\n\r\n// let allIcons = Object.keys(Ionicons.getRawGlyphMap())\r\n// console.log(allIcons)\r\n\r\nlet shouldDisplayYellowCircle = true\r\n\r\n// yellow circle is displayed if there are new news\r\nfunction determineIfShouldDisplayYellowCircle() {\r\n  NewsLoaderService.GetInstance().then(async (instance) => {\r\n    const newestArticleDate = await instance.getNewestArticleDate()\r\n    const lastSeenArticle = await AsyncStorage.getItem(ASYNC_STORAGE_KEY_NEWS_CHECKED_DATE)\r\n    const lastSeenArticleDate = lastSeenArticle ? new Date(lastSeenArticle) : null\r\n\r\n    console.log(\"newestArticleDate\", newestArticleDate)\r\n    console.log(\"lastSeenArticleDate\", lastSeenArticleDate)\r\n\r\n    if (!lastSeenArticleDate || newestArticleDate.getTime() > lastSeenArticleDate.getTime()) {\r\n      shouldDisplayYellowCircle = true\r\n    } else {\r\n      shouldDisplayYellowCircle = false\r\n    }\r\n\r\n    console.log(\"shouldDisplayYellowCircle: \", shouldDisplayYellowCircle)\r\n  })\r\n}\r\ndetermineIfShouldDisplayYellowCircle()\r\n\r\n// TODO: do something with types on function signature hover\r\n/**\r\n * Creates RouteButton with additional parameters in its definition scope for it to memorize\r\n */\r\nfunction RouteButtonFactory(\r\n  currentRoute: { name: string },\r\n  // handleNavigationButtonPress: (screenName: DrawerRoutes) => void,\r\n  routeNameToIconRef: React.MutableRefObject<typeof RouteIcons>\r\n) {\r\n  const RouteButton = ({ route, index }: { route: typeof currentRoute; index: number }) => {\r\n    const navigation = useNavigation()\r\n    // console.log(\"navigation\", navigation)\r\n\r\n    // handler for onPress of navigation button\r\n    const handleNavigationButtonPress = (screenName: DrawerRoutes) => {\r\n      console.log(\"handlePageLinkPress\", screenName)\r\n      // @ts-ignore (signature of .navigate doesn't make sense)\r\n      navigation.navigate(screenName)\r\n    }\r\n\r\n    const routeName = route.name as DrawerRoutes\r\n\r\n    const isCurrentRoute = routeName == currentRoute.name\r\n    const isNewsRoute = routeName == DrawerRoutes.NEWS\r\n\r\n    const yellowCircle =\r\n      shouldDisplayYellowCircle && isNewsRoute ? <YellowCircle /> : <View style={globalStyles.noDisplay} />\r\n\r\n    return (\r\n      <TouchableOpacity\r\n        key={index}\r\n        onPress={() => {\r\n          if (isNewsRoute) {\r\n            shouldDisplayYellowCircle = false\r\n            AsyncStorage.setItem(ASYNC_STORAGE_KEY_NEWS_CHECKED_DATE, new Date().toString())\r\n          }\r\n\r\n          handleNavigationButtonPress(routeName)\r\n        }}\r\n      >\r\n        <View\r\n          style={{\r\n            ...styles.pageLinkContainer,\r\n            ...(isCurrentRoute ? styles.activePageLink : {}),\r\n          }}\r\n        >\r\n          {routeNameToIconRef.current[routeName]}\r\n          <Text style={styles.pageLink}>{route.name}</Text>\r\n          {yellowCircle}\r\n        </View>\r\n      </TouchableOpacity>\r\n    )\r\n  }\r\n\r\n  return RouteButton\r\n}\r\n\r\nexport default function DrawerMenu() {\r\n  // Get mapping of route names to icons\r\n  const routeNameToIconRef = useRef(RouteIcons)\r\n\r\n  // Get all routes from the navigation state\r\n  const routesContainer = useNavigationState((state): typeof state | null => state)\r\n  //   console.log(\"routes\", routesContainer)\r\n\r\n  if (routesContainer && routesContainer.routes.length > 0) {\r\n    const isRunningInExpoGo_ = isRunningInExpoGo()\r\n\r\n    const routes = routesContainer.routes\r\n\r\n    // Split routes by breakpoint into top and bottom parts\r\n    const breakpoint = routes.length - 5\r\n    const topRoutes = routes.slice(0, breakpoint)\r\n    const bottomRoutes = routes.slice(breakpoint, routes.length)\r\n\r\n    // Remove tests route if app is running outside Expo Go\r\n    if (!isRunningInExpoGo_) {\r\n      _.remove(bottomRoutes, (route) => route.name == DrawerRoutes.TESTS)\r\n    }\r\n\r\n    // get current route\r\n    const currentRouteIndex = routesContainer.index\r\n    const currentRoute = routes[currentRouteIndex]\r\n\r\n    // create RouteButton component\r\n    const RouteButton = RouteButtonFactory(currentRoute, routeNameToIconRef)\r\n\r\n    return (\r\n      <View style={styles.drawerContainer}>\r\n        <View>\r\n          <View style={styles.drawerContainerHeader}>\r\n            <Image\r\n              style={{ width: 35, height: 40, marginRight: 15 }}\r\n              source={drawerMenuImages.uad_logo_white_outline}\r\n            />\r\n            {/* caption at the very top of the drawer */}\r\n            <Text style={{ fontSize: 24, fontFamily: FontName.CenturyGothic, color: \"white\" }}>Розклад</Text>\r\n          </View>\r\n          {/* render top routes */}\r\n          {topRoutes.map((route, index: number) => {\r\n            return <RouteButton key={index} route={route} index={index} />\r\n          })}\r\n        </View>\r\n\r\n        {/* render bottom routes */}\r\n        <View style={styles.drawerContainerBottom}>\r\n          {bottomRoutes.map((route, index: number) => {\r\n            return <RouteButton key={index + topRoutes.length} route={route} index={index + topRoutes.length} />\r\n          })}\r\n        </View>\r\n      </View>\r\n    )\r\n  } else {\r\n    // otherwise return spinner\r\n    return (\r\n      <View style={{ ...styles.drawerContainer, ...globalStyles.centered }}>\r\n        <ActivityIndicator size={\"large\"} color={palette.navigationBackground} />\r\n      </View>\r\n    )\r\n  }\r\n}\r\n","import { createDrawerNavigator } from \"@react-navigation/drawer\"\r\n\r\nexport const Drawer = createDrawerNavigator()\r\n","import React from \"react\"\r\nimport { StyleSheet, Text, View } from \"react-native\"\r\nimport { MaterialIcons } from \"@expo/vector-icons\"\r\nimport { SafeAreaView } from \"react-native-safe-area-context\"\r\nimport { globalStyles } from \"../styles/global\"\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport { isLandscapeWeb } from \"../utilities/utilities\"\r\nimport RouteIcons from \"../constants/RouteIcons\"\r\nimport { FontName } from \"../constants/Fonts\"\r\nimport { DrawerRoutes } from \"../routes/DrawerRoutes\"\r\n\r\n// @ts-expect-error\r\nexport function getRouteIcon(navigation, headerText: DrawerRoutes) {\r\n  const RouteIconConstructor = RouteIcons[headerText].type\r\n  const RouteIcon = <RouteIconConstructor {...RouteIcons[headerText].props} style={globalStyles.navIcon} />\r\n\r\n  const iconOnPress = () => navigation.openDrawer()\r\n\r\n  const icon = isLandscapeWeb() ? (\r\n    RouteIcon\r\n  ) : (\r\n    <MaterialIcons onPress={iconOnPress} name=\"menu\" size={24} style={globalStyles.navIcon} />\r\n  )\r\n\r\n  return icon\r\n}\r\n\r\nfunction BaseHeader({ title, navigation }: { title: DrawerRoutes; navigation: any }) {\r\n  // extract current screen name from navigation state\r\n  const headerText = title\r\n\r\n  const icon = getRouteIcon(navigation, headerText)\r\n\r\n  return (\r\n    <View style={styles.headerContentContainer}>\r\n      <TouchableOpacity>{icon}</TouchableOpacity>\r\n\r\n      <Text style={styles.headerText}>{headerText}</Text>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default function GlobalHeader({\r\n  title,\r\n  navigation,\r\n  headerContent: headerContentElement,\r\n}: {\r\n  title: DrawerRoutes\r\n  navigation: any\r\n  headerContent?: React.ReactNode\r\n}) {\r\n  return (\r\n    <SafeAreaView style={styles.header}>\r\n      {headerContentElement ? headerContentElement : <BaseHeader title={title} navigation={navigation} />}\r\n    </SafeAreaView>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  header: {\r\n    paddingVertical: 15,\r\n    width: \"100%\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#1C5D8F\",\r\n  },\r\n\r\n  headerText: {\r\n    fontSize: 20,\r\n    color: \"white\",\r\n    fontFamily: FontName.CenturyGothic,\r\n  },\r\n\r\n  headerContentContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n  },\r\n})\r\n","import { GetTimeDifference } from \"./utilities\"\r\n\r\nexport enum WeekType {\r\n  Nominator,\r\n  Denominator,\r\n}\r\n\r\n// month/day/year\r\n// const SEMESTER_START = new Date(\"10/3/2022\") // such string notation doesn't work in react native\r\nconst SEMESTER_START = new Date(2022, 9, 3) // month is 0-based\r\nconst SEMESTER_START_TYPE = WeekType.Denominator\r\n\r\nexport default function GetWeekType(timepoint = new Date()): WeekType {\r\n  // let timepoint = new Date()\r\n  let timeDifferenceInHours = GetTimeDifference(SEMESTER_START, timepoint).hours\r\n  let timeDifferenceInDays = timeDifferenceInHours / 24\r\n  let timeDifferenceInWeeks = Math.trunc(timeDifferenceInDays / 7)\r\n\r\n  if (timeDifferenceInWeeks % 2 == 0) {\r\n    if (SEMESTER_START_TYPE === WeekType.Denominator) {\r\n      return WeekType.Denominator\r\n    }\r\n    return WeekType.Nominator\r\n  } else {\r\n    if (SEMESTER_START_TYPE === WeekType.Denominator) {\r\n      return WeekType.Nominator\r\n    }\r\n    return WeekType.Denominator\r\n  }\r\n}\r\n","// checks whether index is not out of bounds and throws an error if it is\r\n// TODO: deprecate maybe\r\nexport default function getStrict(array: Array<any>, index: number) {\r\n  if (index >= array.length || index < 0) {\r\n    throw new Error(`[Array Indexing] Index out of bounds: ${index} (length: ${array.length})`)\r\n  }\r\n  return array[index]\r\n}\r\n","export const daysInShortenedForm = [\"Пн\", \"Вт\", \"Ср\", \"Чт\", \"Пт\"]\r\nexport const localizedDays = [\"Неділя\", \"Понеділок\", \"Вівторок\", \"Середа\", \"Четвер\", \"П'ятниця\", \"Субота\"]\r\n\r\nexport const workDays = [\"Понеділок\", \"Вівторок\", \"Середа\", \"Четвер\", \"П'ятниця\"]\r\nexport const workDaysEn = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"]\r\nexport const workDaysEnLower = workDaysEn.map((day) => day.toLowerCase())\r\n\r\nexport function mapEnWorkDayToUkrWorkDay(day: string): string {\r\n  let index = workDaysEnLower.indexOf(day.toLowerCase())\r\n  return workDays[index]\r\n}\r\n\r\nexport function mapUkrWorkDayToEnWorkDay(day: string): string {\r\n  day = day.toLowerCase()\r\n  let workDaysLower = workDays.map((d) => d.toLowerCase())\r\n\r\n  let index = workDaysLower.indexOf(day)\r\n  return workDaysEn[index]\r\n}\r\n","export enum CLASS_TYPE {\r\n  LECTURE = \"Лекція\",\r\n  PRACTICE = \"Практична\",\r\n  LAB = \"Лабораторна\",\r\n}\r\n\r\nexport const CLASS_TYPE_SHORT = {\r\n  [CLASS_TYPE.LECTURE]: \"Лек\",\r\n  [CLASS_TYPE.PRACTICE]: \"Прак\",\r\n  [CLASS_TYPE.LAB]: \"Лаб\",\r\n}\r\n\r\nexport type ScheduleClassFields = {\r\n  index: number\r\n  isBiweekly: boolean\r\n  week: 1 | 2\r\n  name: string\r\n  teacher: string | string[]\r\n  room: string | string[]\r\n  isSharedClass: boolean\r\n\r\n  classType?: CLASS_TYPE\r\n}\r\nexport interface IScheduleClass extends ScheduleClassFields {\r\n  getUniqueStringSignature(): string\r\n}\r\n","import GetWeekType from \"../../utilities/getWeekType\"\r\nimport { determineInterval } from \"../../utilities/utilities\"\r\nimport getStrict from \"../../utilities/getStrict\"\r\nimport { workDaysEnLower } from \"../../constants/Days\"\r\nimport { REGLAMENT_DATA } from \"../../constants/Constants\"\r\nimport { IScheduleClass, CLASS_TYPE, ScheduleClassFields } from \"./Types\"\r\n\r\nexport class ScheduleClass implements IScheduleClass {\r\n  index: number\r\n  isBiweekly: boolean\r\n  week: 1 | 2 // 1 or 2, 1 - чисельник, 2 - знаменник\r\n  name: string\r\n  teacher: string | string[]\r\n  room: string | string[]\r\n  isSharedClass: boolean\r\n\r\n  day: string\r\n  weekName: string = \"\"\r\n\r\n  classType: CLASS_TYPE\r\n\r\n  constructor(data: ScheduleClassFields, day: string) {\r\n    this.index = data.index\r\n    this.isBiweekly = data.isBiweekly ?? false\r\n    this.name = data.name\r\n\r\n    // here you make assumptions as you parse the data (that separator character is pipe).\r\n    // Perhaps that's not the right place for such things\r\n    const teacherSeparator = \"|\"\r\n    if (typeof data.teacher == \"string\" && data.teacher.includes(teacherSeparator)) {\r\n      this.teacher = data.teacher.split(teacherSeparator)\r\n    } else {\r\n      this.teacher = data.teacher\r\n    }\r\n\r\n    const roomSeparator = \"|\"\r\n    if (typeof data.room == \"string\" && data.room.includes(roomSeparator)) {\r\n      this.room = data.room.split(roomSeparator)\r\n    } else {\r\n      this.room = data.room\r\n    }\r\n\r\n    this.isSharedClass = data.isSharedClass\r\n    this.day = day\r\n\r\n    this.classType = data.classType ?? CLASS_TYPE.LECTURE\r\n\r\n    this.setWeek(data.week)\r\n  }\r\n\r\n  static sampleName = \"Редагувати\"\r\n  static sampleTeacher = \"Викладач не зазначений\"\r\n  static sampleRoom = \"...\"\r\n\r\n  /**\r\n   * Returns a placeholder class. Relies on sample data, defined in the class\r\n   */\r\n  static GetPlaceholder(day: string, index: number, week: 1 | 2) {\r\n    return new ScheduleClass(\r\n      {\r\n        index,\r\n        isBiweekly: true,\r\n        week,\r\n        name: this.sampleName,\r\n        teacher: this.sampleTeacher,\r\n        room: this.sampleRoom,\r\n        isSharedClass: false,\r\n      },\r\n      day\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Replaces the class with a placeholder class\r\n   */\r\n  static ReplaceWithPlaceholder(class_: ScheduleClass): ScheduleClass {\r\n    return this.GetPlaceholder(class_.day, class_.index, class_.week)\r\n  }\r\n\r\n  setWeek(week: 1 | 2) {\r\n    this.week = week\r\n    this.weekName = this.isBiweekly ? (this.week === 1 ? \"Чисельник\" : \"Знаменник\") : \"\"\r\n  }\r\n\r\n  // TODO: extend the doc\r\n  /**\r\n   * Returns a unique string identifier for the class.\r\n   */\r\n  getUniqueStringSignature(): string {\r\n    return `[${this.day} * ${this.index}] ${this.name} * ${this.teacher} * ${this.room} <${this.weekName}>})`\r\n  }\r\n\r\n  isCurrent() {\r\n    // debugger\r\n    // return this.index == 3\r\n    const isInCurrentDay = this.day == workDaysEnLower[new Date().getDay() - 1]\r\n\r\n    if (!isInCurrentDay) return false\r\n\r\n    const isInCurrentTimeSlot = determineInterval() == getStrict(REGLAMENT_DATA, this.index - 1)\r\n    const isMatchingWeekType = GetWeekType() + 1 == this.week\r\n    const isOngoingClass = isInCurrentTimeSlot && (!this.isBiweekly || isMatchingWeekType)\r\n\r\n    return isOngoingClass\r\n  }\r\n\r\n  isSampleClass() {\r\n    // TODO: find better way to compare lists\r\n    const isSample =\r\n      this.name == ScheduleClass.sampleName &&\r\n      this.room == ScheduleClass.sampleRoom &&\r\n      this.teacher.toString() == [ScheduleClass.sampleTeacher].toString()\r\n\r\n    return isSample\r\n  }\r\n}\r\n","export enum DisplayEmptyDaysMode {\r\n  Display = \"Відображати\",\r\n  Darken = \"Затемняти\",\r\n  Hide = \"Приховати\",\r\n}\r\n\r\nexport enum DisplayTeacherMode {\r\n  Full = \"ПІБ\",\r\n  SurnameAndInitials = \"Прізвище та ініціали\",\r\n  Hide = \"Приховати\",\r\n}\r\n// update place 1 for new setting\r\n\r\nexport type ScheduleAppSettings = {\r\n  currentScheduleName: string\r\n  notifyBeforeClass: boolean\r\n  notifyBeforeClassOffsetMinutes: number\r\n  displayRoomNumber: boolean\r\n  displayTeacherName: DisplayTeacherMode\r\n\r\n  // displayEmptyRows: boolean // TODO: use enum here\r\n  displayEmptyDays: DisplayEmptyDaysMode\r\n}\r\nexport interface ISettingsService extends ScheduleAppSettings {\r\n  saveToStorage: () => Promise<void>\r\n  readFromStorage: () => Promise<ScheduleAppSettings | null>\r\n}\r\n","import React from \"react\"\r\nimport SettingsService from \"../services/SettingsService/SettingsService\"\r\n\r\nexport const SettingsContext = React.createContext<SettingsService | null>(null)\r\n","import React from \"react\"\r\nimport { View, Text, StyleSheet } from \"react-native\"\r\nimport { TextProps } from \"react-native-elements\"\r\nimport { palette } from \"../../styles/global\"\r\n\r\n// export default class AppText extends Text {\r\n\r\n//     render(){\r\n//         return <Text style={[styles.appText, this.props.style]}>{this.props.children}</Text>\r\n//     }\r\n\r\n// }\r\n\r\nexport default function AppText(props: TextProps) {\r\n  return (\r\n    <Text android_hyphenationFrequency=\"full\" {...props} style={[styles.appText, props.style]}>\r\n      {props.children}\r\n    </Text>\r\n  )\r\n}\r\n\r\n// AppText.propTypes = {\r\n//   ...Text.propTypes,\r\n//   // add any additional propTypes here\r\n// }\r\n\r\nconst styles = StyleSheet.create({\r\n  appText: {\r\n    fontFamily: \"montserrat-medium\",\r\n    fontSize: 12,\r\n    // letterSpacing: -0.5,\r\n    color: palette.text,\r\n  },\r\n})\r\n","import React from \"react\"\r\nimport { StyleSheet } from \"react-native\"\r\nimport { TextProps } from \"react-native-elements\"\r\nimport { palette } from \"../../styles/global\"\r\nimport AppText from \"../shared/AppText\"\r\nimport { FontName } from \"../../constants/Fonts\"\r\n\r\nexport default function ScheduleText(props: TextProps) {\r\n  return (\r\n    //     backgroundColor: \"rgb(227, 239, 249)\",\r\n\r\n    <AppText\r\n      // selectionColor={\"rgb(227, 239, 249)\"}\r\n      // selectable={true}\r\n      android_hyphenationFrequency=\"full\"\r\n      {...props}\r\n      style={[styles.appText, props.style]}\r\n    >\r\n      {props.children}\r\n    </AppText>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  appText: {\r\n    fontFamily: FontName.MontserratMedium,\r\n    fontSize: 12,\r\n    letterSpacing: -0.5,\r\n    color: palette.text,\r\n  },\r\n})\r\n","import React from \"react\"\r\nimport { WeekType } from \"../utilities/getWeekType\"\r\n\r\nexport const WeekTypeContext = React.createContext<WeekType | null>(null)\r\n","import { FontName } from \"../../../constants/Fonts\"\r\nimport { globalStyles, palette } from \"../../../styles/global\"\r\nimport { StyleSheet } from \"react-native\"\r\n\r\nexport const styles = StyleSheet.create({\r\n  ongoingClass: {\r\n    // backgroundColor: \"rgba(28, 93, 143, 0.1)\",\r\n    backgroundColor: \"rgb(227, 239, 249)\",\r\n  },\r\n\r\n  classContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginVertical: 5,\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 3,\r\n    borderRadius: 5,\r\n  },\r\n\r\n  startAndEndTimesContainer: {\r\n    alignItems: \"flex-start\",\r\n    width: \"11%\",\r\n    marginRight: \"4%\",\r\n  },\r\n\r\n  separator: {\r\n    ...globalStyles.separator,\r\n\r\n    backgroundColor: \"rgba(217, 217, 217, 0.4)\",\r\n  },\r\n\r\n  text: {\r\n    fontFamily: FontName.MontserratRegular,\r\n    color: palette.text,\r\n  },\r\n\r\n  classStartText: {\r\n    fontFamily: FontName.MontserratRegular,\r\n    color: palette.text,\r\n    alignSelf: \"center\",\r\n  },\r\n\r\n  classEndText: {\r\n    fontFamily: FontName.MontserratRegular,\r\n    color: palette.text,\r\n    alignSelf: \"center\",\r\n  },\r\n\r\n  classNameText: {\r\n    fontFamily: FontName.MontserratMedium,\r\n    color: palette.text,\r\n    alignSelf: \"flex-start\",\r\n    textAlign: \"left\",\r\n    flexGrow: 0.5,\r\n  },\r\n\r\n  teacherNameText: {\r\n    fontFamily: FontName.MontserratRegular,\r\n    color: palette.grayedOut,\r\n  },\r\n\r\n  roomNumberText: {\r\n    fontFamily: FontName.MontserratRegular,\r\n    color: palette.text,\r\n    textAlign: \"right\",\r\n  },\r\n\r\n  classTypeAndRoomNumberContainer: {\r\n    width: \"12%\",\r\n  },\r\n\r\n  roomNumberContainer: {\r\n    // flexGrow: 0.12,\r\n    alignItems: \"flex-end\",\r\n    textAlign: \"right\",\r\n  },\r\n\r\n  classAndTeacherBlock: {\r\n    // width: \"74%\",\r\n    flexBasis: \"74%\",\r\n    flexGrow: 1,\r\n    // flexGrow: 0.74,\r\n    // flexGrow: 1,\r\n    alignItems: \"flex-start\",\r\n    textAlign: \"left\",\r\n  },\r\n})\r\n","export const TEACHER_NOT_FOUND_STRING = \"Викладача не знайдено\"\r\n","import teachersJson from \"../../assets/teachers.json\"\r\n\r\nimport Fuse from \"fuse.js\"\r\nimport { Teacher } from \"./Types\"\r\nimport { TEACHER_NOT_FOUND_STRING } from \"./Constants\"\r\nimport { ensureEnding } from \"../../utilities/utilities\"\r\n\r\nexport default class TeacherModel {\r\n  teachers = teachersJson\r\n  teachersFuse = new Fuse(this.teachers, {\r\n    keys: [\"ПІБ викладача\"],\r\n    threshold: 0.3,\r\n  })\r\n\r\n  private static instance: TeacherModel | null = null\r\n\r\n  static GetInstance(): TeacherModel {\r\n    if (!TeacherModel.instance) {\r\n      TeacherModel.instance = new TeacherModel()\r\n    }\r\n\r\n    return TeacherModel.instance\r\n  }\r\n\r\n  private constructor() {\r\n    console.log(\"teacher table model constructed successfully\")\r\n  }\r\n\r\n  getTeacherBySurname(surname: string): Teacher | string {\r\n    if (typeof surname != \"string\") return TEACHER_NOT_FOUND_STRING\r\n\r\n    const match = this.teachersFuse.search(surname)\r\n\r\n    if (match.length == 0) return TEACHER_NOT_FOUND_STRING\r\n\r\n    return match[0].item\r\n  }\r\n\r\n  getFullNameBySurname(surname: string): string {\r\n    const teacher = this.getTeacherBySurname(surname)\r\n    if (teacher == TEACHER_NOT_FOUND_STRING) return surname\r\n\r\n    if (typeof teacher == \"string\") return teacher\r\n    return teacher[\"ПІБ викладача\"]\r\n  }\r\n\r\n  getSurnameAndInitialsBySurname(surname: string): string {\r\n    const teacher = this.getTeacherBySurname(surname)\r\n\r\n    // handle case of user-provided teacher name (via editor)\r\n    let teacherFullNameBits: string[]\r\n    if (teacher == TEACHER_NOT_FOUND_STRING) {\r\n      teacherFullNameBits = surname.split(\" \")\r\n    } else {\r\n      teacherFullNameBits = (teacher as Teacher)[\"ПІБ викладача\"].split(\" \")\r\n    }\r\n\r\n    surname = teacherFullNameBits[0]\r\n    const name = teacherFullNameBits[1]\r\n    const patronymic = teacherFullNameBits[2]\r\n\r\n    // sometimes data is not consistent, e.g. Kolosivska O.V. instead of full name, so additional checks are needed\r\n    const nameInitial = name ? ensureEnding(name[0], \".\") : \"\"\r\n    const patronymicInitial = patronymic ? ensureEnding(patronymic[0], \".\") : \"\"\r\n\r\n    return `${surname} ${nameInitial} ${patronymicInitial}`\r\n  }\r\n}\r\n","import { isArray } from \"lodash\"\r\nimport { ScheduleClass } from \"../../../models/ScheduleClass/ScheduleClass\"\r\nimport TeacherModel from \"../../../models/TeacherModel/TeacherModel\"\r\nimport SettingsService from \"../../../services/SettingsService/SettingsService\"\r\nimport { DisplayTeacherMode } from \"../../../services/SettingsService/Types\"\r\n\r\nexport const formatRoomName = (scheduleClassInstance: ScheduleClass, unfoldClassText: boolean) => {\r\n  let room = \"\"\r\n\r\n  if (\r\n    scheduleClassInstance.room == \"\" ||\r\n    scheduleClassInstance.room == null ||\r\n    scheduleClassInstance.room == undefined\r\n  ) {\r\n    // collapse all kinds of missing values into empty string\r\n    room = \"\"\r\n  } else {\r\n    if (typeof scheduleClassInstance.room == \"string\") {\r\n      room = scheduleClassInstance.room\r\n    } else if (scheduleClassInstance.room.length != undefined) {\r\n      // array check\r\n      room = scheduleClassInstance.room.join(\"\\n\")\r\n    }\r\n  }\r\n\r\n  // pad dots with spaces\r\n  room = room.replace(/\\.(?!\\s)/g, \". \")\r\n\r\n  if (!unfoldClassText) {\r\n    room = room.split(\"\\n\")[0]\r\n  }\r\n\r\n  return room\r\n}\r\n\r\n// TODO: annotate\r\nexport const formatTeacherName = (\r\n  scheduleClassInstance: ScheduleClass,\r\n  isEditable: boolean,\r\n  settings: SettingsService | null // can be null if isEditable is true\r\n) => {\r\n  let teacher = \"\"\r\n\r\n  let teacherTable = TeacherModel.GetInstance()\r\n  let teacherSurname = scheduleClassInstance.teacher\r\n\r\n  let surnameIsNull = teacherSurname == null\r\n  let surnameIsArray = isArray(teacherSurname)\r\n\r\n  if (surnameIsNull) {\r\n    teacher = \"...\"\r\n  } else if (surnameIsArray) {\r\n    teacherSurname = teacherSurname as string[]\r\n\r\n    if (teacherSurname.length == 1) {\r\n      let firstEl = teacherSurname[0]\r\n      //   if (typeof firstEl == \"string\" && firstEl.includes(\"Білик Оксана Петрівна\")) {\r\n      //     debugger\r\n      //   }\r\n      teacher = _formatTeacherString(firstEl, isEditable, settings, teacherTable)\r\n    } else {\r\n      let teachers = teacherSurname.map((sn) => teacherTable.getSurnameAndInitialsBySurname(sn))\r\n      teacher = teachers.join(\", \")\r\n    }\r\n  } else {\r\n    // surname is string\r\n    teacher = _formatTeacherString(teacherSurname as string, isEditable, settings, teacherTable)\r\n  }\r\n\r\n  return teacher\r\n}\r\n\r\nfunction _formatTeacherString(\r\n  teacherSurname: string,\r\n  isEditable: boolean,\r\n  settings: SettingsService,\r\n  teacherTable: TeacherModel\r\n) {\r\n  let teacher: string\r\n\r\n  let displayTeacherNameMode = isEditable ? DisplayTeacherMode.Full : settings!.displayTeacherName\r\n\r\n  if (displayTeacherNameMode == DisplayTeacherMode.Full) {\r\n    teacher = teacherTable.getFullNameBySurname(teacherSurname)\r\n  } else if (displayTeacherNameMode == DisplayTeacherMode.SurnameAndInitials) {\r\n    teacher = teacherTable.getSurnameAndInitialsBySurname(teacherSurname)\r\n  }\r\n  return teacher\r\n}\r\n","// EXTERNAL DEPENDENCIES\r\n\r\nimport React, { useContext, useEffect, useState } from \"react\"\r\nimport { View, ActivityIndicator, ToastAndroid } from \"react-native\"\r\nimport _ from \"lodash\"\r\nimport * as Clipboard from \"expo-clipboard\"\r\n\r\n// INTERNAL DEPENDENCIES\r\n\r\nimport { CLASS_TYPE_SHORT, CLASS_TYPE } from \"../../../models/ScheduleClass/Types\"\r\nimport { globalStyles, palette } from \"../../../styles/global\"\r\nimport getStrict from \"../../../utilities/getStrict\"\r\nimport { REGLAMENT_DATA } from \"../../../constants/Constants\"\r\nimport { DisplayTeacherMode } from \"../../../services/SettingsService/Types\"\r\nimport { SettingsContext } from \"../../../contexts/settingsContext\"\r\nimport ScheduleText from \"../ScheduleText\"\r\nimport { isRunningInBrowser } from \"../../../utilities/utilities\"\r\nimport { WeekTypeContext } from \"../../../contexts/weekTypeContext\"\r\nimport GetWeekType from \"../../../utilities/getWeekType\"\r\nimport { styles } from \"./Style\"\r\nimport { formatRoomName, formatTeacherName } from \"./Formatters\"\r\nimport { ScheduleClassComponentProps } from \"./Types\"\r\n\r\nexport default function ScheduleClassComponent({\r\n  scheduleClassInstance,\r\n  idx,\r\n  displayRoomNumber,\r\n  isEditable = false,\r\n  highlightAsOngoing = false,\r\n}: ScheduleClassComponentProps) {\r\n  let [_, setState] = React.useState({})\r\n  let isCurrentClassRef = React.useRef(scheduleClassInstance.isCurrent())\r\n\r\n  const [unfoldClassText, setUnfoldClassText] = React.useState(isEditable)\r\n  const [unfoldTeacherText, setUnfoldTeacherText] = React.useState(isEditable)\r\n\r\n  // const { height, width } = useWindowDimensions()\r\n  const settings = useContext(SettingsContext)\r\n  const selectedWeekType = useContext(WeekTypeContext)\r\n\r\n  let [isOngoingClass, setIsOngoingClass] = useState(false)\r\n  let className = scheduleClassInstance.name\r\n  let room = formatRoomName(scheduleClassInstance, unfoldClassText)\r\n  let teacher = formatTeacherName(scheduleClassInstance, isEditable, settings) // need to run this on every rerender because teacher name could have changed in settings\r\n\r\n  let shouldDisplayTeacher = isEditable || settings!.displayTeacherName != DisplayTeacherMode.Hide\r\n\r\n  const [isReady, setIsReady] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const rerenderInterval = setInterval(() => {\r\n      // periodically re-render component to update ongoing class\r\n\r\n      let isCurrentClass = scheduleClassInstance.isCurrent()\r\n      let wasCurrent = isCurrentClassRef.current\r\n\r\n      if (isCurrentClass != wasCurrent) {\r\n        isCurrentClassRef.current = isCurrentClass\r\n        setState({})\r\n      }\r\n    }, 15000)\r\n\r\n    async function init() {\r\n      let isOngoingClass = scheduleClassInstance.isCurrent() && selectedWeekType == GetWeekType()\r\n\r\n      setIsOngoingClass(isOngoingClass)\r\n      setIsReady(true)\r\n    }\r\n\r\n    init()\r\n\r\n    return () => clearInterval(rerenderInterval)\r\n  }, [])\r\n\r\n  let reglamentClass = getStrict(REGLAMENT_DATA, scheduleClassInstance.index - 1)\r\n\r\n  let classStart: string = reglamentClass[1]\r\n  if (classStart.length == 4) classStart = \"0\" + classStart\r\n\r\n  const classEnd: string = reglamentClass[2]\r\n\r\n  if (!isReady) {\r\n    return (\r\n      <View style={[{ paddingVertical: 10 }]}>\r\n        <ActivityIndicator size=\"small\" color={palette.navigationBackground} />\r\n      </View>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <View key={idx}>\r\n      <View\r\n        style={{ ...styles.classContainer, ...(isOngoingClass || highlightAsOngoing ? styles.ongoingClass : {}) }}\r\n        testID=\"schedule-class\"\r\n      >\r\n        <View style={styles.startAndEndTimesContainer}>\r\n          <ScheduleText style={[styles.text, styles.classStartText]}>{classStart}</ScheduleText>\r\n          <ScheduleText style={[styles.text, styles.classEndText]}>{classEnd} </ScheduleText>\r\n        </View>\r\n        <View style={styles.classAndTeacherBlock}>\r\n          <ScheduleText\r\n            onPress={() => {\r\n              if (isEditable) return\r\n              setUnfoldClassText(!unfoldClassText)\r\n            }}\r\n            // onLongPress={() => null} // necessary for text to be selectable on long press (otherwise onPress will rerender the component in attempt to expand it)\r\n\r\n            onLongPress={() => {\r\n              if (isEditable) return\r\n              Clipboard.setStringAsync(className).then(() => {\r\n                if (isRunningInBrowser()) return\r\n                ToastAndroid.show(\"Скопійовано: предмет\", ToastAndroid.SHORT)\r\n              })\r\n            }}\r\n            style={[styles.classNameText, teacher == \"...\" ? { flexGrow: 0 } : {}]}\r\n            ellipsizeMode=\"tail\"\r\n            numberOfLines={!unfoldClassText ? 1 : 0}\r\n          >\r\n            {className}\r\n          </ScheduleText>\r\n          <ScheduleText\r\n            onPress={() => {\r\n              if (isEditable) return\r\n\r\n              setUnfoldTeacherText(!unfoldTeacherText)\r\n            }}\r\n            // onLongPress={() => null} // necessary for text to be selectable on long press (otherwise onPress will rerender the component in attempt to expand it)\r\n\r\n            onLongPress={() => {\r\n              if (isEditable) return\r\n              Clipboard.setStringAsync(teacher).then(() => {\r\n                if (isRunningInBrowser()) return\r\n                ToastAndroid.show(\"Скопійовано: викладач\", ToastAndroid.SHORT)\r\n              })\r\n            }}\r\n            style={[styles.teacherNameText, !shouldDisplayTeacher || teacher == \"...\" ? globalStyles.noDisplay : {}]}\r\n            ellipsizeMode=\"tail\"\r\n            numberOfLines={!unfoldTeacherText ? 1 : 0}\r\n            testID=\"teacher-text\"\r\n          >\r\n            {teacher}\r\n          </ScheduleText>\r\n        </View>\r\n        <View style={styles.classTypeAndRoomNumberContainer}>\r\n          <View\r\n            style={\r\n              scheduleClassInstance.classType != CLASS_TYPE.LECTURE && !unfoldClassText\r\n                ? styles.roomNumberContainer\r\n                : globalStyles.noDisplay\r\n            }\r\n          >\r\n            <ScheduleText style={styles.roomNumberText}>\r\n              {CLASS_TYPE_SHORT[scheduleClassInstance.classType]}\r\n            </ScheduleText>\r\n          </View>\r\n\r\n          <View style={displayRoomNumber ? styles.roomNumberContainer : globalStyles.noDisplay}>\r\n            <ScheduleText\r\n              onLongPress={() => {\r\n                if (isEditable) return\r\n\r\n                Clipboard.setStringAsync(room).then(() => {\r\n                  if (isRunningInBrowser()) return\r\n                  ToastAndroid.show(\"Скопійовано: аудиторія\", ToastAndroid.SHORT)\r\n                })\r\n              }}\r\n              style={styles.roomNumberText}\r\n            >\r\n              {room}\r\n            </ScheduleText>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { View, Text, StyleSheet } from \"react-native\"\r\nimport { globalStyles } from \"../../styles/global\"\r\n\r\nexport default function Separator({\r\n  upperElement,\r\n  lowerElement,\r\n  color,\r\n  width = \"100%\",\r\n}: {\r\n  upperElement: any\r\n  lowerElement: any\r\n  color?: string\r\n  width?: string\r\n}) {\r\n  const localStyles = StyleSheet.create({\r\n    separator: {\r\n      ...globalStyles.separator,\r\n      backgroundColor: color || globalStyles.separator.backgroundColor,\r\n      width: width,\r\n      alignSelf: \"center\",\r\n    },\r\n  })\r\n\r\n  if (upperElement && lowerElement) {\r\n    return <View style={localStyles.separator} />\r\n  }\r\n\r\n  return <View style={globalStyles.noDisplay} />\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n})\r\n","/**\r\n * This file was copied from react-native-swipeable-item\r\n at https://github.com/computerjazz/react-native-swipeable-item.\r\n * Original author: computerjazz\r\n * \r\n * This file is licensed under the MIT License.\r\n * You can find the full text of the license at https://github.com/computerjazz/react-native-swipeable-item.\r\n * \r\n * Copyright (c) 2022 computerjazz\r\n */\r\n\r\nimport React, { ForwardedRef, useCallback, useContext, useImperativeHandle, useMemo, useState } from \"react\"\r\nimport { Platform, StyleSheet } from \"react-native\"\r\nimport { Gesture, GestureDetector } from \"react-native-gesture-handler\"\r\nimport Animated, {\r\n  runOnJS,\r\n  useAnimatedStyle,\r\n  useDerivedValue,\r\n  useSharedValue,\r\n  withSpring,\r\n  interpolate,\r\n  Extrapolate,\r\n  WithSpringConfig,\r\n  useAnimatedProps,\r\n} from \"react-native-reanimated\"\r\n\r\nconst isWeb = Platform.OS === \"web\"\r\nexport enum OpenDirection {\r\n  LEFT = \"left\",\r\n  RIGHT = \"right\",\r\n  NONE = \"none\",\r\n}\r\n\r\nconst renderNull = () => null\r\n\r\nconst MAX_Z_INDEX = 100\r\n\r\ntype OpenCloseOptions = { animated?: boolean }\r\ntype OpenPromiseFn = (snapPoint?: number, options?: OpenCloseOptions) => Promise<void>\r\ntype ClosePromiseFn = (options?: OpenCloseOptions) => Promise<void>\r\n\r\nexport type UnderlayParams<T> = {\r\n  item: T\r\n  open: OpenPromiseFn\r\n  close: ClosePromiseFn\r\n  percentOpen: Animated.DerivedValue<number>\r\n  isGestureActive: Animated.DerivedValue<boolean>\r\n  direction: OpenDirection\r\n}\r\n\r\nexport type OverlayParams<T> = {\r\n  item: T\r\n  openLeft: OpenPromiseFn\r\n  openRight: OpenPromiseFn\r\n  close: ClosePromiseFn\r\n  openDirection: OpenDirection\r\n  percentOpenLeft: Animated.DerivedValue<number>\r\n  percentOpenRight: Animated.DerivedValue<number>\r\n}\r\n\r\nconst UnderlayContext = React.createContext<UnderlayParams<unknown> | undefined>(undefined)\r\nconst OverlayContext = React.createContext<OverlayParams<unknown> | undefined>(undefined)\r\n\r\nexport type RenderUnderlay<T> = (params: UnderlayParams<T>) => React.ReactNode\r\nexport type RenderOverlay<T> = (params: OverlayParams<T>) => React.ReactNode\r\n\r\ntype Props<T> = {\r\n  item: T\r\n  children?: React.ReactNode\r\n  renderOverlay?: RenderOverlay<T>\r\n  renderUnderlayLeft?: RenderUnderlay<T>\r\n  renderUnderlayRight?: RenderUnderlay<T>\r\n  onChange?: (params: { openDirection: OpenDirection; snapPoint: number }) => void\r\n  overSwipe?: number\r\n  animationConfig?: Partial<WithSpringConfig>\r\n  activationThreshold?: number\r\n  swipeEnabled?: boolean\r\n  snapPointsLeft?: number[]\r\n  snapPointsRight?: number[]\r\n  swipeDamping?: number\r\n}\r\n\r\nexport type SwipeableItemImperativeRef = {\r\n  open: (openDirection: OpenDirection, snapPoint?: number, options?: OpenCloseOptions) => Promise<void>\r\n  close: ClosePromiseFn\r\n}\r\n\r\nfunction SwipeableItem<T>(props: Props<T>, ref: ForwardedRef<SwipeableItemImperativeRef>) {\r\n  const {\r\n    item,\r\n    children,\r\n    renderOverlay = renderNull,\r\n    renderUnderlayLeft = renderNull,\r\n    renderUnderlayRight = renderNull,\r\n    snapPointsLeft = [],\r\n    snapPointsRight = [],\r\n    swipeEnabled,\r\n    activationThreshold = 20,\r\n    overSwipe = 20,\r\n    swipeDamping = 10,\r\n    onChange = () => {},\r\n    animationConfig = {},\r\n  } = props\r\n\r\n  const springConfig: WithSpringConfig = {\r\n    damping: 20,\r\n    mass: 0.2,\r\n    stiffness: 100,\r\n    overshootClamping: false,\r\n    restSpeedThreshold: 0.5,\r\n    restDisplacementThreshold: 0.5,\r\n    ...animationConfig,\r\n  }\r\n\r\n  const [openDirection, setOpenDirection] = useState(OpenDirection.NONE)\r\n\r\n  const animStatePos = useSharedValue(0)\r\n  const isGestureActive = useSharedValue(false)\r\n\r\n  const swipingLeft = useDerivedValue(() => animStatePos.value < 0, [animStatePos])\r\n  const swipingRight = useDerivedValue(() => animStatePos.value > 0, [animStatePos])\r\n\r\n  const maxSnapPointLeft = -1 * Math.max(...(snapPointsLeft.length ? snapPointsLeft : [0]))\r\n  const maxSnapPointRight = Math.max(...(snapPointsRight.length ? snapPointsRight : [0]))\r\n\r\n  // Only include overswipe if the max snap point is greater than zero\r\n  const maxTranslateLeft = maxSnapPointLeft - (maxSnapPointLeft ? overSwipe : 0)\r\n  const maxTranslateRight = maxSnapPointRight + (maxSnapPointRight ? overSwipe : 0)\r\n\r\n  const percentOpenLeft = useDerivedValue(() => {\r\n    return swipingLeft.value && maxSnapPointLeft ? Math.abs(animStatePos.value / maxSnapPointLeft) : 0\r\n  }, [maxSnapPointLeft])\r\n  const percentOpenRight = useDerivedValue(() => {\r\n    return swipingRight.value && maxSnapPointRight ? Math.abs(animStatePos.value / maxSnapPointRight) : 0\r\n  }, [maxSnapPointRight])\r\n\r\n  const hasLeft = !!snapPointsLeft.length\r\n  const hasRight = !!snapPointsRight.length\r\n\r\n  const activeOffsetL = hasLeft || openDirection === OpenDirection.RIGHT ? -activationThreshold : -Number.MAX_VALUE\r\n  const activeOffsetR = hasRight || openDirection === OpenDirection.LEFT ? activationThreshold : Number.MAX_VALUE\r\n  const activeOffsetX = [activeOffsetL, activeOffsetR]\r\n\r\n  const leftStyle = useAnimatedStyle(() => {\r\n    const opacity = percentOpenLeft.value > 0 ? 1 : 0\r\n    const zIndex = Math.floor(Math.min(percentOpenLeft.value * MAX_Z_INDEX, MAX_Z_INDEX - 1))\r\n\r\n    return isWeb ? { opacity, zIndex } : { opacity }\r\n  }, [])\r\n  const rightStyle = useAnimatedStyle(() => {\r\n    const opacity = percentOpenRight.value > 0 ? 1 : 0\r\n    const zIndex = Math.floor(Math.min(percentOpenRight.value * MAX_Z_INDEX, MAX_Z_INDEX - 1))\r\n\r\n    return isWeb ? { opacity, zIndex } : { opacity }\r\n  }, [])\r\n  const overlayStyle = useAnimatedStyle(() => {\r\n    const transform = [{ translateX: animStatePos.value }]\r\n    const zIndex = MAX_Z_INDEX\r\n\r\n    return isWeb ? { transform, zIndex } : { transform }\r\n  }, [animStatePos])\r\n\r\n  const openLeft: OpenPromiseFn = (snapPoint, options) => {\r\n    const toValue = snapPoint ?? maxSnapPointLeft\r\n\r\n    return new Promise<void>((resolve) => {\r\n      function resolvePromiseIfFinished(isFinished: boolean) {\r\n        if (isFinished) resolve()\r\n        onAnimationEnd(OpenDirection.LEFT, toValue)\r\n      }\r\n\r\n      if (options?.animated === false) {\r\n        animStatePos.value = toValue\r\n        runOnJS(resolvePromiseIfFinished)(true)\r\n      } else {\r\n        animStatePos.value = withSpring(toValue, springConfig, (isFinished) => {\r\n          if (isFinished) {\r\n            runOnJS(resolvePromiseIfFinished)(isFinished)\r\n          }\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  const openRight: OpenPromiseFn = (snapPoint, options) => {\r\n    const toValue = snapPoint ?? maxSnapPointRight\r\n\r\n    return new Promise<void>((resolve) => {\r\n      function resolvePromiseIfFinished(isFinished: boolean) {\r\n        if (isFinished) resolve()\r\n        onAnimationEnd(OpenDirection.RIGHT, toValue)\r\n      }\r\n\r\n      if (options?.animated === false) {\r\n        animStatePos.value = toValue\r\n        runOnJS(resolvePromiseIfFinished)(true)\r\n      } else {\r\n        animStatePos.value = withSpring(toValue, springConfig, (isFinished) => {\r\n          if (isFinished) {\r\n            runOnJS(resolvePromiseIfFinished)(isFinished)\r\n          }\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  const close: ClosePromiseFn = (options) => {\r\n    const toValue = 0\r\n    return new Promise<void>((resolve) => {\r\n      function resolvePromiseIfFinished(isFinished: boolean) {\r\n        if (isFinished) resolve()\r\n        onAnimationEnd(OpenDirection.NONE, toValue)\r\n      }\r\n\r\n      if (options?.animated === false) {\r\n        animStatePos.value = toValue\r\n        runOnJS(resolvePromiseIfFinished)(true)\r\n      } else {\r\n        animStatePos.value = withSpring(toValue, springConfig, (isFinished) => {\r\n          if (isFinished) {\r\n            runOnJS(resolvePromiseIfFinished)(isFinished)\r\n          }\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    const refObject: SwipeableItemImperativeRef = {\r\n      open: (openDirection, snapPoint, options) => {\r\n        if (openDirection === OpenDirection.LEFT) return openLeft(snapPoint, options)\r\n        if (openDirection === OpenDirection.RIGHT) return openRight(snapPoint, options)\r\n        return close()\r\n      },\r\n      close,\r\n    }\r\n    return refObject\r\n  })\r\n\r\n  function onAnimationEnd(_openDirection: OpenDirection, snapPoint: number) {\r\n    setOpenDirection(_openDirection)\r\n    const didChange = openDirection !== OpenDirection.NONE || _openDirection !== OpenDirection.NONE\r\n    if (didChange) {\r\n      onChange({ openDirection: _openDirection, snapPoint })\r\n    }\r\n  }\r\n\r\n  const startX = useSharedValue(0)\r\n\r\n  const gesture = Gesture.Pan()\r\n    .onBegin(() => {\r\n      if (isWeb) {\r\n        // onStart not called on web\r\n        // remove when fixed: https://github.com/software-mansion/react-native-gesture-handler/issues/2057\r\n        startX.value = animStatePos.value\r\n        isGestureActive.value = true\r\n      }\r\n    })\r\n    .onStart(() => {\r\n      startX.value = animStatePos.value\r\n      isGestureActive.value = true\r\n    })\r\n    .onUpdate((evt) => {\r\n      const rawVal = evt.translationX + startX.value\r\n      const clampedVal = interpolate(\r\n        rawVal,\r\n        [maxTranslateLeft, maxTranslateRight],\r\n        [maxTranslateLeft, maxTranslateRight],\r\n        Extrapolate.CLAMP\r\n      )\r\n      animStatePos.value = clampedVal\r\n    })\r\n    .onEnd((evt) => {\r\n      isGestureActive.value = false\r\n\r\n      // Approximate where item would end up with velocity taken into account\r\n      const velocityModifiedPosition = animStatePos.value + evt.velocityX / swipeDamping\r\n\r\n      const allSnapPoints = snapPointsLeft.map((p) => p * -1).concat(snapPointsRight)\r\n\r\n      // The user is not required to designate [0] in their snap point array,\r\n      // but we need to make sure 0 is a snap point.\r\n\r\n      allSnapPoints.push(0)\r\n\r\n      const closestSnapPoint = allSnapPoints.reduce((acc, cur) => {\r\n        const diff = Math.abs(velocityModifiedPosition - cur)\r\n        const prevDiff = Math.abs(velocityModifiedPosition - acc)\r\n        return diff < prevDiff ? cur : acc\r\n      }, Infinity)\r\n\r\n      const onComplete = () => {\r\n        \"worklet\"\r\n        const openDirection =\r\n          closestSnapPoint === 0 ? OpenDirection.NONE : closestSnapPoint > 0 ? OpenDirection.RIGHT : OpenDirection.LEFT\r\n        runOnJS(onAnimationEnd)(openDirection, Math.abs(closestSnapPoint))\r\n      }\r\n      if (animStatePos.value === closestSnapPoint) onComplete()\r\n      else animStatePos.value = withSpring(closestSnapPoint, springConfig, onComplete)\r\n    })\r\n    .enabled(swipeEnabled !== false)\r\n    .activeOffsetX(activeOffsetX)\r\n\r\n  const sharedParams = useMemo(\r\n    () => ({\r\n      item,\r\n      isGestureActive,\r\n      close,\r\n    }),\r\n    []\r\n  )\r\n\r\n  const underlayRightParams = useMemo(() => {\r\n    return {\r\n      open: openRight,\r\n      percentOpen: percentOpenRight,\r\n      direction: OpenDirection.RIGHT,\r\n      ...sharedParams,\r\n    }\r\n  }, [percentOpenRight, openRight, sharedParams])\r\n\r\n  const underlayLeftParams = useMemo(() => {\r\n    return {\r\n      open: openLeft,\r\n      percentOpen: percentOpenLeft,\r\n      direction: OpenDirection.LEFT,\r\n      ...sharedParams,\r\n    }\r\n  }, [item, percentOpenLeft, openLeft, sharedParams])\r\n\r\n  const overlayParams = useMemo(() => {\r\n    // If there is only one swipe direction, use it as the 'open' function. Otherwise we need to choose one.\r\n    const open = hasLeft && !hasRight ? openLeft : hasRight && !hasLeft ? openRight : openLeft\r\n\r\n    return {\r\n      openLeft: openLeft,\r\n      openRight: openRight,\r\n      percentOpenLeft,\r\n      percentOpenRight,\r\n      openDirection,\r\n      open,\r\n      ...sharedParams,\r\n    }\r\n  }, [openLeft, openRight, openDirection, percentOpenLeft, percentOpenRight, hasLeft, hasRight])\r\n\r\n  const animPropsLeft = useAnimatedProps(() => {\r\n    // useAnimatedProps broken on web: https://github.com/software-mansion/react-native-reanimated/issues/1808\r\n    if (isWeb) return { pointerEvents: \"auto\" as const }\r\n    return {\r\n      pointerEvents: percentOpenLeft.value > 0 ? (\"auto\" as const) : (\"none\" as const),\r\n    }\r\n  }, [])\r\n\r\n  const animPropsRight = useAnimatedProps(() => {\r\n    // useAnimatedProps broken on web: https://github.com/software-mansion/react-native-reanimated/issues/1808\r\n    if (isWeb) return { pointerEvents: \"auto\" as const }\r\n    return {\r\n      pointerEvents: percentOpenRight.value > 0 ? (\"auto\" as const) : (\"none\" as const),\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <OverlayContext.Provider value={overlayParams}>\r\n      <Animated.View animatedProps={animPropsLeft} style={[styles.underlay, leftStyle]}>\r\n        <UnderlayContext.Provider value={underlayLeftParams}>\r\n          {renderUnderlayLeft(underlayLeftParams)}\r\n        </UnderlayContext.Provider>\r\n      </Animated.View>\r\n      <Animated.View animatedProps={animPropsRight} style={[styles.underlay, rightStyle]}>\r\n        <UnderlayContext.Provider value={underlayRightParams}>\r\n          {renderUnderlayRight(underlayRightParams)}\r\n        </UnderlayContext.Provider>\r\n      </Animated.View>\r\n      <GestureDetector gesture={gesture}>\r\n        <Animated.View style={[styles.flex, overlayStyle]}>\r\n          {children}\r\n          {renderOverlay(overlayParams)}\r\n        </Animated.View>\r\n      </GestureDetector>\r\n    </OverlayContext.Provider>\r\n  )\r\n}\r\n\r\nexport default React.forwardRef(SwipeableItem) as <T>(\r\n  props: Props<T> & { ref?: React.ForwardedRef<SwipeableItemImperativeRef> }\r\n) => React.ReactElement\r\n\r\nexport function useUnderlayParams<T>() {\r\n  const underlayContext = useContext(UnderlayContext)\r\n  if (!underlayContext) {\r\n    throw new Error(\"useUnderlayParams must be called from within an UnderlayContext.Provider!\")\r\n  }\r\n  return underlayContext as UnderlayParams<T>\r\n}\r\n\r\nexport function useOverlayParams<T>() {\r\n  const overlayContext = useContext(OverlayContext)\r\n  if (!overlayContext) {\r\n    throw new Error(\"useOverlayParams must be called from within an OverlayContext.Provider!\")\r\n  }\r\n  return overlayContext as OverlayParams<T>\r\n}\r\n\r\nexport function useSwipeableItemParams<T>() {\r\n  const overlayContext = useContext(OverlayContext) as OverlayParams<T> | undefined\r\n  if (!overlayContext) {\r\n    throw new Error(\"useSwipeableItemParams must be called from within an OverlayContext.Provider!\")\r\n  }\r\n  const underlayContext = useContext(UnderlayContext)\r\n  const contextDirection = underlayContext?.direction\r\n\r\n  const open = useCallback(\r\n    (snapPoint?: number, direction?: OpenDirection) => {\r\n      const openFnLeft = overlayContext.openLeft\r\n      const openFnRight = overlayContext.openRight\r\n      const openDirection = direction || contextDirection\r\n      const openFn = openDirection === OpenDirection.LEFT ? openFnLeft : openFnRight\r\n      return openFn(snapPoint)\r\n    },\r\n    [overlayContext, contextDirection]\r\n  )\r\n\r\n  const percentOpen = useMemo(() => {\r\n    if (contextDirection) {\r\n      // If we're calling from within an underlay context, return the open percentage of that underlay\r\n      return contextDirection === OpenDirection.LEFT ? overlayContext.percentOpenLeft : overlayContext.percentOpenRight\r\n    }\r\n    // Return the open percentage of the active swipe direction\r\n    return overlayContext.openDirection === OpenDirection.LEFT\r\n      ? overlayContext.percentOpenLeft\r\n      : overlayContext.percentOpenRight\r\n  }, [overlayContext])\r\n\r\n  return {\r\n    ...overlayContext,\r\n    open,\r\n    percentOpen,\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  underlay: {\r\n    ...StyleSheet.absoluteFillObject,\r\n  },\r\n  flex: {\r\n    flex: 1,\r\n  },\r\n})\r\n","import React from \"react\"\r\n// import { useSwipeableItemParams } from \"react-native-swipeable-item\"\r\nimport { useSwipeableItemParams } from \"../shared/SwipeableItem/SwipeableItem\"\r\nimport { TouchableOpacity, View, StyleSheet } from \"react-native\"\r\nimport { Ionicons } from \"@expo/vector-icons\"\r\nimport { globalStyles, palette } from \"../../styles/global\"\r\n\r\n// TODO: hide this component children right when hide animation starts\r\n// TODO: make sure that class start&end block gets completely hidden when main content is shifted to the side\r\n\r\n/**\r\n * Component that is shown when user swipes an item (Class Row) to the left\r\n */\r\nexport default function UnderlayRightSide({\r\n  onDeleteButtonPress: onDeleteButtonPress,\r\n}: {\r\n  onDeleteButtonPress: () => void\r\n}) {\r\n  // @ts-ignore\r\n  const { close } = useSwipeableItemParams()\r\n\r\n  return (\r\n    <View style={[globalStyles.row, styles.underlayLeft]}>\r\n      <View>\r\n        <TouchableOpacity\r\n          onPress={(e) => {\r\n            onDeleteButtonPress()\r\n            close()\r\n          }}\r\n        >\r\n          <Ionicons name=\"trash-outline\" size={14} color={palette.grayedOut} />\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  underlayLeft: {\r\n    flex: 1,\r\n    backgroundColor: palette.ongoingClass,\r\n    justifyContent: \"flex-end\",\r\n    alignItems: \"center\",\r\n    marginVertical: 2,\r\n    padding: 10,\r\n    borderRadius: 10,\r\n  },\r\n})\r\n","// web only.\r\n// service for saving edited schedules to local storage\r\n\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\"\r\n\r\nimport { workDaysEnLower } from \"../../constants/Days\"\r\nimport ScheduleLoaderService from \"../ScheduleLoaderService/ScheduleLoaderService\"\r\nimport _ from \"lodash\"\r\nimport { ensureExtension } from \"../../utilities/utilities\"\r\nimport { IEditedScheduleStorageService, ScheduleWithMetadata } from \"./Types\"\r\nimport { IScheduleModel } from \"../../models/ScheduleModel/Types\"\r\n\r\n/**\r\n * [Web only] Singleton service for saving edited schedules to local storage.\r\n */\r\nexport default class EditedSchedulesStorageService implements IEditedScheduleStorageService {\r\n  private static instance: EditedSchedulesStorageService\r\n\r\n  static async GetInstance(): Promise<EditedSchedulesStorageService> {\r\n    if (!EditedSchedulesStorageService.instance) {\r\n      EditedSchedulesStorageService.instance = new EditedSchedulesStorageService()\r\n\r\n      await EditedSchedulesStorageService.instance.init()\r\n\r\n      console.log(\"EditedScheduleStorageService instance constructed successfully\")\r\n    }\r\n\r\n    return EditedSchedulesStorageService.instance\r\n  }\r\n\r\n  async init() {\r\n    const scheduleLoader = await ScheduleLoaderService.GetInstance()\r\n    // invalidate outdated edited schedules\r\n    const results = scheduleLoader.scheduleFiles.map(async (scheduleFile) => {\r\n      if (await this.isOutdated(scheduleFile.filename)) {\r\n        await this.removeEditedSchedule(scheduleFile.filename)\r\n      }\r\n    })\r\n\r\n    await Promise.all(results)\r\n  }\r\n\r\n  /**\r\n   * Copies regular schedule to local storage\r\n   */\r\n  async createVersionForEdits(schedule: IScheduleModel) {\r\n    // I wonder if this is enough\r\n    await this.saveEditedSchedule(schedule)\r\n    return schedule\r\n  }\r\n\r\n  /**\r\n   * Saves schedule with its metadata to local storage.\r\n   */\r\n  async saveEditedSchedule(schedule: IScheduleModel): Promise<void> {\r\n    const scheduleLoader = await ScheduleLoaderService.GetInstance()\r\n    const scheduleMetadata = scheduleLoader.getScheduleFileMetadata(\r\n      scheduleLoader.getScheduleFileByFileName(ensureExtension(schedule.name, \".json\"))\r\n    )\r\n\r\n    const jsonToDump: ScheduleWithMetadata = {\r\n      metadata: scheduleMetadata,\r\n      scheduleDays: {},\r\n    }\r\n\r\n    workDaysEnLower.forEach((day, idx) => {\r\n      jsonToDump[\"scheduleDays\"][day] = schedule.scheduleDays[idx]\r\n    })\r\n\r\n    await AsyncStorage.setItem(ensureExtension(schedule.name, \".json\"), JSON.stringify(jsonToDump))\r\n  }\r\n\r\n  // gets edited schedule from local storage\r\n  async loadEditedSchedule(scheduleFileName: string): Promise<ScheduleWithMetadata | null> {\r\n    const scheduleWithMetadata = await AsyncStorage.getItem(scheduleFileName)\r\n\r\n    if (!scheduleWithMetadata) return null\r\n\r\n    const scheduleWithMetadataJSON: ScheduleWithMetadata = JSON.parse(scheduleWithMetadata)\r\n\r\n    return scheduleWithMetadataJSON\r\n  }\r\n\r\n  async isOutdated(scheduleFileName: string) {\r\n    const scheduleLoader = await ScheduleLoaderService.GetInstance()\r\n    const contentfulScheduleFile = scheduleLoader.getScheduleFileByFileName(scheduleFileName)\r\n\r\n    const editVer = await this.loadEditedSchedule(scheduleFileName)\r\n    if (!editVer) return false\r\n\r\n    // debugger\r\n\r\n    const editVerMetadata = editVer.metadata\r\n\r\n    const contentfulVerMetadata = scheduleLoader.getScheduleFileMetadata(contentfulScheduleFile)\r\n\r\n    return !_.isEqual(editVerMetadata, contentfulVerMetadata)\r\n  }\r\n\r\n  removeEditedSchedule(scheduleName: string) {\r\n    return AsyncStorage.removeItem(scheduleName)\r\n  }\r\n\r\n  async hasEditedVersion(scheduleName: string) {\r\n    const editedVersion = await this.loadEditedSchedule(scheduleName)\r\n    return editedVersion != null\r\n  }\r\n}\r\n","import _ from \"lodash\"\r\nimport { workDaysEnLower } from \"../../constants/Days\"\r\nimport { ScheduleDay } from \"../../models/ScheduleDay/ScheduleDay\"\r\nimport { ensureExtension } from \"../../utilities/utilities\"\r\nimport EditedSchedulesStorageService from \"../EditedScheduleStorageService/EditedScheduleStorageService\"\r\nimport ScheduleLoaderServiceBase from \"./ScheduleLoaderServiceBase\"\r\nimport { IScheduleModel } from \"../../models/ScheduleModel/Types\"\r\n\r\n/**\r\n * Web version of the ScheduleLoaderService\r\n */\r\nexport default class ScheduleLoaderService extends ScheduleLoaderServiceBase {\r\n  protected override async init() {\r\n    await this.getSchedulesFromContentful()\r\n    // replace contentful schedules with their user edited versions\r\n    await this.replaceContentfulSchedulesWithEditedVersions()\r\n\r\n    // sort schedules by filename\r\n    this.scheduleFiles = _.sortBy(this.scheduleFiles, (sf) => sf.filename)\r\n  }\r\n\r\n  /**\r\n   * Replaces Contentful schedules with their user-edited counterparts.\r\n   */\r\n  async replaceContentfulSchedulesWithEditedVersions() {\r\n    const editedSchedulesStorage = await EditedSchedulesStorageService.GetInstance()\r\n\r\n    const editedCounterpartsPromises = this.scheduleFiles.map(async (sf) => {\r\n      // patch contentful schedules with edited versions\r\n      const editedSchedule = await editedSchedulesStorage.loadEditedSchedule(sf.filename)\r\n      if (editedSchedule) {\r\n        sf.json_parsed = editedSchedule.scheduleDays\r\n      }\r\n\r\n      return sf\r\n    })\r\n\r\n    const editedCounterparts = await Promise.all(editedCounterpartsPromises)\r\n\r\n    this.scheduleFiles = editedCounterparts\r\n  }\r\n\r\n  /**\r\n   * Persists given schedule model into local storage. Overrides parent class' method.\r\n   */\r\n  override async dumpSchedule(schedule: IScheduleModel) {\r\n    // get corresponding schedule file\r\n    const scheduleFile = this.getScheduleFileByFileName(ensureExtension(schedule.name, \".json\"))\r\n\r\n    const jsonToDump: {\r\n      [key: string]: ScheduleDay\r\n    } = {}\r\n\r\n    workDaysEnLower.forEach((day, idx) => {\r\n      jsonToDump[day] = schedule.scheduleDays[idx]\r\n    })\r\n\r\n    // replace .json_parsed with schedule contents\r\n    scheduleFile!.json_parsed = jsonToDump\r\n\r\n    const editedScheduleStorage = await EditedSchedulesStorageService.GetInstance()\r\n    await editedScheduleStorage.saveEditedSchedule(schedule)\r\n\r\n    return Promise.resolve()\r\n  }\r\n}\r\n","import * as FileSystem from \"expo-file-system\"\r\nimport _ from \"lodash\"\r\nimport NetInfo from \"@react-native-community/netinfo\"\r\n\r\nimport { workDaysEnLower } from \"../../constants/Days\"\r\nimport { ensureExtension, getContentfulClient, isRunningInBrowser } from \"../../utilities/utilities\"\r\nimport ExampleScheduleKN from \"../../assets/example_schedules/КН-example.json\"\r\nimport ExampleScheduleIST from \"../../assets/example_schedules/ІСТ-example.json\"\r\nimport ExampleScheduleTE from \"../../assets/example_schedules/ТЕ-example.json\"\r\n\r\nimport { ScheduleDay } from \"../../models/ScheduleDay/ScheduleDay\"\r\nimport { ScheduleFile, ScheduleFileMetadata } from \"./Types\"\r\nimport { IScheduleModel } from \"../../models/ScheduleModel/Types\"\r\n\r\n// This is a singleton service that loads schedules from local storage / contentful and provides them to the rest of the application\r\n// if no schedules are available (no schedules folder), it should retrieve them from contentful and store them locally\r\n// if schedules are indeed available, we gotta check whether they are up to date or not\r\n// for that we will have to rely on some additional field. Perhaps revision or perhaps creactedAt.\r\n// or perhaps both\r\n\r\n/**\r\n * Singleton service that loads schedules from Local Storage / Contentful and provides them to the rest of the application.\r\n */\r\nexport default class ScheduleLoaderServiceBase {\r\n  protected static instance: ScheduleLoaderServiceBase\r\n\r\n  scheduleFiles: ScheduleFile[] = []\r\n\r\n  pathToScheduleFolder = `${FileSystem.documentDirectory}schedules/`\r\n\r\n  // this function also properly returns child instance in child classes as well via dynamic access of class (.this is class here)\r\n  static async GetInstance(): Promise<ScheduleLoaderServiceBase> {\r\n    if (!this.instance) {\r\n      console.log(`⏳ [ScheduleLoader] Constructing instance of class ${this.name}`)\r\n\r\n      this.instance = new this()\r\n      await this.instance.init()\r\n\r\n      // log loaded schedule files\r\n      console.log(`[✔ ${this.name}] schedule loader service instance constructed successfully`)\r\n      console.log(`[${this.name}] schedule loader files:`)\r\n      this.instance.scheduleFiles.forEach((file) => console.log(`📝 [${this.name}] file: ${file.filename}`))\r\n    }\r\n\r\n    return this.instance\r\n  }\r\n\r\n  protected constructor() {}\r\n\r\n  /**\r\n   * Initializes the service. Retrieves schedules from local storage or contentful.\r\n   * If schedules are available locally, checks for updates.\r\n   * If schedules are not available locally, gets them from Contentful.\r\n   *\r\n   */\r\n  protected async init() {\r\n    // check whether schedules are available locally\r\n    const schedulesAvailableLocally = (await FileSystem.getInfoAsync(this.pathToScheduleFolder)).exists\r\n\r\n    // TODO: refactor try catches into one hoisted try catch\r\n    if (schedulesAvailableLocally) {\r\n      await this.getSchedulesFromFileSystem()\r\n\r\n      // check for updates\r\n      try {\r\n        await this.checkForUpdatesAsync()\r\n      } catch (e) {\r\n        this.getExampleSchedules()\r\n      }\r\n    } else {\r\n      // create schedules folder\r\n      await FileSystem.makeDirectoryAsync(this.pathToScheduleFolder, {\r\n        intermediates: true,\r\n      })\r\n\r\n      try {\r\n        await this.getSchedulesFromContentful()\r\n      } catch (e) {\r\n        this.getExampleSchedules()\r\n      }\r\n    }\r\n\r\n    this.scheduleFiles = _.sortBy(this.scheduleFiles, (sf) => sf.filename)\r\n  }\r\n\r\n  /**\r\n   * Reads schedules from local storage and sets them to .scheduleFiles.\r\n   */\r\n  async getSchedulesFromFileSystem() {\r\n    console.log(`[Schedule Loader] schedules are available locally. loading...`)\r\n    const allScheduleFileNames = await FileSystem.readDirectoryAsync(this.pathToScheduleFolder)\r\n    // sort the filenames alphabetically\r\n    allScheduleFileNames.sort()\r\n\r\n    console.log(`[Schedule Loader] allScheduleFileNames: ${allScheduleFileNames}`)\r\n    const scheduleFiles: ScheduleFile[] = await Promise.all(\r\n      allScheduleFileNames.map(async (filename) => {\r\n        const file = await FileSystem.readAsStringAsync(`${this.pathToScheduleFolder}${filename}`)\r\n        const json = JSON.parse(file)\r\n        const { revision, createdAt, updatedAt, json_parsed } = json\r\n        return {\r\n          filename,\r\n          revision,\r\n          createdAt,\r\n          updatedAt,\r\n          json_parsed,\r\n        }\r\n      })\r\n    )\r\n\r\n    this.scheduleFiles = scheduleFiles\r\n    return scheduleFiles\r\n  }\r\n\r\n  // TODO: Shrink by splitting into two functions\r\n  /**\r\n   * Downloads schedules from Contentful and sets them to .scheduleFiles.\r\n   * Also saves them to schedules folder (android only).\r\n   */\r\n\r\n  // eslint-disable-next-line max-lines-per-function\r\n  async getSchedulesFromContentful() {\r\n    // retrieve schedules from contentful\r\n    console.log(`[Schedule Loader] retrieving schedules from contentful`)\r\n\r\n    try {\r\n      var client = getContentfulClient()\r\n    } catch (e) {\r\n      return this.getExampleSchedules()\r\n    }\r\n    const assets = await client.getAssets({\r\n      limit: 1000,\r\n    })\r\n    console.log(`[Schedule Loader] retrieved ${assets.items.length} schedule assets from Contentful`)\r\n\r\n    // iterate over assets and download them\r\n\r\n    const scheduleFiles: ScheduleFile[] = await Promise.all(\r\n      assets.items.map(async (a) => {\r\n        const file = a.fields.file\r\n\r\n        const protocol = \"https:\"\r\n        const linkToFile = protocol + file.url\r\n\r\n        // get file located at url and temporarily store it in .json file as I don't know how to download it in memory\r\n        const linkToDestFile = `${this.pathToScheduleFolder}${file.fileName}`\r\n\r\n        var scheduleClassesJson: string\r\n\r\n        if (!isRunningInBrowser()) {\r\n          await FileSystem.downloadAsync(linkToFile, linkToDestFile)\r\n          scheduleClassesJson = await FileSystem.readAsStringAsync(linkToDestFile)\r\n        } else {\r\n          const res = await fetch(linkToFile)\r\n\r\n          const blob = await res.blob()\r\n          const data = await blob.text()\r\n\r\n          scheduleClassesJson = data\r\n        }\r\n\r\n        const scheduleFile: ScheduleFile = {\r\n          filename: file.fileName,\r\n          revision: a.sys.revision,\r\n          createdAt: a.sys.createdAt,\r\n          updatedAt: a.sys.updatedAt,\r\n          json_parsed: JSON.parse(scheduleClassesJson),\r\n        }\r\n\r\n        if (!isRunningInBrowser()) {\r\n          // save schedule classes json together with metadata to schedules folder\r\n          await FileSystem.writeAsStringAsync(linkToDestFile, JSON.stringify(scheduleFile))\r\n        }\r\n\r\n        return scheduleFile\r\n      })\r\n    )\r\n\r\n    this.scheduleFiles = scheduleFiles\r\n  }\r\n\r\n  /**\r\n   * Retrieves example schedules from assets. The assets are hardcoded json files.\r\n   */\r\n  getExampleSchedules() {\r\n    console.log(`[Schedule Loader] retrieving example schedules`)\r\n\r\n    const scheduleFiles: ScheduleFile[] = [\r\n      {\r\n        filename: \"КН-example.json\",\r\n        revision: 0,\r\n        createdAt: \"\",\r\n        updatedAt: \"\",\r\n        json_parsed: ExampleScheduleKN,\r\n      },\r\n      {\r\n        filename: \"ІСТ-example.json\",\r\n        revision: 0,\r\n        createdAt: \"\",\r\n        updatedAt: \"\",\r\n        json_parsed: ExampleScheduleIST,\r\n      },\r\n\r\n      {\r\n        filename: \"ТЕ-example.json\",\r\n        revision: 0,\r\n        createdAt: \"\",\r\n        updatedAt: \"\",\r\n        json_parsed: ExampleScheduleTE,\r\n      },\r\n    ]\r\n\r\n    this.scheduleFiles = scheduleFiles\r\n\r\n    return scheduleFiles\r\n  }\r\n\r\n  getScheduleFileByFileName(fileName: string): ScheduleFile | undefined {\r\n    return this.scheduleFiles.find((sf) => sf.filename === fileName)\r\n  }\r\n\r\n  // TODO: split into two functions\r\n  /**\r\n   * Checks for updates and updates schedules if they are outdated.\r\n   */\r\n\r\n  // eslint-disable-next-line max-lines-per-function\r\n  async checkForUpdatesAsync() {\r\n    const netInfo = await NetInfo.fetch()\r\n\r\n    if (!netInfo.isConnected || !netInfo.isInternetReachable) {\r\n      console.log(`[Schedule Loader] no internet connection. skipping update check`)\r\n      return\r\n    }\r\n\r\n    const client = getContentfulClient()\r\n\r\n    const assets = await client.getAssets({\r\n      limit: 1000,\r\n    })\r\n    console.log(`[Schedule Loader] retrieved ${assets.items.length} schedule assets from contentful`)\r\n\r\n    // iterate over assets and download their metadata\r\n    // TODO: dry up the duplicate\r\n\r\n    const scheduleFileMetadatas: (ScheduleFileMetadata & {\r\n      linkToFile: string\r\n    })[] = await Promise.all(\r\n      assets.items.map(async (item) => {\r\n        const file: AssetFile = item.fields.file\r\n\r\n        const protocol = \"https:\"\r\n        const linkToFile = protocol + file.url\r\n\r\n        const scheduleFileMetadata: ScheduleFileMetadata & {\r\n          linkToFile: string\r\n        } = {\r\n          filename: file.fileName,\r\n          revision: item.sys.revision,\r\n          createdAt: item.sys.createdAt,\r\n          updatedAt: item.sys.updatedAt,\r\n          linkToFile,\r\n        }\r\n\r\n        return scheduleFileMetadata\r\n      })\r\n    )\r\n\r\n    // update whatever schedules are outdated\r\n    const updatedScheduleFiles: ScheduleFile[] = await Promise.all(\r\n      // TODO: split into two functions\r\n      // eslint-disable-next-line max-lines-per-function\r\n      scheduleFileMetadatas.map(async (sfm) => {\r\n        const oldSchedule = this.getScheduleFileByFileName(sfm.filename)\r\n        if (!oldSchedule) {\r\n          // schedule is new, download it\r\n          const linkToDestFile = `${this.pathToScheduleFolder}${sfm.filename}`\r\n          await FileSystem.downloadAsync(sfm.linkToFile, linkToDestFile)\r\n\r\n          const scheduleFile: ScheduleFile = {\r\n            filename: sfm.filename,\r\n            revision: sfm.revision,\r\n            createdAt: sfm.createdAt,\r\n            updatedAt: sfm.updatedAt,\r\n            json_parsed: JSON.parse(await FileSystem.readAsStringAsync(linkToDestFile)),\r\n          }\r\n\r\n          // write newly downloaded schedule to schedules folder\r\n          await FileSystem.writeAsStringAsync(linkToDestFile, JSON.stringify(scheduleFile))\r\n\r\n          return scheduleFile\r\n        } else {\r\n          // schedule exists, check if it's outdated\r\n          const isOutdated =\r\n            oldSchedule.revision < sfm.revision ||\r\n            new Date(oldSchedule.updatedAt) < new Date(sfm.updatedAt) ||\r\n            new Date(oldSchedule.createdAt) < new Date(sfm.createdAt)\r\n\r\n          //   console.log(`old schedule created at (date constructed from string): ${new Date(oldSchedule.createdAt)}`) // works\r\n          console.log(`[Schedule Loader] schedule ${sfm.filename} is outdated: ${isOutdated}`)\r\n          if (isOutdated) {\r\n            // schedule is outdated, download it\r\n            const linkToDestFile = `${this.pathToScheduleFolder}${sfm.filename}`\r\n            await FileSystem.downloadAsync(sfm.linkToFile, linkToDestFile)\r\n\r\n            const scheduleFile: ScheduleFile = {\r\n              json_parsed: JSON.parse(await FileSystem.readAsStringAsync(linkToDestFile)),\r\n              filename: sfm.filename,\r\n              revision: sfm.revision,\r\n              createdAt: sfm.createdAt,\r\n              updatedAt: sfm.updatedAt,\r\n            }\r\n\r\n            // write newly downloaded schedule to schedules folder (important)\r\n            await FileSystem.writeAsStringAsync(linkToDestFile, JSON.stringify(scheduleFile))\r\n\r\n            return scheduleFile\r\n          } else {\r\n            // schedule is up to date, do nothing\r\n            return oldSchedule\r\n          }\r\n        }\r\n      })\r\n    )\r\n\r\n    this.scheduleFiles = updatedScheduleFiles\r\n  }\r\n\r\n  /**\r\n   * Plucks metadata from given ScheduleFile and into separate metadata object.\r\n   */\r\n  getScheduleFileMetadata(scheduleFile: ScheduleFile): ScheduleFileMetadata | undefined {\r\n    if (!scheduleFile) {\r\n      return undefined\r\n    }\r\n\r\n    return {\r\n      filename: scheduleFile.filename,\r\n      revision: scheduleFile.revision,\r\n      createdAt: scheduleFile.createdAt,\r\n      updatedAt: scheduleFile.updatedAt,\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Persists given schedule model into file. Is overridden in child classes.\r\n   */\r\n  async dumpSchedule(schedule: IScheduleModel) {\r\n    // get corresponding schedule file\r\n    const scheduleFile = this.getScheduleFileByFileName(ensureExtension(schedule.name, \".json\"))\r\n\r\n    const jsonToDump: {\r\n      [key: string]: ScheduleDay\r\n    } = {}\r\n\r\n    workDaysEnLower.forEach((day, idx) => {\r\n      jsonToDump[day] = schedule.scheduleDays[idx]\r\n    })\r\n\r\n    // replace .json_parsed with schedule contents\r\n    scheduleFile!.json_parsed = jsonToDump\r\n\r\n    // if (isRunningInBrowser()) {\r\n    //   const editedScheduleStorage = await EditedSchedulesStorageService.GetInstance()\r\n    //   await editedScheduleStorage.saveEditedSchedule(schedule)\r\n\r\n    //   return Promise.resolve()\r\n    // }\r\n\r\n    console.log(`[Schedule Loader] dumping schedule ${scheduleFile.filename} to file`)\r\n    // write to file\r\n    return FileSystem.writeAsStringAsync(\r\n      `${this.pathToScheduleFolder}${scheduleFile!.filename}`,\r\n      JSON.stringify(scheduleFile)\r\n    )\r\n  }\r\n}\r\n","import * as Notifications from \"expo-notifications\"\r\nimport { Platform } from \"react-native\"\r\nimport { isRunningInBrowser } from \"../../utilities/utilities\"\r\nimport { ILocalNotificationsService } from \"./Types\"\r\n\r\n// expo notifications docs: https://docs.expo.dev/versions/latest/sdk/notifications/\r\n// Expo's Push Notification Tool: https://expo.dev/notifications\r\n\r\n// singleton\r\nexport default class LocalNotificationsService implements ILocalNotificationsService {\r\n  protected static instance: LocalNotificationsService\r\n  exampleNotificationContent: Notifications.NotificationContentInput = {\r\n    title: \"Мультимедійне видавництво\",\r\n    body: \"Миклушка І. З.\",\r\n    subtitle: \"[10:15] Пара починається\",\r\n    data: { someData: \"додаткова інформація тут\" },\r\n  }\r\n  notificationChannelId = \"interactive-schedule-notifications\"\r\n\r\n  static async GetInstance(): Promise<LocalNotificationsService> {\r\n    if (!this.instance) {\r\n      this.instance = new this()\r\n      await this.instance.init()\r\n      console.log(`[${this.name}] local notifications service instance constructed successfully`)\r\n    }\r\n\r\n    return this.instance\r\n  }\r\n\r\n  protected constructor() {}\r\n  cancelScheduledNotificationAsync(identifier: string): Promise<void> {\r\n    return Notifications.cancelScheduledNotificationAsync(identifier)\r\n  }\r\n  // a bunch of wrappers for expo-notifications methods. Perhaps I will delete them later\r\n  cancelAllScheduledNotificationsAsync(): Promise<void> {\r\n    return Notifications.cancelAllScheduledNotificationsAsync()\r\n  }\r\n  getAllScheduledNotificationsAsync(): Promise<Notifications.NotificationRequest[]> {\r\n    return Notifications.getAllScheduledNotificationsAsync()\r\n  }\r\n  checkPermissionsAsync(): Promise<Notifications.NotificationPermissionsStatus> {\r\n    return Notifications.getPermissionsAsync()\r\n  }\r\n\r\n  protected async init() {\r\n    Notifications.setNotificationHandler({\r\n      handleNotification: async () => ({\r\n        shouldShowAlert: true,\r\n        priority: Notifications.AndroidNotificationPriority.MAX,\r\n        shouldPlaySound: true,\r\n        shouldSetBadge: true,\r\n      }),\r\n    })\r\n    await this.registerNotificationsChannel()\r\n\r\n    if (!isRunningInBrowser()) {\r\n      const permissionsGranted = (await this.checkPermissionsAsync()).granted\r\n      if (!permissionsGranted) await Notifications.requestPermissionsAsync()\r\n\r\n      console.log(`[Local Notifications] permissions granted: ${permissionsGranted}`)\r\n    }\r\n\r\n    console.log(\"local notifications service initialized\")\r\n  }\r\n\r\n  async registerNotificationsChannel() {\r\n    if (Platform.OS === \"android\") {\r\n      // delete default notification channel that expo creates for you\r\n      await Notifications.deleteNotificationChannelAsync(\"default\")\r\n\r\n      Notifications.setNotificationChannelAsync(this.notificationChannelId, {\r\n        name: \"Сповіщення про початок пари\",\r\n        importance: Notifications.AndroidImportance.MAX,\r\n        vibrationPattern: [0, 250, 250, 250],\r\n        lightColor: \"#FF231F7C\",\r\n        lockscreenVisibility: Notifications.AndroidNotificationVisibility.PUBLIC,\r\n      })\r\n    }\r\n  }\r\n\r\n  async sendNotification(content: Notifications.NotificationContentInput) {\r\n    const message: Notifications.NotificationRequestInput = {\r\n      identifier: this.notificationChannelId,\r\n      content: {\r\n        ...content,\r\n        priority: \"high\",\r\n      },\r\n      // I have to set seconds to 1, otherwise the notification is not shown.\r\n      // I don't know whether it's a bug or something else\r\n      trigger: {\r\n        seconds: 1,\r\n        channelId: this.notificationChannelId,\r\n      },\r\n    }\r\n\r\n    Notifications.scheduleNotificationAsync(message).catch((e) => {\r\n      console.error(\"error while sending notification\")\r\n      console.log(\"...this is the notification that was supposed to be sent:\")\r\n      console.log(message)\r\n    })\r\n  }\r\n\r\n  async scheduleNotification(\r\n    content: Notifications.NotificationContentInput,\r\n    trigger: Notifications.NotificationTriggerInput\r\n  ) {\r\n    // TODO: narrow down types\r\n    if (trigger == null || typeof trigger != \"object\") {\r\n      throw new Error(\"trigger is not an object\")\r\n    }\r\n\r\n    // TODO: pass channel id to trigger\r\n\r\n    // random unique identifier will be generated if not specified\r\n    const notificationId = undefined\r\n\r\n    const message: Notifications.NotificationRequestInput = {\r\n      identifier: notificationId,\r\n      content: {\r\n        ...content,\r\n        priority: \"high\",\r\n      },\r\n      trigger: trigger,\r\n    }\r\n\r\n    const nextTriggerDate = await Notifications.getNextTriggerDateAsync(trigger)\r\n    const now = new Date()\r\n\r\n    if (nextTriggerDate == null && trigger.date >= now) {\r\n      throw new Error(\"nextTriggerDate is null for this notification: \" + trigger.date)\r\n    }\r\n\r\n    Notifications.scheduleNotificationAsync(message)\r\n  }\r\n\r\n  // - - - methods for testing - - -\r\n  // TODO: move to separate class\r\n\r\n  async sendExampleNotification() {\r\n    this.sendNotification(this.exampleNotificationContent)\r\n  }\r\n\r\n  async scheduleExampleNotificationViaDate(secondsFromNow = 5) {\r\n    const trigger: Notifications.NotificationTriggerInput = {\r\n      date: new Date(Date.now() + secondsFromNow * 1000),\r\n      channelId: this.notificationChannelId,\r\n    }\r\n\r\n    this.scheduleNotification(this.exampleNotificationContent, trigger)\r\n  }\r\n\r\n  async scheduleRepeatableExampleNotification() {\r\n    const trigger: Notifications.NotificationTriggerInput = {\r\n      seconds: 5,\r\n      repeats: true,\r\n      channelId: this.notificationChannelId,\r\n    }\r\n\r\n    this.scheduleNotification(this.exampleNotificationContent, trigger)\r\n  }\r\n\r\n  async scheduleRepeatableDailyExampleNotification() {\r\n    const trigger: Notifications.DailyTriggerInput = {\r\n      hour: 14,\r\n      minute: 41,\r\n      repeats: true,\r\n      channelId: this.notificationChannelId,\r\n    }\r\n\r\n    this.scheduleNotification(this.exampleNotificationContent, trigger)\r\n  }\r\n}\r\n","export enum Event {\r\n  SETTINGS_UPDATED = \"settings updated\",\r\n}\r\n","import AsyncStorage from \"@react-native-async-storage/async-storage\"\r\nimport EventEmitter from \"events\"\r\nimport ScheduleLoaderService from \"../ScheduleLoaderService/ScheduleLoaderService\"\r\nimport Constants from \"expo-constants\"\r\nimport * as Notifications from \"expo-notifications\"\r\nimport * as IntentLauncher from \"expo-intent-launcher\"\r\nimport { NOTIFICATIONS_CHANNEL_ID } from \"../../constants/Constants\"\r\nimport { STORAGE_KEY } from \"../../constants/Keys\"\r\nimport { Event } from \"../../constants/Events\"\r\nimport { ISettingsService, DisplayEmptyDaysMode, DisplayTeacherMode, ScheduleAppSettings } from \"./Types\"\r\n\r\n// update place 2 for new setting\r\n// as of now in order to add a new setting you have to modify 2 places\r\n// that doesn't sound great.\r\n// make sure you start with ScheduleAppSettings type\r\n\r\n/**\r\n * Represents a service for managing settings in the application.\r\n * Loads and saves settings to async storage. Provides a way to subscribe to settings change event.\r\n */\r\nexport default class SettingsService implements ISettingsService {\r\n  displayEmptyDays: DisplayEmptyDaysMode = DisplayEmptyDaysMode.Display\r\n  currentScheduleName = \"\" // Object.keys(scheduleFilesJSON)[0] // this has to match the name of the file in assets/schedules\r\n  notifyBeforeClass = true\r\n  notifyBeforeClassOffsetMinutes = 0\r\n  displayRoomNumber = true\r\n  displayTeacherName = DisplayTeacherMode.Full\r\n  // displayEmptyRows = true\r\n\r\n  private static instance: SettingsService\r\n\r\n  SettingsEventEmitter: EventEmitter = new EventEmitter()\r\n\r\n  static async GetInstance(): Promise<SettingsService> {\r\n    if (!SettingsService.instance) {\r\n      SettingsService.instance = new SettingsService()\r\n      await SettingsService.instance.init()\r\n      console.log(\"settings service instance constructed successfully\")\r\n    }\r\n\r\n    return SettingsService.instance\r\n  }\r\n\r\n  private async init() {\r\n    // get first schedule from ScheduleLoaderService and use it as default\r\n\r\n    const scheduleLoader = await ScheduleLoaderService.GetInstance()\r\n    this.currentScheduleName = scheduleLoader.scheduleFiles[0].filename\r\n\r\n    const fetchedSettings = await this.readFromStorage()\r\n    if (!fetchedSettings) return\r\n\r\n    // gotta make sure that each and every property is set\r\n\r\n    console.log(\"[SettingsService] fetched settings:\")\r\n    console.log(fetchedSettings)\r\n\r\n    console.log(\"settings fetched. Populating properties...\")\r\n    for (const [key, value] of Object.entries(fetchedSettings)) {\r\n      console.log(`🛠 [Fetched settings] ${key}: ${value}`)\r\n      const key_ = key as keyof ScheduleAppSettings\r\n      ;(this[key_] as any) = value\r\n    }\r\n\r\n    console.log(`[SettingsService] current schedule name: ${this.currentScheduleName}`)\r\n    if (this.currentScheduleName == \"\" || this.currentScheduleName == \".json\") {\r\n      console.log(\"current schedule name is empty. setting it to default...\")\r\n      this.currentScheduleName = scheduleLoader.scheduleFiles[0].filename\r\n    }\r\n\r\n    // TODO: remove this before next publish\r\n    this.SettingsEventEmitter = new EventEmitter()\r\n  }\r\n\r\n  // TODO: move all settings to separate object\r\n  constructSettingsObjectFromProperties(): ScheduleAppSettings {\r\n    const settingsObject = { ...this }\r\n\r\n    // exclude event emitter from settings object\r\n\r\n    delete settingsObject.SettingsEventEmitter\r\n\r\n    return settingsObject\r\n  }\r\n\r\n  // TODO: Refactor\r\n  // \"settings updated\" event should be emmitted every time they're updated, but not necessarily saved to storage\r\n  async saveToStorage() {\r\n    try {\r\n      const settingsObject = this.constructSettingsObjectFromProperties()\r\n      const jsonValue = JSON.stringify(settingsObject)\r\n      await AsyncStorage.setItem(STORAGE_KEY, jsonValue)\r\n\r\n      this.SettingsEventEmitter.emit(Event.SETTINGS_UPDATED, this)\r\n    } catch (e) {\r\n      // saving error\r\n      console.error(e)\r\n    }\r\n  }\r\n\r\n  async readFromStorage(): Promise<ScheduleAppSettings | null> {\r\n    try {\r\n      console.log(\"trying to read settings from storage... storage key is: \", STORAGE_KEY)\r\n      const jsonValue = await AsyncStorage.getItem(STORAGE_KEY)\r\n      return jsonValue != null ? JSON.parse(jsonValue) : null\r\n    } catch (e) {\r\n      console.log(\"failed to parse whatever was read from settings. returning null...\")\r\n      // error reading value\r\n      console.error(e)\r\n      return null\r\n    }\r\n  }\r\n\r\n  async openAndroidSystemSettingsForNotifications() {\r\n    // const pkg = Constants.manifest.android.package\r\n    const pkg = Constants.expoConfig.android.package\r\n\r\n    const channel = await Notifications.getNotificationChannelAsync(NOTIFICATIONS_CHANNEL_ID)\r\n    const allChannels = await Notifications.getNotificationChannelsAsync()\r\n    console.log(\"[Notification Tests] All channels of this app: \")\r\n    console.log(allChannels)\r\n    console.log(\"[Notification Tests] Channel id for main channel: \" + channel?.id)\r\n\r\n    // TODO: fix expo go notification settings not opening when the code is running in expo go\r\n\r\n    IntentLauncher.startActivityAsync(\"android.settings.CHANNEL_NOTIFICATION_SETTINGS\", {\r\n      // data: \"package:\" + pkg,\r\n      extra: {\r\n        \"android.provider.extra.CHANNEL_ID\": pkg == \"host.exp.exponent\" ? \"expo-experience\" : NOTIFICATIONS_CHANNEL_ID,\r\n        \"android.provider.extra.APP_PACKAGE\": pkg,\r\n      },\r\n    })\r\n  }\r\n}\r\n","import { DateTriggerInput, NotificationContentInput, WeeklyTriggerInput } from \"expo-notifications\"\r\nimport ScheduleModel from \"../models/ScheduleModel/ScheduleModel\"\r\nimport { ScheduleDay } from \"../models/ScheduleDay/ScheduleDay\"\r\nimport { ScheduleClass } from \"../models/ScheduleClass/ScheduleClass\"\r\nimport GetWeekType from \"../utilities/getWeekType\"\r\nimport { createEvenlySpacedTimeSequence, setDayOnDate } from \"../utilities/utilities\"\r\nimport LocalNotificationsService from \"./LocalNotificationsService/LocalNotificationsService\"\r\nimport { REGLAMENT_DATA, SEMESTER_MONTHS } from \"../constants/Constants\"\r\nimport TeacherModel from \"../models/TeacherModel/TeacherModel\"\r\n\r\nexport default class ClassNotificationBuilder {\r\n  signature: string\r\n\r\n  hour: number\r\n  minute: number\r\n\r\n  notificationsService: LocalNotificationsService\r\n  schedule: ScheduleModel\r\n  class_: ScheduleClass\r\n\r\n  teachersTable = TeacherModel.GetInstance()\r\n\r\n  constructor(\r\n    schedule: ScheduleModel,\r\n    class_: ScheduleClass,\r\n    notificationsService: LocalNotificationsService,\r\n    negativeOffsetInMins: number\r\n  ) {\r\n    this.notificationsService = notificationsService\r\n\r\n    this.schedule = schedule\r\n    this.class_ = class_\r\n\r\n    this.signature = class_.getUniqueStringSignature()\r\n\r\n    // use reglament to determine hour and minute\r\n    const hourAndMinute = REGLAMENT_DATA[class_.index - 1][1]\r\n\r\n    this.hour = parseInt(hourAndMinute.split(\":\")[0])\r\n    this.minute = parseInt(hourAndMinute.split(\":\")[1])\r\n\r\n    this.minute -= negativeOffsetInMins\r\n    if (this.minute < 0) {\r\n      this.minute += 60\r\n      this.hour -= 1\r\n    }\r\n  }\r\n\r\n  // TODO: split this method into two separate methods\r\n  // eslint-disable-next-line max-lines-per-function\r\n  constructBiweeklyNotificationsSequence(scheduleDay: ScheduleDay) {\r\n    // we need to generate lots of periodic biweekly notifications. Here a period is two weeks\r\n    // we need approx this number of notifications: n of months in semester * 2. n of months in semester = ~6\r\n\r\n    // construct notification date\r\n    const now = new Date()\r\n\r\n    const monthDay = now.getDate()\r\n    let notificationDate = new Date(now.getFullYear(), now.getMonth(), monthDay, this.hour, this.minute)\r\n    notificationDate = setDayOnDate(notificationDate, this.schedule.dayNames.indexOf(scheduleDay.name))\r\n\r\n    // construct future notification dates\r\n    const twoWeeksInSeconds = 60 * 60 * 24 * 7 * 2\r\n    // add additional week of offset if week types don't match. It's important to add 1 to week type enum returned by GetWeekType() because it's 0-indexed\r\n    const offset = GetWeekType() + 1 == this.class_.week ? 0 : twoWeeksInSeconds / 2\r\n    const offsetInMillis = offset * 1000\r\n    notificationDate = new Date(offsetInMillis + notificationDate.getTime())\r\n\r\n    const notificationDates = createEvenlySpacedTimeSequence(SEMESTER_MONTHS * 2, twoWeeksInSeconds, notificationDate)\r\n\r\n    // construct future notification objects for expo-notifications\r\n    const notificationObjects = notificationDates.map((notifDate) => {\r\n      const trigger: DateTriggerInput = {\r\n        date: notifDate,\r\n        channelId: this.notificationsService.notificationChannelId,\r\n      }\r\n\r\n      // format teacher name\r\n      let teacherName = this.class_.teacher\r\n      if (teacherName) {\r\n        teacherName =\r\n          typeof teacherName == \"string\" ? this.teachersTable.getFullNameBySurname(teacherName) : teacherName.join(\", \")\r\n      } else {\r\n        teacherName = \"\"\r\n      }\r\n\r\n      // pad hour and minute with 0 if they consist of only one digit\r\n      const hourPadded = this.hour < 10 ? \"0\" + this.hour : this.hour\r\n      const minutePadded = this.minute < 10 ? \"0\" + this.minute : this.minute\r\n\r\n      // construct notification object that will be passed to expo-notifications\r\n      const content: NotificationContentInput = {\r\n        title: this.class_.name,\r\n        body: teacherName,\r\n        subtitle: `[${hourPadded}:${minutePadded}] Пара починається`,\r\n      }\r\n\r\n      return { content: content, trigger: trigger }\r\n    })\r\n\r\n    return notificationObjects\r\n  }\r\n\r\n  constructWeeklyNotification(scheduleDay: ScheduleDay) {\r\n    // construct trigger object that will be passed to expo-notifications\r\n    const trigger: WeeklyTriggerInput = {\r\n      weekday: this.schedule.dayNames.indexOf(scheduleDay.name) + 1, // why do we add + 1 here? because weekday is 1-indexed, but dayNames is 0-indexed\r\n      hour: this.hour,\r\n      minute: this.minute,\r\n\r\n      repeats: true,\r\n      channelId: this.notificationsService.notificationChannelId,\r\n    }\r\n\r\n    // format teacher name\r\n    let teacherName = this.class_.teacher\r\n    if (teacherName) {\r\n      teacherName =\r\n        typeof teacherName == \"string\" ? this.teachersTable.getFullNameBySurname(teacherName) : teacherName.join(\", \")\r\n    } else {\r\n      teacherName = \"\"\r\n    }\r\n\r\n    // pad hour and minute with 0 if they consist of only one digit\r\n    const hourPadded = this.hour < 10 ? \"0\" + this.hour : this.hour\r\n    const minutePadded = this.minute < 10 ? \"0\" + this.minute : this.minute\r\n\r\n    // construct notification object that will be passed to expo-notifications\r\n    const weeklyNotif = {\r\n      content: {\r\n        title: this.class_.name,\r\n        body: teacherName,\r\n        subtitle: `[${hourPadded}:${minutePadded}] Пара починається`,\r\n      },\r\n      trigger: trigger,\r\n    }\r\n\r\n    return weeklyNotif\r\n  }\r\n}\r\n","import ScheduleModel from \"../models/ScheduleModel/ScheduleModel\"\r\nimport LocalNotificationsService from \"./LocalNotificationsService/LocalNotificationsService\"\r\nimport SettingsService from \"./SettingsService/SettingsService\"\r\nimport ClassNotificationBuilder from \"./ClassNotificationBuilder\"\r\nimport { isRunningInBrowser } from \"../utilities/utilities\"\r\n\r\n// TODO: Read about override keyword in TypeScript\r\n\r\n//\r\n/**\r\n * Singleton service. Main function is constructing and registering notifications for entire schedule.\r\n */\r\nexport default class ScheduleNotificationsService extends LocalNotificationsService {\r\n  onConfigureNotificationsForScheduleStart: null | (() => void) = null\r\n  onConfigureNotificationsForScheduleEnd: null | (() => void) = null\r\n\r\n  protected static instance: ScheduleNotificationsService\r\n\r\n  static async GetInstance(): Promise<ScheduleNotificationsService> {\r\n    if (!this.instance) {\r\n      this.instance = new ScheduleNotificationsService()\r\n      await this.instance.init()\r\n      console.log(`[${this.name}] service instance constructed successfully`)\r\n    }\r\n\r\n    return this.instance\r\n  }\r\n\r\n  // TODO split the function\r\n  // eslint-disable-next-line max-lines-per-function\r\n  async configureNotificationsForSchedule(schedule: ScheduleModel) {\r\n    console.log(`[configure notifications] configuring notifications for schedule ${schedule.name}`)\r\n    this.onConfigureNotificationsForScheduleStart?.call(this)\r\n\r\n    // get notifications service and settings service\r\n    const notificationsService = await LocalNotificationsService.GetInstance()\r\n    const settingsService = await SettingsService.GetInstance()\r\n\r\n    // check whether notifications are enabled\r\n    if (!isRunningInBrowser() && settingsService.notifyBeforeClass) {\r\n      // if notifications are enabled, then schedule notifications for each class\r\n      // make sure to not register duplicate notifications by either checking for duplicates or deleting all notifications before setting any\r\n      await notificationsService.cancelAllScheduledNotificationsAsync()\r\n\r\n      const configureDays = schedule.scheduleDays.map(async (day) => {\r\n        const configureDayClasses = day.classes.map(async (class_) => {\r\n          const notifBuilder = new ClassNotificationBuilder(\r\n            schedule,\r\n            class_,\r\n            notificationsService,\r\n            settingsService.notifyBeforeClassOffsetMinutes\r\n          )\r\n\r\n          if (class_.isBiweekly) {\r\n            const notifications = notifBuilder.constructBiweeklyNotificationsSequence(day)\r\n\r\n            await Promise.all(\r\n              notifications.map((notif) => {\r\n                return notificationsService.scheduleNotification(notif.content, notif.trigger)\r\n              })\r\n            )\r\n          } else {\r\n            const weeklyNotif = notifBuilder.constructWeeklyNotification(day)\r\n\r\n            return await notificationsService.scheduleNotification(weeklyNotif.content, weeklyNotif.trigger)\r\n          }\r\n        })\r\n\r\n        await Promise.all(configureDayClasses)\r\n      })\r\n\r\n      await Promise.all(configureDays)\r\n    }\r\n\r\n    this.onConfigureNotificationsForScheduleEnd?.call(this)\r\n  }\r\n}\r\n","export enum EditorStackRoutes {\r\n  EDITOR = \"Editor\",\r\n  SCHEDULE_CLASS_FORM = \"ScheduleClassForm\",\r\n}\r\n","export const NoClassesText = [\r\n  \"Пар немає\",\r\n  \"Чудовий день (бо пар нема)\",\r\n  \"Просили передати, що пар не буде\",\r\n  \"Пар не буде, сьогодні чілимо\",\r\n  \"Академ. вихідний\",\r\n]\r\n","import { StyleSheet } from \"react-native\"\r\n\r\nimport { FontName } from \"../../../constants/Fonts\"\r\nimport { palette, globalStyles } from \"../../../styles/global\"\r\n\r\nexport const SDstyles = StyleSheet.create({\r\n  noClassesText: {\r\n    fontSize: 14,\r\n    marginVertical: 10,\r\n    justifyContent: \"center\",\r\n    alignSelf: \"center\",\r\n\r\n    fontFamily: FontName.Montserrat600,\r\n\r\n    color: palette.grayedOut,\r\n  },\r\n\r\n  fadedDayContainerView: {\r\n    opacity: 0.5,\r\n  },\r\n\r\n  dayNameHeader: {\r\n    fontFamily: FontName.Montserrat600,\r\n    fontSize: 14,\r\n    ...globalStyles.sectionHeader,\r\n    color: palette.text,\r\n  },\r\n\r\n  scheduleDayCard: {\r\n    marginTop: 5,\r\n    marginBottom: 15,\r\n    marginHorizontal: 5,\r\n    borderRadius: 6,\r\n    backgroundColor: \"white\",\r\n\r\n    paddingVertical: 2,\r\n    paddingHorizontal: 5,\r\n\r\n    elevation: 1,\r\n    shadowOffset: { width: 1, height: 1 },\r\n    shadowColor: \"#333\",\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 2,\r\n  },\r\n\r\n  row: {\r\n    flexDirection: \"row\",\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: 15,\r\n  },\r\n})\r\n","import React, { useCallback, useContext, useEffect, useRef, useState } from \"react\"\r\nimport { Text, View, ActivityIndicator } from \"react-native\"\r\nimport { globalStyles, palette } from \"../../../styles/global\"\r\nimport { ScheduleClassFields } from \"../../../models/ScheduleClass/Types\"\r\nimport { ScheduleClass } from \"../../../models/ScheduleClass/ScheduleClass\"\r\nimport _ from \"lodash\"\r\nimport ScheduleClassComponent from \"../ScheduleClassComponent/ScheduleClass\"\r\nimport Separator from \"../../shared/Separator\"\r\nimport GetWeekType from \"../../../utilities/getWeekType\"\r\nimport { FlatList, TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport { useNavigation } from \"@react-navigation/native\"\r\n// import SwipeableItem from \"react-native-swipeable-item\"\r\nimport SwipeableItem from \"../../shared/SwipeableItem/SwipeableItem\"\r\n\r\nimport UnderlayRightSide from \"../../ScheduleEditorComponents/ScheduleClassUnderlay\"\r\nimport DraggableFlatList from \"react-native-draggable-flatlist\"\r\nimport AppText from \"../../shared/AppText\"\r\nimport { mapUkrWorkDayToEnWorkDay } from \"../../../constants/Days\"\r\nimport ScheduleLoaderService from \"../../../services/ScheduleLoaderService/ScheduleLoaderService\"\r\nimport ScheduleNotificationsService from \"../../../services/ScheduleNotificationsService\"\r\nimport SettingsService from \"../../../services/SettingsService/SettingsService\"\r\nimport { DisplayEmptyDaysMode } from \"../../../services/SettingsService/Types\"\r\nimport { EditorStackRoutes } from \"../../../routes/EditorStackRoutes\"\r\nimport { SettingsContext } from \"../../../contexts/settingsContext\"\r\nimport { NoClassesText } from \"../../../constants/Descriptions\"\r\nimport { SDstyles } from \"./Styles\"\r\nimport { MAX_CLASSES_PER_DAY } from \"../../../constants/Constants\"\r\nimport { ScheduleDayComponentProps } from \"./Types\"\r\n\r\n// TODO: accelerate disengage time once an item gets dropped into new slot\r\n\r\nexport default function ScheduleDayComponent({\r\n  classesCollection,\r\n  scheduleObject,\r\n  dayName,\r\n  scheduleDay,\r\n  displayRoomNumber,\r\n  weekType = GetWeekType(),\r\n  fade,\r\n  isEditable = false,\r\n}: ScheduleDayComponentProps): JSX.Element {\r\n  if (scheduleDay == undefined) {\r\n    // if schedule day is not loaded yet, display loading indicator\r\n    return (\r\n      <View style={SDstyles.scheduleDayCard}>\r\n        <Text>{dayName}</Text>\r\n        <View>\r\n          <View style={globalStyles.centered}>\r\n            <ActivityIndicator size=\"large\" color={palette.navigationBackground} />\r\n          </View>\r\n        </View>\r\n      </View>\r\n    )\r\n  }\r\n\r\n  const settings = useContext(SettingsContext)\r\n\r\n  const configureNotificationsCallback = useCallback(\r\n    // debounce to prevent multiple calls in short period of time\r\n    _.debounce(async (updatedSchedule) => {\r\n      const scheduleNotificationService = await ScheduleNotificationsService.GetInstance()\r\n      scheduleNotificationService.configureNotificationsForSchedule(updatedSchedule)\r\n    }, 3000),\r\n    []\r\n  )\r\n\r\n  const navigation = useNavigation()\r\n\r\n  const [classes, setClasses] = useState<ScheduleClass[]>([])\r\n  const dayNameEnRef = useRef(mapUkrWorkDayToEnWorkDay(dayName).toLowerCase())\r\n\r\n  /**\r\n   * Saves edited classes to the schedule\r\n   * @param classes\r\n   */\r\n  function saveEditedClasses(classes: ScheduleClass[]) {\r\n    console.log(\"saving edited classes\")\r\n    const updatedSchedule = scheduleObject\r\n    const classesWithoutPlaceholders = classes.filter((class_) => !class_.isSampleClass())\r\n\r\n    const thisDay = updatedSchedule.scheduleDays.find((day) => day.name == dayNameEnRef.current)\r\n    // construct new classes array with classes of other week preserved\r\n\r\n    const biweeklyClassesOfOtherWeek = thisDay!.classes.filter(\r\n      (class_) => class_.isBiweekly && class_.week != weekType + 1\r\n    )\r\n\r\n    thisDay!.classes = [...classesWithoutPlaceholders, ...biweeklyClassesOfOtherWeek]\r\n\r\n    ScheduleLoaderService.GetInstance().then((instance) => {\r\n      instance.dumpSchedule(updatedSchedule)\r\n    })\r\n\r\n    SettingsService.GetInstance().then((instance) => {\r\n      if (instance.notifyBeforeClass) {\r\n        configureNotificationsCallback(updatedSchedule)\r\n      }\r\n    })\r\n  }\r\n\r\n  // any time new updated classes collection prop is passed, add placeholders to it and update state\r\n  // it also initializes classes state on first render\r\n  useEffect(() => {\r\n    const placeholderClasses = addPlaceholders(classesCollection)\r\n    // sort by index in ascending order\r\n    const sortedClasses = _.sortBy(placeholderClasses, (class_) => class_.index)\r\n\r\n    setClasses(sortedClasses)\r\n  }, [classesCollection])\r\n\r\n  useEffect(() => {\r\n    console.log(\"mounting schedule day component\")\r\n  }, [])\r\n\r\n  /**\r\n   * Pads classes array with placeholder classes in order to have MAX_CLASSES_PER_DAY classes total for editing purposes.\r\n   */\r\n  function addPlaceholders(classes: ScheduleClass[]) {\r\n    if (!isEditable) {\r\n      return classes\r\n    }\r\n\r\n    let extendedContainer: ScheduleClass[] = new Array(MAX_CLASSES_PER_DAY).fill(undefined)\r\n    extendedContainer = extendedContainer.map((_, idx) => {\r\n      const class_ = classes.find((class_) => class_.index == idx + 1)\r\n      const shouldCreatePlaceholderClass = class_ == undefined\r\n\r\n      if (shouldCreatePlaceholderClass) {\r\n        return ScheduleClass.GetPlaceholder(dayNameEnRef.current, idx + 1, (weekType + 1) as 1 | 2)\r\n      } else {\r\n        return class_\r\n      }\r\n    })\r\n\r\n    return extendedContainer\r\n  }\r\n\r\n  // flat list doesn't suppress scroll events while nested inside ScrollView. Flat list is preferrable if component is not editable\r\n  const ListComponent = isEditable ? DraggableFlatList : FlatList\r\n\r\n  return (\r\n    <View key={dayName + weekType}>\r\n      <Text style={SDstyles.dayNameHeader}>{dayName}</Text>\r\n      <View\r\n        style={[\r\n          SDstyles.scheduleDayCard,\r\n          classes.length == 0 && settings?.displayEmptyDays == DisplayEmptyDaysMode.Darken\r\n            ? SDstyles.fadedDayContainerView\r\n            : {},\r\n        ]}\r\n      >\r\n        <ListComponent\r\n          data={classes}\r\n          keyExtractor={(item) => item.index + \"\" + item.week}\r\n          onDragEnd={({ data }) => {\r\n            // reindex\r\n            data = data.map((class_, idx) => {\r\n              class_.index = idx + 1\r\n              return class_\r\n            })\r\n\r\n            // TODO: Refactor into one function\r\n            setClasses(data)\r\n            saveEditedClasses(data)\r\n          }}\r\n          ListEmptyComponent={() => {\r\n            return (\r\n              <AppText style={SDstyles.noClassesText} testID=\"noClassesText\">\r\n                {_.sample(NoClassesText)}\r\n              </AppText>\r\n            )\r\n          }}\r\n          scrollEnabled={false}\r\n          nestedScrollEnabled={false}\r\n          ItemSeparatorComponent={() => {\r\n            return <Separator width=\"97%\" color=\"rgba(217, 217, 217, 0.4)\" upperElement={true} lowerElement={true} /> // TODO: Refactor\r\n          }}\r\n          // @ts-ignore\r\n          renderItem={({ item, drag, isActive }) => {\r\n            const class_ = item\r\n            const idx = item.index - 1\r\n\r\n            // normal class component\r\n            const scheduleClassComponent = (\r\n              <ScheduleClassComponent\r\n                displayRoomNumber={displayRoomNumber}\r\n                idx={idx}\r\n                key={idx + \"\" + class_.week}\r\n                scheduleClassInstance={class_}\r\n                isEditable={isEditable}\r\n                highlightAsOngoing={isActive}\r\n              />\r\n            )\r\n\r\n            const onDeleteButtonPressed = () => {\r\n              const filteredClasses = classes.filter((class_) => class_.index != idx + 1)\r\n              const filteredClassesWithPlaceholders = addPlaceholders(filteredClasses)\r\n              setClasses(filteredClassesWithPlaceholders)\r\n              saveEditedClasses(filteredClassesWithPlaceholders)\r\n            }\r\n\r\n            // editable class component\r\n            const editableScheduleClassWrapper = (\r\n              <SwipeableItem\r\n                key={idx + \"\" + class_.week}\r\n                // item={item}\r\n                renderUnderlayLeft={() => (\r\n                  <UnderlayRightSide\r\n                    onDeleteButtonPress={() => {\r\n                      onDeleteButtonPressed()\r\n                    }}\r\n                  />\r\n                )}\r\n                // renderUnderlayRight={() => <UnderlayLeft />}\r\n                snapPointsLeft={[50]} // snap points for right side underlay\r\n                snapPointsRight={[0]} // disable left side underlay\r\n                activationThreshold={10}\r\n              >\r\n                <TouchableOpacity\r\n                  onPress={(e) => {\r\n                    navigation.push(EditorStackRoutes.SCHEDULE_CLASS_FORM, {\r\n                      scheduleClass: class_,\r\n                      currentlyViewedWeek: weekType,\r\n                      onFormDataUpdated: (values: ScheduleClassFields) => {\r\n                        let updatedClasses = classes.map((class_) => {\r\n                          // get class associated with this component\r\n                          if (class_.index == idx + 1) {\r\n                            // process the values\r\n                            const teacher = values.teacher.split(\",\").map((t: string) => t.trim())\r\n                            const room = values.room.split(\",\").map((r: string) => r.trim())\r\n                            const isBiweekly =\r\n                              typeof values.isBiweekly == \"string\" ? JSON.parse(values.isBiweekly) : values.isBiweekly\r\n\r\n                            const wasBiweekly = class_.isBiweekly\r\n\r\n                            // if class wasn't biweekly and now it is, update week to currently viewed week\r\n                            if (!wasBiweekly && isBiweekly) {\r\n                              console.log(\"wasn't biweekly and now it is\")\r\n                              console.log(\"new weekType will be:\", weekType + 1)\r\n                              class_.isBiweekly = isBiweekly\r\n\r\n                              class_.setWeek((weekType + 1) as 1 | 2)\r\n                            }\r\n\r\n                            return new ScheduleClass(\r\n                              { ...class_, ...values, teacher, room, isBiweekly },\r\n                              dayNameEnRef.current\r\n                            )\r\n                          } else {\r\n                            return class_\r\n                          }\r\n                        })\r\n\r\n                        // assume that if user completely erases class name, the intent is to delete the class completely. In this case, replace the class with a placeholder\r\n                        updatedClasses = updatedClasses.map((class_) => {\r\n                          if (class_.name == \"\") {\r\n                            return ScheduleClass.GetPlaceholder(class_.day, class_.index, class_.week)\r\n                          } else {\r\n                            return class_\r\n                          }\r\n                        })\r\n\r\n                        setClasses(updatedClasses)\r\n                        saveEditedClasses(updatedClasses)\r\n                      },\r\n                    })\r\n                  }}\r\n                  onLongPress={drag}\r\n                >\r\n                  {scheduleClassComponent}\r\n                </TouchableOpacity>\r\n              </SwipeableItem>\r\n            )\r\n\r\n            return <View>{isEditable ? editableScheduleClassWrapper : scheduleClassComponent}</View>\r\n          }}\r\n        />\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n","import GetWeekType from \"../../utilities/getWeekType\"\r\nimport { ScheduleClass } from \"../ScheduleClass/ScheduleClass\"\r\nimport { IScheduleClass } from \"../ScheduleClass/Types\"\r\nimport { IScheduleDay } from \"./Types\"\r\n\r\nexport class ScheduleDay implements IScheduleDay {\r\n  classes: ScheduleClass[]\r\n  name: string\r\n\r\n  constructor(name: string, classes: IScheduleClass[]) {\r\n    this.classes = classes.map((class_) => new ScheduleClass(class_, name))\r\n    this.name = name\r\n  }\r\n\r\n  getCurrentWeekClasses(): ScheduleClass[] {\r\n    const currentWeekType = GetWeekType() + 1\r\n    const currentWeekClasses = this.classes.filter((class_) => !class_.isBiweekly || class_.week == currentWeekType)\r\n    return currentWeekClasses\r\n  }\r\n\r\n  // пари по чисельнику\r\n  getNominatorClasses(): ScheduleClass[] {\r\n    const nominatorClasses = this.classes.filter((class_) => !class_.isBiweekly || class_.week == 1)\r\n    return nominatorClasses\r\n  }\r\n\r\n  // пари по знаменнику\r\n  getDenominatorClasses(): ScheduleClass[] {\r\n    const denominatorClasses = this.classes.filter((class_) => !class_.isBiweekly || class_.week == 2)\r\n    return denominatorClasses\r\n  }\r\n\r\n  getMatchingClassOfOtherWeek(class_: ScheduleClass) {\r\n    if (!class_.isBiweekly) return null\r\n\r\n    const otherWeek = class_.week == 1 ? 2 : 1\r\n    const index = class_.index\r\n\r\n    const matchingClass = this.classes.find((class_) => class_.index == index && class_.week == otherWeek) ?? null\r\n\r\n    return matchingClass\r\n  }\r\n}\r\n","import { ensureNoExtension } from \"../../utilities/utilities\"\r\nimport ScheduleLoaderService from \"../../services/ScheduleLoaderService/ScheduleLoaderService\"\r\nimport EditedSchedulesStorageService from \"../../services/EditedScheduleStorageService/EditedScheduleStorageService\"\r\nimport { ScheduleClass } from \"../ScheduleClass/ScheduleClass\"\r\nimport { IScheduleClass } from \"../ScheduleClass/Types\"\r\nimport { ScheduleDay } from \"../ScheduleDay/ScheduleDay\"\r\nimport { IScheduleModel, ScheduleDaysJson } from \"./Types\"\r\n\r\nexport default class ScheduleModel implements IScheduleModel {\r\n  name: string\r\n  specialtyName: string\r\n  year: number\r\n\r\n  // TODO: move to constants\r\n  dayNames = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"].map((day) =>\r\n    day.toLowerCase()\r\n  )\r\n  weekendDays = [\"saturday\", \"sunday\"]\r\n  // eslint-disable-next-line no-array-constructor -- won't get same type hints with []\r\n  scheduleDays = new Array<ScheduleDay>()\r\n\r\n  constructor(name: string, specialtyName: string, year: number) {\r\n    this.name = name\r\n    this.specialtyName = specialtyName\r\n    this.year = year\r\n  }\r\n\r\n  setSchedule(data: ScheduleDaysJson) {\r\n    // console.log(\"[Schedule Model] processing raw schedule data \", data)\r\n\r\n    console.log(`[Schedule Model] setting schedule from the object:`)\r\n    console.log(data)\r\n\r\n    this.dayNames.forEach((day) => {\r\n      if (this.weekendDays.includes(day)) return\r\n\r\n      const dayClasses: IScheduleClass[] = data[day].classes\r\n      const scheduleDay = new ScheduleDay(day, dayClasses)\r\n      this.scheduleDays.push(scheduleDay)\r\n    })\r\n\r\n    console.log(\"[Schedule Model] loaded schedule from imported object\")\r\n  }\r\n\r\n  loadScheduleFromJSONFile() {}\r\n  loadScheduleFromImportedObject(objectName: string) {\r\n    throw new Error(\"Method not supported.\")\r\n  }\r\n\r\n  async getScheduleFromScheduleLoader(scheduleFileName: string) {\r\n    const scheduleLoader = await ScheduleLoaderService.GetInstance()\r\n    const scheduleFile = scheduleLoader.scheduleFiles.find((file) => file.filename.startsWith(scheduleFileName))\r\n\r\n    if (!scheduleFile) {\r\n      console.log(`[Schedule Model] schedule file ${scheduleFileName} not found`)\r\n      // TODO: move out of the model and to UI\r\n      // ToastAndroid.show(\"Не вдалось завантажити розклад\", ToastAndroid.SHORT)\r\n\r\n      return\r\n    }\r\n\r\n    this.name = ensureNoExtension(scheduleFile.filename, \".json\")\r\n\r\n    console.log(`[Schedule Model] loading schedule from Schedule Loader: ${this.name}`)\r\n\r\n    // @ts-expect-error\r\n    const data: ScheduleDaysJson = scheduleFile.json_parsed\r\n\r\n    this.setSchedule(data)\r\n  }\r\n\r\n  async getScheduleFromEditedSchedulesStorage(scheduleFileName: string) {\r\n    const editedScheduleService = await EditedSchedulesStorageService.GetInstance()\r\n    const schedule = await editedScheduleService.loadEditedSchedule(scheduleFileName)\r\n\r\n    if (!schedule) {\r\n      console.log(`[Schedule Model] schedule file ${scheduleFileName} not found`)\r\n      return\r\n    }\r\n\r\n    this.name = ensureNoExtension(schedule.metadata.filename, \".json\")\r\n    this.setSchedule(schedule.scheduleDays)\r\n  }\r\n\r\n  getCurrentClass(): ScheduleClass | null {\r\n    const dayIndex = new Date().getDay()\r\n    const isWeekEnd = dayIndex == 0 || dayIndex == 6\r\n\r\n    if (isWeekEnd) return null\r\n\r\n    const todayClasses = this.scheduleDays[dayIndex - 1].classes\r\n    if (todayClasses.length == 0) return null\r\n\r\n    let currentClass = null\r\n\r\n    todayClasses.forEach((class_) => {\r\n      if (class_.isCurrent()) {\r\n        currentClass = class_\r\n      }\r\n    })\r\n\r\n    return currentClass\r\n  }\r\n}\r\n","import { StyleSheet } from \"react-native\"\r\n\r\nimport { FontName } from \"../../constants/Fonts\"\r\nimport { globalStyles, palette } from \"../../styles/global\"\r\n\r\nexport const styles = StyleSheet.create({\r\n  modal: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"red\", // not gonna work cause it's transparent\r\n  },\r\n\r\n  horizontalFlex: {\r\n    ...globalStyles.horizontalCenteredFlex,\r\n  },\r\n\r\n  searchBarContainer: {\r\n    marginLeft: -4,\r\n    marginVertical: 10,\r\n    backgroundColor: \"#F2F2F2\",\r\n    borderRadius: 7,\r\n    padding: 5,\r\n    paddingVertical: 2,\r\n  },\r\n\r\n  searchBar: {\r\n    ...globalStyles.searchBar,\r\n  },\r\n\r\n  modalContentContainer: {\r\n    ...globalStyles.modalContentContainer,\r\n    // top: \"5%\",\r\n  },\r\n\r\n  overlay: {\r\n    backgroundColor: \"rgba(0, 0, 0, 0.25)\",\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n\r\n  option: {\r\n    fontFamily: FontName.Montserrat500,\r\n    color: palette.text,\r\n    width: \"100%\",\r\n    marginVertical: 10,\r\n  },\r\n\r\n  selectedOption: {\r\n    fontFamily: FontName.Montserrat600,\r\n  },\r\n\r\n  separator: {\r\n    height: 1, // haha\r\n    width: \"100%\",\r\n    marginVertical: 6,\r\n    backgroundColor: \"#E6E6E6\",\r\n  },\r\n\r\n  header: {\r\n    fontFamily: FontName.MontserratBold,\r\n    fontSize: 20,\r\n    marginBottom: 10,\r\n    color: palette.text,\r\n  },\r\n\r\n  closeButton: {\r\n    backgroundColor: \"#FFFFFF\",\r\n    borderWidth: 1,\r\n    borderColor: \"#E6E6E6\",\r\n    padding: 10,\r\n    paddingHorizontal: 30,\r\n    marginTop: 10,\r\n    // borderRadius: 10,\r\n    shadowColor: \"rgba(0,0,0,1)\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 1,\r\n    },\r\n    elevation: 0.2,\r\n    shadowOpacity: 0.0,\r\n    shadowRadius: 0,\r\n    borderRadius: 10,\r\n  },\r\n\r\n  closeButtonText: {\r\n    fontFamily: FontName.Montserrat600,\r\n    color: palette.grayedOut,\r\n    fontSize: 16,\r\n  },\r\n\r\n  checkIcon: {\r\n    position: \"absolute\",\r\n    right: 0,\r\n  },\r\n})\r\n","import React, { useEffect } from \"react\"\r\nimport { View, Text, Modal, Pressable, ScrollView, useWindowDimensions } from \"react-native\"\r\nimport { globalStyles, palette } from \"../../styles/global\"\r\nimport { TextInput } from \"react-native-gesture-handler\"\r\nimport { Ionicons } from \"@expo/vector-icons\"\r\nimport AppText from \"../shared/AppText\"\r\nimport { styles } from \"./Styles\"\r\nimport { OptionPickerModalProps } from \"./Types\"\r\n\r\n// TODO: fix modal content overflowing when keyboard is shown\r\n// TODO: refactor onClose to something more understandable\r\n\r\n/**\r\n * Filters options based on search query. Case insensitive.\r\n */\r\nfunction FilterOptions(options: string[], searchQuery: string) {\r\n  searchQuery = searchQuery.trim().toLowerCase()\r\n\r\n  return options.filter((option) => option.toLowerCase().includes(searchQuery))\r\n}\r\n\r\nexport default function OptionPickerModal<OptionT = string>({\r\n  hasSearchBar = true,\r\n  headerText = \"\",\r\n  isOpen = false,\r\n  displaySeparators = true,\r\n  options: optionsParam,\r\n  selectedOption: selectedOptionParam,\r\n  renderItem,\r\n  onCloseModal: onCloseModalCallback,\r\n  onSelected,\r\n  optionIcon,\r\n  isOptionSelectable = true,\r\n}: OptionPickerModalProps<OptionT>) {\r\n  const { height: windowHeight } = useWindowDimensions()\r\n\r\n  const [options, _] = React.useState<OptionT[]>(optionsParam)\r\n  const [searchQuery, setSearchQuery] = React.useState<string>(\"\")\r\n\r\n  // filter options if search bar is present\r\n  const filteredOptions =\r\n    hasSearchBar && typeof options[0] == \"string\" ? FilterOptions(options as string[], searchQuery) : options\r\n\r\n  const [selectedOption, setSelectedOption] = React.useState<OptionT>(selectedOptionParam)\r\n\r\n  console.log(\"selectedOption in schedule picker modal:\", selectedOption)\r\n\r\n  const closeModal = () => {\r\n    setSearchQuery(\"\")\r\n    onCloseModalCallback()\r\n    console.log(\"cleared search query and closed schedule picker modal\")\r\n  }\r\n\r\n  useEffect(() => {\r\n    // return umount callback\r\n    return () => {\r\n      console.log(\"unmounting schedule picker modal\")\r\n      setSearchQuery(\"\")\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <Modal animationType=\"fade\" transparent={true} style={styles.modal} visible={isOpen}>\r\n      <View style={styles.overlay} />\r\n      <View style={styles.modalContentContainer}>\r\n        <View style={{ width: \"100%\" }}>\r\n          <Text style={styles.header}>{headerText ?? \"\"}</Text>\r\n          <View style={[styles.horizontalFlex, styles.searchBarContainer, !hasSearchBar ? globalStyles.noDisplay : {}]}>\r\n            <Ionicons name=\"search-outline\" size={14} style={{ marginHorizontal: 5 }} color={palette.grayedOut} />\r\n            <TextInput style={styles.searchBar} onChangeText={setSearchQuery} placeholder=\"Пошук групи\" />\r\n          </View>\r\n        </View>\r\n        <ScrollView style={{ width: \"100%\", height: 0.4 * windowHeight }}>\r\n          {filteredOptions.map((option, idx) => (\r\n            <View key={idx}>\r\n              {renderItem ? (\r\n                renderItem(option as OptionT, idx)\r\n              ) : (\r\n                <Pressable\r\n                  onPress={() => {\r\n                    if (!isOptionSelectable) return\r\n\r\n                    setSelectedOption(option as OptionT)\r\n                    onSelected(option as OptionT)\r\n                    closeModal()\r\n                  }}\r\n                >\r\n                  <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n                    <View\r\n                      style={{\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                      }}\r\n                    >\r\n                      {optionIcon}\r\n\r\n                      <AppText style={{ ...styles.option, ...(selectedOption == option ? styles.selectedOption : {}) }}>\r\n                        {option as string}\r\n                      </AppText>\r\n                    </View>\r\n\r\n                    {selectedOption == option ? (\r\n                      <Ionicons style={styles.checkIcon} name=\"checkmark-outline\" color={\"#1C5D8FCC\"} size={24} />\r\n                    ) : (\r\n                      <View />\r\n                    )}\r\n                  </View>\r\n                </Pressable>\r\n              )}\r\n\r\n              {displaySeparators && idx != options.length - 1 ? <View style={styles.separator}></View> : <View />}\r\n            </View>\r\n          ))}\r\n        </ScrollView>\r\n\r\n        <Pressable onPress={() => closeModal()}>\r\n          <View style={styles.closeButton}>\r\n            <Text style={styles.closeButtonText}>Закрити</Text>\r\n          </View>\r\n        </Pressable>\r\n      </View>\r\n    </Modal>\r\n  )\r\n}\r\n","import { View, Text, StyleSheet } from \"react-native\"\r\nimport AppText from \"../../components/shared/AppText\"\r\nimport { palette } from \"../../styles/global\"\r\nimport { previewImagesFull } from \"../../constants/Images\"\r\nimport { isRunningInBrowser } from \"../../utilities/utilities\"\r\n\r\n// Import Swiper React components\r\nimport { SwiperSlide } from \"swiper/react\"\r\n\r\n// Import Swiper styles\r\nimport \"swiper/css\"\r\n\r\n// TODO: integrate with native carousel (it uses cropped preview images)\r\n// TODO: adapt settings page to web\r\n\r\nexport function getPageOne() {\r\n  const image = <img style={styles.previewImage} src={previewImagesFull.schedule} loading=\"eager\" />\r\n\r\n  const pageOne = (\r\n    <SwiperSlide style={styles.page} key=\"1\">\r\n      <View style={styles.imageContainer}>{image}</View>\r\n      <AppText style={styles.pageTitle}>Розклад</AppText>\r\n      <View style={styles.pageDescriptionText}>\r\n        <AppText style={styles.centeredDescriptionText}>\r\n          Розклад занять у вищих навчальних закладах чергується тижнями: чисельник, знаменник.\r\n        </AppText>\r\n        <br />\r\n        <AppText style={styles.centeredDescriptionText}>\r\n          Якщо цього тижня – чисельник, то перемикач <Text style={{ color: palette.navigationBackground }}>Чис</Text>{\" \"}\r\n          буде активним.\r\n        </AppText>\r\n      </View>\r\n    </SwiperSlide>\r\n  )\r\n\r\n  return pageOne\r\n}\r\n\r\nexport function getPageTwo() {\r\n  const pageTwo = (\r\n    <SwiperSlide style={styles.page} key=\"2\">\r\n      <View style={{ ...styles.imageContainer }}>\r\n        <img style={styles.previewImage} src={previewImagesFull.reglamentPreview} loading=\"eager\" />\r\n      </View>\r\n      <AppText style={styles.pageTitle}>Регламент</AppText>\r\n      <View style={styles.pageDescriptionText}>\r\n        <AppText style={styles.centeredDescriptionText}>\r\n          Звичайний регламент... Але з{\" \"}\r\n          <AppText style={{ color: palette.navigationBackground }}>підсвіткою поточної пари </AppText>✨\r\n        </AppText>\r\n      </View>\r\n    </SwiperSlide>\r\n  )\r\n\r\n  return pageTwo\r\n}\r\n\r\nexport function getPageThree() {\r\n  const pageThree = (\r\n    <SwiperSlide style={styles.page} key=\"3\">\r\n      <View style={styles.imageContainer}>\r\n        <img style={styles.previewImage} src={previewImagesFull.editorPreview} loading=\"eager\" />\r\n      </View>\r\n      <AppText style={styles.pageTitle}>Редактор</AppText>\r\n      <View style={styles.pageDescriptionText}>\r\n        <AppText style={styles.centeredDescriptionText}>\r\n          Дозволяє виправити чи змінити розклад за власними побажаннями.\r\n        </AppText>\r\n      </View>\r\n    </SwiperSlide>\r\n  )\r\n\r\n  return pageThree\r\n}\r\n\r\nexport function getPageFour() {\r\n  const pageFour = (\r\n    <SwiperSlide style={styles.page} key=\"4\">\r\n      <View style={styles.imageContainer}>\r\n        <img style={styles.previewImage} src={previewImagesFull.settingsPreview} loading=\"eager\" />\r\n      </View>\r\n      <AppText style={styles.pageTitle}>Налаштування</AppText>\r\n      <View style={styles.pageDescriptionText}>\r\n        <AppText style={styles.centeredDescriptionText}>Вигляд розкладу та сповіщення можна налаштувати тут.</AppText>\r\n      </View>\r\n    </SwiperSlide>\r\n  )\r\n\r\n  return pageFour\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  page: {\r\n    marginBottom: 20,\r\n    marginHorizontal: 20,\r\n\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n\r\n  pageTitle: {\r\n    fontSize: 24,\r\n    color: palette.navigationBackground,\r\n    textAlign: \"center\",\r\n    marginVertical: isRunningInBrowser() ? 20 : 10,\r\n    marginTop: isRunningInBrowser() ? 40 : 20,\r\n  },\r\n\r\n  imageContainer: {\r\n    borderRadius: 10,\r\n    // bump to 65% on web. Not sure if it's okay to do so on mobile\r\n    height: isRunningInBrowser() ? \"65%\" : \"55%\",\r\n    // width: \"100%\",\r\n    // flex: 1,\r\n    alignSelf: \"stretch\",\r\n\r\n    overflow: \"hidden\",\r\n    flexDirection: \"row\",\r\n\r\n    // backgroundColor: \"orange\",\r\n  },\r\n\r\n  previewImage: {\r\n    borderRadius: 10,\r\n\r\n    width: \"100%\",\r\n\r\n    objectFit: \"cover\",\r\n    objectPosition: \"top\",\r\n  },\r\n\r\n  centeredDescriptionText: {\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  pageDescriptionText: {\r\n    flex: 1,\r\n    flexGrow: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n})\r\n","import { StyleSheet } from \"react-native\"\r\nimport { palette, globalStyles } from \"../../styles/global\"\r\nimport { isLandscapeWeb } from \"../../utilities/utilities\"\r\nimport { FontName } from \"../../constants/Fonts\"\r\n\r\nconst documentHeight = window.innerHeight\r\nexport const swiperWidth = isLandscapeWeb() ? `${documentHeight / 2}px` : \"95%\"\r\n\r\nexport const styles = StyleSheet.create({\r\n  carouselContainer: {\r\n    backgroundColor: \"#F5F5F5\",\r\n    // backgroundColor: \"red\",\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    flex: 1,\r\n    zIndex: 9999,\r\n\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  container: {\r\n    flex: 1,\r\n    height: \"100%\",\r\n  },\r\n\r\n  viewPager: {\r\n    flex: 1,\r\n    padding: 0,\r\n    marginHorizontal: 30,\r\n  },\r\n  page: {\r\n    // height: \"100%\",\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  paginationCircles: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginVertical: 20,\r\n\r\n    width: \"100%\",\r\n\r\n    // height: \"10%\",\r\n  },\r\n\r\n  circle: {\r\n    width: 5,\r\n    height: 5,\r\n    margin: 5,\r\n    borderRadius: 123,\r\n    backgroundColor: \"#D9D9D9\",\r\n    flexDirection: \"row\",\r\n  },\r\n\r\n  circleActive: {\r\n    backgroundColor: \"#7B7B7B\",\r\n  },\r\n\r\n  pageBody: {\r\n    marginBottom: 20,\r\n    // flex: 1,\r\n    // height: \"100%\",\r\n  },\r\n\r\n  overlay: {\r\n    backgroundColor: \"#F5F5F5\",\r\n    // backgroundColor: \"red\",\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    flex: 1,\r\n    zIndex: 9998,\r\n  },\r\n\r\n  pagerNavigation: {\r\n    flexGrow: 0,\r\n    // height: \"5%\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: 20,\r\n    alignSelf: \"center\",\r\n    width: swiperWidth,\r\n  },\r\n\r\n  pageTitle: {\r\n    fontSize: 24,\r\n    color: palette.navigationBackground,\r\n    textAlign: \"center\",\r\n    marginVertical: 10,\r\n    marginTop: 20,\r\n  },\r\n\r\n  imageContainer: {\r\n    borderRadius: 10,\r\n    height: \"65%\",\r\n    maxHeight: \"65%\",\r\n    width: \"90%\",\r\n    // backgroundColor: \"green\",\r\n    overflow: \"auto\",\r\n\r\n    alignItems: \"flex-start\",\r\n    justifyContent: \"flex-start\",\r\n    flexDirection: \"row\",\r\n  },\r\n\r\n  previewImage: {\r\n    borderRadius: 10,\r\n  },\r\n\r\n  halfImageContainer: {\r\n    height: \"30%\",\r\n  },\r\n\r\n  navigationButton: {\r\n    flexGrow: 0,\r\n    flexShrink: 1,\r\n\r\n    ...globalStyles.navigationButton,\r\n  },\r\n\r\n  backButton: {\r\n    borderColor: palette.grayedOut,\r\n  },\r\n\r\n  forwardButton: {\r\n    borderColor: palette.navigationBackground,\r\n    borderWidth: 1,\r\n  },\r\n\r\n  centeredDescriptionText: {\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  pageDescriptionText: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  selectScheduleText: {\r\n    color: palette.navigationBackground,\r\n    fontFamily: FontName.Montserrat600,\r\n  },\r\n})\r\n","import React, { useEffect, useRef, useState } from \"react\"\r\n\r\nimport { View, TouchableOpacity, ActivityIndicator, DimensionValue } from \"react-native\"\r\nimport { palette } from \"../../styles/global\"\r\nimport AppText from \"../../components/shared/AppText\"\r\n\r\n// Import Swiper React components\r\nimport { Swiper } from \"swiper/react\"\r\n\r\n// Import Swiper styles\r\nimport \"swiper/css\"\r\n\r\nimport _ from \"lodash\"\r\nimport { setStatusBarHidden } from \"expo-status-bar\"\r\nimport OptionPickerModal from \"../../components/OptionPickerModalComponent/OptionPickerModal\"\r\nimport { DrawerRoutes } from \"../../routes/DrawerRoutes\"\r\nimport SettingsService from \"../../services/SettingsService/SettingsService\"\r\nimport { ensureExtension, ensureNoExtension, isLandscapeWeb } from \"../../utilities/utilities\"\r\nimport { useNavigation } from \"@react-navigation/native\"\r\nimport ScheduleLoaderService from \"../../services/ScheduleLoaderService/ScheduleLoaderService\"\r\nimport { getPageFour, getPageOne, getPageThree, getPageTwo } from \"./Pages\"\r\nimport { Swiper as SwiperType } from \"swiper/types\"\r\nimport { FontName } from \"../../constants/Fonts\"\r\nimport { styles, swiperWidth } from \"./IntroductoryCarouselWebStyles\"\r\n\r\n// TODO: move shared logic to a separate file. As of now, lots if it is a copypaste from IntroductoryCarousel.native.tsx\r\n\r\n// TODO: get replace document height with viewport height\r\n\r\n/**\r\n * Web version of Introductory Carousel Screen\r\n */\r\nexport default function InroductoryCarouselScreen({ onClose }: { onClose?: () => void }) {\r\n  const [currentPage, setCurrentPage] = React.useState(0)\r\n  const swiperRef = useRef<SwiperType>()\r\n\r\n  const [isVisible, setIsVisible] = useState(true)\r\n  const [isReady, setIsReady] = useState(false)\r\n\r\n  const [schedulePickerModalVisible, setSchedulePickerModalVisible] = useState(false)\r\n\r\n  const [schedulePickerData, setSchedulePickerData] = useState<string[]>([])\r\n\r\n  const navigation = useNavigation()\r\n\r\n  const lastPageIndex = 3\r\n\r\n  // mount effect\r\n  useEffect(() => {\r\n    async function init() {\r\n      const scheduleLodaderInstance = await ScheduleLoaderService.GetInstance()\r\n\r\n      const schedulePickerData = scheduleLodaderInstance.scheduleFiles.map((f) =>\r\n        ensureNoExtension(f.filename, \".json\")\r\n      )\r\n      setSchedulePickerData(schedulePickerData)\r\n\r\n      setIsReady(true)\r\n    }\r\n\r\n    init()\r\n  }, [])\r\n\r\n  // current page change effect\r\n  useEffect(() => {\r\n    if (swiperRef.current) {\r\n      swiperRef.current.slideTo(currentPage)\r\n    }\r\n  }, [currentPage])\r\n\r\n  if (!isReady) {\r\n    // return spinner\r\n    return (\r\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\r\n        <ActivityIndicator size=\"large\" color={palette.navigationBackground} />\r\n      </View>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <View style={{ ...styles.overlay }}>\r\n      <View style={styles.paginationCircles}>\r\n        {_.times(lastPageIndex + 1, (i) => (\r\n          <View key={i} style={[styles.circle, currentPage == i ? styles.circleActive : {}]} />\r\n        ))}\r\n      </View>\r\n\r\n      <Swiper\r\n        initialSlide={currentPage}\r\n        style={{ display: \"flex\", width: swiperWidth, flexGrow: 1, maxHeight: \"85%\" }}\r\n        onSwiper={(swiper) => (swiperRef.current = swiper)}\r\n        onSlideChange={(swiper) => {\r\n          setCurrentPage(swiper.activeIndex)\r\n        }}\r\n      >\r\n        {getPageOne()}\r\n        {getPageTwo()}\r\n\r\n        {getPageThree()}\r\n        {getPageFour()}\r\n      </Swiper>\r\n      {/* pager navigation (page 1 has different buttons) */}\r\n      {currentPage == 0 ? (\r\n        <View style={[styles.pagerNavigation, { justifyContent: \"center\" }]}>\r\n          <TouchableOpacity\r\n            style={[styles.navigationButton, { width: 150 }]}\r\n            onPress={() => {\r\n              setSchedulePickerModalVisible(true)\r\n            }}\r\n          >\r\n            <AppText accessibilityLabel=\"selectSchedule\" style={styles.selectScheduleText}>\r\n              Обрати розклад\r\n            </AppText>\r\n          </TouchableOpacity>\r\n          <OptionPickerModal\r\n            headerText=\"Вибери свою групу\"\r\n            isOpen={schedulePickerModalVisible}\r\n            options={schedulePickerData}\r\n            selectedOption={\"\"}\r\n            onCloseModal={() => setSchedulePickerModalVisible(false)}\r\n            onSelected={(selected) => {\r\n              SettingsService.GetInstance().then((i) => {\r\n                i.currentScheduleName = ensureExtension(selected, \".json\")\r\n                i.saveToStorage()\r\n\r\n                const newCurrentPage = _.clamp(currentPage + 1, 0, lastPageIndex)\r\n                setCurrentPage(newCurrentPage)\r\n              })\r\n            }}\r\n          />\r\n        </View>\r\n      ) : (\r\n        <View style={styles.pagerNavigation}>\r\n          <TouchableOpacity\r\n            style={[styles.navigationButton, styles.backButton]}\r\n            onPress={() => {\r\n              const newCurrentPage = _.clamp(currentPage - 1, 0, 999)\r\n\r\n              setCurrentPage(newCurrentPage)\r\n            }}\r\n          >\r\n            <AppText\r\n              style={{\r\n                // color: palette.navigationBackground,\r\n                fontFamily: FontName.Montserrat600,\r\n                color: palette.grayedOut,\r\n              }}\r\n            >\r\n              Назад\r\n            </AppText>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            style={styles.navigationButton}\r\n            onPress={() => {\r\n              const isCloseButton = currentPage == lastPageIndex\r\n\r\n              if (isCloseButton) {\r\n                setStatusBarHidden(false, \"fade\")\r\n                setIsVisible(false)\r\n                onClose?.()\r\n                // @ts-expect-error\r\n                navigation.navigate(DrawerRoutes.VIEWER)\r\n              }\r\n\r\n              const newCurrentPage = _.clamp(currentPage + 1, 0, lastPageIndex)\r\n              setCurrentPage(newCurrentPage)\r\n            }}\r\n          >\r\n            <AppText style={{ color: palette.navigationBackground, fontFamily: FontName.Montserrat600 }}>\r\n              {currentPage != lastPageIndex ? \"Далі\" : \"Закрити\"}\r\n            </AppText>\r\n          </TouchableOpacity>\r\n        </View>\r\n      )}\r\n    </View>\r\n  )\r\n}\r\n","import { StyleSheet } from \"react-native\"\r\n\r\nimport { FontName } from \"../../../constants/Fonts\"\r\nimport { palette } from \"../../../styles/global\"\r\n\r\nconst baseStyles = StyleSheet.create({\r\n  text: {\r\n    color: \"white\",\r\n    fontFamily: \"century-gothic\",\r\n  },\r\n})\r\n\r\nexport const scheduleHeaderStyles = StyleSheet.create({\r\n  header: {\r\n    paddingVertical: 15,\r\n    width: \"100%\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#1C5D8F\",\r\n  },\r\n\r\n  backroundImage: {\r\n    width: \"100%\",\r\n  },\r\n\r\n  headerText: {\r\n    fontSize: 20,\r\n    // color: \"#333\",\r\n    color: \"white\",\r\n    fontFamily: FontName.CenturyGothic,\r\n  },\r\n  sideMenuIcon: {\r\n    color: \"white\",\r\n    marginHorizontal: 16,\r\n    marginRight: 10,\r\n    zIndex: 8888,\r\n  },\r\n\r\n  headerContentContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    width: \"100%\",\r\n  },\r\n\r\n  currentlyViewedDay: {\r\n    fontSize: 14,\r\n    ...baseStyles.text,\r\n    marginLeft: 10,\r\n    marginHorizontal: 16,\r\n  },\r\n\r\n  weekTypeText: {\r\n    fontSize: 16,\r\n    ...baseStyles.text,\r\n  },\r\n\r\n  weekTextContainer: {\r\n    paddingHorizontal: 5,\r\n    paddingVertical: 4,\r\n  },\r\n\r\n  selectedContainer: {\r\n    borderRadius: 5,\r\n    backgroundColor: \"white\",\r\n  },\r\n\r\n  selectedText: {\r\n    color: palette.navigationBackground,\r\n  },\r\n})\r\n","// EXTERNAL DEPENDENCIES\r\n\r\nimport React from \"react\"\r\nimport { Text, View } from \"react-native\"\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport { useNavigation } from \"@react-navigation/native\"\r\nimport { useRoute } from \"@react-navigation/native\"\r\nimport { SafeAreaView } from \"react-native-safe-area-context\"\r\n\r\n// INTERNAL DEPENDENCIES\r\n\r\nimport GetWeekType, { WeekType } from \"../../../utilities/getWeekType\"\r\nimport { getRouteIcon } from \"../../Header\"\r\nimport { scheduleHeaderStyles } from \"./Styles\"\r\nimport { DrawerRoutes } from \"../../../routes/DrawerRoutes\"\r\n\r\n// TODO: Dry up. I simply copypasted this code from Header.tsx\r\n// TODO: Display activity indicator during changing week type\r\nexport default function ScheduleHeader({\r\n  title,\r\n  onWeekTypeChanged,\r\n}: {\r\n  title: string\r\n  onWeekTypeChanged: (weekType: WeekType) => void\r\n}) {\r\n  const navigation_ = useNavigation()\r\n\r\n  const [weekType, setWeekType] = React.useState<WeekType>(GetWeekType())\r\n  const weekTypeInUkrainian = weekType === WeekType.Nominator ? \"Чисельник\" : \"Знаменник\"\r\n  console.log(\"[Schedule Header] weekType: \", weekType)\r\n  console.log(\"[Schedule Header] weekType in Ukrainian: \", weekTypeInUkrainian)\r\n\r\n  // extract current screen name from navigation state\r\n  const headerText = title.split(\".\")[0]\r\n\r\n  const routeName = useRoute().name as DrawerRoutes\r\n  console.log(\"[Schedule Header] routeName: \", routeName)\r\n\r\n  const icon = getRouteIcon(navigation_, routeName)\r\n\r\n  return (\r\n    <SafeAreaView style={scheduleHeaderStyles.header}>\r\n      <View style={scheduleHeaderStyles.headerContentContainer}>\r\n        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n          <TouchableOpacity>{icon}</TouchableOpacity>\r\n\r\n          <Text style={scheduleHeaderStyles.headerText}>{headerText}</Text>\r\n        </View>\r\n        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n          <View style={[{ flexDirection: \"row\", alignItems: \"center\", marginRight: 12 }]}>\r\n            <View\r\n              style={[\r\n                scheduleHeaderStyles.weekTextContainer,\r\n                weekTypeInUkrainian == \"Чисельник\" ? scheduleHeaderStyles.selectedContainer : {},\r\n                { marginRight: 5 },\r\n              ]}\r\n            >\r\n              <Text\r\n                style={[\r\n                  scheduleHeaderStyles.weekTypeText,\r\n                  weekTypeInUkrainian == \"Чисельник\" ? scheduleHeaderStyles.selectedText : {},\r\n                ]}\r\n                onPress={() => {\r\n                  onWeekTypeChanged(0)\r\n                  setWeekType(0)\r\n                }}\r\n              >\r\n                Чис\r\n              </Text>\r\n            </View>\r\n\r\n            <View\r\n              style={[\r\n                scheduleHeaderStyles.weekTextContainer,\r\n                weekTypeInUkrainian == \"Знаменник\" ? scheduleHeaderStyles.selectedContainer : {},\r\n              ]}\r\n            >\r\n              <Text\r\n                onPress={() => {\r\n                  // debugger\r\n                  onWeekTypeChanged(1)\r\n                  setWeekType(1)\r\n                }}\r\n                style={[\r\n                  scheduleHeaderStyles.weekTypeText,\r\n                  weekTypeInUkrainian == \"Знаменник\" ? scheduleHeaderStyles.selectedText : {},\r\n                ]}\r\n              >\r\n                Знам\r\n              </Text>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </SafeAreaView>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { View, StyleSheet, Image } from \"react-native\"\r\nimport AppText from \"../shared/AppText\"\r\nimport { editorImages } from \"../../constants/Images\"\r\nimport { SDstyles } from \"../ScheduleComponents/ScheduleDayComponent/Styles\"\r\n\r\nexport default function EditActionsExplanatoryCard() {\r\n  return (\r\n    <View\r\n      style={[\r\n        styles.scheduleDayCard,\r\n        {\r\n          marginHorizontal: 10,\r\n        },\r\n      ]}\r\n    >\r\n      <View\r\n        style={[\r\n          {\r\n            marginVertical: 5,\r\n            paddingHorizontal: 10,\r\n            paddingLeft: 5,\r\n            paddingVertical: 3,\r\n          },\r\n          { flexDirection: \"row\" },\r\n        ]}\r\n      >\r\n        <View\r\n          style={[\r\n            {\r\n              marginRight: 5,\r\n            },\r\n          ]}\r\n        >\r\n          <Image source={editorImages.lightbulb} style={{ height: 50, width: 50 }} />\r\n        </View>\r\n        <View>\r\n          {/* TODO: bolden the action words */}\r\n          <AppText style={{ fontFamily: \"century-gothic\", fontSize: 13, letterSpacing: 0.1 }}>\r\n            Перемістити: затиснути та перетягнути\r\n          </AppText>\r\n\r\n          <AppText style={{ fontFamily: \"century-gothic\", fontSize: 13, letterSpacing: 0.1 }}>\r\n            Видалити: свайп ліворуч\r\n          </AppText>\r\n\r\n          <AppText style={{ fontFamily: \"century-gothic\", fontSize: 13, letterSpacing: 0.1 }}>\r\n            Редагувати: натиснути на пару\r\n          </AppText>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n\r\n  scheduleDayCard: {\r\n    ...SDstyles.scheduleDayCard,\r\n  },\r\n})\r\n","import React from \"react\"\r\nimport { View, StyleSheet } from \"react-native\"\r\nimport AppText from \"../shared/AppText\"\r\nimport { palette } from \"../../styles/global\"\r\nimport { SDstyles } from \"./ScheduleDayComponent/Styles\"\r\nimport GetWeekType from \"../../utilities/getWeekType\"\r\nimport _ from \"lodash\"\r\nimport { isRunningInBrowser } from \"../../utilities/utilities\"\r\nimport { FontName } from \"../../constants/Fonts\"\r\n\r\nexport default function DateOverviewCard() {\r\n  // current day of the week, in this format: \"Понеділок\" and nothing else\r\n  let currentDayString = new Date()\r\n    .toLocaleDateString(\"uk-UA\", {\r\n      weekday: \"long\",\r\n    })\r\n    .split(\",\")[0]\r\n\r\n  currentDayString = _.capitalize(currentDayString)\r\n\r\n  const currentDayDate = new Date().toLocaleDateString(\"uk-UA\", {\r\n    day: \"numeric\",\r\n    month: \"long\",\r\n  })\r\n\r\n  // current work week interval, in this format: \"12.04.2021 - 18.04.2021\", where start date is monday and end date is friday\r\n  const currentWorkWeekInterval = (() => {\r\n    const currentDate = new Date()\r\n    // starts with sunday by default, so we need to subtract 1 for it to start with monday\r\n    let currentDayOfWeek = currentDate.getDay() - 1\r\n    if (currentDayOfWeek == -1) {\r\n      currentDayOfWeek = 6\r\n    }\r\n    const currentMonth = currentDate.getMonth()\r\n    const currentYear = currentDate.getFullYear()\r\n\r\n    const mondayDate = new Date(currentYear, currentMonth, currentDate.getDate() - currentDayOfWeek)\r\n    const fridayDate = new Date(currentYear, currentMonth, currentDate.getDate() - currentDayOfWeek + 4)\r\n\r\n    return `${mondayDate.toLocaleDateString(\"uk-UA\", {\r\n      day: \"numeric\",\r\n      month: \"numeric\",\r\n      year: \"numeric\",\r\n    })} – ${fridayDate.toLocaleDateString(\"uk-UA\", {\r\n      day: \"numeric\",\r\n      month: \"numeric\",\r\n      year: \"numeric\",\r\n    })}`\r\n  })()\r\n\r\n  const currentWeekType = GetWeekType() == 0 ? \"Чисельник\" : \"Знаменник\"\r\n\r\n  return (\r\n    <View\r\n      style={[\r\n        styles.scheduleDayCard,\r\n        {\r\n          marginHorizontal: 10,\r\n        },\r\n      ]}\r\n    >\r\n      <View\r\n        style={[\r\n          {\r\n            marginVertical: 5,\r\n            paddingHorizontal: 10,\r\n            paddingLeft: 5,\r\n            paddingVertical: 3,\r\n          },\r\n          { flexDirection: \"row\" },\r\n        ]}\r\n      >\r\n        <View style={{ flex: 1 }}>\r\n          <AppText style={styles.upperRowText}>{currentWeekType}</AppText>\r\n          <AppText style={styles.lowerRowText}>{currentWorkWeekInterval}</AppText>\r\n        </View>\r\n        {isRunningInBrowser() ? <View style={styles.verticalSeparator} /> : <View />}\r\n\r\n        <View style={{ flex: 1, alignItems: \"flex-end\" }}>\r\n          <AppText style={styles.upperRowText}>{currentDayString}</AppText>\r\n          <AppText style={styles.lowerRowText}>{currentDayDate}</AppText>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n\r\n  scheduleDayCard: {\r\n    ...SDstyles.scheduleDayCard,\r\n    borderColor: \"#8FB7DA\",\r\n    borderWidth: 1,\r\n    elevation: 2,\r\n  },\r\n\r\n  verticalSeparator: {\r\n    width: 1,\r\n    height: \"100%\",\r\n    backgroundColor: palette.background,\r\n    opacity: 0.5,\r\n    marginHorizontal: 10,\r\n  },\r\n\r\n  upperRowText: {\r\n    fontFamily: FontName.MontserratMedium,\r\n    fontSize: 13,\r\n    marginBottom: 5,\r\n  },\r\n\r\n  lowerRowText: {\r\n    color: palette.grayedOut,\r\n  },\r\n})\r\n","import { StyleSheet } from \"react-native\"\r\n\r\nimport { globalStyles } from \"../../styles/global\"\r\n\r\nexport const styles = StyleSheet.create({\r\n  rootContainer: {\r\n    // width: \"70%\",\r\n    // alignSelf: \"center\",\r\n    // paddingBottom: 60,\r\n    ...globalStyles.screen,\r\n\r\n    // flex: 0,\r\n    backgroundColor: \"#F5F5F5\",\r\n  },\r\n  modalToggle: {\r\n    marginBottom: 10,\r\n    borderWidth: 1,\r\n    borderColor: \"lightgray\",\r\n    padding: 10,\r\n    borderRadius: 10,\r\n    alignSelf: \"center\",\r\n  },\r\n\r\n  modalClose: {\r\n    marginTop: 20,\r\n    marginBottom: 0,\r\n  },\r\n\r\n  modalContent: {\r\n    flex: 1,\r\n  },\r\n\r\n  selected: {\r\n    backgroundColor: \"white\",\r\n    color: \"black\",\r\n    padding: 5,\r\n    borderRadius: 10,\r\n    marginBottom: 5,\r\n  },\r\n\r\n  placeholderView: {\r\n    height: 35,\r\n  },\r\n  cardContainer: {\r\n    // height: 350,\r\n    padding: 5,\r\n  },\r\n\r\n  scheduleDaySelector: {\r\n    padding: 5,\r\n    zIndex: 9999,\r\n    position: \"absolute\",\r\n    top: 0,\r\n    right: 0,\r\n    backgroundColor: \"rgba(0,0,0,0.5)\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n})\r\n","export const IS_FIRST_TIME_LAUNCH_KEY = \"isFirstTimeLaunch\"","import ldash from \"lodash\"\r\nimport { OnLayoutChangeParams } from \"./Types\"\r\n\r\nlet scrolledToToday = false\r\nconst todayIndex = ldash.clamp(new Date().getDay() - 1, 0, 4)\r\n\r\n/**\r\n * OnLayoutChange callback for ScheduleScreen. Scrolls to current Schedule Day\r\n */\r\nexport function OnLayoutChange({ dataSourceCoords, scrollViewContainerRef }: OnLayoutChangeParams) {\r\n  //   logDebugInfo(dataSourceCoords, layout, idx)\r\n\r\n  // wait for second run of this function to have all layout data\r\n  if (dataSourceCoords.length != 5) return\r\n  if (scrolledToToday) return\r\n\r\n  // scroll to current day\r\n  // this should happen only once\r\n  scrollViewContainerRef.current!.scrollTo({\r\n    x: 0,\r\n    y: dataSourceCoords[todayIndex],\r\n    animated: true,\r\n  })\r\n\r\n  scrolledToToday = true\r\n}\r\n\r\n/**\r\n * Hepler function. Logs debug info about the layout of a component\r\n */\r\nexport function logDebugInfo(\r\n  dataSourceCoords: number[],\r\n  layout: { height: number; width: number; x: number; y: number },\r\n  idx: number\r\n) {\r\n  console.log(`- - - component ${idx} layout data (start) - - - `)\r\n  console.log(dataSourceCoords)\r\n  console.log(\"height:\", layout.height)\r\n  console.log(\"width:\", layout.width)\r\n  console.log(\"x:\", layout.x)\r\n  console.log(\"y:\", layout.y)\r\n  console.log(\"- - - component layout data (end) - - - \")\r\n}\r\n","// EXTERNAL DEPENDENCIES\r\n\r\nimport React from \"react\"\r\nimport { useCallback, useRef, useState, useEffect } from \"react\"\r\nimport { View, ActivityIndicator, ToastAndroid } from \"react-native\"\r\nimport { ScrollView } from \"react-native-gesture-handler\"\r\nimport ldash from \"lodash\"\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\"\r\nimport { useFocusEffect, useNavigation } from \"@react-navigation/native\"\r\n\r\n// INTERNAL DEPENDENCIES\r\n\r\nimport { globalStyles, palette } from \"../../styles/global\"\r\nimport ScheduleDayComponent from \"../../components/ScheduleComponents/ScheduleDayComponent/ScheduleDay\"\r\nimport SettingsService from \"../../services/SettingsService/SettingsService\"\r\nimport { DisplayEmptyDaysMode } from \"../../services/SettingsService/Types\"\r\nimport ScheduleModel from \"../../models/ScheduleModel/ScheduleModel\"\r\nimport { workDays } from \"../../constants/Days\"\r\nimport ScheduleNotificationsService from \"../../services/ScheduleNotificationsService\"\r\nimport ScheduleLoaderService from \"../../services/ScheduleLoaderService/ScheduleLoaderService\"\r\nimport { ScheduleFile } from \"../../services/ScheduleLoaderService/Types\"\r\nimport { SettingsContext } from \"../../contexts/settingsContext\"\r\nimport { ensureExtension, ensureNoExtension, isRunningInBrowser } from \"../../utilities/utilities\"\r\nimport IntroductoryCarousel from \"../IntroductoryCarousel/IntroductoryCarousel\"\r\nimport GetWeekType, { WeekType } from \"../../utilities/getWeekType\"\r\nimport ScheduleHeader from \"../../components/ScheduleComponents/ScheduleHeaderComponent/ScheduleHeader\"\r\nimport { Event } from \"../../constants/Events\"\r\nimport EditActionsExplanatoryCard from \"../../components/ScheduleEditorComponents/EditActionsExplanatoryCard\"\r\nimport DateOverviewCard from \"../../components/ScheduleComponents/DateOverviewCard\"\r\nimport { WeekTypeContext } from \"../../contexts/weekTypeContext\"\r\nimport { styles } from \"./Styles\"\r\nimport { IS_FIRST_TIME_LAUNCH_KEY } from \"../../constants/AsyncStorageKeys\"\r\nimport { OnLayoutChange } from \"./Utils/OnLayoutChange\"\r\n\r\n// TODO: scroll to current day on mount only instead of doing so on every rerender?\r\n\r\nexport default function ScheduleScreen({ isEditable = false }: { isEditable: boolean }) {\r\n  // [web] a workaround to render drawer menu content without explicitly opening it\r\n  if (isRunningInBrowser()) {\r\n    const navigation = useNavigation()\r\n    // @ts-ignore\r\n    navigation.openDrawer()\r\n    // @ts-ignore\r\n    navigation.closeDrawer()\r\n  }\r\n\r\n  // state for unconditional rerendering\r\n  const [_, setState] = useState({})\r\n  const [isFirstTimeLaunch, setIsFirstTimeLaunch] = useState<string | null>(\"false\") // async storage can't store anything other than strings\r\n\r\n  const scheduleRef = useRef<ScheduleModel | null>(null)\r\n  const scheduleFileRef = useRef<ScheduleFile | null>(null)\r\n  const settingsServiceRef = useRef<SettingsService>(null)\r\n\r\n  const scrollViewContainerRef = useRef<ScrollView | null>(null)\r\n\r\n  const [isScheduleLoaded, setScheduleLoaded] = useState(false)\r\n  const [scheduleName, setScheduleName] = useState(\"\")\r\n  // y coords of each day card\r\n  const [dataSourceCoords, setDataSourceCoords] = useState<number[]>([])\r\n\r\n  const scheduleNameRef = useRef<string>()\r\n  scheduleNameRef.current = scheduleName\r\n\r\n  const [weekType, setWeekType] = React.useState<WeekType>(GetWeekType())\r\n\r\n  const onSettingsUpdated = useCallback(\r\n    async (settingsService: SettingsService) => {\r\n      // if schedule didn't change then there is nothing to do here\r\n      console.log(\" - - - deciding whether to update schedule or not - - -\")\r\n      const settingsScheduleName = ensureNoExtension(settingsService.currentScheduleName, \".json\")\r\n      const currentScheduleName = ensureNoExtension(scheduleNameRef.current, \".json\")\r\n      console.log(\"settings schedule name: \", settingsScheduleName)\r\n      console.log(\"schedule name: \", currentScheduleName)\r\n\r\n      const shouldUpdateSchedule = settingsScheduleName !== currentScheduleName\r\n      console.log(\" - - -\")\r\n\r\n      if (shouldUpdateSchedule) {\r\n        // construct new schedule object and setState for schedule name\r\n        const newSchedule = new ScheduleModel(\"groupname_groupyear\", \"groupname\", 5)\r\n        await newSchedule.getScheduleFromScheduleLoader(settingsService.currentScheduleName)\r\n\r\n        // configure notifications for schedule, but only if it's not in editor\r\n        if (!isEditable) {\r\n          const notifService = await ScheduleNotificationsService.GetInstance()\r\n          await notifService.configureNotificationsForSchedule(newSchedule)\r\n        }\r\n\r\n        scheduleRef.current = newSchedule\r\n        const scheduleLoaderService = await ScheduleLoaderService.GetInstance()\r\n        const updatedSchedule = scheduleLoaderService.getScheduleFileByFileName(\r\n          ensureExtension(settingsService.currentScheduleName, \".json\")\r\n        )\r\n        // TODO: Refactor XD\r\n        scheduleFileRef.current = ldash.cloneDeep(updatedSchedule) ?? null\r\n\r\n        setScheduleName(settingsService.currentScheduleName)\r\n      } else {\r\n        // assume that something else changed and we need to rerender to reflect those changes\r\n        // (in editor everything is always unfolded and there is no need to update)\r\n        if (isEditable) return\r\n        setState({})\r\n      }\r\n    },\r\n    [scheduleName]\r\n  )\r\n\r\n  useEffect(() => {\r\n    async function onMount() {\r\n      const settingsService = await SettingsService.GetInstance()\r\n      settingsServiceRef.current = settingsService\r\n\r\n      console.log(\"[Schedule.tsx] settingsService instance: \", settingsService)\r\n\r\n      const scheduleLoaderInstance = await ScheduleLoaderService.GetInstance()\r\n\r\n      const schedule = new ScheduleModel(\"groupname_groupyear\", \"groupname\", 5)\r\n\r\n      // check whether the schedule that settings service is referencing exists. Otherwise load first available schedule\r\n      const scheduleFile = scheduleLoaderInstance.getScheduleFileByFileName(settingsService.currentScheduleName)\r\n      const firstScheduleFile = scheduleLoaderInstance.scheduleFiles[0]\r\n\r\n      scheduleFileRef.current = ldash.cloneDeep(scheduleFile ?? firstScheduleFile)\r\n\r\n      const nameOfScheduleToLoad = scheduleFile ? settingsService.currentScheduleName : firstScheduleFile.filename\r\n\r\n      await schedule.getScheduleFromScheduleLoader(nameOfScheduleToLoad)\r\n\r\n      // configure notifications for schedule, but only if it's not in editor\r\n      if (!isEditable) {\r\n        ScheduleNotificationsService.GetInstance().then((i) => {\r\n          console.log(\"will call configureNotificationsForSchedule on schedule: \", schedule.name)\r\n          i.configureNotificationsForSchedule(schedule)\r\n        })\r\n      }\r\n\r\n      console.log(\"[Schedule.tsx] schedule: \", schedule)\r\n\r\n      settingsService.SettingsEventEmitter.on(Event.SETTINGS_UPDATED, onSettingsUpdated)\r\n      console.log(\"subscribed to settings updated event\")\r\n      console.log(\"n of subscribers: \", settingsService.SettingsEventEmitter.listenerCount(Event.SETTINGS_UPDATED))\r\n\r\n      scheduleRef.current = schedule\r\n\r\n      const isFirstTimeLaunch = await AsyncStorage.getItem(IS_FIRST_TIME_LAUNCH_KEY)\r\n      setIsFirstTimeLaunch(isFirstTimeLaunch)\r\n\r\n      setScheduleName(schedule.name)\r\n      setScheduleLoaded(true)\r\n    }\r\n\r\n    onMount()\r\n\r\n    // on unmount\r\n    return () => {\r\n      SettingsService.GetInstance().then((settingsService: SettingsService) => {\r\n        settingsService.SettingsEventEmitter.removeListener(Event.SETTINGS_UPDATED, onSettingsUpdated)\r\n      })\r\n    }\r\n  }, [])\r\n\r\n  const onWeekTypeChanged = (weekType: number) => {\r\n    console.log(\"week type changed to: \", weekType)\r\n    // display toast message if in editor\r\n    // the switching takes longer in editor...\r\n    if (isEditable) {\r\n      // TODO: make cross platform version of toast\r\n      if (!isRunningInBrowser()) {\r\n        ToastAndroid.show(\"Завантаження...\", ToastAndroid.LONG)\r\n      }\r\n    }\r\n    setWeekType(weekType)\r\n  }\r\n\r\n  // runs when screen gets focus\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      if (isEditable) return\r\n\r\n      // compare current schedule file with the one in loader\r\n      // if they are different, update schedule\r\n\r\n      // return if schedule or schedule file is not loaded yet\r\n      if (!scheduleRef.current || !scheduleFileRef.current) {\r\n        console.log(\"[schedule screen focus] schedule or schedule file is not loaded yet\")\r\n        return\r\n      }\r\n\r\n      const currentScheduleFile = scheduleFileRef.current\r\n      ScheduleLoaderService.GetInstance().then((instance) => {\r\n        const scheduleFile = instance.getScheduleFileByFileName(currentScheduleFile!.filename)\r\n        // debugger\r\n\r\n        // have to compare them this way because the objects themselves have different ids\r\n        if (JSON.stringify(currentScheduleFile.json_parsed) != JSON.stringify(scheduleFile!.json_parsed)) {\r\n          console.log(\"[schedule screen focus] schedule file changed, rerendering...\")\r\n          // setScheduleLoaded(false)\r\n\r\n          // update refs\r\n          scheduleFileRef.current = ldash.cloneDeep(scheduleFile) ?? null\r\n\r\n          const newSchedule = new ScheduleModel(\"groupname_groupyear\", \"groupname\", 5)\r\n          scheduleRef.current! = newSchedule\r\n          newSchedule.getScheduleFromScheduleLoader(scheduleFile!.filename).then(() => {\r\n            setState({})\r\n          })\r\n        } else {\r\n          console.log(\"[schedule screen focus] schedule file didn't change\")\r\n        }\r\n      })\r\n\r\n      // show toast\r\n      // ToastAndroid.show(\"У переглядачі\", ToastAndroid.SHORT)\r\n\r\n      return () => {\r\n        // ToastAndroid.show(\"Поза переглядачем\", ToastAndroid.SHORT)\r\n      }\r\n    }, [])\r\n  )\r\n\r\n  if (!isScheduleLoaded) {\r\n    return (\r\n      <View style={styles.rootContainer}>\r\n        <ScheduleHeader title=\"Розклад\" onWeekTypeChanged={onWeekTypeChanged} />\r\n        <View style={{ justifyContent: \"center\", alignItems: \"center\", flex: 1 }}>\r\n          <ActivityIndicator\r\n            testID=\"scheduleScreenActivityIndicator\"\r\n            size=\"large\"\r\n            animating={true}\r\n            color={palette.navigationBackground}\r\n          />\r\n        </View>\r\n      </View>\r\n    )\r\n  }\r\n\r\n  if (isFirstTimeLaunch != \"false\") {\r\n    return (\r\n      <IntroductoryCarousel\r\n        onClose={() => {\r\n          setIsFirstTimeLaunch(\"false\")\r\n          AsyncStorage.setItem(\"isFirstTimeLaunch\", \"false\")\r\n        }}\r\n      />\r\n    )\r\n  }\r\n\r\n  console.log(\"[Schedule View] will render schedule screen\")\r\n\r\n  return (\r\n    <SettingsContext.Provider value={settingsServiceRef.current}>\r\n      <WeekTypeContext.Provider value={weekType}>\r\n        <View style={styles.rootContainer}>\r\n          <ScheduleHeader title={scheduleName} onWeekTypeChanged={onWeekTypeChanged} />\r\n\r\n          <ScrollView\r\n            style={\r\n              {\r\n                // flex: 1\r\n                // ^breaks it on mobile\r\n              }\r\n            }\r\n            contentContainerStyle={{ paddingBottom: 0 }}\r\n            ref={scrollViewContainerRef}\r\n            // nestedScrollEnabled={false}\r\n          >\r\n            {/* explanatory card if in editor, otherwise date overview card */}\r\n\r\n            {isEditable ? <EditActionsExplanatoryCard /> : <DateOverviewCard />}\r\n            {workDays.map((day, idx) => {\r\n              const item = day\r\n\r\n              const schedule = scheduleRef.current!\r\n              const scheduleDay = schedule.scheduleDays[idx]\r\n\r\n              const currentlySelectedWeekClasses =\r\n                weekType == 0 ? scheduleDay.getNominatorClasses() : scheduleDay.getDenominatorClasses()\r\n\r\n              const isEmpty = currentlySelectedWeekClasses.length === 0\r\n              const shouldDisplayEmptyDay = settingsServiceRef.current!.displayEmptyDays != DisplayEmptyDaysMode.Hide\r\n\r\n              if (!isEditable && isEmpty && !shouldDisplayEmptyDay) {\r\n                return <View style={globalStyles.noDisplay} key={day + weekType}></View>\r\n              }\r\n\r\n              const classes = weekType == 0 ? scheduleDay.getNominatorClasses() : scheduleDay.getDenominatorClasses()\r\n\r\n              return (\r\n                <View\r\n                  style={styles.cardContainer}\r\n                  key={day + weekType}\r\n                  // runs twice for each day.\r\n                  onLayout={(event) => {\r\n                    // gather coords data\r\n                    const layout = event.nativeEvent.layout\r\n                    dataSourceCoords[idx] = layout.y\r\n                    setDataSourceCoords(dataSourceCoords)\r\n\r\n                    // try to scroll to today\r\n                    OnLayoutChange({\r\n                      dataSourceCoords,\r\n                      scrollViewContainerRef,\r\n                    })\r\n                  }}\r\n                >\r\n                  <ScheduleDayComponent\r\n                    classesCollection={classes}\r\n                    scheduleObject={scheduleRef.current!}\r\n                    dayName={item}\r\n                    // dayIndex={idx}\r\n                    scheduleDay={scheduleRef.current!.scheduleDays[idx]}\r\n                    displayRoomNumber={!isEditable ? settingsServiceRef.current!.displayRoomNumber : true}\r\n                    // showSeparator={idx !== workDays.length - 1}\r\n                    weekType={weekType}\r\n                    fade={\r\n                      !isEditable\r\n                        ? isEmpty && settingsServiceRef.current!.displayEmptyDays == DisplayEmptyDaysMode.Darken\r\n                        : false\r\n                    }\r\n                    isEditable={isEditable}\r\n                  ></ScheduleDayComponent>\r\n                </View>\r\n              )\r\n            })}\r\n          </ScrollView>\r\n        </View>\r\n      </WeekTypeContext.Provider>\r\n    </SettingsContext.Provider>\r\n  )\r\n}\r\n","import { StyleSheet } from \"react-native\"\r\nimport { FontName } from \"../../constants/Fonts\"\r\nimport { palette, globalStyles } from \"../../styles/global\"\r\n\r\n// TODO: Remove unused styles\r\nexport const styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    width: \"100%\",\r\n    overflow: \"scroll\",\r\n    padding: 10,\r\n    paddingTop: 30,\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  reglamentClassIndex: {\r\n    fontSize: 14,\r\n    fontFamily: FontName.Montserrat600,\r\n    color: palette.text,\r\n\r\n    marginLeft: 10,\r\n    marginBottom: 7,\r\n  },\r\n\r\n  reglamentContainer: {\r\n    ...globalStyles.screen,\r\n    flex: 1,\r\n\r\n    backgroundColor: palette.backgroundLight,\r\n    // backgroundColor: \"red\",\r\n  },\r\n\r\n  timePointTextContainer: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    // flexGrow: 0.9,\r\n    width: \"77%\",\r\n  },\r\n\r\n  timePointText: {\r\n    // color: palette.grayishBlue,\r\n    color: \"#333333\",\r\n    fontFamily: FontName.MontserratMedium,\r\n    fontSize: 16,\r\n  },\r\n\r\n  indexTextContainer: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    // flexGrow: 0.1,\r\n    width: \"12%\",\r\n  },\r\n\r\n  indexText: {\r\n    color: palette.grayishBlue,\r\n    fontFamily: FontName.MontserratSemiBold,\r\n    fontSize: 20,\r\n  },\r\n\r\n  timePointDate: {\r\n    marginTop: 3,\r\n    fontSize: 14,\r\n    color: palette.text,\r\n  },\r\n\r\n  timeDataCard: {\r\n    borderRadius: 7,\r\n    backgroundColor: \"white\",\r\n    margin: 0,\r\n    padding: 10,\r\n\r\n    elevation: 1,\r\n    shadowOffset: { width: 1, height: 1 },\r\n    shadowColor: \"#333\",\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 2,\r\n  },\r\n\r\n  currentClass: {\r\n    // backgroundColor: \"rgb(227, 239, 249)\",\r\n    // backgroundColor: \"#CCDFF1\",\r\n    // backgroundColor: \"#E5EFF8\",\r\n    backgroundColor: \"#D8E9F9\",\r\n  },\r\n\r\n  currentClassIndexText: {\r\n    color: \"#4A6172\",\r\n  },\r\n\r\n  reglamentClassContainer: {\r\n    marginHorizontal: 8,\r\n    // marginBottom: 18,\r\n    marginBottom: 10,\r\n  },\r\n\r\n  text: { margin: 0, textAlign: \"center\", borderBottomWidth: 1, borderRightWidth: 1, padding: 12 },\r\n\r\n  head: {},\r\n  headerText: { fontWeight: \"bold\", fontSize: 14 },\r\n  headText: { margin: 6, fontWeight: \"bold\" },\r\n  row: {\r\n    flexDirection: \"row\",\r\n    // backgroundColor: \"red\",\r\n    backgroundColor: \"#f1f8ff\",\r\n  },\r\n\r\n  verticalSeparator: {\r\n    width: 1,\r\n    height: \"100%\",\r\n    backgroundColor: \"#E6E6E6\",\r\n    // opacity: 0.5,\r\n    marginHorizontal: 10,\r\n    flexGrow: 0,\r\n  },\r\n})\r\n","import React, { useEffect, useRef, useState } from \"react\"\r\nimport { View } from \"react-native\"\r\n\r\nimport AppText from \"../../components/shared/AppText\"\r\nimport { determineInterval } from \"../../utilities/utilities\"\r\nimport { styles } from \"./Styles\"\r\nimport { REGLAMENT_DATA_ELEM_TYPE, REGLAMENT_DATA } from \"../../constants/Constants\"\r\n\r\nexport const ReglamentClass = ({ index }: { index: number }) => {\r\n  const classData = getReglamentClass(index)\r\n  //   let classTimeInterval = classData[1]\r\n  const classStartTime = classData[1]\r\n  const classEndTime = classData[2]\r\n\r\n  const currentTimeInterval = determineInterval()\r\n  const isCurrentClassRef = useRef(currentTimeInterval == classData)\r\n\r\n  const [_, setState] = useState({})\r\n  // rerender component if it's not current class anymore or became current class\r\n  // mount effect\r\n  useEffect(() => {\r\n    console.log(`Rendering ReglamentClass at index ${index} for the first time...`)\r\n\r\n    // update current time slot every 15 seconds\r\n    const interval = setInterval(() => {\r\n      const wasCurrent = isCurrentClassRef.current\r\n      const isCurrent = determineInterval() == classData\r\n      if (wasCurrent != isCurrent) {\r\n        isCurrentClassRef.current = isCurrent\r\n        setState({})\r\n      }\r\n    }, 15000)\r\n\r\n    // on unmount\r\n    return () => {\r\n      clearInterval(interval)\r\n    }\r\n  }, [])\r\n\r\n  const isCurrentClass = isCurrentClassRef.current\r\n\r\n  return (\r\n    <View style={styles.reglamentClassContainer}>\r\n      <View\r\n        style={[styles.timeDataCard, isCurrentClass ? styles.currentClass : {}]}\r\n        testID={isCurrentClassRef.current ? \"currentClass\" + index : \"class\"}\r\n      >\r\n        <View style={{ flexDirection: \"row\", justifyContent: \"flex-start\" }}>\r\n          <View style={styles.indexTextContainer}>\r\n            <AppText style={[styles.indexText, isCurrentClass ? styles.currentClassIndexText : {}]}>\r\n              {index + 1}\r\n            </AppText>\r\n          </View>\r\n          <View style={[styles.verticalSeparator, isCurrentClass ? { backgroundColor: \"#D9D9D9\" } : {}]} />\r\n\r\n          <View style={styles.timePointTextContainer}>\r\n            <AppText style={styles.timePointText}>\r\n              {classStartTime} – {classEndTime}\r\n            </AppText>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport const getReglamentClass = (index: number): REGLAMENT_DATA_ELEM_TYPE => {\r\n  // console.log(`Getting class at index ${index}...`)\r\n  // throw if index is out of bounds\r\n  if (index < 0 || index > REGLAMENT_DATA.length - 1) {\r\n    throw new Error(\"Index out of bounds\")\r\n  }\r\n\r\n  return REGLAMENT_DATA[index]\r\n}\r\n","// EXTERNAL DEPENDENCIES\r\n\r\nimport React from \"react\"\r\nimport { View } from \"react-native\"\r\n\r\nimport { ScrollView } from \"react-native-gesture-handler\"\r\n\r\n// INTERNAL DEPENDENCIES\r\n\r\nimport { REGLAMENT_DATA } from \"../../constants/Constants\"\r\nimport { styles } from \"./Styles\"\r\nimport { ReglamentClass } from \"./ReglamentClassComponent\"\r\n\r\nconsole.log(\"Importing modules...\")\r\n\r\n// TODO: try to make own table component with flexbox (additional motivation here is to have builds not fail due to react-native-table-component)\r\n// or follow this article: https://rn-master.com/sortable-react-native-table-example/\r\n\r\nexport default function ReglamentScreen() {\r\n  console.log(\"Rendering ReglamentScreen...\")\r\n  return (\r\n    <View style={[styles.reglamentContainer, { paddingTop: 20 }]}>\r\n      <ScrollView>\r\n        {REGLAMENT_DATA.map((item, index) => {\r\n          return <ReglamentClass index={index} key={index} />\r\n        })}\r\n      </ScrollView>\r\n    </View>\r\n  )\r\n}\r\n","import { Ionicons } from \"@expo/vector-icons\"\r\nimport React, { useRef } from \"react\"\r\nimport { View, StyleSheet, TextInput, Linking } from \"react-native\"\r\nimport { globalStyles, palette } from \"../styles/global\"\r\n\r\nimport teachersJson from \"../assets/teachers.json\"\r\nimport { FlatList } from \"react-native-gesture-handler\"\r\nimport TeacherModel from \"../models/TeacherModel/TeacherModel\"\r\nimport AppText from \"../components/shared/AppText\"\r\nimport { FontName } from \"../constants/Fonts\"\r\n\r\n// TODO: fix scroll view intercepting select event on text\r\n\r\nexport default function TeachersScreen() {\r\n  const [searchQuery, setSearchQuery] = React.useState<string>(\"\")\r\n\r\n  const teachersTable = useRef(TeacherModel.GetInstance())\r\n\r\n  const [teachers, _] = React.useState<typeof teachersJson>(teachersTable.current.teachers)\r\n\r\n  const filteredTeachers = teachers.filter((teacher) => {\r\n    const teacherJson = JSON.stringify(teacher)\r\n    return teacherJson.toLowerCase().includes(searchQuery.toLowerCase())\r\n  })\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={{ ...globalStyles.horizontalCenteredFlex, ...styles.searchBarContainer }}>\r\n        <Ionicons name=\"search-outline\" size={14} style={{ marginHorizontal: 5 }} color={palette.grayedOut} />\r\n        <TextInput style={styles.searchBar} onChangeText={setSearchQuery} placeholder=\"Знайти викладача\" />\r\n      </View>\r\n      <View></View>\r\n      <FlatList\r\n        data={filteredTeachers}\r\n        userSelect=\"text\"\r\n        keyExtractor={(item) => item[\"ПІБ викладача\"]}\r\n        renderItem={({ item, index }) => {\r\n          const teacher = item\r\n          return (\r\n            <View key={index} style={styles.teacherCard}>\r\n              <AppText\r\n                style={{\r\n                  fontFamily: FontName.MontserratBold,\r\n                  ...styles.teacherDataText,\r\n                  fontSize: styles.teacherDataText.fontSize + 2,\r\n                }}\r\n                selectable\r\n              >\r\n                {teacher[\"ПІБ викладача\"]}\r\n              </AppText>\r\n              <AppText style={[styles.teacherDataText]} selectable>\r\n                {teacher.Кваліфікаця}\r\n              </AppText>\r\n              <AppText\r\n                style={[globalStyles.link, styles.teacherDataText]}\r\n                selectable\r\n                onPress={() => {\r\n                  console.log(\"pressed\")\r\n                  Linking.openURL(teacher[\"Кафедра Посилання\"])\r\n                }}\r\n              >\r\n                {`Кафедра ${teacher[\"Кафедра Абревіатура\"]} (${teacher[\"Кафедра Повна назва\"]})`}\r\n              </AppText>\r\n\r\n              {!teacher[\"E-mail\"].endsWith(\".ru\") ? (\r\n                <AppText\r\n                  style={[globalStyles.underlinedLink, styles.teacherDataText, { marginBottom: 0 }]}\r\n                  selectable\r\n                  onPress={() => {\r\n                    console.log(\"pressed\")\r\n                    // open email\r\n                    Linking.openURL(\"mailto:\" + teacher[\"E-mail\"])\r\n                  }}\r\n                >\r\n                  {teacher[\"E-mail\"]}\r\n                </AppText>\r\n              ) : (\r\n                <View />\r\n              )}\r\n            </View>\r\n          )\r\n        }}\r\n      />\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: palette.backgroundLight,\r\n  },\r\n\r\n  horizontalFlex: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  searchBarContainer: {\r\n    marginVertical: 10,\r\n    backgroundColor: palette.background,\r\n    borderRadius: 7,\r\n    padding: 5,\r\n    paddingVertical: 4,\r\n\r\n    marginHorizontal: 10,\r\n  },\r\n\r\n  searchBar: {\r\n    ...globalStyles.searchBar,\r\n    fontSize: 14,\r\n  },\r\n\r\n  teacherCard: {\r\n    marginVertical: 5,\r\n    marginHorizontal: 10,\r\n    padding: 14,\r\n    paddingVertical: 12,\r\n    borderRadius: 7,\r\n    backgroundColor: \"white\",\r\n\r\n    elevation: 1,\r\n    shadowOffset: { width: 1, height: 1 },\r\n    shadowColor: \"#333\",\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 2,\r\n  },\r\n\r\n  teacherDataText: {\r\n    fontSize: 14,\r\n    marginBottom: 6,\r\n  },\r\n})\r\n","import React from \"react\"\r\nimport { StyleSheet, Text, View, Image, Pressable, ImageBackground } from \"react-native\"\r\nimport { Ionicons, MaterialIcons } from \"@expo/vector-icons\"\r\nimport { SafeAreaView } from \"react-native-safe-area-context\"\r\nimport { globalStyles, palette } from \"../styles/global\"\r\nimport { useNavigation } from \"@react-navigation/native\"\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport { FontName } from \"../constants/Fonts\"\r\n\r\nexport type StackHeaderProps = {\r\n  title: string\r\n  useSafeAreaView?: boolean\r\n  hasBackground?: boolean\r\n  captionStyles?: any\r\n}\r\n\r\nexport default function StackHeader({\r\n  title,\r\n  useSafeAreaView = true,\r\n  hasBackground = true,\r\n  captionStyles = undefined,\r\n}: StackHeaderProps) {\r\n  const navigation = useNavigation()\r\n\r\n  const ViewComponent = useSafeAreaView ? SafeAreaView : View\r\n\r\n  const headerText = title\r\n  return (\r\n    <ViewComponent style={[styles.header, !hasBackground ? { backgroundColor: \"transparent\" } : {}]}>\r\n      <View style={styles.headerTitle}>\r\n        <TouchableOpacity>\r\n          <Ionicons\r\n            onPress={() => navigation.goBack()}\r\n            name=\"chevron-back-outline\"\r\n            size={24}\r\n            style={[globalStyles.navIcon, captionStyles]}\r\n          />\r\n        </TouchableOpacity>\r\n\r\n        <Text style={[styles.headerText, captionStyles]}>{headerText}</Text>\r\n      </View>\r\n    </ViewComponent>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  header: {\r\n    paddingVertical: 15,\r\n    width: \"100%\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: palette.navigationBackground,\r\n  },\r\n\r\n  headerText: {\r\n    fontSize: 20,\r\n    color: \"white\",\r\n    fontFamily: FontName.CenturyGothic,\r\n  },\r\n\r\n  headerTitle: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n  },\r\n})\r\n","import React, { useState } from \"react\"\r\nimport { Switch, StyleSheet } from \"react-native\"\r\nimport { palette } from \"../../styles/global\"\r\nimport { isRunningInBrowser } from \"../../utilities/utilities\"\r\nimport { SwitchProps } from \"react-native-elements\"\r\n\r\n// TODO: find better colors for toggled state\r\n\r\nexport default function CustomSwitch({\r\n  onValueChange,\r\n  initVal = false,\r\n  disabled = false,\r\n  ...otherProps\r\n}: {\r\n  initVal?: boolean\r\n  disabled?: boolean\r\n  onValueChange?: (newValue: boolean) => void\r\n  otherProps?: SwitchProps\r\n}): JSX.Element {\r\n  const [isEnabled, setIsEnabled] = useState(initVal)\r\n  const toggleSwitch = () => setIsEnabled((previousState) => !previousState)\r\n\r\n  // disabled = true\r\n\r\n  return (\r\n    <Switch\r\n      style={styles.switch}\r\n      trackColor={{ false: \"#767577\", true: palette.navigationBackground }}\r\n      // thumbColor={\"#eeeeee\"}\r\n      thumbColor=\"#eeeeee\"\r\n      // @ts-ignore\r\n      activeThumbColor=\"#eeeeee\" // this prop is added and used by  react-native-web\r\n      onValueChange={(newValue) => {\r\n        if (disabled) return\r\n        toggleSwitch()\r\n        onValueChange && onValueChange(newValue)\r\n      }}\r\n      value={isEnabled}\r\n      {...otherProps}\r\n    />\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  switch: {\r\n    // react-native-web sets min width to half of height\r\n    height: isRunningInBrowser() ? 20 : 24,\r\n    width: isRunningInBrowser() ? 40 : 44,\r\n  },\r\n})\r\n","import React from \"react\"\r\nimport { CheckBox } from \"react-native-elements\"\r\nimport { View, StyleSheet } from \"react-native\"\r\nimport AppText from \"./AppText\"\r\nimport { palette } from \"../../styles/global\"\r\n\r\nfunction BlueCircle(filled = true) {\r\n  return (\r\n    <View\r\n      style={{\r\n        width: 15,\r\n        height: 15,\r\n        borderRadius: 10,\r\n        backgroundColor: filled ? palette.navigationBackground : \"transparent\",\r\n        borderWidth: 1,\r\n        borderColor: !filled ? palette.grayedOut : \"transparent\",\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\ntype Option = {\r\n  title: string\r\n  code_name: string\r\n}\r\n\r\nexport function RadioButtonGroup({\r\n  options,\r\n  onOptionSelected,\r\n  selectedOptionIndex = 0,\r\n}: {\r\n  options: Option[]\r\n  onOptionSelected: (option: Option) => void\r\n  selectedOptionIndex?: number\r\n}) {\r\n  const [selectedIndex, setIndex] = React.useState(selectedOptionIndex)\r\n\r\n  return (\r\n    <View style={{ flexGrow: 0, marginLeft: 20 }}>\r\n      {options.map((option, index) => (\r\n        <CheckBox\r\n          checked={selectedIndex === index}\r\n          onPress={() => setIndex(index) || onOptionSelected(option)}\r\n          checkedIcon={BlueCircle()}\r\n          uncheckedIcon={BlueCircle(false)}\r\n          title={<AppText style={styles.optionTitle}>{option.title}</AppText>}\r\n          containerStyle={styles.checkboxContainer}\r\n        />\r\n      ))}\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  optionTitle: {\r\n    marginLeft: 10,\r\n    fontSize: 14,\r\n  },\r\n\r\n  checkboxContainer: {\r\n    backgroundColor: \"transparent\",\r\n    borderWidth: 0,\r\n    flexGrow: 0,\r\n    marginVertical: 7,\r\n    marginLeft: 0,\r\n    padding: 0,\r\n  },\r\n})\r\n","import { useRoute } from \"@react-navigation/native\"\r\nimport React, { useCallback } from \"react\"\r\nimport AppText from \"../../../components/shared/AppText\"\r\nimport { View, StyleSheet, TextInput, Platform, TextInputProps } from \"react-native\"\r\nimport { palette } from \"../../../styles/global\"\r\nimport CustomSwitch from \"../../../components/shared/Switch\"\r\nimport { ScheduleClassFields } from \"../../../models/ScheduleClass/Types\"\r\nimport { CLASS_TYPE } from \"../../../models/ScheduleClass/Types\"\r\nimport { ScheduleClass } from \"../../../models/ScheduleClass/ScheduleClass\"\r\nimport { Formik, useFormikContext } from \"formik\"\r\nimport { REGLAMENT_DATA } from \"../../../constants/Constants\"\r\nimport getStrict from \"../../../utilities/getStrict\"\r\nimport { formatRoomName } from \"../../../components/ScheduleComponents/ScheduleClassComponent/Formatters\"\r\nimport _ from \"lodash\"\r\nimport { workDays, workDaysEnLower } from \"../../../constants/Days\"\r\nimport { WeekType } from \"../../../utilities/getWeekType\"\r\nimport { RadioButtonGroup } from \"../../../components/shared/RadioButtonGroup\"\r\n\r\n// autocomplete library: https://www.npmjs.com/package/react-native-autocomplete-input\r\n// another one: https://www.npmjs.com/package/react-native-autocomplete-dropdown\r\n\r\n// TODO: do not display all suggestions at once, but only those that match the query (unless query is empty, then display nothing)\r\n\r\ntype ScheduleClassEditables = Omit<ScheduleClassFields, \"index\" | \"isSharedClass\" | \"day\" | \"weekName\" | \"week\">\r\n\r\nconst AutoSubmitFormData = () => {\r\n  // Grab values and submitForm from context\r\n\r\n  let {\r\n    values,\r\n    initialValues,\r\n  }: {\r\n    values: ScheduleClassEditables\r\n    initialValues: ScheduleClassEditables\r\n  } = useFormikContext()\r\n\r\n  const { isSubmitting } = useFormikContext()\r\n\r\n  let submitFormCallback = useCallback(_.debounce(useFormikContext().submitForm, 1000), [])\r\n\r\n  // submitForm = _.debounce(submitForm, 1000)\r\n\r\n  React.useEffect(() => {\r\n    // values.teacher = [values.teacher]\r\n\r\n    // do not submit form if values haven't changed\r\n    if (values == initialValues) {\r\n      console.log(\"values haven't changed, won't submit\")\r\n      return\r\n    }\r\n\r\n    // Submit the form imperatively\r\n    // if (!isSubmitting) submitFormCallback()\r\n    // else console.log(\"already submitting, won't submit again\")\r\n    submitFormCallback()\r\n  }, [values])\r\n  return null\r\n}\r\n\r\n// a decorator around TextInput that adds a bottom border and styles the text\r\nconst FormTextInput = (props: TextInputProps & { captionText: string; noteText: string | undefined }) => {\r\n  return (\r\n    <View style={[styles.formField]}>\r\n      <AppText style={[styles.fieldCaption]}>{props.captionText}</AppText>\r\n\r\n      <View>\r\n        <TextInput cursorColor={palette.navigationBackground} style={styles.textInputText} {...props} />\r\n        <View style={[styles.underline]} />\r\n        {props.noteText ? (\r\n          <AppText style={[styles.fieldCaption, { fontSize: 12, fontFamily: \"montserrat-medium\" }]}>\r\n            {props.noteText}\r\n          </AppText>\r\n        ) : null}\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default function ScheduleClassForm() {\r\n  // const navigation = useNavigation()\r\n  // const options = navigation\r\n\r\n  const route = useRoute()\r\n  const data = route.params\r\n  const {\r\n    scheduleClass,\r\n    currentlyViewedWeek,\r\n    onFormDataUpdated,\r\n  }: {\r\n    scheduleClass: ScheduleClass\r\n    currentlyViewedWeek: WeekType\r\n    onFormDataUpdated: (data: ScheduleClassFields) => void\r\n  } = data\r\n\r\n  let kbAvoidingViewBehavior: \"padding\" | \"height\" | \"position\" = Platform.OS === \"ios\" ? \"padding\" : \"height\"\r\n  kbAvoidingViewBehavior = \"position\" // position seems to work better than height\r\n\r\n  let reglamentClass = getStrict(REGLAMENT_DATA, scheduleClass.index - 1)\r\n\r\n  let classStart: string = reglamentClass[1]\r\n  if (classStart.length == 4) classStart = \"0\" + classStart\r\n\r\n  const classEnd: string = reglamentClass[2]\r\n\r\n  const teacher = scheduleClass.teacher ?? \"\"\r\n\r\n  const dayUkrIndex = workDaysEnLower.findIndex((d) => scheduleClass.day == d)\r\n  console.log(\"|\" + scheduleClass.day + \"|\")\r\n  const dayUkr = workDays[dayUkrIndex]\r\n\r\n  const weekTypeUkr = currentlyViewedWeek == 0 ? \"Чисельник\" : \"Знаменник\"\r\n\r\n  const classType = scheduleClass.classType\r\n\r\n  const scheduleClassEditables = _.pick(scheduleClass, [\"isBiweekly\", \"name\", \"teacher\", \"room\", \"classType\"])\r\n\r\n  const initialFormikValues: ScheduleClassEditables = {\r\n    ...scheduleClassEditables,\r\n    teacher: typeof teacher !== \"string\" ? teacher.join(\", \") : teacher,\r\n    room: formatRoomName(scheduleClass, true),\r\n  }\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialFormikValues}\r\n      onSubmit={(values) => {\r\n        console.log(\"Submitting Formik form...\")\r\n        console.log(values)\r\n        onFormDataUpdated(values)\r\n      }}\r\n    >\r\n      {({ values, handleChange, handleBlur, submitForm }) => {\r\n        return (\r\n          <View>\r\n            <View\r\n              style={[\r\n                styles.row,\r\n                {\r\n                  justifyContent: \"space-between\",\r\n                },\r\n              ]}\r\n            >\r\n              <View>\r\n                <AppText style={[styles.headerTextPrimary]}>Пара №{scheduleClass.index}</AppText>\r\n                <AppText style={[styles.headerTextSecondary]}>\r\n                  {classStart} – {classEnd}\r\n                </AppText>\r\n              </View>\r\n\r\n              <View>\r\n                <AppText\r\n                  style={[\r\n                    {\r\n                      textAlign: \"right\",\r\n                    },\r\n                    styles.headerTextPrimary,\r\n                  ]}\r\n                >\r\n                  {weekTypeUkr}\r\n                </AppText>\r\n                <AppText\r\n                  style={[\r\n                    {\r\n                      textAlign: \"right\",\r\n                    },\r\n                    styles.headerTextSecondary,\r\n                  ]}\r\n                >\r\n                  {dayUkr}\r\n                </AppText>\r\n              </View>\r\n            </View>\r\n            <FormTextInput captionText=\"Предмет\" value={values.name} onChangeText={handleChange(\"name\")} />\r\n\r\n            <FormTextInput\r\n              autoCapitalize=\"words\"\r\n              captionText=\"Викладач\"\r\n              value={values.teacher}\r\n              noteText=\"*якщо декілька – прізвища через кому\"\r\n              onChangeText={handleChange(\"teacher\")}\r\n            />\r\n\r\n            <FormTextInput\r\n              captionText=\"Аудиторія\"\r\n              value={values.room}\r\n              noteText=\"*якщо декілька – через кому\"\r\n              onChangeText={handleChange(\"room\")}\r\n            />\r\n            {/* \r\n            <View style={[styles.row]}>\r\n              <AppText>Посилання: </AppText>\r\n              <TextInput placeholder=\"https://us04web.zoom.us/j/75735448331?pwd=4X7q7Wu5jf43QTje5BuhChQnUcL6I1.1\" />\r\n            </View> */}\r\n            <RadioButtonGroup\r\n              options={[\r\n                {\r\n                  title: CLASS_TYPE.LECTURE,\r\n                  code_name: CLASS_TYPE.LECTURE,\r\n                },\r\n                {\r\n                  title: CLASS_TYPE.LAB,\r\n                  code_name: CLASS_TYPE.LAB,\r\n                },\r\n                {\r\n                  title: CLASS_TYPE.PRACTICE,\r\n                  code_name: CLASS_TYPE.PRACTICE,\r\n                },\r\n              ]}\r\n              onOptionSelected={(o) => handleChange(\"classType\")(o.code_name)}\r\n              selectedOptionIndex={\r\n                values.classType == CLASS_TYPE.LECTURE ? 0 : values.classType == CLASS_TYPE.LAB ? 1 : 2\r\n              }\r\n            />\r\n\r\n            <View\r\n              style={[\r\n                styles.row,\r\n                {\r\n                  justifyContent: \"space-between\",\r\n                  paddingHorizontal: 20,\r\n                  paddingRight: 10,\r\n                },\r\n              ]}\r\n            >\r\n              <AppText\r\n                style={[\r\n                  {\r\n                    fontSize: 14,\r\n                    fontFamily: \"montserrat-medium\",\r\n                  },\r\n                ]}\r\n              >\r\n                Щотижнева пара\r\n              </AppText>\r\n              {/* <TextInput placeholder=\"Лекція\" /> */}\r\n\r\n              <CustomSwitch initVal={!values.isBiweekly} onValueChange={(e) => handleChange(\"isBiweekly\")(!e + \"\")} />\r\n            </View>\r\n\r\n            {/* <KeyboardAvoidingView behavior={kbAvoidingViewBehavior} style={[styles.row]}>\r\n        <AppText>KeyboardAvoidingView -1</AppText>\r\n        <Button title={\"Button\"} />\r\n      </KeyboardAvoidingView> */}\r\n            <AutoSubmitFormData />\r\n          </View>\r\n        )\r\n      }}\r\n    </Formik>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  row: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 20,\r\n  },\r\n\r\n  formField: {\r\n    marginVertical: 10,\r\n    paddingHorizontal: 20,\r\n  },\r\n\r\n  autocompleteContainer: {\r\n    flex: 1,\r\n    left: 0,\r\n    position: \"absolute\",\r\n    right: 0,\r\n    top: 0,\r\n    zIndex: 1,\r\n  },\r\n\r\n  underline: {\r\n    height: 1,\r\n    backgroundColor: \"#C6C4C4\",\r\n    width: \"100%\",\r\n\r\n    marginVertical: 1,\r\n  },\r\n\r\n  fieldCaption: {\r\n    fontFamily: \"montserrat-semibold\",\r\n    color: palette.grayedOut,\r\n  },\r\n\r\n  textInputText: {\r\n    fontSize: 14,\r\n    fontFamily: \"montserrat-semibold\",\r\n    color: palette.text,\r\n  },\r\n\r\n  headerTextPrimary: {\r\n    fontSize: 14,\r\n    fontFamily: \"montserrat-medium\",\r\n  },\r\n\r\n  headerTextSecondary: {\r\n    fontSize: 14,\r\n    fontFamily: \"montserrat-medium\",\r\n    color: palette.grayedOut,\r\n  },\r\n})\r\n","import React from \"react\"\r\nimport ScheduleScreen from \"./ScheduleScreen/ScheduleScreen\"\r\n\r\nexport default function ScheduleEditorScreen() {\r\n  return <ScheduleScreen isEditable={true} />\r\n}\r\n","import { createStackNavigator } from \"@react-navigation/stack\"\r\nimport * as React from \"react\"\r\nimport ScheduleEditor from \"../screens/TestTabsScreens/ScheduleEditor\"\r\nimport { View } from \"react-native\"\r\nimport StackHeader from \"../components/StackHeader\"\r\nimport ScheduleClassForm from \"../screens/TestTabsScreens/scheduleEditorStack/ScheduleClassForm\"\r\nimport ScheduleEditorScreen from \"../screens/ScheduleEditorScreen\"\r\n\r\nconst Stack = createStackNavigator()\r\n\r\nexport enum EditorStackRoutes {\r\n  EDITOR = \"Редактор\",\r\n  SCHEDULE_CLASS_FORM = \"ScheduleClassForm\",\r\n}\r\n\r\nexport default function EditorStack() {\r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={\r\n        {\r\n          // headerShown: false,\r\n        }\r\n      }\r\n    >\r\n      <Stack.Screen\r\n        name={EditorStackRoutes.EDITOR}\r\n        component={ScheduleEditorScreen}\r\n        options={{\r\n          header: () => <View />,\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name={EditorStackRoutes.SCHEDULE_CLASS_FORM}\r\n        component={ScheduleClassForm}\r\n        options={{\r\n          header: (props) => <StackHeader title={\"Пара\"} />,\r\n        }}\r\n      />\r\n    </Stack.Navigator>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { View, Text, StyleSheet, Linking } from \"react-native\"\r\nimport { globalStyles, palette } from \"../../styles/global\"\r\nimport AppText from \"../../components/shared/AppText\"\r\nimport { Ionicons } from \"@expo/vector-icons\"\r\nimport { ScrollView, TouchableOpacity } from \"react-native-gesture-handler\"\r\n\r\nexport default function FacultiesTestScreen() {\r\n  // TODO: perhaps, copy name and full name to clipboard on press\r\n\r\n  const renderFacultyCard = (\r\n    nameAbbreviation: string,\r\n    nameFull: string,\r\n    address: string,\r\n    phone: string,\r\n    mail: string\r\n  ) => {\r\n    return (\r\n      <View style={styles.facultyCard}>\r\n        <AppText\r\n          style={{\r\n            fontSize: 18,\r\n            fontFamily: \"montserrat-bold\",\r\n          }}\r\n        >\r\n          {nameAbbreviation}\r\n        </AppText>\r\n        <AppText style={[]}>{nameFull}</AppText>\r\n        <View style={[globalStyles.captionWithIcon, { marginVertical: 2 }]}>\r\n          <Ionicons name=\"location\" color={palette.grayedOut} size={16} />\r\n          <AppText style={{ marginLeft: 5, fontSize: 14, fontFamily: \"montserrat-semibold\" }}>{address}</AppText>\r\n        </View>\r\n        <TouchableOpacity\r\n          onPress={() => Linking.openURL(`tel:${phone}`)}\r\n          style={[globalStyles.captionWithIcon, { marginVertical: 2 }]}\r\n        >\r\n          <Ionicons name=\"call\" color={palette.grayedOut} size={16} />\r\n          <AppText style={{ marginLeft: 5, fontSize: 14, fontFamily: \"montserrat-semibold\" }}>{phone}</AppText>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity\r\n          onPress={() => Linking.openURL(`mailto:${mail}`)}\r\n          style={[globalStyles.captionWithIcon, { marginVertical: 2 }]}\r\n        >\r\n          <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />\r\n          <AppText\r\n            style={[{ marginLeft: 5, fontSize: 14, fontFamily: \"montserrat-semibold\" }, globalStyles.underlinedLink]}\r\n          >\r\n            {mail}\r\n          </AppText>\r\n        </TouchableOpacity>\r\n      </View>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      {renderFacultyCard(\r\n        \"ФВПІТ\",\r\n        \"Факультет видавничо-поліграфічних, інформаційних технологій\",\r\n        \"вул. Під Голоском, 19, ауд. 234\",\r\n        \"(032) 242 23 77\",\r\n        \"fvpit@uad.lviv.ua\"\r\n      )}\r\n\r\n      {renderFacultyCard(\r\n        \"ФКПІ\",\r\n        \"Факультет комп'ютерно-поліграфічної інженерії\",\r\n        \"вул. Під Голоском, 19, ауд. 219\",\r\n        \"(032) 242 23 76\",\r\n        \"fpu@uad.lviv.ua\"\r\n      )}\r\n\r\n      {renderFacultyCard(\r\n        \"ФМКП\",\r\n        \"Факультет медіакомунікацій та підприємництва\",\r\n        \"вул. Під Голоском, 19, ауд. 313\",\r\n        \"(032) 242 23 75\",\r\n        \"feoks@uad.lviv.ua\"\r\n      )}\r\n    </ScrollView>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 20,\r\n    paddingTop: 0,\r\n  },\r\n\r\n  facultyCard: {\r\n    ...globalStyles.card,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 12,\r\n\r\n    marginVertical: 5,\r\n  },\r\n})\r\n","export enum ContactsStackRoutes {\r\n  CONTACTS_MENU = \"Контакти (Меню)\",\r\n  FACULTIES = \"Факультети\",\r\n}\r\n","import { FontAwesome, Ionicons } from \"@expo/vector-icons\"\r\nimport React from \"react\"\r\nimport { Image } from \"react-native-elements\"\r\nimport { palette } from \"../styles/global\"\r\nimport { imageIcons } from \"./Images\"\r\nimport AppText from \"../components/shared/AppText\"\r\nimport { View } from \"react-native\"\r\n\r\nexport type ModalItem = {\r\n  icon: JSX.Element\r\n  text: string\r\n  isPhone?: boolean\r\n  isLink?: boolean\r\n  linkName?: string\r\n}\r\n\r\nlet academyCorps = [\r\n  \"вул. Під Голоском, 19\",\r\n  \"вул. Підвальна, 17\",\r\n  \"вул. Личаківська, 3\",\r\n  \"вул. Коцюбинського, 21\",\r\n  \"вул. Винниченка, 12\",\r\n]\r\n\r\n// Корпуси академії\r\nexport const corpsModalItems = academyCorps.map((corps) => {\r\n  return {\r\n    text: corps,\r\n    icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n  }\r\n})\r\n\r\n// Ректорат\r\nexport const rectorateModalItems: ModalItem[] = [\r\n  {\r\n    icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n    text: \"вул. Під Голоском, 19, ауд. 234\",\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n    text: \"(032) 242 23 77\",\r\n    isPhone: true,\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n    text: \"uad@uad.edu.ua\",\r\n    isLink: true,\r\n  },\r\n]\r\n\r\n// Підготовче відділення\r\nexport const preparationDepartmentModalItems: ModalItem[] = [\r\n  {\r\n    icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n    text: \"вул. Під Голоском, 19, ауд. 218\",\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n    text: \"(032) 242 23 78\",\r\n    isPhone: true,\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n    text: \"pv@uad.edu.ua\",\r\n    isLink: true,\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"globe\" color={palette.grayedOut} size={16} />,\r\n    text: \"http://www.uad-pv.pp.ua/\",\r\n    isLink: true,\r\n  },\r\n]\r\n\r\n// Відділ міжнародних звʼязків та інформаційного забезпечення\r\nexport const internationalAffairsAndInformationDepartmentModalItems: ModalItem[] = [\r\n  {\r\n    icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n    text: \"вул. Під Голоском, 19\",\r\n  },\r\n\r\n  {\r\n    icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n    text: \"(032) 259 94 21\",\r\n    isPhone: true,\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n    text: \"ird@uad.lviv.ua\",\r\n    isLink: true,\r\n  },\r\n]\r\n\r\n// Приймальна комісія\r\nexport const admissionsCommitteeModalItems: ModalItem[] = [\r\n  {\r\n    icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n    text: \"вул. Під Голоском, 19, каб. 417, 200\",\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n    text: \"(067) 149 14 00\",\r\n    isPhone: true,\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n    text: \"pk@uad.edu.ua\",\r\n    isLink: true,\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n    text: \"pk.uad.lviv@gmail.com\",\r\n    isLink: true,\r\n  },\r\n]\r\n\r\n// Бухгалтерія\r\nexport const accountingModalItems: ModalItem[] = [\r\n  {\r\n    icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n    text: \"вул. Під Голоском, 19, ауд. 213\",\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n    text: \"(032) 242 23 46\",\r\n    isPhone: true,\r\n  },\r\n]\r\n\r\n// Відділ платної форми навчання\r\nexport const contractEducationDepartmentModalItems: ModalItem[] = [\r\n  {\r\n    icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n    text: \"вул. Під Голоском, 19, ауд. 234а\",\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n    text: \"(032) 242 23 80\",\r\n    isPhone: true,\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n    text: \"vpn_uad@ukr.net\",\r\n    isLink: true,\r\n  },\r\n]\r\n\r\n// Профком студентів\r\nexport const studentUnionModalItems: ModalItem[] = [\r\n  {\r\n    icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n    text: \"вул. Під Голоском, 19, ауд. 311\",\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n    text: \"(032) 242 23 79\",\r\n    isPhone: true,\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n    text: \"(067) 67 23 173\",\r\n    isPhone: true,\r\n  },\r\n]\r\n\r\n// Студентська рада\r\nexport const studentCouncilModalItems: ModalItem[] = [\r\n  {\r\n    icon: <FontAwesome name=\"instagram\" color={palette.grayedOut} size={16} />,\r\n    text: \"https://www.instagram.com/uad_lviv/\",\r\n    isLink: true,\r\n    linkName: \"uad_lviv\",\r\n  },\r\n]\r\n\r\n// Соц. мережі академії\r\nexport const socialMediaModalItems: ModalItem[] = [\r\n  {\r\n    icon: (\r\n      <View style={{ marginLeft: 2 }}>\r\n        <FontAwesome name=\"instagram\" color={palette.grayedOut} size={16} />\r\n      </View>\r\n    ),\r\n\r\n    text: \"https://www.instagram.com/uad_lviv/\",\r\n    isLink: true,\r\n    linkName: \"@uad_lviv\",\r\n  },\r\n  {\r\n    icon: <FontAwesome name=\"telegram\" color={palette.grayedOut} size={16} />,\r\n    text: \"https://t.me/uad_live\",\r\n    isLink: true,\r\n    linkName: \"@uad_live\",\r\n  },\r\n  {\r\n    icon: <FontAwesome name=\"youtube-play\" color={palette.grayedOut} size={16} />,\r\n    text: \"https://www.youtube.com/user/UADtelevision\",\r\n    isLink: true,\r\n    linkName: \"UADtelevision\",\r\n  },\r\n  {\r\n    icon: <FontAwesome name=\"facebook-official\" color={palette.grayedOut} size={16} />,\r\n    text: \"https://www.facebook.com/uadlv\",\r\n    isLink: true,\r\n  },\r\n  {\r\n    icon: (\r\n      <Image\r\n        source={imageIcons.tiktok}\r\n        // color={palette.grayedOut}\r\n        style={{\r\n          width: 16,\r\n          height: 18,\r\n        }}\r\n      />\r\n    ),\r\n    text: \"https://www.tiktok.com/@uad.lviv\",\r\n    isLink: true,\r\n    linkName: \"@uad.lviv\",\r\n  },\r\n]\r\n","import { StyleSheet } from \"react-native\"\r\n\r\nexport const styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 10,\r\n    paddingBottom: 20,\r\n  },\r\n\r\n  screenBodyContainer: {\r\n    flex: 1,\r\n    flexGrow: 1,\r\n    // both properties are necessary for the content to scroll and be displayed correctly on android and web\r\n  },\r\n\r\n  category: {\r\n    marginVertical: 10,\r\n  },\r\n\r\n  navigateToSubcategoryButton: {},\r\n\r\n  subcategoryButtonContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    marginVertical: 8,\r\n  },\r\n\r\n  categoryTitle: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginLeft: 14,\r\n    marginBottom: 5,\r\n  },\r\n\r\n  subcategoryTitle: {\r\n    fontSize: 15,\r\n  },\r\n\r\n  optionText: {\r\n    marginLeft: 10,\r\n    fontSize: 16,\r\n  },\r\n})\r\n","import React from \"react\"\r\nimport { View, Image, StyleSheet } from \"react-native\"\r\nimport AppText from \"./shared/AppText\"\r\nimport { imageIcons } from \"../constants/Images\"\r\nimport { FontName } from \"../constants/Fonts\"\r\nimport { isRunningInBrowser } from \"../utilities/utilities\"\r\n\r\ntype WarningBarProps = {\r\n  text: string\r\n}\r\n\r\nexport default function WarningBar(props: WarningBarProps) {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Image style={styles.warningTriangleImage} source={imageIcons.warning_triangle} />\r\n      <View style={{ margin: 0, padding: 0 }}>\r\n        <AppText style={styles.warningText}>{props.text}</AppText>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexDirection: \"row\",\r\n    alignItems: isRunningInBrowser() ? \"flex-start\" : \"center\",\r\n\r\n    width: \"100%\",\r\n    backgroundColor: \"#FFDD67\",\r\n\r\n    padding: 6,\r\n    paddingLeft: 10,\r\n  },\r\n\r\n  warningTriangleImage: {\r\n    width: 13,\r\n    height: 13,\r\n    // marginHorizontal: 10,\r\n    marginRight: 7,\r\n  },\r\n\r\n  warningText: {\r\n    fontFamily: FontName.RalewayMedium,\r\n    alignSelf: \"center\",\r\n    // textAlignVertical: \"top\",\r\n    margin: 0,\r\n    padding: 0,\r\n    marginBottom: 2,\r\n  },\r\n})\r\n","import React from \"react\"\r\nimport { View, FlatList, Linking, Pressable } from \"react-native\"\r\nimport Separator from \"../../components/shared/Separator\"\r\nimport EntypoIcon from \"react-native-vector-icons/Entypo\"\r\nimport { Ionicons, Octicons } from \"@expo/vector-icons\"\r\nimport { globalStyles, palette } from \"../../styles/global\"\r\nimport { imageIcons } from \"../../constants/Images\"\r\nimport AppText from \"../../components/shared/AppText\"\r\nimport { ScrollView, TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport { Image } from \"react-native-elements\"\r\nimport OptionPickerModal from \"../../components/OptionPickerModalComponent/OptionPickerModal\"\r\nimport {\r\n  ModalItem,\r\n  accountingModalItems,\r\n  admissionsCommitteeModalItems,\r\n  contractEducationDepartmentModalItems,\r\n  corpsModalItems,\r\n  internationalAffairsAndInformationDepartmentModalItems,\r\n  preparationDepartmentModalItems,\r\n  rectorateModalItems,\r\n  socialMediaModalItems,\r\n  studentCouncilModalItems,\r\n  studentUnionModalItems,\r\n} from \"../../constants/Contacts\"\r\nimport { isMail } from \"../../utilities/utilities\"\r\nimport { useNavigation } from \"@react-navigation/native\"\r\nimport { FontName } from \"../../constants/Fonts\"\r\nimport { styles } from \"./Styles\"\r\nimport WarningBar from \"../../components/WarningBar\"\r\n\r\ntype CategoryProps = {\r\n  title: string\r\n  titleIcon: React.JSX.Element\r\n  subcategories?: string[]\r\n  onPress?: () => void\r\n  children?: React.JSX.Element[]\r\n}\r\n\r\nfunction Category({ title, titleIcon, subcategories, onPress, children }: CategoryProps) {\r\n  return (\r\n    <View style={styles.category}>\r\n      <View style={styles.categoryTitle}>\r\n        {titleIcon}\r\n        <AppText style={[{ fontSize: 14, fontFamily: FontName.Montserrat600, marginLeft: 5 }]}>{title}</AppText>\r\n      </View>\r\n      <FlatList\r\n        data={children}\r\n        style={[globalStyles.card, { paddingHorizontal: 10, paddingVertical: 10 }]}\r\n        keyExtractor={(item, index) => index.toString()}\r\n        ItemSeparatorComponent={() => {\r\n          return <Separator color=\"rgba(217, 217, 217, 0.4)\" upperElement={true} lowerElement={true} /> // TODO: Refactor\r\n        }}\r\n        renderItem={({ item }) => {\r\n          const itemOnPress = item.props.onPress\r\n          const ItemType = item.type\r\n\r\n          const itemWithoutOnPress = <ItemType {...item.props} onPress={() => null} />\r\n\r\n          return (\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                itemOnPress() // hoist the onPress handler to parent for larger hitbox\r\n              }}\r\n              style={styles.subcategoryButtonContainer}\r\n            >\r\n              <AppText style={[{ fontSize: 15 }]}>{itemWithoutOnPress}</AppText>\r\n              <EntypoIcon name=\"chevron-small-right\" style={globalStyles.grayIcon}></EntypoIcon>\r\n            </TouchableOpacity>\r\n          )\r\n        }}\r\n      />\r\n    </View>\r\n  )\r\n}\r\n\r\nconst constructModalItem = (item: ModalItem, idx: number) => {\r\n  return (\r\n    <View\r\n      style={{\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        marginVertical: 6,\r\n      }}\r\n    >\r\n      {item.icon}\r\n      <AppText\r\n        onPress={() => {\r\n          if (item.isLink) {\r\n            if (isMail(item.text)) Linking.openURL(`mailto:${item.text}`)\r\n            else Linking.openURL(item.text)\r\n          } else if (item.isPhone) Linking.openURL(`tel:${item.text}`)\r\n        }}\r\n        style={[styles.optionText, item.isLink ? globalStyles.underlinedLink : {}]}\r\n      >\r\n        {item.linkName ? item.linkName : item.text}\r\n      </AppText>\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction constructContentPresenterModal(\r\n  headerText: string,\r\n  isOpen: boolean,\r\n  onCloseModal: () => void,\r\n  initialOptions: ModalItem[],\r\n  displaySeparators = false\r\n) {\r\n  return (\r\n    <OptionPickerModal\r\n      headerText={headerText}\r\n      isOpen={isOpen}\r\n      hasSearchBar={false}\r\n      displaySeparators={displaySeparators}\r\n      onCloseModal={onCloseModal}\r\n      options={initialOptions}\r\n      renderItem={constructModalItem}\r\n      isOptionSelectable={false}\r\n    />\r\n  )\r\n}\r\n\r\nexport default function ContactsScreen() {\r\n  const navigation = useNavigation()\r\n\r\n  const [corpsModalIsOpen, setCorpsModalIsOpen] = React.useState(false)\r\n\r\n  const [rectorateModalIsOpen, setRectorateModalIsOpen] = React.useState(false)\r\n  const [admissionCommitteeModalIsOpen, setAdmissionCommitteeModalIsOpen] = React.useState(false)\r\n  const [preparationDepartmentModalIsOpen, setPreparationDepartmentModalIsOpen] = React.useState(false)\r\n  const [\r\n    internationalAffairsAndInformationDepartmentModalIsOpen,\r\n    setInternationalAffairsAndInformationDepartmentModalIsOpen,\r\n  ] = React.useState(false)\r\n\r\n  const [accountingModalIsOpen, setAccountingModalIsOpen] = React.useState(false)\r\n  const [contractEducationModalIsOpen, setContractEducationModalIsOpen] = React.useState(false)\r\n  const [studentUnionModalIsOpen, setStudentUnionModalIsOpen] = React.useState(false)\r\n  const [studentCouncilModalIsOpen, setStudentCouncilModalIsOpen] = React.useState(false)\r\n  const [socialMediaModalIsOpen, setSocialMediaModalIsOpen] = React.useState(false)\r\n\r\n  const structureAndSubdivisionsSubcategories = [\r\n    \"Ректорат\",\r\n    \"Приймальна комісія\",\r\n    \"Підготовче відділення\",\r\n    \"Відділ міжнародних зв'язків та інф. забезпечення\",\r\n    \"Бухгалтерія\",\r\n    \"Відділ платної форми навчання\",\r\n    \"Профком студентів\",\r\n  ]\r\n\r\n  const studentCommunitiesSubcategories = [\"Студентська рада\", \"Соц. мережі академії\"]\r\n\r\n  return (\r\n    <View style={styles.screenBodyContainer}>\r\n      {/*  */}\r\n      <WarningBar text=\"Триває оновлення даних у зв'язку з реогранізацією.\" />\r\n\r\n      <ScrollView style={styles.container}>\r\n        <Category\r\n          title=\"Корпуси та факультети\"\r\n          titleIcon={\r\n            <Image\r\n              style={{\r\n                width: 14,\r\n                height: 14,\r\n                opacity: 0.5,\r\n              }}\r\n              source={imageIcons.museum}\r\n            />\r\n          }\r\n        >\r\n          <Pressable onPress={() => setCorpsModalIsOpen(true)}>\r\n            <AppText style={styles.subcategoryTitle}>Корпуси академії</AppText>\r\n\r\n            {constructContentPresenterModal(\r\n              \"Корпуси академії\",\r\n              corpsModalIsOpen,\r\n              () => setCorpsModalIsOpen(false),\r\n              corpsModalItems\r\n            )}\r\n          </Pressable>\r\n\r\n          <AppText\r\n            onPress={(e) => {\r\n              console.log(\"executing on press handler as child\")\r\n\r\n              // @ts-expect-error\r\n              navigation.push(\"Факультети\")\r\n              // e.stopPropagation()\r\n              // e.preventDefault()\r\n\r\n              return true\r\n            }}\r\n            style={styles.subcategoryTitle}\r\n          >\r\n            Факультети академії\r\n          </AppText>\r\n        </Category>\r\n\r\n        <Category\r\n          title=\"Структура і підрозділи\"\r\n          titleIcon={<Ionicons name=\"git-merge-outline\" size={16} color={palette.text} />}\r\n          subcategories={structureAndSubdivisionsSubcategories}\r\n        >\r\n          <Pressable onPress={() => setRectorateModalIsOpen(true)}>\r\n            {constructContentPresenterModal(\r\n              \"Ректорат\",\r\n              rectorateModalIsOpen,\r\n              () => setRectorateModalIsOpen(false),\r\n              rectorateModalItems\r\n            )}\r\n            <AppText style={styles.subcategoryTitle}>Ректорат</AppText>\r\n          </Pressable>\r\n\r\n          <Pressable onPress={() => setAdmissionCommitteeModalIsOpen(true)}>\r\n            {constructContentPresenterModal(\r\n              \"Приймальна комісія\",\r\n              admissionCommitteeModalIsOpen,\r\n              () => setAdmissionCommitteeModalIsOpen(false),\r\n              admissionsCommitteeModalItems\r\n            )}\r\n            <AppText style={styles.subcategoryTitle}>Приймальна комісія</AppText>\r\n          </Pressable>\r\n\r\n          <Pressable onPress={() => setPreparationDepartmentModalIsOpen(true)}>\r\n            {constructContentPresenterModal(\r\n              \"Підготовче відділення\",\r\n              preparationDepartmentModalIsOpen,\r\n              () => setPreparationDepartmentModalIsOpen(false),\r\n              preparationDepartmentModalItems\r\n            )}\r\n            <AppText style={styles.subcategoryTitle}>Підготовче відділення</AppText>\r\n          </Pressable>\r\n\r\n          <Pressable onPress={() => setInternationalAffairsAndInformationDepartmentModalIsOpen(true)}>\r\n            {constructContentPresenterModal(\r\n              \"Відділ міжнародних звʼязків та інф. забезпечення\",\r\n              internationalAffairsAndInformationDepartmentModalIsOpen,\r\n              () => setInternationalAffairsAndInformationDepartmentModalIsOpen(false),\r\n              internationalAffairsAndInformationDepartmentModalItems\r\n            )}\r\n            <AppText style={[styles.subcategoryTitle]}>Відділ міжнародних звʼязків{\"\\n\"}та інф. забезпечення</AppText>\r\n          </Pressable>\r\n\r\n          <Pressable onPress={() => setAccountingModalIsOpen(true)}>\r\n            {constructContentPresenterModal(\r\n              \"Бухгалтерія\",\r\n              accountingModalIsOpen,\r\n              () => setAccountingModalIsOpen(false),\r\n              accountingModalItems\r\n            )}\r\n            <AppText style={styles.subcategoryTitle}>Бухгалтерія</AppText>\r\n          </Pressable>\r\n\r\n          <Pressable onPress={() => setContractEducationModalIsOpen(true)}>\r\n            {constructContentPresenterModal(\r\n              \"Відділ платної форми навчання\",\r\n              contractEducationModalIsOpen,\r\n              () => setContractEducationModalIsOpen(false),\r\n              contractEducationDepartmentModalItems\r\n            )}\r\n            <AppText style={styles.subcategoryTitle}>Відділ платної форми навчання</AppText>\r\n          </Pressable>\r\n\r\n          <Pressable onPress={() => setStudentUnionModalIsOpen(true)}>\r\n            {constructContentPresenterModal(\r\n              \"Профком студентів\",\r\n              studentUnionModalIsOpen,\r\n              () => setStudentUnionModalIsOpen(false),\r\n              studentUnionModalItems\r\n            )}\r\n            <AppText style={styles.subcategoryTitle}>Профком студентів</AppText>\r\n          </Pressable>\r\n        </Category>\r\n\r\n        <Category\r\n          title=\"Студентські спільноти\"\r\n          titleIcon={<Octicons name=\"accessibility\" size={16} color={palette.text} />}\r\n          onPress={() => {}}\r\n        >\r\n          <Pressable onPress={() => setStudentCouncilModalIsOpen(true)}>\r\n            {constructContentPresenterModal(\r\n              \"Студентська рада\",\r\n              studentCouncilModalIsOpen,\r\n              () => setStudentCouncilModalIsOpen(false),\r\n              studentCouncilModalItems\r\n            )}\r\n            <AppText style={styles.subcategoryTitle}>Студентська рада</AppText>\r\n          </Pressable>\r\n\r\n          <Pressable onPress={() => setSocialMediaModalIsOpen(true)}>\r\n            {constructContentPresenterModal(\r\n              \"Соц. мережі академії\",\r\n              socialMediaModalIsOpen,\r\n              () => setSocialMediaModalIsOpen(false),\r\n              socialMediaModalItems\r\n            )}\r\n            <AppText style={styles.subcategoryTitle}>Соц. мережі академії</AppText>\r\n          </Pressable>\r\n        </Category>\r\n      </ScrollView>\r\n    </View>\r\n  )\r\n}\r\n","import * as React from \"react\"\r\n\r\nimport { createStackNavigator } from \"@react-navigation/stack\"\r\nimport FacultiesTestScreen from \"../screens/TestTabsScreens/FacultiesTestScreen\"\r\nimport { View } from \"react-native\"\r\nimport { ContactsStackRoutes } from \"./ContactsStackRoutes\"\r\nimport StackHeader from \"../components/StackHeader\"\r\nimport ContactsScreen from \"../screens/ContactsScreen/ContactsScreen\"\r\nimport { palette } from \"../styles/global\"\r\n\r\nconst Stack = createStackNavigator()\r\n\r\nexport default function ContactsStack() {\r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={\r\n        {\r\n          // headerShown: false,\r\n        }\r\n      }\r\n    >\r\n      <Stack.Screen\r\n        name={ContactsStackRoutes.CONTACTS_MENU}\r\n        component={ContactsScreen}\r\n        options={{\r\n          header: () => <View />,\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name={ContactsStackRoutes.FACULTIES}\r\n        component={FacultiesTestScreen}\r\n        options={{\r\n          header: (props) => (\r\n            <StackHeader\r\n              title={\"Факультети академії\"}\r\n              useSafeAreaView={false}\r\n              hasBackground={false}\r\n              captionStyles={{ color: palette.text, fontFamily: \"montserrat-bold\", fontSize: 20 }}\r\n            />\r\n          ),\r\n        }}\r\n      />\r\n    </Stack.Navigator>\r\n  )\r\n}\r\n","import { StyleSheet } from \"react-native\"\r\n\r\nimport { globalStyles } from \"../../styles/global\"\r\n\r\nexport const styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 10,\r\n  },\r\n\r\n  newsArticleCard: {\r\n    ...globalStyles.card,\r\n    paddingVertical: 15,\r\n    paddingHorizontal: 15,\r\n\r\n    marginVertical: 5,\r\n  },\r\n\r\n  moreButton: {\r\n    ...globalStyles.navigationButton,\r\n    width: \"100%\",\r\n    paddingVertical: 7,\r\n  },\r\n})\r\n","import React from \"react\"\r\nimport Autolink, { AutolinkComponentProps } from \"react-native-autolink\"\r\nimport AppText from \"../../components/shared/AppText\"\r\n\r\ntype Part = { text: string; url: string }\r\n\r\n/**\r\n * CustomAutolink component. In addition to the functionality of the Autolink component, it also supports Markdown-style links.\r\n */\r\nexport const CustomAutolink = (props: AutolinkComponentProps) => {\r\n  const { text, ...rest } = props\r\n\r\n  // Regular expression to match Markdown-style links\r\n  const markdownLinkRegex = /\\[([^\\]]+)\\]\\(([^)]+)\\)/g\r\n\r\n  // Parse the text to handle Markdown-style links\r\n  const parseMarkdownLinks = (inputText: string) => {\r\n    let lastIndex = 0\r\n    const result: (Part | string)[] = []\r\n\r\n    inputText.replace(markdownLinkRegex, (match, linkText, url, offset) => {\r\n      if (offset > lastIndex) {\r\n        result.push(inputText.slice(lastIndex, offset))\r\n      }\r\n      result.push({ text: linkText, url })\r\n      lastIndex = offset + match.length\r\n\r\n      return \"\"\r\n    })\r\n\r\n    if (lastIndex < inputText.length) {\r\n      result.push(inputText.slice(lastIndex))\r\n    }\r\n\r\n    return result\r\n  }\r\n\r\n  const parsedText = parseMarkdownLinks(text)\r\n\r\n  return (\r\n    <AppText>\r\n      {parsedText.map((part, index) => {\r\n        if (typeof part === \"string\") {\r\n          return <Autolink key={index} text={part} {...rest} />\r\n        } else {\r\n          return (\r\n            <AppText key={index} style={props.linkStyle} onPress={() => props.onPress && props.onPress(part.url, null)}>\r\n              {part.text}\r\n            </AppText>\r\n          )\r\n        }\r\n      })}\r\n    </AppText>\r\n  )\r\n}\r\n\r\n// function constructLinkElement(text: string, link: string) {\r\n//   return (\r\n//     <AppText\r\n//       onPress={() => {\r\n//         Linking.openURL(link)\r\n//       }}\r\n//       style={[{ textDecorationLine: \"none\", marginBottom: 0 }]}\r\n//     >\r\n//       {text}\r\n//     </AppText>\r\n//   )\r\n// }\r\n","import React, { useState } from \"react\"\r\n\r\nimport { Linking, View } from \"react-native\"\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport AppText from \"../../components/shared/AppText\"\r\nimport { FontName } from \"../../constants/Fonts\"\r\nimport { globalStyles, palette } from \"../../styles/global\"\r\nimport { truncateText } from \"../../utilities/utilities\"\r\nimport { styles } from \"./Styles\"\r\nimport { CustomAutolink } from \"../../components/shared/ExtendedAutoLink\"\r\n\r\nexport function NewsCard({ date, title, body }: { date: string; title: string; body: string }) {\r\n  // convert date into day/month/year format\r\n  const dateObj = new Date(date)\r\n  const day = dateObj.getDate()\r\n  const month = dateObj.getMonth() + 1\r\n  const year = dateObj.getFullYear()\r\n  date = `${day}.${month}.${year}`\r\n\r\n  const [isBodyExpanded, setIsBodyExpanded] = useState(false)\r\n  const bodyStateAdjustedText = isBodyExpanded ? body : truncateText(body, 280)\r\n\r\n  const shouldShowLengthControlButton = body.length > 280\r\n  const lengthControlButton = (\r\n    <TouchableOpacity onPress={() => setIsBodyExpanded(!isBodyExpanded)} style={styles.moreButton}>\r\n      <AppText style={{ fontFamily: FontName.MontserratSemiBold, color: palette.navigationBackground }}>\r\n        {!isBodyExpanded ? \"Детальніше\" : \"Згорнути\"}\r\n      </AppText>\r\n    </TouchableOpacity>\r\n  )\r\n\r\n  return (\r\n    <View style={{ marginBottom: 15 }}>\r\n      <AppText style={{ alignSelf: \"center\" }}>{date}</AppText>\r\n      <View style={styles.newsArticleCard}>\r\n        <AppText style={{ fontFamily: FontName.MontserratBold, fontSize: 14 }}>{title}</AppText>\r\n        <AppText style={{ marginVertical: 15, fontFamily: FontName.MontserratRegular }}>\r\n          {\r\n            <CustomAutolink\r\n              onPress={(url) => Linking.openURL(url)}\r\n              text={bodyStateAdjustedText}\r\n              linkStyle={{ color: palette.navigationBackground }}\r\n            />\r\n          }\r\n          {\r\n            // \" [Детальніше](https://www.instagram.com/ntu_kpi/) \"\r\n          }\r\n        </AppText>\r\n\r\n        {shouldShowLengthControlButton ? lengthControlButton : <View style={globalStyles.invisible} />}\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { FlatList } from \"react-native-gesture-handler\"\r\nimport _ from \"lodash\"\r\nimport NewsLoaderService from \"../../services/NewsLoaderService/NewsLoaderService\"\r\nimport { NewsArticle } from \"../../services/NewsLoaderService/Types\"\r\nimport { styles } from \"./Styles\"\r\nimport { NewsCard } from \"./NewsCard\"\r\n\r\nexport default function NewsScreen() {\r\n  const [news, setNews] = useState<NewsArticle[]>([\r\n    //     {\r\n    //       //   createdAt: \"14.04.2023\",\r\n    //       createdAt: new Date().toDateString(),\r\n    //       title: \"Новий випуск журналу “Студентський MOOD”\",\r\n    //       body: `Привітики друзі! Прийшла весна і вже починає радувати нас сонечком та зеленню 🌷\r\n    // Сьогодні ж замість сонця - наш \"Студентський MOOD\"!\r\n    // Підготували вам тексти про відпочинок, війну та інше)\r\n    // Читайте, піклуйтеся про себе і близьких, і хай весна принесе всім нам лише хороші новини! 🌱`.repeat(2),\r\n    //     },\r\n  ])\r\n\r\n  // mount effect\r\n  useEffect(() => {\r\n    async function onMount() {\r\n      const newsLoaderService = await NewsLoaderService.GetInstance()\r\n      let fetchedNews\r\n      try {\r\n        fetchedNews = await newsLoaderService.getNewsFromContentful()\r\n      } catch (e) {\r\n        fetchedNews = newsLoaderService.getExampleNews()\r\n      }\r\n\r\n      setNews([...news, ...fetchedNews])\r\n    }\r\n\r\n    onMount()\r\n  }, [])\r\n\r\n  return (\r\n    <FlatList\r\n      data={news}\r\n      renderItem={({ item }) => <NewsCard date={item.createdAt} title={item.title} body={item.body} />}\r\n      style={styles.container}\r\n    />\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { View, StyleSheet } from \"react-native\"\r\n\r\nexport default function Card({\r\n  children,\r\n  shadows = true,\r\n  cardContentStyle = {},\r\n}: {\r\n  children: any\r\n  shadows?: boolean\r\n  cardContentStyle?: StyleSheet\r\n}) {\r\n  return (\r\n    <View style={{ ...styles.card, ...(!shadows ? styles.noShadow : {}) }}>\r\n      <View style={styles.cardContent}>{children}</View>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  card: {\r\n    // height: \"95%\",\r\n    // width: \"98%\",\r\n    borderRadius: 6,\r\n    elevation: 3,\r\n    backgroundColor: \"#fff\",\r\n    shadowOffset: { width: 1, height: 1 },\r\n    shadowColor: \"#333\",\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 2,\r\n    marginHorizontal: 4,\r\n    marginVertical: 6,\r\n    overflow: \"scroll\",\r\n  },\r\n\r\n  noShadow: {\r\n    elevation: 0,\r\n    shadowOpacity: 0,\r\n  },\r\n\r\n  cardContent: {\r\n    marginHorizontal: 5,\r\n    marginVertical: 20,\r\n  },\r\n})\r\n","import { useState, useEffect, useRef } from \"react\"\r\nimport { Text, View, Button } from \"react-native\"\r\nimport * as Notifications from \"expo-notifications\"\r\nimport React from \"react\"\r\nimport LocalNotificationsService from \"../../services/LocalNotificationsService/LocalNotificationsService\"\r\nimport { ScrollView } from \"react-native-gesture-handler\"\r\nimport Card from \"../../components/shared/card\"\r\nimport { Input } from \"react-native-elements\"\r\nimport Constants from \"expo-constants\"\r\nimport * as IntentLauncher from \"expo-intent-launcher\"\r\n\r\n// TODO: handle daylight savings. Perhaps ask user to reload notifications, that could be easier\r\n// this makes sense: if the user is interested in the app, they will cooperate\r\n\r\n// TODO: Test biweekly notifications\r\n\r\n// TODO: Fix package name not being resolved correctly first time the app is launched\r\n// a temp fix would be to always open notification channel settings for actual app\r\n\r\n// TODO: Configure notificatitions to appear on the lock screen\r\n\r\nexport default function NotificationTestsScreen() {\r\n  const [ready, setReady] = useState(false)\r\n\r\n  const [permission, setPermission] = useState<Notifications.PermissionStatus | null>(null)\r\n  const [scheduledNotifications, setScheduledNotifications] = useState<Notifications.NotificationRequest[]>([])\r\n  const [delayForExampleNotificationViaDate, setDelayForExampleNotificationViaDate] = useState(\"5\")\r\n\r\n  const [notification, setNotification] = useState<Notifications.Notification | null>(null)\r\n\r\n  const localNotificationsServiceRef = useRef<LocalNotificationsService | null>(null)\r\n\r\n  const notificationListener = useRef<Notifications.Subscription>()\r\n  const responseListener = useRef<Notifications.Subscription>()\r\n\r\n  // data: \"package:\" + pkg,\r\n  // \"interactive-schedule-notifications\"\r\n\r\n  // note: avoid using Constants[.manifest]\r\n\r\n  const requestConfigurePermissions = async () => {\r\n    // navigate to notification channel settings\r\n    // const pkg = Constants.manifest.releaseChannel ? Constants.manifest.android.package : \"host.exp.exponent\"\r\n\r\n    // IntentLauncher.startActivityAsync(\"android.settings.APP_NOTIFICATION_SETTINGS\", {\r\n    //   // data: \"package:\" + pkg,\r\n    //   extra: {\r\n    //     // \"android.provider.extra.CHANNEL_ID\": \"Default\",\r\n    //     \"android.provider.extra.APP_PACKAGE\": pkg,\r\n    //   },\r\n    // })\r\n\r\n    // const pkg = Constants.manifest.releaseChannel ? Constants.manifest.android.package : \"host.exp.exponent\"\r\n    const pkg = Constants.expoConfig.android.package\r\n    const allChannels = await Notifications.getNotificationChannelsAsync()\r\n    const channel = await Notifications.getNotificationChannelAsync(\"interactive-schedule-notifications\")\r\n    console.log(\"[Notification Tests] All channels of this app: \")\r\n    console.log(allChannels)\r\n    console.log(\"[Notification Tests] Channel id for main channel: \" + channel?.id)\r\n\r\n    IntentLauncher.startActivityAsync(\"android.settings.CHANNEL_NOTIFICATION_SETTINGS\", {\r\n      // data: \"package:\" + pkg,\r\n      extra: {\r\n        \"android.provider.extra.CHANNEL_ID\":\r\n          pkg == \"host.exp.exponent\" ? \"expo-experience\" : \"interactive-schedule-notifications\",\r\n        \"android.provider.extra.APP_PACKAGE\": pkg,\r\n      },\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    notificationListener.current = Notifications.addNotificationReceivedListener((notification) => {\r\n      setNotification(notification)\r\n      console.log(\"notification has beed shown\")\r\n    })\r\n\r\n    responseListener.current = Notifications.addNotificationResponseReceivedListener((response) => {\r\n      console.log(\"user responded to notification:\" + JSON.stringify(response))\r\n    })\r\n\r\n    const init = async () => {\r\n      let notifications = await LocalNotificationsService.GetInstance()\r\n      localNotificationsServiceRef.current = notifications\r\n\r\n      let registeredNotifications = await notifications.getAllScheduledNotificationsAsync()\r\n      let permissions = await notifications.checkPermissionsAsync()\r\n\r\n      setScheduledNotifications(registeredNotifications)\r\n      setPermission(permissions.status)\r\n\r\n      setReady(true)\r\n    }\r\n\r\n    init()\r\n\r\n    return () => {\r\n      Notifications.removeNotificationSubscription(notificationListener.current!)\r\n      Notifications.removeNotificationSubscription(responseListener.current!)\r\n    }\r\n  }, [])\r\n\r\n  if (!ready) {\r\n    return (\r\n      <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\r\n        <Text>Завантаження...</Text>\r\n      </View>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ScrollView contentContainerStyle={{ alignItems: \"center\" }}>\r\n      <Card style={{ backgroundColor: \"magenta\" }}>\r\n        <Text>Сповіщення дозволені: {permission}</Text>\r\n      </Card>\r\n\r\n      <View style={{ alignItems: \"center\", justifyContent: \"center\" }}>\r\n        <Text>Title: {notification && notification.request.content.title} </Text>\r\n        <Text>Body: {notification && notification.request.content.body}</Text>\r\n        <Text>Data: {notification && JSON.stringify(notification.request.content.data)}</Text>\r\n      </View>\r\n\r\n      <View>\r\n        <Text\r\n          style={{\r\n            alignSelf: \"center\",\r\n            marginBottom: 10,\r\n          }}\r\n        >\r\n          Сповіщення:\r\n        </Text>\r\n\r\n        <Button\r\n          title=\"Надіслати локальне сповіщення (приходить зі затримкою в ~3-5 секунд)\"\r\n          onPress={async () => {\r\n            localNotificationsServiceRef.current!.sendExampleNotification()\r\n          }}\r\n        />\r\n      </View>\r\n\r\n      <View style={{ marginVertical: 10 }}>\r\n        <View style={{ flexDirection: \"row\", width: \"50%\", alignItems: \"center\" }}>\r\n          <Text>Через секунд:</Text>\r\n          <Input\r\n            keyboardType=\"number-pad\"\r\n            defaultValue={delayForExampleNotificationViaDate}\r\n            onChangeText={(newValue) => setDelayForExampleNotificationViaDate(newValue)}\r\n          />\r\n        </View>\r\n\r\n        <Button\r\n          title={`Прислати сповіщення через ${delayForExampleNotificationViaDate} секунд`}\r\n          color={\"green\"}\r\n          onPress={async () => {\r\n            localNotificationsServiceRef.current!.scheduleExampleNotificationViaDate(\r\n              parseInt(delayForExampleNotificationViaDate)\r\n            )\r\n          }}\r\n        />\r\n      </View>\r\n\r\n      <View style={{ marginVertical: 10 }}>\r\n        <Text>Має показувати сповіщення кожні 5 секунд, навіть якщо додаток повністю закритий</Text>\r\n        <View style={{ marginVertical: 10 }}>\r\n          <Button\r\n            title=\"Присилати сповіщення кожнi 5 секунд\"\r\n            color={\"green\"}\r\n            onPress={async () => {\r\n              localNotificationsServiceRef.current!.scheduleRepeatableExampleNotification()\r\n            }}\r\n          />\r\n        </View>\r\n\r\n        <View style={{ marginVertical: 10 }}>\r\n          <Button\r\n            title=\"Присилати сповіщення кожного дня о 12:00\"\r\n            color={\"green\"}\r\n            onPress={async () => {\r\n              localNotificationsServiceRef.current!.scheduleRepeatableDailyExampleNotification()\r\n            }}\r\n          />\r\n        </View>\r\n\r\n        <View style={{ marginVertical: 10 }}>\r\n          <Button\r\n            title=\"Попросити дозволу на сповіщення\"\r\n            color={\"green\"}\r\n            onPress={async () => {\r\n              localNotificationsServiceRef.current!.checkPermissionsAsync\r\n            }}\r\n          />\r\n        </View>\r\n\r\n        <Button\r\n          title=\"Зупинити періодичні сповіщення\"\r\n          color={\"red\"}\r\n          onPress={async () => {\r\n            localNotificationsServiceRef.current!.cancelAllScheduledNotificationsAsync()\r\n          }}\r\n        />\r\n\r\n        <View>\r\n          <Text>Наступне Сповіщення</Text>\r\n          <Button\r\n            title=\"Попросити налаштувати сповіщення\"\r\n            onPress={() => {\r\n              requestConfigurePermissions()\r\n            }}\r\n          />\r\n        </View>\r\n      </View>\r\n    </ScrollView>\r\n  )\r\n}\r\n","import * as React from \"react\"\r\nimport { TouchableOpacity, View } from \"react-native\"\r\nimport { Ionicons } from \"@expo/vector-icons\"\r\nimport Collapsible from \"react-native-collapsible\"\r\nimport AppText from \"./AppText\"\r\n\r\nexport default function Expander({ header, children }: { header: string; children: React.ReactNode }) {\r\n  const [collapsed, setCollapsed] = React.useState(true)\r\n  //   console.log(\"[Expander] expander recieved these children:\")\r\n  //   console.log(children)\r\n\r\n  return (\r\n    <View>\r\n      <TouchableOpacity onPress={() => setCollapsed(!collapsed)}>\r\n        <AppText>\r\n          {header} <Ionicons name={collapsed ? \"arrow-down\" : \"arrow-up\"} />\r\n        </AppText>\r\n      </TouchableOpacity>\r\n\r\n      <Collapsible collapsed={collapsed}>{children}</Collapsible>\r\n    </View>\r\n  )\r\n}\r\n","import { useState, useEffect, useRef } from \"react\"\r\nimport { Text, View, Button, ToastAndroid } from \"react-native\"\r\n\r\nimport LocalNotificationsService from \"../../services/LocalNotificationsService/LocalNotificationsService\"\r\nimport * as Notifications from \"expo-notifications\"\r\nimport { FlatList, ScrollView } from \"react-native-gesture-handler\"\r\nimport React from \"react\"\r\nimport Card from \"../../components/shared/card\"\r\nimport Expander from \"../../components/shared/Expander\"\r\nimport { CheckBox, Input, SearchBar } from \"react-native-elements\"\r\nimport _ from \"lodash\"\r\n\r\n// TODO: Consider this warning:\r\n// VirtualizedList: You have a large list that is slow to update - make sure your renderItem function renders components that follow React performance best practices\r\n// like PureComponent, shouldComponentUpdate, etc. {\"contentLength\": 7060, \"dt\": 598, \"prevDt\": 859}\r\n\r\nexport default function ScheduledNotificationsScreen() {\r\n  const [ready, setReady] = useState(false)\r\n\r\n  let [showRegularClasses, setShowRegularClasses] = useState(false)\r\n  let [showBiweeklyClasses, setShowBiweeklyClasses] = useState(true)\r\n  let [filterQuery, setFilterQuery] = useState(\"\")\r\n\r\n  // fetch all scheduled nootifications\r\n  const localNotificationsServiceRef = useRef<LocalNotificationsService | null>(null)\r\n  let [scheduledNotifications, setScheduledNotifications] = useState<Notifications.NotificationRequest[]>([])\r\n\r\n  const scheduledNotificationsWithParsedTimestamp = _.cloneDeep(scheduledNotifications).map((n) => {\r\n    if (n.trigger.type === \"date\") {\r\n      n.trigger.value = new Date(n.trigger.value).toUTCString()\r\n      // n.trigger.timeZoneOffset = new Date(n.trigger.value).getTimezoneOffset()\r\n    }\r\n\r\n    return n\r\n  })\r\n  const filteredScheduledNotifications = scheduledNotificationsWithParsedTimestamp.filter((n) => {\r\n    if (n.trigger.type === \"weekly\" && !showRegularClasses) return false\r\n    if (n.trigger.type === \"date\" && !showBiweeklyClasses) return false\r\n\r\n    if (JSON.stringify(n).includes(filterQuery)) {\r\n      return true\r\n    }\r\n    return false\r\n  })\r\n\r\n  const sortedScheduledNotifications = _.sortBy(filteredScheduledNotifications, (n) => {\r\n    if (n.trigger.type === \"weekly\") {\r\n      return n.trigger.weekday * 24 * 60 + n.trigger.hour * 60 + n.trigger.minute\r\n    } else if (n.trigger.type === \"date\") {\r\n      return new Date(n.trigger.value) - 0\r\n    }\r\n  })\r\n\r\n  // display them\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      let notifications = await LocalNotificationsService.GetInstance()\r\n      localNotificationsServiceRef.current = notifications\r\n\r\n      let registeredNotifications = await notifications.getAllScheduledNotificationsAsync()\r\n\r\n      setScheduledNotifications(registeredNotifications)\r\n      setReady(true)\r\n    }\r\n\r\n    init()\r\n  }, [])\r\n\r\n  return (\r\n    <View style={{ alignItems: \"center\", marginTop: 40 }}>\r\n      <Text>Всього запланованих сповіщень: {scheduledNotifications.length}</Text>\r\n      <Button\r\n        title=\"Fetch All Scheduled Notifications\"\r\n        onPress={async () => {\r\n          // show toast\r\n          // AndroidToast.show(\"Fetching all scheduled notifications...\", AndroidToast.SHORT)\r\n\r\n          ToastAndroid.show(\"Fetching all scheduled notifications...\", ToastAndroid.SHORT)\r\n          let notifications = await localNotificationsServiceRef.current!.getAllScheduledNotificationsAsync()\r\n\r\n          setScheduledNotifications(notifications)\r\n          ToastAndroid.show(\"Fetched and set state...\", ToastAndroid.SHORT)\r\n        }}\r\n      />\r\n      <Text>Список запланованих сповіщень: </Text>\r\n      <ScrollView style={{ minHeight: 55 }} horizontal contentContainerStyle={{ flexDirection: \"row\" }}>\r\n        <CheckBox\r\n          checked={showRegularClasses}\r\n          onPress={() => setShowRegularClasses(!showRegularClasses)}\r\n          title={\"Щотижневі пари\"}\r\n        />\r\n        <CheckBox\r\n          checked={showBiweeklyClasses}\r\n          onPress={() => setShowBiweeklyClasses(!showBiweeklyClasses)}\r\n          title={\"Щодвотижневі пари (Ті, що по чисельнику/знаменнику\"}\r\n        />\r\n      </ScrollView>\r\n\r\n      <View style={{ width: \"70%\" }}>\r\n        <Input\r\n          ref={(search) => (this.search = search)}\r\n          onChangeText={(text) => setFilterQuery(text)}\r\n          placeholder=\"Filter By Text\"\r\n          onBlur={() => null}\r\n        />\r\n      </View>\r\n\r\n      <FlatList\r\n        data={sortedScheduledNotifications}\r\n        keyExtractor={(item) => item.identifier}\r\n        ListEmptyComponent={() => (\r\n          <View>\r\n            <Text>Сповіщень не знайдено</Text>\r\n          </View>\r\n        )}\r\n        renderItem={({ item, index }) => {\r\n          const notification = item\r\n\r\n          return (\r\n            <Card\r\n              key={index}\r\n              style={{\r\n                backgroundColor: \"red\",\r\n              }}\r\n            >\r\n              <Text style={{ alignSelf: \"center\" }}>Notification #{index + 1}</Text>\r\n              <Text>\r\n                Notification title: <Text style={{ fontWeight: \"bold\" }}>{notification.content.title}</Text>{\" \"}\r\n              </Text>\r\n              <Text>Notification trigger type: {notification.trigger.type}</Text>\r\n              <Expander header=\"Notification Details\">\r\n                <View>\r\n                  <Text>Details:</Text>\r\n                  <Text>Notification id: {notification.identifier} </Text>\r\n\r\n                  <Text> {JSON.stringify(notification.trigger)} </Text>\r\n                </View>\r\n              </Expander>\r\n\r\n              <View style={{ marginVertical: 10, alignItems: \"flex-end\" }}>\r\n                <Button\r\n                  onPress={() =>\r\n                    localNotificationsServiceRef.current!.cancelScheduledNotificationAsync(notification.identifier)\r\n                  }\r\n                  title=\"Cancel\"\r\n                  color={\"red\"}\r\n                />\r\n              </View>\r\n            </Card>\r\n          )\r\n        }}\r\n      />\r\n    </View>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { View, StyleSheet } from \"react-native\"\r\nimport { Modal } from \"react-native\"\r\nimport { Pressable } from \"react-native\"\r\nimport { ScrollView } from \"react-native-gesture-handler\"\r\nimport { globalStyles } from \"../styles/global\"\r\n\r\n// TODO: Manually type the ContentViewModalProps. It was auto generated by VSCode\r\ntype ContentViewModalProps = {\r\n  visible: boolean\r\n  closeModal: () => void\r\n  children:\r\n    | string\r\n    | number\r\n    | boolean\r\n    | React.ReactElement<any, string | React.JSXElementConstructor<any>>\r\n    | React.ReactFragment\r\n    | React.ReactPortal\r\n}\r\n\r\nexport default function ContentViewModal(props: ContentViewModalProps) {\r\n  return (\r\n    <Modal animationType=\"fade\" transparent={true} style={styles.modal} visible={props.visible}>\r\n      <Pressable onPress={() => props.closeModal()} style={styles.overlay}></Pressable>\r\n\r\n      <View style={styles.modalContentContainer}>\r\n        <ScrollView style={styles.modalChildren}>{props.children}</ScrollView>\r\n      </View>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  modal: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"red\", // not gonna work cause it's transparent\r\n  },\r\n\r\n  overlay: {\r\n    backgroundColor: \"rgba(0, 0, 0, 0.25)\",\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n\r\n  modalContentContainer: {\r\n    ...globalStyles.modalContentContainer,\r\n  },\r\n\r\n  modalChildren: {\r\n    height: \"100%\",\r\n  },\r\n})\r\n","import React from \"react\"\r\n\r\nimport { View } from \"react-native\"\r\nimport { StyleSheet } from \"react-native\"\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport AppText from \"./AppText\"\r\nimport { palette } from \"../../styles/global\"\r\n\r\nexport default function FlatButton({ onPress, text, color }: { onPress: () => void; text: string; color?: string }) {\r\n  return (\r\n    <TouchableOpacity style={{ alignItems: \"flex-start\" }} onPress={onPress}>\r\n      <View style={styles.button}>\r\n        <AppText style={styles.closeButtonText}>{text}</AppText>\r\n      </View>\r\n    </TouchableOpacity>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  closeButtonText: {\r\n    fontFamily: \"montserrat-600\",\r\n    color: palette.grayedOut,\r\n    fontSize: 16,\r\n  },\r\n\r\n  button: {\r\n    alignItems: \"flex-start\",\r\n    backgroundColor: \"#FFFFFF\",\r\n    borderWidth: 1,\r\n    borderColor: \"#E6E6E6\",\r\n    padding: 10,\r\n    paddingHorizontal: 30,\r\n    marginTop: 10,\r\n    // borderRadius: 10,\r\n\r\n    shadowColor: \"rgba(0,0,0,1)\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 1,\r\n    },\r\n    elevation: 0.2,\r\n    shadowOpacity: 0.0,\r\n    shadowRadius: 0,\r\n    borderRadius: 10,\r\n  },\r\n})\r\n","import { useEffect } from \"react\"\r\nimport React from \"react\"\r\n\r\nimport { View, StyleSheet } from \"react-native\"\r\nimport AppText from \"../../components/shared/AppText\"\r\n\r\nimport * as FileSystem from \"expo-file-system\"\r\nimport { Button } from \"@rneui/themed\"\r\nimport { Input } from \"react-native-elements\"\r\nimport ContentViewModal from \"../../components/ContentViewModal\"\r\nimport { ScrollView, TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport { Asset, ContentfulClientApi } from \"contentful\"\r\nimport Expander from \"../../components/shared/Expander\"\r\nimport ScheduleLoaderService from \"../../services/ScheduleLoaderService/ScheduleLoaderService\"\r\nimport FlatButton from \"../../components/shared/Button\"\r\nimport { getContentfulClient } from \"../../utilities/utilities\"\r\n\r\nconst pathToSchedules = `assets/schedules/`\r\n// const istSchedule = FileSystem.readAsStringAsync(pathToSchedules + \"IST-51M.json\")\r\n// const bundledAssetsInfo = FileSystem.getInfoAsync(\"\")\r\n\r\nexport default function FileSystemScreen() {\r\n  const [bundledAssetsInfo, setBundledAssetsInfo] = React.useState([])\r\n\r\n  const [fileContentModalVisible, setFileContentModalVisible] = React.useState(false)\r\n  const [selectedFileContent, setSelectedFileContent] = React.useState(\"selected file content\")\r\n\r\n  const [currentDir, setCurrentDir] = React.useState<string>(FileSystem.documentDirectory)\r\n  const [allFiles, setAllFiles] = React.useState<string[]>([])\r\n\r\n  const [firstFieldText, setFirstFieldText] = React.useState(\"\")\r\n  const [secondFieldText, setSecondFieldText] = React.useState(\"\")\r\n\r\n  const [contentfulSchedule, setContentfulSchedule] = React.useState(\"\")\r\n  const [contentfulScheduleAsAsset, setContentfulScheduleAsAsset] = React.useState(\"\")\r\n  const [contentfulScheduleAsDownloadedAsset, setContentfulScheduleAsDownloadedAsset] = React.useState(\"\")\r\n  const [allContentfulAssets, setAllContentfulAssets] = React.useState(\"\")\r\n\r\n  const saveToFile = async () => {\r\n    const text = firstFieldText + \"\\n\" + secondFieldText\r\n\r\n    const path = FileSystem.documentDirectory + \"test.txt\"\r\n    const content = text\r\n\r\n    await FileSystem.writeAsStringAsync(path, content)\r\n\r\n    const info = await FileSystem.getInfoAsync(path)\r\n    console.log(\"save successful. file info:\")\r\n    console.log(info)\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function init() {\r\n      // const info = await FileSystem.readDirectoryAsync(FileSystem.bundleDirectory)\r\n      // console.log(\"bundled assets info:\")\r\n      // console.log(info)\r\n\r\n      let allFiles = await FileSystem.readDirectoryAsync(currentDir)\r\n\r\n      console.log(\"all files:\")\r\n      console.log(allFiles)\r\n      setAllFiles(allFiles)\r\n\r\n      const client: ContentfulClientApi = getContentfulClient()\r\n\r\n      client\r\n        .getEntry(\"4DlBdNKIvYPma8B18WwQsJ\")\r\n        .then((entry) => {\r\n          console.log(entry)\r\n          setContentfulSchedule(JSON.stringify(entry, null, 4))\r\n        })\r\n        .catch((e) => {\r\n          console.error(\"fetching contentful schedule failed:\")\r\n          console.error(e)\r\n        })\r\n\r\n      client\r\n        .getAsset(\"2wFiyBYGXQbdRvtnSAS8Xm\")\r\n        .then((asset) => {\r\n          console.log(asset)\r\n          setContentfulScheduleAsAsset(JSON.stringify(asset, null, 4))\r\n          const file = asset.fields.file\r\n\r\n          const protocol = \"https:\"\r\n          const linkToFile = file.url\r\n          FileSystem.downloadAsync(protocol + linkToFile, FileSystem.documentDirectory + file.fileName, {}).then(\r\n            (res) => {\r\n              console.log(\"downloaded file:\")\r\n              console.log(res)\r\n\r\n              FileSystem.readAsStringAsync(res.uri).then((content) => {\r\n                setContentfulScheduleAsDownloadedAsset(content)\r\n              })\r\n            }\r\n          )\r\n        })\r\n        .catch((e) => {\r\n          console.error(\"fetching contentful schedule as asset failed:\")\r\n          console.error(e)\r\n\r\n          setContentfulScheduleAsAsset(\"failed to download the asset\")\r\n          setContentfulScheduleAsDownloadedAsset(\"failed to download the asset\")\r\n        })\r\n\r\n      client.getAssets().then((assets) => {\r\n        console.log(assets)\r\n\r\n        let assetNames: string[] = []\r\n\r\n        if (assets.items.length !== 0) {\r\n          assetNames = assets.items.map((a) => a.fields.file.fileName)\r\n        }\r\n\r\n        setAllContentfulAssets(JSON.stringify(assetNames, null, 4))\r\n      })\r\n\r\n      await initFields()\r\n\r\n      // for testing purposes:\r\n      let scheudleLoaderInstance = ScheduleLoaderService.GetInstance()\r\n    }\r\n\r\n    init()\r\n  }, [])\r\n\r\n  async function initFields() {\r\n    // read from test.txt\r\n    const path = FileSystem.documentDirectory + \"test.txt\"\r\n\r\n    let content: string\r\n\r\n    try {\r\n      content = await FileSystem.readAsStringAsync(path)\r\n    } catch (e) {\r\n      content = \"a\\nb\"\r\n    }\r\n    const lines = content.split(\"\\n\")\r\n\r\n    setFirstFieldText(lines[0])\r\n    setSecondFieldText(lines[1])\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View>\r\n        <Input onChangeText={(text) => setFirstFieldText(text)} value={firstFieldText} />\r\n        <Input onChangeText={(text) => setSecondFieldText(text)} value={secondFieldText} />\r\n      </View>\r\n      <View style={{ flexDirection: \"row\" }}>\r\n        <Button color={\"success\"} title={\"Зберегти\"} onPress={() => saveToFile()} />\r\n        <Button color={\"error\"} title={\"Скасувати\"} onPress={() => initFields()} />\r\n      </View>\r\n      <View>\r\n        <FlatButton\r\n          text={\"Усі Файли\"}\r\n          onPress={() => {\r\n            setCurrentDir(FileSystem.documentDirectory)\r\n            FileSystem.readDirectoryAsync(FileSystem.documentDirectory).then((content) => {\r\n              setAllFiles(content)\r\n            })\r\n          }}\r\n        />\r\n        <ScrollView>\r\n          {allFiles.map((f, idx) => (\r\n            <TouchableOpacity\r\n              key={idx}\r\n              onLongPress={() => {\r\n                FileSystem.deleteAsync(currentDir + f).then(() => {\r\n                  setAllFiles(allFiles.filter((file) => file !== f))\r\n                })\r\n              }}\r\n              onPress={async () => {\r\n                let isFolder = (await FileSystem.getInfoAsync(FileSystem.documentDirectory + f)).isDirectory\r\n\r\n                if (isFolder) {\r\n                  setCurrentDir(FileSystem.documentDirectory + f + \"/\")\r\n                  FileSystem.readDirectoryAsync(FileSystem.documentDirectory + f).then((content) => {\r\n                    setAllFiles(content)\r\n                  })\r\n                } else {\r\n                  FileSystem.readAsStringAsync(currentDir + f).then((content) => {\r\n                    setSelectedFileContent(content)\r\n                    setFileContentModalVisible(true)\r\n                  })\r\n                }\r\n              }}\r\n            >\r\n              <AppText>{f}</AppText>\r\n            </TouchableOpacity>\r\n          ))}\r\n        </ScrollView>\r\n      </View>\r\n      <View>\r\n        <AppText style={{ color: \"red\" }}>Файли, що йдуть разом з додатком (не працює):</AppText>\r\n        <View></View>\r\n      </View>\r\n      <View>\r\n        <Expander header=\"Contentful Entry тест\">\r\n          <ScrollView style={{ height: 500 }}>\r\n            <AppText>{contentfulSchedule}</AppText>\r\n          </ScrollView>\r\n        </Expander>\r\n      </View>\r\n      <View>\r\n        <Expander header=\"Contentful Asset Test\">\r\n          <ScrollView style={{ height: 200 }}>\r\n            <AppText>{contentfulScheduleAsAsset}</AppText>\r\n          </ScrollView>\r\n        </Expander>\r\n      </View>\r\n      <View>\r\n        <Expander header=\"Contentful Asset As Downloaded File Test\">\r\n          <ScrollView style={{ height: 200 }}>\r\n            <AppText>{contentfulScheduleAsDownloadedAsset}</AppText>\r\n          </ScrollView>\r\n        </Expander>\r\n      </View>\r\n      <View>\r\n        <Expander header=\"All Contentful Assets\">\r\n          <ScrollView style={{ height: 200 }}>\r\n            <AppText>{allContentfulAssets}</AppText>\r\n          </ScrollView>\r\n        </Expander>\r\n      </View>\r\n\r\n      <ContentViewModal visible={fileContentModalVisible} closeModal={() => setFileContentModalVisible(false)}>\r\n        <AppText>{selectedFileContent}</AppText>\r\n      </ContentViewModal>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n})\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { View, Text, StyleSheet } from \"react-native\"\r\nimport { Button } from \"react-native-elements\"\r\nimport { SafeAreaView } from \"react-native-safe-area-context\"\r\nimport ScheduleLoaderService from \"../../services/ScheduleLoaderService/ScheduleLoaderService\"\r\nimport ScheduleModel from \"../../models/ScheduleModel/ScheduleModel\"\r\nimport { ScheduleDay } from \"../../models/ScheduleDay/ScheduleDay\"\r\nimport SettingsService from \"../../services/SettingsService/SettingsService\"\r\nimport { FlatList, TouchableOpacity } from \"react-native-gesture-handler\"\r\n\r\nimport { useSwipeableItemParams } from \"react-native-swipeable-item\"\r\nimport { globalStyles } from \"../../styles/global\"\r\nimport { useNavigation } from \"@react-navigation/native\"\r\nimport _ from \"lodash\"\r\nimport { EditorStackRoutes } from \"../../routes/EditorStackRoutes\"\r\n\r\nimport \"setimmediate\"\r\n\r\n// TODO: use this library to implement swipeable items\r\n// https://github.com/computerjazz/react-native-swipeable-item\r\n\r\nexport default function ScheduleEditor() {\r\n  let [isReady, setIsReady] = useState(false)\r\n  let [sampleScheduleDay, setSampleDay] = useState<ScheduleDay>()\r\n\r\n  let settingsServiceRef = React.useRef<SettingsService | null>(null)\r\n\r\n  let navigation = useNavigation()\r\n  const currentRouteName = navigation.getId()\r\n\r\n  useEffect(() => {\r\n    async function init() {\r\n      let scheduleLoaderInstance = await ScheduleLoaderService.GetInstance()\r\n      let schedule = new ScheduleModel(\"groupname_groupyear\", \"groupname\", 5)\r\n\r\n      // TODO: Fix warning about undefined\r\n\r\n      let firstScheduleFile = scheduleLoaderInstance.scheduleFiles[0]\r\n      let firstScheduleFilename = firstScheduleFile.filename\r\n      console.log(\"first schedule filename:\", firstScheduleFilename)\r\n\r\n      await schedule.getScheduleFromScheduleLoader(firstScheduleFilename)\r\n\r\n      let settingsService = await SettingsService.GetInstance()\r\n      settingsServiceRef.current = settingsService\r\n\r\n      setSampleDay(schedule.scheduleDays[0])\r\n      setIsReady(true)\r\n    }\r\n\r\n    init()\r\n  }, [])\r\n\r\n  let [data, setData] = useState([\r\n    { key: \"1\", title: \"Item 1\", isSlot: true },\r\n    { key: \"2\", title: \"Item 2\", isSlot: true },\r\n    { key: \"3\", title: \"Item 3\", isSlot: false },\r\n    // { key: \"4\", title: \"Item 4\", isSlot: false },\r\n    // { key: \"5\", title: \"Item 5\", isSlot: false },\r\n    // { key: \"6\", title: \"Item 6\", isSlot: false },\r\n    // { key: \"7\", title: \"Item 7\", isSlot: true },\r\n    // { key: \"8\", title: \"Item 8\", isSlot: false },\r\n    // { key: \"9\", title: \"Item 9\", isSlot: false },\r\n    // { key: \"10\", title: \"Item 10\", isSlot: false },\r\n  ])\r\n\r\n  if (!isReady) {\r\n    return (\r\n      <View>\r\n        <Text>Loading...</Text>\r\n      </View>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <View>\r\n        <Text>Редактор</Text>\r\n        <Text> ({currentRouteName})</Text>\r\n        <View style={[{ flexDirection: \"row\", justifyContent: \"space-around\" }]}>\r\n          <Button title=\"Save\" />\r\n          <Button title=\"Cancel\" />\r\n          <Button title=\"Reset\" />\r\n        </View>\r\n        <FlatList\r\n          scrollEnabled={true}\r\n          nestedScrollEnabled={false}\r\n          data={[data, data, data, data]}\r\n          keyExtractor={(item) => Math.random().toString()}\r\n          renderItem={({ item }) => {\r\n            let dataElem = item\r\n            return (\r\n              <FlatList\r\n                // scrollEnabled={false}\r\n                // nestedScrollEnabled={true}\r\n                // prop\r\n                data={dataElem}\r\n                key={Math.random().toString()}\r\n                keyExtractor={(item) => _.random(0, 100000, false).toString()}\r\n                onDragEnd={({ data }) => console.log(\"[drag end] data:\", data)}\r\n                renderItem={({ item: draggable, drag, isActive }) => {\r\n                  return (\r\n                    <TouchableOpacity\r\n                      style={[\r\n                        { backgroundColor: isActive ? \"orange\" : \"red\" },\r\n                        { margin: 10 },\r\n                        draggable.isSlot ? { backgroundColor: \"gray\" } : {},\r\n                      ]}\r\n                      onLongPress={drag}\r\n                      onPress={() => {\r\n                        navigation.push(EditorStackRoutes.SCHEDULE_CLASS_FORM, {\r\n                          scheduleClass: draggable,\r\n                          onFormDataUpdated: (updatedClass) => {\r\n                            console.log(\"updated class:\", updatedClass)\r\n\r\n                            let isNewEntry = updatedClass.title != \"\"\r\n                            let isSlot = !isNewEntry\r\n\r\n                            setData(\r\n                              dataElem.map((class_) =>\r\n                                class_.key === draggable.key ? { ...class_, ...updatedClass, isSlot } : class_\r\n                              )\r\n                            )\r\n                          },\r\n                        })\r\n                      }}\r\n                    >\r\n                      {/* <SwipeableItem\r\n                        key={draggable.key}\r\n                        // item={item}\r\n                        renderUnderlayLeft={() => <UnderlayRightSide />}\r\n                        // renderUnderlayRight={() => <UnderlayLeft />}\r\n                        snapPointsLeft={[!draggable.isSlot ? 50 : 0]} // snap points for right side underlay\r\n                        snapPointsRight={[0]} // disable left side underlay\r\n                        activationThreshold={10}\r\n                      > */}\r\n                      <View style={[styles.reorderable]}>\r\n                        <Text>{draggable.title}</Text>\r\n                      </View>\r\n                      {/* </SwipeableItem> */}\r\n                    </TouchableOpacity>\r\n                  )\r\n                }}\r\n              />\r\n            )\r\n          }}\r\n          style={{ padding: 20 }}\r\n        ></FlatList>\r\n      </View>\r\n    </SafeAreaView>\r\n  )\r\n}\r\n\r\nconst UnderlayRightSide = () => {\r\n  const { close } = useSwipeableItemParams<Item>()\r\n  function openClassEditScreen(): void {}\r\n\r\n  return (\r\n    <View\r\n      style={[\r\n        styles.row,\r\n        styles.underlayLeft,\r\n        {\r\n          // alignSelf: \"center\",\r\n        },\r\n      ]}\r\n    >\r\n      <View>\r\n        <TouchableOpacity onPress={() => close()}>\r\n          <Text style={styles.text}>Del</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n\r\n  reorderable: {\r\n    height: 20,\r\n    width: \"95%\",\r\n    ...globalStyles.centered,\r\n    marginVertical: 5,\r\n  },\r\n\r\n  row: {\r\n    flexDirection: \"row\",\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: 15,\r\n  },\r\n\r\n  underlayLeft: {\r\n    flex: 1,\r\n    backgroundColor: \"lime\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n\r\n  text: {\r\n    fontWeight: \"bold\",\r\n    color: \"white\",\r\n    fontSize: 32,\r\n  },\r\n})\r\n","import { createStackNavigator } from \"@react-navigation/stack\"\r\nimport * as React from \"react\"\r\nimport ScheduleEditor from \"../screens/TestTabsScreens/ScheduleEditor\"\r\nimport { View } from \"react-native\"\r\nimport StackHeader from \"../components/StackHeader\"\r\nimport ScheduleClassForm from \"../screens/TestTabsScreens/scheduleEditorStack/ScheduleClassForm\"\r\nimport { EditorStackRoutes } from \"./EditorStackRoutes\"\r\n\r\nconst Stack = createStackNavigator()\r\n\r\nexport default function TestEditorStack() {\r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={\r\n        {\r\n          // headerShown: false,\r\n        }\r\n      }\r\n    >\r\n      <Stack.Screen\r\n        name={EditorStackRoutes.EDITOR}\r\n        component={ScheduleEditor}\r\n        options={{\r\n          header: () => <View />,\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name={EditorStackRoutes.SCHEDULE_CLASS_FORM}\r\n        component={ScheduleClassForm}\r\n        options={{\r\n          header: (props) => <StackHeader title={\"Пара\"} />,\r\n        }}\r\n      />\r\n    </Stack.Navigator>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { View, Text, StyleSheet, Button, Linking } from \"react-native\"\r\nimport OptionPickerModal from \"../../components/OptionPickerModalComponent/OptionPickerModal\"\r\nimport { globalStyles, palette } from \"../../styles/global\"\r\nimport { imageIcons } from \"../../constants/Images\"\r\nimport { FontAwesome, Ionicons, MaterialIcons } from \"@expo/vector-icons\"\r\nimport { SafeAreaView } from \"react-native-safe-area-context\"\r\nimport AppText from \"../../components/shared/AppText\"\r\nimport { useNavigation } from \"@react-navigation/native\"\r\nimport { ContactsStackRoutes } from \"../../routes/ContactsStackRoutes\"\r\nimport { Image } from \"react-native-elements\"\r\nimport { isMail } from \"../../utilities/utilities\"\r\n\r\ntype ModalItem = {\r\n  icon: JSX.Element\r\n  text: string\r\n  isPhone?: boolean\r\n  isLink?: boolean\r\n  linkName?: string\r\n}\r\n\r\nexport default function ContactsModalTestScreen() {\r\n  let navigation = useNavigation()\r\n\r\n  let [corpsModalIsOpen, setCorpsModalIsOpen] = React.useState(false)\r\n  let [rectorateModalIsOpen, setRectorateModalIsOpen] = React.useState(false)\r\n  let [preparationDepartmentModalIsOpen, setPreparationDepartmentModalIsOpen] = React.useState(false)\r\n  let [\r\n    internationalAffairsAndInformationDepartmentModalIsOpen,\r\n    setInternationalAffairsAndInformationDepartmentModalIsOpen,\r\n  ] = React.useState(false)\r\n  let [admissionCommitteeModalIsOpen, setAdmissionCommitteeModalIsOpen] = React.useState(false)\r\n  let [studentCouncilModalIsOpen, setStudentCouncilModalIsOpen] = React.useState(false)\r\n  let [socialMediaModalIsOpen, setSocialMediaModalIsOpen] = React.useState(false)\r\n\r\n  let academyCorps = [\r\n    \"вул. Під Голоском, 19\",\r\n    \"вул. Підвальна, 17\",\r\n    \"вул. Личаківська, 3\",\r\n    \"вул. Коцюбинського, 21\",\r\n    \"вул. Винниченка, 12\",\r\n  ]\r\n\r\n  // Корпуси академії\r\n  let corpsModalItems = academyCorps.map((corps) => {\r\n    return {\r\n      text: corps,\r\n      icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n    }\r\n  })\r\n\r\n  // Ректорат\r\n  let rectorateModalItems: ModalItem[] = [\r\n    {\r\n      icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n      text: \"вул. Під Голоском, 19, ауд. 234\",\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n      text: \"(032) 242 23 77\",\r\n      isPhone: true,\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n      text: \"uad@uad.edu.ua\",\r\n      isLink: true,\r\n    },\r\n  ]\r\n\r\n  // Підготовче відділення\r\n  let preparationDepartmentModalItems: ModalItem[] = [\r\n    {\r\n      icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n      text: \"вул. Під Голоском, 19, ауд. 218\",\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n      text: \"(032) 242 23 78\",\r\n      isPhone: true,\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n      text: \"pv@uad.edu.ua\",\r\n      isLink: true,\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"globe\" color={palette.grayedOut} size={16} />,\r\n      text: \"http://www.uad-pv.pp.ua/\",\r\n      isLink: true,\r\n    },\r\n  ]\r\n\r\n  // Відділ міжнародних звʼязків та інформаційного забезпечення\r\n  let internationalAffairsAndInformationDepartmentModalItems: ModalItem[] = [\r\n    {\r\n      icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n      text: \"вул. Під Голоском, 19\",\r\n    },\r\n\r\n    {\r\n      icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n      text: \"(032) 259 94 21\",\r\n      isPhone: true,\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n      text: \"ird@uad.lviv.ua\",\r\n      isLink: true,\r\n    },\r\n  ]\r\n\r\n  // Приймальна комісія\r\n  let admissionsCommitteeModalItems: ModalItem[] = [\r\n    {\r\n      icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n      text: \"вул. Під Голоском, 19, каб. 417, 200\",\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n      text: \"(067) 149 14 00\",\r\n      isPhone: true,\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n      text: \"pk@uad.edu.ua\",\r\n      isLink: true,\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n      text: \"pk.uad.lviv@gmail.com\",\r\n      isLink: true,\r\n    },\r\n  ]\r\n\r\n  // Бухгалтерія\r\n  let accountingModalItems: ModalItem[] = [\r\n    {\r\n      icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n      text: \"вул. Під Голоском, 19, ауд. 213\",\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n      text: \"(032) 242 23 46\",\r\n      isPhone: true,\r\n    },\r\n  ]\r\n\r\n  // Відділ платної форми навчання\r\n  let contractEducationDepartmentModalItems: ModalItem[] = [\r\n    {\r\n      icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n      text: \"вул. Під Голоском, 19, ауд. 234а\",\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n      text: \"(032) 242 23 80\",\r\n      isPhone: true,\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n      text: \"vpn_uad@ukr.net\",\r\n      isLink: true,\r\n    },\r\n  ]\r\n\r\n  // Профком студентів\r\n  let studentUnionModalItems: ModalItem[] = [\r\n    {\r\n      icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n      text: \"вул. Під Голоском, 19, ауд. 311\",\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n      text: \"(032) 242 23 79\",\r\n      isPhone: true,\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n      text: \"(067) 67 23 173\",\r\n      isPhone: true,\r\n    },\r\n  ]\r\n\r\n  // Студентська рада\r\n  let studentCouncilModalItems: ModalItem[] = [\r\n    {\r\n      icon: <FontAwesome name=\"instagram\" color={palette.grayedOut} size={16} />,\r\n      text: \"https://www.instagram.com/uad_lviv/\",\r\n      isLink: true,\r\n      linkName: \"uad_lviv\",\r\n    },\r\n  ]\r\n\r\n  // Соц. мережі академії\r\n  let socialMediaModalItems: ModalItem[] = [\r\n    {\r\n      icon: <FontAwesome name=\"instagram\" color={palette.grayedOut} size={16} />,\r\n      text: \"https://www.instagram.com/uad_lviv/\",\r\n      isLink: true,\r\n      linkName: \"@uad_lviv\",\r\n    },\r\n    {\r\n      icon: <FontAwesome name=\"telegram\" color={palette.grayedOut} size={16} />,\r\n      text: \"https://t.me/uad_live\",\r\n      isLink: true,\r\n      linkName: \"@uad_live\",\r\n    },\r\n    {\r\n      icon: <FontAwesome name=\"youtube-play\" color={palette.grayedOut} size={16} />,\r\n      text: \"https://www.youtube.com/user/UADtelevision\",\r\n      isLink: true,\r\n      linkName: \"UADtelevision\",\r\n    },\r\n    {\r\n      icon: <FontAwesome name=\"facebook-official\" color={palette.grayedOut} size={16} />,\r\n      text: \"https://www.facebook.com/uadlv\",\r\n      isLink: true,\r\n    },\r\n    {\r\n      icon: (\r\n        <Image\r\n          source={imageIcons.tiktok}\r\n          // color={palette.grayedOut}\r\n          style={{\r\n            width: 16,\r\n            height: 18,\r\n          }}\r\n        />\r\n      ),\r\n      text: \"https://www.tiktok.com/@uad.lviv\",\r\n      isLink: true,\r\n      linkName: \"@uad.lviv\",\r\n    },\r\n  ]\r\n\r\n  const constructModalItem = (item: ModalItem, idx) => {\r\n    return (\r\n      <View\r\n        style={{\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          marginVertical: 6,\r\n        }}\r\n      >\r\n        {item.icon}\r\n        <AppText\r\n          onPress={() => {\r\n            if (item.isLink) {\r\n              if (isMail(item.text)) Linking.openURL(`mailto:${item.text}`)\r\n              else Linking.openURL(item.text)\r\n            } else if (item.isPhone) Linking.openURL(`tel:${item.text}`)\r\n          }}\r\n          style={[styles.optionText, item.isLink ? globalStyles.underlinedLink : {}]}\r\n        >\r\n          {item.linkName ? item.linkName : item.text}\r\n        </AppText>\r\n      </View>\r\n    )\r\n  }\r\n\r\n  const constructContentPresenterModal = (\r\n    headerText: string,\r\n    isOpen: boolean,\r\n    onCloseModal: () => void,\r\n    initialOptions: typeof rectorateModalItems,\r\n    displaySeparators = false\r\n  ) => {\r\n    return (\r\n      <OptionPickerModal\r\n        headerText={headerText}\r\n        isOpen={isOpen}\r\n        hasSearchBar={false}\r\n        displaySeparators={displaySeparators}\r\n        onCloseModal={onCloseModal}\r\n        options={initialOptions}\r\n        renderItem={constructModalItem}\r\n        isOptionSelectable={false}\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <View>\r\n        <Button title=\"Корпуси академії\" onPress={() => setCorpsModalIsOpen(true)} />\r\n        {constructContentPresenterModal(\r\n          \"Корпуси академії\",\r\n          corpsModalIsOpen,\r\n          () => setCorpsModalIsOpen(false),\r\n          corpsModalItems,\r\n          true\r\n        )}\r\n      </View>\r\n      <View>\r\n        <Button title=\"Ректорат\" onPress={() => setRectorateModalIsOpen(true)} />\r\n        {constructContentPresenterModal(\r\n          \"Ректорат\",\r\n          rectorateModalIsOpen,\r\n          () => setRectorateModalIsOpen(false),\r\n          rectorateModalItems\r\n        )}\r\n      </View>\r\n\r\n      <View>\r\n        <Button title=\"Підготовче відділення\" onPress={() => setPreparationDepartmentModalIsOpen(true)} />\r\n        {constructContentPresenterModal(\r\n          \"Підготовче відділення\",\r\n          preparationDepartmentModalIsOpen,\r\n          () => setPreparationDepartmentModalIsOpen(false),\r\n          preparationDepartmentModalItems\r\n        )}\r\n      </View>\r\n      <View>\r\n        {/* push Faculties Screen on top of stack */}\r\n        <Button title=\"Факультети академії\" onPress={() => navigation.push(ContactsStackRoutes.FACULTIES)} />\r\n      </View>\r\n\r\n      <View>\r\n        <Button\r\n          title=\"Відділ міжнародних звʼязків та інформаційного забезпечення\"\r\n          onPress={() => setInternationalAffairsAndInformationDepartmentModalIsOpen(true)}\r\n        />\r\n        {constructContentPresenterModal(\r\n          \"Відділ міжнародних звʼязків та інформаційного забезпечення\",\r\n          internationalAffairsAndInformationDepartmentModalIsOpen,\r\n          () => setInternationalAffairsAndInformationDepartmentModalIsOpen(false),\r\n          internationalAffairsAndInformationDepartmentModalItems\r\n        )}\r\n      </View>\r\n      <View>\r\n        <Button title=\"Приймальна комісія\" onPress={() => setAdmissionCommitteeModalIsOpen(true)} />\r\n        {constructContentPresenterModal(\r\n          \"Приймальна комісія\",\r\n          admissionCommitteeModalIsOpen,\r\n          () => setAdmissionCommitteeModalIsOpen(false),\r\n          admissionsCommitteeModalItems\r\n        )}\r\n      </View>\r\n\r\n      <View>\r\n        <Button title=\"Студентська рада\" onPress={() => setStudentCouncilModalIsOpen(true)} />\r\n        {constructContentPresenterModal(\r\n          \"Студентська рада\",\r\n          studentCouncilModalIsOpen,\r\n          () => setStudentCouncilModalIsOpen(false),\r\n          studentCouncilModalItems\r\n        )}\r\n      </View>\r\n\r\n      <View>\r\n        <Button title=\"Соц. мережі академії\" onPress={() => setSocialMediaModalIsOpen(true)} />\r\n        {constructContentPresenterModal(\r\n          \"Соц. мережі академії\",\r\n          socialMediaModalIsOpen,\r\n          () => setSocialMediaModalIsOpen(false),\r\n          socialMediaModalItems\r\n        )}\r\n      </View>\r\n    </SafeAreaView>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    margin: 20,\r\n    justifyContent: \"space-around\",\r\n  },\r\n  optionText: {\r\n    marginLeft: 10,\r\n    fontSize: 16,\r\n  },\r\n})\r\n","import * as React from \"react\"\r\n\r\nimport { createStackNavigator } from \"@react-navigation/stack\"\r\nimport FacultiesTestScreen from \"../screens/TestTabsScreens/FacultiesTestScreen\"\r\nimport ContactsModalTestScreen from \"../screens/TestTabsScreens/ContactsModalsTestScreen\"\r\nimport { View } from \"react-native\"\r\nimport { ContactsStackRoutes } from \"./ContactsStackRoutes\"\r\nimport StackHeader from \"../components/StackHeader\"\r\n\r\nconst Stack = createStackNavigator()\r\n\r\nexport default function ContactsTestStack() {\r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={\r\n        {\r\n          // headerShown: false,\r\n        }\r\n      }\r\n    >\r\n      <Stack.Screen\r\n        name={ContactsStackRoutes.CONTACTS_MENU}\r\n        component={ContactsModalTestScreen}\r\n        options={{\r\n          header: () => <View />,\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name={ContactsStackRoutes.FACULTIES}\r\n        component={FacultiesTestScreen}\r\n        options={{\r\n          header: (props) => <StackHeader title={\"Факультети академії\"} />,\r\n        }}\r\n      />\r\n    </Stack.Navigator>\r\n  )\r\n}\r\n","import * as React from \"react\"\r\nimport { PixelRatio, Text, View, useWindowDimensions } from \"react-native\"\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\"\r\nimport { Ionicons } from \"@expo/vector-icons\"\r\nimport NotificationTestsScreen from \"../screens/TestTabsScreens/NotificationTests\"\r\nimport ScheduledNotificationsScreen from \"../screens/TestTabsScreens/ScheduledNotificationsScreen\"\r\nimport InroductoryCarouselScreen from \"../screens/IntroductoryCarousel/IntroductoryCarousel\"\r\nimport FileSystemScreen from \"../screens/TestTabsScreens/FileSystemScreen\"\r\nimport TestEditorStack from \"./testEditorStack\"\r\nimport ContactsTestStack from \"./ContactsTestStack\"\r\n\r\nfunction DeviceInfoScreen() {\r\n  const { height, width } = useWindowDimensions()\r\n  const aspectRatio = height / width\r\n  let pixelRatio = PixelRatio.get()\r\n  let dpi = 160 * pixelRatio\r\n\r\n  return (\r\n    <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\r\n      <Text>Інформація про пристрій</Text>\r\n      <Text>Ширина вікна: {width}</Text>\r\n      <Text>Висота вікна: {height}</Text>\r\n      <Text>Pixel ratio: {pixelRatio}</Text>\r\n      <Text>Aspect ratio: {aspectRatio}</Text>\r\n      <Text>DPI: {dpi}</Text>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst Tab = createBottomTabNavigator()\r\n\r\nexport default function TestTabs() {\r\n  return (\r\n    <Tab.Navigator\r\n      screenOptions={{\r\n        headerShown: false,\r\n        tabBarStyle: {\r\n          // display: \"none\",\r\n        },\r\n      }}\r\n      initialRouteName=\"Модальні вікна\"\r\n    >\r\n      <Tab.Screen\r\n        name=\"Заплановані Сповіщення\"\r\n        component={ScheduledNotificationsScreen}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => <Ionicons name=\"notifications-circle\" color={color} size={size} />,\r\n        }}\r\n      />\r\n\r\n      <Tab.Screen\r\n        name=\"Сповіщення\"\r\n        component={NotificationTestsScreen}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => <Ionicons name=\"notifications\" color={color} size={size} />,\r\n        }}\r\n      />\r\n\r\n      <Tab.Screen\r\n        name=\"Вступне Вікно\"\r\n        component={InroductoryCarouselScreen}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => <Ionicons name=\"enter\" color={color} size={size} />,\r\n        }}\r\n      />\r\n\r\n      <Tab.Screen\r\n        name=\"Файлова Система\"\r\n        component={FileSystemScreen}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => <Ionicons name=\"folder\" color={color} size={size} />,\r\n        }}\r\n      />\r\n\r\n      <Tab.Screen\r\n        name=\"Редактор\"\r\n        component={TestEditorStack}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => <Ionicons name=\"options\" color={color} size={size} />,\r\n        }}\r\n      />\r\n\r\n      <Tab.Screen\r\n        name=\"Модальні вікна\"\r\n        component={ContactsTestStack}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => <Ionicons name=\"md-file-tray-stacked\" color={color} size={size} />,\r\n        }}\r\n      />\r\n\r\n      <Tab.Screen\r\n        name=\"Інше\"\r\n        component={DeviceInfoScreen}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => <Ionicons name=\"ellipsis-horizontal\" color={color} size={size} />,\r\n        }}\r\n      />\r\n    </Tab.Navigator>\r\n  )\r\n}\r\n","import { StyleSheet } from \"react-native\"\r\n\r\nimport { FontName } from \"../../constants/Fonts\"\r\nimport { palette, globalStyles } from \"../../styles/global\"\r\n\r\nexport const styles = StyleSheet.create({\r\n  scrollViewContentContainer: {\r\n    // backgroundColor: \"green\",\r\n  },\r\n\r\n  loadingIndicatorOverlay: {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    backgroundColor: palette.background,\r\n\r\n    zIndex: 9999,\r\n  },\r\n\r\n  scrollViewDirect: {\r\n    ...globalStyles.screen,\r\n    paddingBottom: 24,\r\n  },\r\n\r\n  pageBackground: {\r\n    // minHeight: \"100%\",\r\n  },\r\n\r\n  settingValueContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  categoryHeader: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginTop: 24,\r\n    marginLeft: 24,\r\n  },\r\n  settingsSectionName: {\r\n    fontFamily: FontName.Raleway600,\r\n    color: \"rgba(90,90,90,1)\",\r\n    fontSize: 14,\r\n\r\n    marginLeft: 6,\r\n  },\r\n\r\n  settingsCategory: {\r\n    padding: 10,\r\n    paddingBottom: 5,\r\n    margin: 11,\r\n\r\n    backgroundColor: \"rgba(255,255,255,1)\",\r\n    borderRadius: 9,\r\n  },\r\n\r\n  separator: {\r\n    width: \"100%\",\r\n    height: 1,\r\n    borderWidth: 0,\r\n    borderTopWidth: 1,\r\n    borderColor: \"rgba(242,242,242,1)\",\r\n  },\r\n\r\n  centeredTextAndIcon: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  settingName: {\r\n    fontFamily: FontName.Raleway500,\r\n    color: \"rgba(82,82,82,1)\",\r\n    fontSize: 15,\r\n  },\r\n  settingValue: {\r\n    fontFamily: FontName.MontserratMedium,\r\n    color: \"rgba(136,136,136,1)\",\r\n    height: 17,\r\n    textAlign: \"right\",\r\n    fontSize: 12,\r\n  },\r\n  grayIcon: {\r\n    ...globalStyles.grayIcon,\r\n  },\r\n\r\n  settingsSectionIcon: {\r\n    color: \"rgba(90,90,90,1)\",\r\n    fontSize: 15,\r\n  },\r\n  settingRow: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n\r\n    marginVertical: 10,\r\n  },\r\n})\r\n","// EXTERNAL DEPENDENCIES\r\n\r\nimport React, { useEffect, useState } from \"react\"\r\nimport { View, ScrollView, ActivityIndicator } from \"react-native\"\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport FontAwesomeIcon from \"react-native-vector-icons/FontAwesome\"\r\nimport EntypoIcon from \"react-native-vector-icons/Entypo\"\r\nimport { Ionicons } from \"@expo/vector-icons\"\r\n\r\n// INTERNAL DEPENDENCIES\r\n\r\nimport CustomSwitch from \"../../components/shared/Switch\"\r\nimport SettingsService from \"../../services/SettingsService/SettingsService\"\r\nimport { DisplayEmptyDaysMode, DisplayTeacherMode, ScheduleAppSettings } from \"../../services/SettingsService/Types\"\r\nimport { globalStyles, palette } from \"../../styles/global\"\r\nimport OptionPickerModal from \"../../components/OptionPickerModalComponent/OptionPickerModal\"\r\nimport ScheduleNotificationsService from \"../../services/ScheduleNotificationsService\"\r\nimport ScheduleModel from \"../../models/ScheduleModel/ScheduleModel\"\r\nimport ScheduleLoaderService from \"../../services/ScheduleLoaderService/ScheduleLoaderService\"\r\nimport { ensureExtension, ensureNoExtension, isRunningInBrowser } from \"../../utilities/utilities\"\r\nimport AppText from \"../../components/shared/AppText\"\r\nimport { styles } from \"./Styles\"\r\n\r\n// TODO: Fix settings page visually spazzing out on mount\r\n// it's not the switches\r\n// it's not the effect that saves updated settings to disk\r\n// it's not notification events updating state\r\n// it's not other setters\r\n// this is something that only happens when the main content is rendered\r\n// removing activity indicator as alternative layout breaks settings service integration and makes schedule picker fail to load options\r\n// hell. Let's start with simply refactoring the layout into components\r\n\r\ntype ScheduleAppSettingsWithoutCurrentScheduleName = Omit<ScheduleAppSettings, \"currentScheduleName\">\r\n\r\n// settings fields are identical to ScheduleAppSettings, except for currentScheduleName. It is represented as selectedSchedule in this component\r\ntype SettingFields = Record<keyof ScheduleAppSettingsWithoutCurrentScheduleName | \"selectedSchedule\", any>\r\n\r\nexport default function Settings() {\r\n  const settingsServiceRef = React.useRef<SettingsService | null>(null)\r\n\r\n  // REACTIVE VARIABLES\r\n\r\n  const [schedulePickerData, setSchedulePickerData] = useState<string[]>([])\r\n\r\n  // Note: Update place 0\r\n  // TODO: use a type for settingsValues\r\n  const [settingsValues, setSettingsValues] = useState<SettingFields>({\r\n    selectedSchedule: \"\",\r\n    displayRoomNumber: false,\r\n    notifyBeforeClass: false,\r\n    displayEmptyDays: \"...\",\r\n    displayTeacherName: \"...\",\r\n    notifyBeforeClassOffsetMinutes: 0,\r\n  })\r\n\r\n  const [schedulePickerModalVisible, setSchedulePickerModalVisible] = useState(false)\r\n  const [schedulePickerModalDisabled, setSchedulePickerModalDisabled] = useState(false)\r\n\r\n  const [emptyDayDisplayModalVisible, setEmptyDayDisplayModalVisible] = useState(false)\r\n\r\n  const [displayTeacherModeModalVisible, setDisplayTeacherModeModalVisible] = useState(false)\r\n  const [notifyBeforehandModalVisible, setNotifyBeforehandModalVisible] = useState(false)\r\n\r\n  const [isReady, setIsReady] = useState(false)\r\n\r\n  // EFFECTS\r\n\r\n  // mount effect\r\n  useEffect(() => {\r\n    async function onMount() {\r\n      const settingsService = await SettingsService.GetInstance()\r\n      settingsServiceRef.current = settingsService\r\n\r\n      // Note: Update place 1\r\n\r\n      const {\r\n        currentScheduleName,\r\n        displayRoomNumber,\r\n        notifyBeforeClass,\r\n        displayEmptyDays,\r\n        displayTeacherName,\r\n        notifyBeforeClassOffsetMinutes,\r\n      } = settingsServiceRef.current\r\n\r\n      setSettingsValues({\r\n        selectedSchedule: ensureNoExtension(currentScheduleName, \".json\"),\r\n        displayRoomNumber,\r\n        notifyBeforeClass,\r\n        displayEmptyDays,\r\n        displayTeacherName,\r\n        notifyBeforeClassOffsetMinutes,\r\n      })\r\n\r\n      console.log(\"[settings screen init] settingsService.currentSchedule:\", settingsService.currentScheduleName)\r\n\r\n      // disable schedule picker modal when notifications are being configured\r\n      const notifService = await ScheduleNotificationsService.GetInstance()\r\n\r\n      notifService.onConfigureNotificationsForScheduleStart = () => {\r\n        setSchedulePickerModalDisabled(true)\r\n        // ToastAndroid.show(\"Configuring notifications...\", ToastAndroid.SHORT)\r\n      }\r\n      notifService.onConfigureNotificationsForScheduleEnd = () => {\r\n        setSchedulePickerModalDisabled(false)\r\n\r\n        // ToastAndroid.show(\"Notifications have been configured\", ToastAndroid.SHORT)\r\n      }\r\n\r\n      const scheduleLodaderInstance = await ScheduleLoaderService.GetInstance()\r\n\r\n      const schedulePickerData = scheduleLodaderInstance.scheduleFiles.map((f) =>\r\n        ensureNoExtension(f.filename, \".json\")\r\n      )\r\n      setSchedulePickerData(schedulePickerData)\r\n\r\n      setIsReady(true)\r\n    }\r\n    onMount()\r\n  }, [])\r\n\r\n  // settings change effect\r\n  // write settings to disk on each update to make sure they aren't lost\r\n  useEffect(() => {\r\n    if (!isReady) return\r\n\r\n    // Note: Update place 2\r\n    const {\r\n      selectedSchedule,\r\n      displayRoomNumber,\r\n      notifyBeforeClass,\r\n      displayEmptyDays,\r\n      displayTeacherName,\r\n      notifyBeforeClassOffsetMinutes,\r\n    } = settingsValues\r\n\r\n    // TODO: Refactor this\r\n    const settingsService = settingsServiceRef.current!\r\n    settingsService.currentScheduleName = ensureExtension(selectedSchedule, \".json\")\r\n    settingsService.displayRoomNumber = displayRoomNumber\r\n    settingsService.notifyBeforeClass = notifyBeforeClass\r\n    settingsService.displayEmptyDays = displayEmptyDays as DisplayEmptyDaysMode\r\n    settingsService.displayTeacherName = displayTeacherName as DisplayTeacherMode\r\n    settingsService.notifyBeforeClassOffsetMinutes = notifyBeforeClassOffsetMinutes\r\n\r\n    settingsService.saveToStorage()\r\n  }, [settingsValues])\r\n\r\n  // Used in corresponding onPress callback. Enables or disables schedule notifications\r\n  async function toggleNotifs(enable: boolean) {\r\n    const scheduleNotifService = await ScheduleNotificationsService.GetInstance()\r\n    if (enable) {\r\n      // TODO: Refactor. Find a way to reference currently selected schedule in ScheduleScreen\r\n      const schedule = new ScheduleModel(\"foo\", \"bar\", 99)\r\n      schedule.getScheduleFromScheduleLoader(settingsServiceRef.current!.currentScheduleName)\r\n      scheduleNotifService.configureNotificationsForSchedule(schedule)\r\n    } else {\r\n      await scheduleNotifService.cancelAllScheduledNotificationsAsync()\r\n    }\r\n  }\r\n\r\n  if (!isReady) {\r\n    // return spinner\r\n    return ActivityIndicatorLarge\r\n  }\r\n\r\n  // setTimeout(() => {\r\n  //   setIsReady(true)\r\n  // }, 500)\r\n\r\n  // notifications aren't implemented in browser (although they could have been)\r\n  const notificationsSection = !isRunningInBrowser() ? (\r\n    <View>\r\n      {constructCategoryHeader(\r\n        \"Сповіщення\",\r\n        <FontAwesomeIcon name=\"bell-o\" style={styles.settingsSectionIcon}></FontAwesomeIcon>\r\n      )}\r\n\r\n      <View style={styles.settingsCategory}>\r\n        {constructSettingsRow(\r\n          \"Нагадувати про початок пари\",\r\n          <CustomSwitch\r\n            onValueChange={(nv) => {\r\n              setSettingsValues({\r\n                ...settingsValues,\r\n                notifyBeforeClass: nv,\r\n              })\r\n\r\n              toggleNotifs(nv)\r\n            }}\r\n            initVal={settingsValues.notifyBeforeClass}\r\n            disabled={false}\r\n          />\r\n        )}\r\n        <View style={styles.separator}></View>\r\n\r\n        {constructSettingsRow(\r\n          \"Сповіщати заздалегідь\",\r\n          <View>\r\n            <TouchableOpacity onPress={() => setNotifyBeforehandModalVisible(true)}>\r\n              <View style={styles.settingValueContainer}>\r\n                <AppText style={styles.settingValue}>{settingsValues.notifyBeforeClassOffsetMinutes + \" хв.\"}</AppText>\r\n                <EntypoIcon name=\"chevron-small-right\" style={styles.grayIcon}></EntypoIcon>\r\n              </View>\r\n            </TouchableOpacity>\r\n\r\n            <OptionPickerModal\r\n              hasSearchBar={false}\r\n              isOpen={notifyBeforehandModalVisible}\r\n              options={[0, 5, 10, 15, 20].map((n) => n + \" хв.\")}\r\n              selectedOption={settingsValues.notifyBeforeClassOffsetMinutes + \" хв.\"}\r\n              onCloseModal={() => setNotifyBeforehandModalVisible(false)}\r\n              onSelected={(selected) => {\r\n                const selectedInt = parseInt(selected)\r\n                setSettingsValues({\r\n                  ...settingsValues,\r\n                  notifyBeforeClassOffsetMinutes: selectedInt,\r\n                })\r\n\r\n                toggleNotifs(settingsValues.notifyBeforeClass)\r\n              }}\r\n            />\r\n          </View>\r\n        )}\r\n\r\n        <View style={styles.separator}></View>\r\n\r\n        {constructSettingsRow(\r\n          \"Звук, місце появи сповіщення та ін.\",\r\n          <View style={[styles.settingValueContainer, { marginRight: 3 }]}>\r\n            {/* TODO: Unhardcode margin right */}\r\n\r\n            <TouchableOpacity onPress={settingsServiceRef.current?.openAndroidSystemSettingsForNotifications}>\r\n              <Ionicons name=\"open\" size={14} color={palette.navigationBackground} />\r\n            </TouchableOpacity>\r\n          </View>\r\n        )}\r\n      </View>\r\n    </View>\r\n  ) : null\r\n\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <ScrollView style={styles.scrollViewDirect} contentContainerStyle={styles.scrollViewContentContainer}>\r\n        <View style={styles.pageBackground}>\r\n          {notificationsSection}\r\n\r\n          {constructCategoryHeader(\r\n            \"Розклад\",\r\n            <FontAwesomeIcon name=\"calendar-o\" style={styles.settingsSectionIcon}></FontAwesomeIcon>\r\n          )}\r\n          <View style={styles.settingsCategory}>\r\n            <View>\r\n              <View>\r\n                <View style={styles.settingRow}>\r\n                  <AppText style={styles.settingName}>Мій розклад</AppText>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => {\r\n                      console.log(\"selected schedule before toggling modal:\", settingsValues.selectedSchedule)\r\n                      setSchedulePickerModalVisible(true)\r\n                    }}\r\n                    disabled={schedulePickerModalDisabled}\r\n                    style={styles.centeredTextAndIcon}\r\n                  >\r\n                    {/* TODO: Remove hardcoded margins. Those were set to make activity indicator and actual content to have same size */}\r\n\r\n                    {schedulePickerModalDisabled ? (\r\n                      <ActivityIndicator\r\n                        style={{ marginRight: 10, marginVertical: 3.5 }}\r\n                        size=\"small\"\r\n                        color={palette.navigationBackground}\r\n                      />\r\n                    ) : (\r\n                      <View\r\n                        style={{\r\n                          flexDirection: \"row\",\r\n                          alignItems: \"center\",\r\n                        }}\r\n                      >\r\n                        <AppText style={styles.settingValue}>\r\n                          {ensureNoExtension(settingsValues.selectedSchedule, \".json\")}\r\n                        </AppText>\r\n                        <EntypoIcon name=\"chevron-small-right\" style={styles.grayIcon}></EntypoIcon>\r\n                      </View>\r\n                    )}\r\n\r\n                    {/* TODO: remove the temp fix. The issue is that I don't know why updated prop doesn't rerender the modal */}\r\n                    {settingsValues.selectedSchedule != \"\" ? (\r\n                      <OptionPickerModal\r\n                        headerText=\"Вибери свою групу\"\r\n                        isOpen={schedulePickerModalVisible}\r\n                        options={schedulePickerData}\r\n                        selectedOption={settingsValues.selectedSchedule}\r\n                        onCloseModal={() => setSchedulePickerModalVisible(false)}\r\n                        onSelected={(selected) => {\r\n                          setSettingsValues({\r\n                            ...settingsValues,\r\n                            selectedSchedule: ensureExtension(selected, \".json\"),\r\n                          })\r\n                        }}\r\n                      />\r\n                    ) : (\r\n                      <View style={globalStyles.noDisplay} />\r\n                    )}\r\n                  </TouchableOpacity>\r\n                </View>\r\n\r\n                <View style={styles.separator} />\r\n\r\n                {constructSettingsRow(\r\n                  \"Відображати номер аудиторії\",\r\n                  <CustomSwitch\r\n                    initVal={settingsValues.displayRoomNumber}\r\n                    onValueChange={(nv) => {\r\n                      setSettingsValues({\r\n                        ...settingsValues,\r\n                        displayRoomNumber: nv,\r\n                      })\r\n                    }}\r\n                  />\r\n                )}\r\n\r\n                <View style={styles.separator} />\r\n\r\n                {constructSettingsRow(\r\n                  \"Відображати викладача\",\r\n                  <View>\r\n                    <TouchableOpacity\r\n                      onPress={() => setDisplayTeacherModeModalVisible(true)}\r\n                      style={styles.centeredTextAndIcon}\r\n                    >\r\n                      <AppText style={styles.settingValue}>{settingsValues.displayTeacherName}</AppText>\r\n                      <EntypoIcon name=\"chevron-small-right\" style={styles.grayIcon}></EntypoIcon>\r\n                    </TouchableOpacity>\r\n                    <OptionPickerModal\r\n                      hasSearchBar={false}\r\n                      isOpen={displayTeacherModeModalVisible}\r\n                      options={[\r\n                        DisplayTeacherMode.Full,\r\n                        DisplayTeacherMode.SurnameAndInitials,\r\n                        DisplayTeacherMode.Hide,\r\n                      ]}\r\n                      selectedOption={settingsValues.displayTeacherName}\r\n                      onCloseModal={() => setDisplayTeacherModeModalVisible(false)}\r\n                      onSelected={(selected) => {\r\n                        setSettingsValues({\r\n                          ...settingsValues,\r\n                          displayTeacherName: selected,\r\n                        })\r\n                      }}\r\n                    />\r\n                  </View>\r\n                )}\r\n\r\n                <View style={styles.separator}></View>\r\n\r\n                {constructSettingsRow(\r\n                  \"Порожні дні\",\r\n                  <View>\r\n                    <TouchableOpacity\r\n                      onPress={() => setEmptyDayDisplayModalVisible(true)}\r\n                      style={styles.centeredTextAndIcon}\r\n                    >\r\n                      <AppText style={styles.settingValue}>{settingsValues.displayEmptyDays}</AppText>\r\n                      <EntypoIcon name=\"chevron-small-right\" style={styles.grayIcon}></EntypoIcon>\r\n                    </TouchableOpacity>\r\n                    <OptionPickerModal\r\n                      hasSearchBar={false}\r\n                      isOpen={emptyDayDisplayModalVisible}\r\n                      options={[DisplayEmptyDaysMode.Display, DisplayEmptyDaysMode.Darken, DisplayEmptyDaysMode.Hide]}\r\n                      selectedOption={settingsValues.displayEmptyDays}\r\n                      onCloseModal={() => setEmptyDayDisplayModalVisible(false)}\r\n                      onSelected={(selected) => {\r\n                        setSettingsValues({\r\n                          ...settingsValues,\r\n                          displayEmptyDays: selected,\r\n                        })\r\n                      }}\r\n                    />\r\n                  </View>\r\n                )}\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </ScrollView>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst ActivityIndicatorLarge = (\r\n  <View style={[{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }, styles.loadingIndicatorOverlay]}>\r\n    <ActivityIndicator size=\"large\" color={palette.navigationBackground} />\r\n  </View>\r\n)\r\n\r\n// markdown constructors to avoid repeating the same layout code\r\nfunction constructCategoryHeader(categoryName: string, categoryIcon: JSX.Element) {\r\n  return (\r\n    <View style={styles.categoryHeader}>\r\n      {categoryIcon}\r\n      <AppText style={styles.settingsSectionName}>{categoryName}</AppText>\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction constructSettingsRow(settingDescription: string, changeSettingComponent: JSX.Element) {\r\n  return (\r\n    <View style={styles.settingRow}>\r\n      <AppText style={styles.settingName}>{settingDescription}</AppText>\r\n      {changeSettingComponent}\r\n    </View>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { View, Image, StyleSheet, TouchableOpacity, Linking } from \"react-native\"\r\nimport { globalStyles, palette } from \"../styles/global\"\r\nimport { teamMemberImages } from \"../constants/Images\"\r\nimport { images } from \"../constants/Images\"\r\nimport { FontAwesome5, Ionicons } from \"@expo/vector-icons\"\r\nimport AppText from \"../components/shared/AppText\"\r\nimport { ScrollView } from \"react-native-gesture-handler\"\r\nimport { useNavigation } from \"@react-navigation/native\"\r\nimport { DrawerRoutes } from \"../routes/DrawerRoutes\"\r\nimport { FontName } from \"../constants/Fonts\"\r\nimport appJson from \"../app.json\"\r\n\r\nexport default function AboutScreen() {\r\n  const appVersion = appJson.expo.version\r\n  const navigation = useNavigation()\r\n\r\n  return (\r\n    <ScrollView style={globalStyles.screen}>\r\n      <View style={styles.card}>\r\n        <View style={[styles.row]}>\r\n          <AppText style={{ color: \"#333333\", letterSpacing: 0 }}>Перший в історії УАД</AppText>\r\n          {/* <SvgUri source={images.uad_logo_text} width=\"200\" height={\"200\"} /> */}\r\n          <Image\r\n            style={{\r\n              width: 73,\r\n              height: 34,\r\n              resizeMode: \"contain\",\r\n\r\n              // backgroundColor: \"red\",\r\n            }}\r\n            source={images.uad_logo_text_not_vector_hires}\r\n          />\r\n        </View>\r\n        <View style={[styles.row, { alignItems: \"flex-end\", marginTop: 45 }]}>\r\n          <AppText style={styles.header}>Інтерактивний {\"\\n\"}розклад</AppText>\r\n          <AppText\r\n            style={{\r\n              color: palette.textOnBackground,\r\n              fontStyle: \"italic\",\r\n              fontSize: 10,\r\n              letterSpacing: 0,\r\n            }}\r\n          >\r\n            і не тільки\r\n          </AppText>\r\n        </View>\r\n      </View>\r\n      <View style={[globalStyles.centered]}>\r\n        <View\r\n          style={[\r\n            styles.card,\r\n            globalStyles.centered,\r\n\r\n            {\r\n              flexDirection: \"row\",\r\n              // justifyContent: \"space-between\",\r\n              width: 110 * 2 + 20,\r\n            },\r\n          ]}\r\n        >\r\n          <TouchableOpacity\r\n            style={[\r\n              {\r\n                width: 110,\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            onPress={() => {\r\n              navigation.navigate(DrawerRoutes.VIEWER)\r\n            }}\r\n          >\r\n            <Ionicons name=\"calendar\" color={palette.textOnBackground} size={48} />\r\n            <AppText style={styles.tileText}>Розклад</AppText>\r\n          </TouchableOpacity>\r\n\r\n          <View\r\n            style={[\r\n              {\r\n                justifyContent: \"center\",\r\n                alignSelf: \"center\",\r\n              },\r\n            ]}\r\n          >\r\n            <Ionicons name=\"add-sharp\" color={palette.textOnBackground} size={32} />\r\n          </View>\r\n\r\n          <TouchableOpacity\r\n            style={[\r\n              {\r\n                alignItems: \"center\",\r\n                width: 110,\r\n              },\r\n            ]}\r\n            onPress={() => {\r\n              navigation.navigate(DrawerRoutes.EDITOR)\r\n            }}\r\n          >\r\n            <Ionicons name=\"options\" color={palette.textOnBackground} size={48} />\r\n            <AppText style={styles.tileText}>Редактор</AppText>\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            style={[styles.card, styles.tile]}\r\n            onPress={() => {\r\n              navigation.navigate(DrawerRoutes.REGLAMENT)\r\n            }}\r\n          >\r\n            <Ionicons name=\"time-sharp\" color={palette.textOnBackground} size={48} />\r\n            <AppText style={styles.tileText}>Регламент</AppText>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity\r\n            style={[styles.card, styles.tile]}\r\n            onPress={() => {\r\n              navigation.navigate(DrawerRoutes.TEACHERS)\r\n            }}\r\n          >\r\n            <FontAwesome5 name=\"user-graduate\" color={palette.textOnBackground} size={48} />\r\n            <AppText style={styles.tileText}>Викладачі</AppText>\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            style={[styles.card, styles.tile]}\r\n            onPress={() => {\r\n              navigation.navigate(DrawerRoutes.CONTACTS)\r\n            }}\r\n          >\r\n            <Ionicons name=\"call\" color={palette.textOnBackground} size={48} />\r\n            <AppText style={styles.tileText}>Контакти</AppText>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity\r\n            style={[styles.card, styles.tile]}\r\n            onPress={() => {\r\n              navigation.navigate(DrawerRoutes.NEWS)\r\n            }}\r\n          >\r\n            <Ionicons name=\"chatbox-ellipses\" color={palette.textOnBackground} size={48} />\r\n            <AppText style={styles.tileText}>Новини</AppText>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n\r\n      <View style={[styles.card]}>\r\n        <AppText style={[styles.teamSectionHeader]}>Команда проекту</AppText>\r\n        <View style={[styles.tilesContainer]}>\r\n          <View style={[styles.row]}>\r\n            <View style={[styles.teamMemberTile]}>\r\n              {/* image container */}\r\n              <View style={styles.teamMemberImageWrapper}>\r\n                <Image style={styles.teamMemberImage} source={teamMemberImages.senchyk_andrii} />\r\n              </View>\r\n              {/* team member description */}\r\n              <View style={styles.teamMemberDescription}>\r\n                <AppText style={[styles.teamMemberName, styles.regularLetterSpacing]}>Сенчик Андрій</AppText>\r\n                <AppText style={[styles.teamMemberDetails]}>Програмування{\"\\n\"}</AppText>\r\n              </View>\r\n            </View>\r\n\r\n            <View style={[styles.teamMemberTile]}>\r\n              {/* image container */}\r\n              <View style={styles.teamMemberImageWrapper}>\r\n                <Image style={styles.teamMemberImage} source={teamMemberImages.zakharova_zarina} />\r\n              </View>\r\n              {/* team member description */}\r\n              <View style={styles.teamMemberDescription}>\r\n                <AppText style={[styles.teamMemberName, styles.regularLetterSpacing]}>Захарова Заріна</AppText>\r\n                <AppText style={[styles.teamMemberDetails]}>\r\n                  Керування проектом{\"\\n\"}\r\n                  Дизайн\r\n                </AppText>\r\n              </View>\r\n            </View>\r\n          </View>\r\n          <View\r\n            style={[\r\n              styles.row,\r\n              {\r\n                marginTop: 40,\r\n              },\r\n            ]}\r\n          >\r\n            <View style={[styles.teamMemberTile]}>\r\n              {/* image container */}\r\n              <View style={styles.teamMemberImageWrapper}>\r\n                <Image style={styles.teamMemberImage} source={teamMemberImages.shepita_julia} />\r\n              </View>\r\n              {/* team member description */}\r\n              <View style={styles.teamMemberDescription}>\r\n                <AppText style={[styles.teamMemberName, styles.regularLetterSpacing]}>Шепіта Юлія</AppText>\r\n                <AppText style={[styles.teamMemberDetails]}>Робота з контентом{\"\\n\"}Google Play Store</AppText>\r\n              </View>\r\n            </View>\r\n\r\n            <View style={[styles.teamMemberTile]}>\r\n              {/* image container */}\r\n              <View style={styles.teamMemberImageWrapper}>\r\n                <Image style={styles.teamMemberImage} source={teamMemberImages.ivanov_mykhailo} />\r\n              </View>\r\n              {/* team member description */}\r\n              <View style={styles.teamMemberDescription}>\r\n                <AppText style={[styles.teamMemberName, styles.regularLetterSpacing]}>Іванов Михайло</AppText>\r\n                <AppText style={[styles.teamMemberDetails]}>Тестування</AppText>\r\n              </View>\r\n            </View>\r\n          </View>\r\n          <View>\r\n            <AppText\r\n              style={{\r\n                fontFamily: FontName.Montserrat600,\r\n                fontSize: 16,\r\n                marginVertical: 10,\r\n                marginTop: 25,\r\n                alignSelf: \"center\",\r\n              }}\r\n            >\r\n              Бета-тестувальники\r\n            </AppText>\r\n\r\n            <AppText style={styles.testerName}>Іваськів Роман</AppText>\r\n            <AppText style={styles.testerName}>Беницький Степан</AppText>\r\n            <AppText style={styles.testerName}>Астафурова Наталя</AppText>\r\n            <AppText style={styles.testerName}>Цюпа Вікторія</AppText>\r\n            <AppText style={styles.testerName}>Ступак Марко</AppText>\r\n          </View>\r\n        </View>\r\n      </View>\r\n\r\n      <View style={[styles.card]}>\r\n        <AppText style={[styles.teamSectionHeader, { marginBottom: 10 }]}>Зворотній зв'язок</AppText>\r\n        <AppText style={[{ fontSize: 13, fontFamily: FontName.Montserrat600, marginBottom: 5 }]}>\r\n          Виникли запитання або ідеї як покращити наш застосунок? Напиши нам!\r\n        </AppText>\r\n        <View style={[globalStyles.centered, { flexDirection: \"row\" }]}>\r\n          <Ionicons name=\"mail\" color={palette.navigationBackground} size={19} style={{ marginRight: 5 }} />\r\n          <AppText\r\n            onPress={() => {\r\n              Linking.openURL(\"mailto:schedule.uad@gmail.com\")\r\n            }}\r\n            style={styles.contactsEmail}\r\n          >\r\n            schedule.uad@gmail.com\r\n          </AppText>\r\n        </View>\r\n      </View>\r\n\r\n      <View style={[styles.card]}>\r\n        <AppText style={[styles.teamSectionHeader, { marginBottom: 10 }]}>Розвиток проекту</AppText>\r\n        <AppText style={[{ fontSize: 13, fontFamily: FontName.Montserrat600, marginBottom: 5 }]}>\r\n          Якщо у тебе є досвід роботи з React Native та бажаєш розвивати проект, залишаємо посилання на код застосунку:\r\n        </AppText>\r\n        <View style={[globalStyles.centered, { flexDirection: \"row\", alignItems: \"center\" }]}>\r\n          <Ionicons name=\"logo-github\" color={palette.navigationBackground} size={22} style={{ marginRight: 5 }} />\r\n          <AppText\r\n            onPress={() => {\r\n              Linking.openURL(\"https://github.com/Seagullie/InteractiveScheduleUAD\")\r\n            }}\r\n            style={[styles.contactsEmail, { textDecorationLine: \"none\", marginBottom: 0 }]}\r\n          >\r\n            Репозиторій на GitHub\r\n          </AppText>\r\n        </View>\r\n      </View>\r\n\r\n      <View style={[styles.copyrightContainer]}>\r\n        <AppText style={[{ textAlign: \"center\", fontFamily: FontName.CenturyGothic }]}>\r\n          Авторські права 2023-2025 © Українська Академія Друкарства. Усі права захищені\r\n        </AppText>\r\n      </View>\r\n\r\n      <View style={[styles.appVersionContainer]}>\r\n        <AppText style={[{ fontFamily: FontName.CenturyGothic, color: \"#5A5A5A\" }]}>{appVersion} </AppText>\r\n      </View>\r\n    </ScrollView>\r\n  )\r\n}\r\n\r\nconst teamMemberImageWidth = 110\r\n\r\nconst styles = StyleSheet.create({\r\n  header: {\r\n    fontSize: 26,\r\n    color: palette.navigationBackground,\r\n    fontFamily: FontName.CenturyGothic,\r\n  },\r\n\r\n  row: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n\r\n  tile: {\r\n    borderRadius: 18,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    alignSelf: \"flex-start\",\r\n\r\n    width: 110,\r\n\r\n    padding: 15,\r\n  },\r\n\r\n  tilesContainer: {\r\n    // width: \"100%\",\r\n  },\r\n\r\n  teamMemberTile: {\r\n    width: \"50%\",\r\n    ...globalStyles.centered,\r\n  },\r\n\r\n  teamSectionHeader: {\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    letterSpacing: 0,\r\n    marginBottom: 20,\r\n  },\r\n\r\n  teamMemberName: {\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n    color: palette.navigationBackground,\r\n  },\r\n\r\n  teamMemberDetails: {\r\n    letterSpacing: 0,\r\n    fontFamily: FontName.Raleway600,\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  regularLetterSpacing: {\r\n    letterSpacing: 0,\r\n  },\r\n\r\n  teamMemberDescription: {\r\n    marginTop: 15,\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  teamMemberImage: {\r\n    width: teamMemberImageWidth,\r\n    height: teamMemberImageWidth,\r\n    borderRadius: 999,\r\n    resizeMode: \"contain\",\r\n  },\r\n\r\n  teamMemberImageWrapper: {\r\n    backgroundColor: \"gray\",\r\n\r\n    borderRadius: 999,\r\n\r\n    elevation: 3,\r\n    shadowOffset: { width: 1, height: 1 },\r\n    shadowColor: \"#333\",\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 2,\r\n  },\r\n\r\n  tileText: {\r\n    fontFamily: FontName.CenturyGothic,\r\n    fontSize: 14,\r\n  },\r\n\r\n  testerName: {\r\n    fontFamily: FontName.Montserrat500,\r\n    fontSize: 13,\r\n    color: palette.navigationBackground,\r\n    alignSelf: \"center\",\r\n  },\r\n\r\n  card: {\r\n    // marginVertical: 5,\r\n    // marginHorizontal: 10,\r\n    padding: 15,\r\n    margin: 10,\r\n    // paddingVertical: 12,\r\n    borderRadius: 10,\r\n    backgroundColor: \"white\",\r\n\r\n    elevation: 1,\r\n    shadowOffset: { width: 1, height: 1 },\r\n    shadowColor: \"#333\",\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 2,\r\n  },\r\n\r\n  contactsEmail: {\r\n    color: palette.navigationBackground,\r\n    fontSize: 16,\r\n    fontFamily: FontName.CenturyGothic,\r\n    textAlign: \"center\",\r\n    textDecorationLine: \"underline\",\r\n    marginBottom: 3,\r\n  },\r\n\r\n  copyrightContainer: {\r\n    marginTop: 5,\r\n\r\n    backgroundColor: palette.background,\r\n    paddingHorizontal: 50,\r\n    paddingVertical: 7,\r\n  },\r\n\r\n  appVersionContainer: {\r\n    backgroundColor: \"white\",\r\n    alignItems: \"flex-end\",\r\n    paddingVertical: 2,\r\n    paddingRight: 5,\r\n  },\r\n})\r\n","import React from \"react\"\r\nimport { View, Text, StyleSheet } from \"react-native\"\r\nimport AppText from \"./shared/AppText\"\r\nimport { FontName } from \"../constants/Fonts\"\r\n\r\ninterface TableProps {\r\n  headers: string[]\r\n  data: string[][]\r\n  columnWidths: number | string[]\r\n}\r\n\r\nconst Table: React.FC<TableProps> = ({ headers, data, columnWidths }) => {\r\n  const colsN = data[0].length\r\n  const rowsN = data.length\r\n\r\n  return (\r\n    <View style={styles.table}>\r\n      <View style={styles.tableRow}>\r\n        {headers.map((header, index) => (\r\n          <View\r\n            key={index}\r\n            style={[\r\n              styles.tableHeaderCell,\r\n              { maxWidth: columnWidths[index], minWidth: columnWidths[index] },\r\n              index === colsN - 1 ? { borderRightWidth: 0 } : {},\r\n            ]}\r\n          >\r\n            <AppText>{header}</AppText>\r\n          </View>\r\n        ))}\r\n      </View>\r\n      {data.map((row, rowIndex) => (\r\n        <View key={rowIndex} style={styles.tableRow}>\r\n          {row.map((cell, cellIndex) => (\r\n            <View\r\n              key={cellIndex}\r\n              style={[\r\n                styles.tableCell,\r\n                {\r\n                  maxWidth: columnWidths[cellIndex],\r\n                  minWidth: columnWidths[cellIndex],\r\n                },\r\n                cellIndex === colsN - 1 ? { borderRightWidth: 0 } : {},\r\n              ]}\r\n            >\r\n              <AppText\r\n                style={{\r\n                  fontFamily: FontName.MontserratRegular,\r\n                }}\r\n              >\r\n                {cell}\r\n              </AppText>\r\n            </View>\r\n          ))}\r\n        </View>\r\n      ))}\r\n    </View>\r\n  )\r\n}\r\n\r\nconst tableBorderColor = \"#B9B9B9\"\r\nconst tableBorderWidth = 1\r\n\r\nconst sharedCellStyle = {\r\n  padding: 10,\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  textAlign: \"center\",\r\n  //   height: \"100%\",\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  table: {\r\n    borderWidth: tableBorderWidth,\r\n    // borderRightWidth: 2,\r\n    borderRadius: 7,\r\n    borderColor: tableBorderColor,\r\n    // margin: 10,\r\n\r\n    overflow: \"hidden\",\r\n  },\r\n  tableRow: {\r\n    flexDirection: \"row\",\r\n    borderColor: tableBorderColor,\r\n  },\r\n\r\n  tableHeaderCell: {\r\n    ...sharedCellStyle, // Include shared cell styles\r\n    // fontWeight: \"bold\",\r\n    fontFamily: FontName.MontserratMedium,\r\n    fontSize: 12,\r\n    borderRightWidth: tableBorderWidth,\r\n    borderColor: tableBorderColor,\r\n\r\n    backgroundColor: \"rgba(0,0,0,0.06)\",\r\n  },\r\n  tableCell: {\r\n    ...sharedCellStyle, // Include shared cell styles\r\n    borderWidth: 0,\r\n    borderTopWidth: tableBorderWidth,\r\n    borderRightWidth: tableBorderWidth,\r\n    borderColor: tableBorderColor,\r\n    // backgroundColor: \"orange\",\r\n  },\r\n})\r\n\r\nexport default Table\r\n","import { useState } from \"react\"\r\nimport { View, TouchableOpacity, StyleSheet } from \"react-native\"\r\nimport React from \"react\"\r\n\r\nimport AppText from \"./shared/AppText\"\r\nimport { globalStyles, palette } from \"../styles/global\"\r\nimport { FontName } from \"../constants/Fonts\"\r\n\r\nexport default function UnfoldableCard({ title, bodyComponent }: { title: string; bodyComponent: React.JSX.Element }) {\r\n  const [isBodyRevealed, setIsBodyRevealed] = useState(false)\r\n\r\n  return (\r\n    <TouchableOpacity\r\n      style={{ marginBottom: 12 }}\r\n      onPress={() => setIsBodyRevealed(!isBodyRevealed)}\r\n      // avoid opacity animation when body is revealed (needed for distraction-free scrolling through long content)\r\n      activeOpacity={isBodyRevealed ? 1 : 0.2}\r\n    >\r\n      <View style={UCStyles.unfoldableCard}>\r\n        {/* title | question */}\r\n\r\n        <View style={[globalStyles.horizontalCenteredFlex]}>\r\n          <AppText style={{ fontFamily: FontName.RalewayMedium, fontSize: 15, flex: 1, lineHeight: 20 }}>\r\n            {title}\r\n          </AppText>\r\n\r\n          {/* reveal button */}\r\n          <TouchableOpacity onPress={() => setIsBodyRevealed(!isBodyRevealed)} style={UCStyles.revealButton}>\r\n            <AppText style={{ fontFamily: FontName.CenturyGothic, color: palette.textOnBackground, fontSize: 36 }}>\r\n              {!isBodyRevealed ? \"+\" : \"-\"}\r\n            </AppText>\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n        {/* answer */}\r\n\r\n        {isBodyRevealed ? bodyComponent : <></>}\r\n      </View>\r\n    </TouchableOpacity>\r\n  )\r\n}\r\n\r\nexport const UCStyles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: palette.backgroundLight,\r\n    padding: 10,\r\n    paddingTop: 16,\r\n  },\r\n\r\n  unfoldableCard: {\r\n    ...globalStyles.card,\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 10,\r\n  },\r\n\r\n  unfoldableCardText: {\r\n    marginVertical: 15,\r\n    fontFamily: FontName.RalewayRegular,\r\n    fontSize: 14,\r\n    lineHeight: 1.3 * 14,\r\n  },\r\n\r\n  revealButton: {\r\n    ...globalStyles.navigationButton,\r\n    width: 30,\r\n    borderColor: \"transparent\", // TODO: create separate reveal button instead of transforming navigation button to desired shape\r\n    paddingVertical: 0,\r\n  },\r\n})\r\n","import { View, Linking } from \"react-native\"\r\nimport AppText from \"../components/shared/AppText\"\r\nimport Table from \"../components/Table\"\r\nimport { ScrollView } from \"react-native-gesture-handler\"\r\nimport UnfoldableCard, { UCStyles } from \"../components/UnfoldableCard\"\r\nimport { LINK_TO_WEB_VERSION, WEB_VERSION_NAME } from \"../constants/Constants\"\r\nimport { Ionicons } from \"@expo/vector-icons\"\r\nimport { palette } from \"../styles/global\"\r\n\r\nexport default function QnAScreen() {\r\n  return (\r\n    <ScrollView style={UCStyles.container}>\r\n      <UnfoldableCard\r\n        bodyComponent={\r\n          <View style={{ marginTop: 15 }}>\r\n            <Table\r\n              headers={[\"Адреса корпусу\", \"Позначення аудиторії в розкладі\"]}\r\n              data={[\r\n                [\"вул. Під Голоском 19\", \"а. ХХХ\"],\r\n                [\"вул. Підвальна 17\", \"a. Х або а. XX\"],\r\n                [\"вул. Личаківська 3\", \"Л. Х\"],\r\n                [\"вул. Коцюбинського 21\", \"К. Х\"],\r\n                [\"вул. Винниченка 12\", \"В. Х\"],\r\n              ]}\r\n              columnWidths={[\"50%\", \"50%\"]}\r\n            />\r\n\r\n            <AppText style={UCStyles.unfoldableCardText}>\r\n              де ХХХ – трицифровий номер аудиторії,{\"\\n\"}Х та ХХ – одно- та двоцифровий номери{\"\\n\"}а Л, К, В – перші\r\n              літери адрес корпусів\r\n            </AppText>\r\n          </View>\r\n        }\r\n        title={\"Як зрозуміти, в якому корпусі буде проходити пара?\"}\r\n      />\r\n\r\n      <UnfoldableCard\r\n        bodyComponent={\r\n          <AppText style={UCStyles.unfoldableCardText}>\r\n            Для швидкого скасування всіх змін, що ви внесли в редакторі, видаліть та повторно встановіть застосунок.\r\n            Якщо це веб-версія, то видаліть дані сайту та оновіть сторінку.\r\n          </AppText>\r\n        }\r\n        title={\"Як анулювати всі зміни, які я зробив у редакторі розкладу?\"}\r\n      />\r\n\r\n      <UnfoldableCard\r\n        bodyComponent={\r\n          <AppText style={UCStyles.unfoldableCardText}>\r\n            Спробуйте поміняти розклад на суміжній, наприклад: КСГ-33 на КСГ-33_2\r\n          </AppText>\r\n        }\r\n        title={\"Багато невідповідностей в розкладі, що робити?\"}\r\n      />\r\n\r\n      <UnfoldableCard\r\n        bodyComponent={\r\n          <AppText style={UCStyles.unfoldableCardText}>\r\n            🙀. Напишіть про це нам на\r\n            <AppText\r\n              onPress={() => {\r\n                Linking.openURL(\"mailto:schedule.uad@gmail.com\")\r\n              }}\r\n            >\r\n              {\" \"}\r\n              schedule.uad@gmail.com\r\n            </AppText>{\" \"}\r\n            . А доки ми це фіксим, можна скористатись редактором й вписати туди правильний ПІБ.\r\n          </AppText>\r\n        }\r\n        title={\"Я помітив, що в розкладі зазначений не той викладач.\"}\r\n      />\r\n\r\n      <UnfoldableCard\r\n        bodyComponent={\r\n          <AppText style={UCStyles.unfoldableCardText}>\r\n            Усі розклади беруться зі сайту Академії й автоматично перетворюються в формат, сумісний зі застосунком. Таке\r\n            перетворення не завжди проходить правильно 🫠... тож для цього (й не тільки) було створено редактор, де\r\n            розклад можна підправити.\r\n          </AppText>\r\n        }\r\n        title={\"Звідки беруться розклади?\"}\r\n      />\r\n\r\n      <UnfoldableCard\r\n        bodyComponent={\r\n          <AppText style={UCStyles.unfoldableCardText}>\r\n            Свайпніть пару вліво, а потім натисніть на іконку смітника{\" \"}\r\n            {\"(\"}<Ionicons name=\"trash-outline\" size={14} color={palette.grayedOut} />{\")\"}, що з'явилась справа.{\"\\n\\n\"}\r\n            Або натисніть на пару та видаліть весь текст в полі \"Предмет\".\r\n          </AppText>\r\n        }\r\n        title={\"Як видалити пару в редакторі?\"}\r\n      />\r\n\r\n      <UnfoldableCard\r\n        bodyComponent={\r\n          <AppText style={UCStyles.unfoldableCardText}>\r\n            Переконайтесь, що в налаштуваннях застосунку у вас: {\"\\n\"}- Увімкнений перемикач «нагадувати про початок\r\n            пари» {\"\\n\"}- Налаштований необхідний час, за який вас застосунок має заздалегідь сповіщати про початок\r\n            пари. {\"\\n\\n\"}\r\n            Якщо все так, проте сповіщення все одно не приходять, перевірте налаштування телефону, а саме чи наданий\r\n            дозвіл на сповіщення застосунку «Розклад УАД».{\"\\n\\n\"}\r\n            Якщо і ця порада вам не допомогла, напишіть нам на schedule.uad@gmail.com\r\n          </AppText>\r\n        }\r\n        title={\"Що робити, якщо мені не приходять сповіщення про початок пар?\"}\r\n      />\r\n\r\n      <UnfoldableCard\r\n        bodyComponent={\r\n          <AppText style={UCStyles.unfoldableCardText}>\r\n            Якщо коротко: ще не знаєм.{\"\\n\\n\"}Зі iOS версією маємо наступні складнощі: публікація в App Store коштує\r\n            $100 на рік й потребує незначної адаптації застосунку (потрібен окремий іOS розробник).{\"\\n\\n\"}\r\n            Альтернативою iOS версії є веб версія:{\" \"}\r\n            <AppText\r\n              onPress={() => {\r\n                Linking.openURL(LINK_TO_WEB_VERSION)\r\n              }}\r\n            >\r\n              {\" \"}\r\n              {`${WEB_VERSION_NAME}`}\r\n            </AppText>\r\n          </AppText>\r\n        }\r\n        title={\"Чи є/буде версія для iOS?\"}\r\n      />\r\n    </ScrollView>\r\n  )\r\n}\r\n","import { init, trackEvent } from \"@aptabase/web\"\r\nimport { AptabaseAppKey } from \"../../constants/Keys\"\r\nimport appJson from \"../../app.json\"\r\n\r\ninit(AptabaseAppKey)\r\n\r\nexport class AnalyticsService {\r\n  static async trackEvent(eventName: string, props?: Record<string, string | number | boolean>) {\r\n    const appVersion = appJson.expo.version\r\n\r\n    // add isNative and version to the props\r\n    props = {\r\n      ...(props ?? {}),\r\n      platform: \"web\",\r\n      version: appVersion,\r\n    }\r\n\r\n    try {\r\n      trackEvent(eventName, props)\r\n    } catch (e) {\r\n      console.error(\"Failed to track event\", e)\r\n    }\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport { FallbackProps } from \"react-error-boundary\"\r\nimport { Text } from \"react-native\"\r\nimport { ScrollView } from \"react-native-gesture-handler\"\r\n\r\nexport function showErrorView({ error, resetErrorBoundary }: FallbackProps) {\r\n  const e = error\r\n  return (\r\n    <ScrollView>\r\n      <Text style={{ color: \"red\" }}>\r\n        Something went wrong. Something went wrong. Something went wrong. Something went wrong. Something went wrong.\r\n        Something went wrong.\r\n      </Text>\r\n      <Text style={{ color: \"red\" }}>\r\n        Something went wrong. Something went wrong. Something went wrong. Something went wrong. Something went wrong.\r\n        Something went wrong.\r\n      </Text>\r\n      <Text style={{ color: \"red\" }}>\r\n        Something went wrong. Something went wrong. Something went wrong. Something went wrong. Something went wrong.\r\n        Something went wrong.\r\n      </Text>\r\n      <Text>\r\n        {JSON.stringify(e.message, null, 4)}\r\n        {JSON.stringify(e.stack, null, 4)}\r\n      </Text>\r\n    </ScrollView>\r\n  )\r\n}\r\n","import { StyleSheet } from \"react-native\"\r\nimport { isLandscapeWeb } from \"../utilities/utilities\"\r\n\r\n// const drawerMenuWidthPx = 320\r\nconst landscapeWebStyles = StyleSheet.create({\r\n  root: {\r\n    width: \"50%\",\r\n    minWidth: \"50%\",\r\n    maxWidth: \"50%\",\r\n\r\n    maxHeight: \"100%\",\r\n\r\n    flexGrow: 1,\r\n    marginLeft: \"33%\", // free space divided by two and + drawerMenuWidthPx in % * 0.5\r\n    // TODO: unhardcode the percentage\r\n  },\r\n})\r\nconst nativeStyles = StyleSheet.create({\r\n  root: {\r\n    width: \"100%\",\r\n    flex: 1,\r\n  },\r\n})\r\nexport const AppStyles = isLandscapeWeb() ? landscapeWebStyles : nativeStyles\r\n","// EXTERNAL DEPENDENCIES\n\nimport * as SplashScreen from \"expo-splash-screen\"\nconsole.log(\"[IMPORTS 1] Imported SplashScreen\")\n// Keep the splash screen visible while we fetch resources\nSplashScreen.preventAutoHideAsync()\n\nimport \"react-native-gesture-handler\"\nimport { View } from \"react-native\"\nimport React, { useEffect, useState } from \"react\"\n\nimport { NavigationContainer } from \"@react-navigation/native\"\n\nimport { useFonts } from \"expo-font\"\nimport * as Font from \"expo-font\"\n\nimport { Entypo, FontAwesome, Ionicons, Octicons } from \"@expo/vector-icons\"\n\nimport { ErrorBoundary } from \"react-error-boundary\"\n\nimport \"react-native-url-polyfill/auto\"\n\nconsole.log(\"[IMPORTS] Imported all external dependencies\")\n\n// OWN MODULES\n\nimport DrawerMenu from \"./components/DrawerMenuComponent/DrawerMenu\"\nimport { DrawerRoutes } from \"./routes/DrawerRoutes\"\n\nimport { Drawer } from \"./routes/globalDrawer\"\nimport Header from \"./components/Header\"\n\n// screens\n\nimport ScheduleScreen from \"./screens/ScheduleScreen/ScheduleScreen\"\nimport ReglamentScreen from \"./screens/ReglamentScreen/ReglamentScreen\"\nimport TeachersScreen from \"./screens/TeachersScreen\"\nimport EditorStack from \"./routes/EditorStack\"\nimport ContactsStack from \"./routes/ContactsStack\"\nimport NewsScreen from \"./screens/NewsScreen/NewsScreen\"\nimport TestTabs from \"./routes/testTabs\"\nimport SettingsScreen from \"./screens/SettingsScreen/SettingsScreen\"\nimport AboutScreen from \"./screens/AboutScreen\"\nimport QnAScreen from \"./screens/QnAScreen\"\n\nimport { isRunningInBrowser } from \"./utilities/utilities\"\nimport { GetAllAppFonts } from \"./constants/Fonts\"\nimport { AnalyticsService } from \"./services/AnalyticsService/AnalyticsService\"\nimport { showErrorView } from \"./components/shared/FailureView\"\nimport { AppStyles } from \"./styles/AppStyles\"\n;(\"use client\")\n// TODO: annotate\n\nconsole.log(\"[IMPORTS] Imported all internal dependencies\")\n\nexport default function App() {\n  try {\n    console.log(\"Settings up App component\")\n\n    const [appIsReady, setAppIsReady] = useState(false)\n    const [fontsLoaded] = useFonts(GetAllAppFonts())\n\n    // preload icons to prevent text flicker effect on navigating to another page\n    if (isRunningInBrowser()) {\n      Font.loadAsync(FontAwesome.font)\n      Font.loadAsync(Entypo.font)\n      Font.loadAsync(Ionicons.font)\n      Font.loadAsync(Octicons.font)\n    }\n\n    useEffect(() => {\n      if (fontsLoaded) {\n        SplashScreen.hideAsync().then(() => setAppIsReady(true))\n      }\n    }, [fontsLoaded])\n\n    if (!appIsReady) {\n      return null\n    }\n\n    AnalyticsService.trackEvent(\"app\", { event: \"app started\" })\n\n    const markdown = (\n      <ErrorBoundary fallbackRender={showErrorView}>\n        <NavigationContainer>\n          <View style={AppStyles.root}>\n            <Drawer.Navigator\n              screenOptions={{\n                header: (props) => <Header navigation={props.navigation} title={props.route.name as DrawerRoutes} />,\n              }}\n              drawerContent={(props) => <DrawerMenu {...props} />}\n            >\n              <Drawer.Screen\n                name={DrawerRoutes.VIEWER}\n                component={ScheduleScreen}\n                options={{\n                  header: (props) => <View />,\n                }}\n              />\n\n              <Drawer.Screen name={DrawerRoutes.REGLAMENT} component={ReglamentScreen} />\n\n              <Drawer.Screen name={DrawerRoutes.TEACHERS} component={TeachersScreen} />\n\n              <Drawer.Screen name={DrawerRoutes.CONTACTS} component={ContactsStack} />\n\n              <Drawer.Screen name={DrawerRoutes.NEWS} component={NewsScreen} />\n\n              <Drawer.Screen name={DrawerRoutes.QnA} component={QnAScreen} />\n\n              <Drawer.Screen\n                name={DrawerRoutes.EDITOR}\n                options={{\n                  header: (props) => <View />,\n                }}\n                component={EditorStack}\n              />\n\n              <Drawer.Screen\n                name={DrawerRoutes.TESTS}\n                component={TestTabs}\n                options={{\n                  header: (props) => <View />,\n                }}\n              />\n\n              <Drawer.Screen name={DrawerRoutes.SETTINGS} component={SettingsScreen} />\n\n              <Drawer.Screen name={DrawerRoutes.ABOUT} component={AboutScreen} />\n            </Drawer.Navigator>\n          </View>\n        </NavigationContainer>\n      </ErrorBoundary>\n    )\n\n    return markdown\n  } catch (e) {\n    console.log(e)\n    return showErrorView(e)\n  }\n}\n","console.log(\"Parsing index.ts\")\n\nimport { registerRootComponent } from \"expo\"\n\nimport App from \"./App\"\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App)\n","var map = {\n\t\"./af\": 17582,\n\t\"./af.js\": 17582,\n\t\"./ar\": 93042,\n\t\"./ar-dz\": 54265,\n\t\"./ar-dz.js\": 54265,\n\t\"./ar-kw\": 92553,\n\t\"./ar-kw.js\": 92553,\n\t\"./ar-ly\": 85352,\n\t\"./ar-ly.js\": 85352,\n\t\"./ar-ma\": 67097,\n\t\"./ar-ma.js\": 67097,\n\t\"./ar-ps\": 76150,\n\t\"./ar-ps.js\": 76150,\n\t\"./ar-sa\": 84427,\n\t\"./ar-sa.js\": 84427,\n\t\"./ar-tn\": 7221,\n\t\"./ar-tn.js\": 7221,\n\t\"./ar.js\": 93042,\n\t\"./az\": 60458,\n\t\"./az.js\": 60458,\n\t\"./be\": 17596,\n\t\"./be.js\": 17596,\n\t\"./bg\": 93830,\n\t\"./bg.js\": 93830,\n\t\"./bm\": 27044,\n\t\"./bm.js\": 27044,\n\t\"./bn\": 58573,\n\t\"./bn-bd\": 13296,\n\t\"./bn-bd.js\": 13296,\n\t\"./bn.js\": 58573,\n\t\"./bo\": 25614,\n\t\"./bo.js\": 25614,\n\t\"./br\": 62041,\n\t\"./br.js\": 62041,\n\t\"./bs\": 91786,\n\t\"./bs.js\": 91786,\n\t\"./ca\": 75833,\n\t\"./ca.js\": 75833,\n\t\"./cs\": 52711,\n\t\"./cs.js\": 52711,\n\t\"./cv\": 71036,\n\t\"./cv.js\": 71036,\n\t\"./cy\": 84977,\n\t\"./cy.js\": 84977,\n\t\"./da\": 8770,\n\t\"./da.js\": 8770,\n\t\"./de\": 67342,\n\t\"./de-at\": 81566,\n\t\"./de-at.js\": 81566,\n\t\"./de-ch\": 87544,\n\t\"./de-ch.js\": 87544,\n\t\"./de.js\": 67342,\n\t\"./dv\": 82875,\n\t\"./dv.js\": 82875,\n\t\"./el\": 78536,\n\t\"./el.js\": 78536,\n\t\"./en-au\": 38617,\n\t\"./en-au.js\": 38617,\n\t\"./en-ca\": 79227,\n\t\"./en-ca.js\": 79227,\n\t\"./en-gb\": 59754,\n\t\"./en-gb.js\": 59754,\n\t\"./en-ie\": 37217,\n\t\"./en-ie.js\": 37217,\n\t\"./en-il\": 85418,\n\t\"./en-il.js\": 85418,\n\t\"./en-in\": 80800,\n\t\"./en-in.js\": 80800,\n\t\"./en-nz\": 67299,\n\t\"./en-nz.js\": 67299,\n\t\"./en-sg\": 76305,\n\t\"./en-sg.js\": 76305,\n\t\"./eo\": 8673,\n\t\"./eo.js\": 8673,\n\t\"./es\": 71301,\n\t\"./es-do\": 3187,\n\t\"./es-do.js\": 3187,\n\t\"./es-mx\": 48223,\n\t\"./es-mx.js\": 48223,\n\t\"./es-us\": 37634,\n\t\"./es-us.js\": 37634,\n\t\"./es.js\": 71301,\n\t\"./et\": 4976,\n\t\"./et.js\": 4976,\n\t\"./eu\": 11847,\n\t\"./eu.js\": 11847,\n\t\"./fa\": 74372,\n\t\"./fa.js\": 74372,\n\t\"./fi\": 41628,\n\t\"./fi.js\": 41628,\n\t\"./fil\": 56802,\n\t\"./fil.js\": 56802,\n\t\"./fo\": 42874,\n\t\"./fo.js\": 42874,\n\t\"./fr\": 9853,\n\t\"./fr-ca\": 87170,\n\t\"./fr-ca.js\": 87170,\n\t\"./fr-ch\": 22825,\n\t\"./fr-ch.js\": 22825,\n\t\"./fr.js\": 9853,\n\t\"./fy\": 68876,\n\t\"./fy.js\": 68876,\n\t\"./ga\": 93533,\n\t\"./ga.js\": 93533,\n\t\"./gd\": 82770,\n\t\"./gd.js\": 82770,\n\t\"./gl\": 98602,\n\t\"./gl.js\": 98602,\n\t\"./gom-deva\": 63059,\n\t\"./gom-deva.js\": 63059,\n\t\"./gom-latn\": 48212,\n\t\"./gom-latn.js\": 48212,\n\t\"./gu\": 23409,\n\t\"./gu.js\": 23409,\n\t\"./he\": 17210,\n\t\"./he.js\": 17210,\n\t\"./hi\": 4750,\n\t\"./hi.js\": 4750,\n\t\"./hr\": 51315,\n\t\"./hr.js\": 51315,\n\t\"./hu\": 47626,\n\t\"./hu.js\": 47626,\n\t\"./hy-am\": 91317,\n\t\"./hy-am.js\": 91317,\n\t\"./id\": 26892,\n\t\"./id.js\": 26892,\n\t\"./is\": 97577,\n\t\"./is.js\": 97577,\n\t\"./it\": 57628,\n\t\"./it-ch\": 3046,\n\t\"./it-ch.js\": 3046,\n\t\"./it.js\": 57628,\n\t\"./ja\": 92504,\n\t\"./ja.js\": 92504,\n\t\"./jv\": 25917,\n\t\"./jv.js\": 25917,\n\t\"./ka\": 64513,\n\t\"./ka.js\": 64513,\n\t\"./kk\": 94935,\n\t\"./kk.js\": 94935,\n\t\"./km\": 96661,\n\t\"./km.js\": 96661,\n\t\"./kn\": 89964,\n\t\"./kn.js\": 89964,\n\t\"./ko\": 98067,\n\t\"./ko.js\": 98067,\n\t\"./ku\": 61165,\n\t\"./ku-kmr\": 85158,\n\t\"./ku-kmr.js\": 85158,\n\t\"./ku.js\": 61165,\n\t\"./ky\": 11177,\n\t\"./ky.js\": 11177,\n\t\"./lb\": 2967,\n\t\"./lb.js\": 2967,\n\t\"./lo\": 81972,\n\t\"./lo.js\": 81972,\n\t\"./lt\": 58469,\n\t\"./lt.js\": 58469,\n\t\"./lv\": 33155,\n\t\"./lv.js\": 33155,\n\t\"./me\": 87935,\n\t\"./me.js\": 87935,\n\t\"./mi\": 74483,\n\t\"./mi.js\": 74483,\n\t\"./mk\": 32501,\n\t\"./mk.js\": 32501,\n\t\"./ml\": 73120,\n\t\"./ml.js\": 73120,\n\t\"./mn\": 20266,\n\t\"./mn.js\": 20266,\n\t\"./mr\": 19406,\n\t\"./mr.js\": 19406,\n\t\"./ms\": 80109,\n\t\"./ms-my\": 90864,\n\t\"./ms-my.js\": 90864,\n\t\"./ms.js\": 80109,\n\t\"./mt\": 22904,\n\t\"./mt.js\": 22904,\n\t\"./my\": 44067,\n\t\"./my.js\": 44067,\n\t\"./nb\": 21301,\n\t\"./nb.js\": 21301,\n\t\"./ne\": 81152,\n\t\"./ne.js\": 81152,\n\t\"./nl\": 76735,\n\t\"./nl-be\": 97761,\n\t\"./nl-be.js\": 97761,\n\t\"./nl.js\": 76735,\n\t\"./nn\": 37569,\n\t\"./nn.js\": 37569,\n\t\"./oc-lnc\": 20833,\n\t\"./oc-lnc.js\": 20833,\n\t\"./pa-in\": 3044,\n\t\"./pa-in.js\": 3044,\n\t\"./pl\": 34249,\n\t\"./pl.js\": 34249,\n\t\"./pt\": 87585,\n\t\"./pt-br\": 26826,\n\t\"./pt-br.js\": 26826,\n\t\"./pt.js\": 87585,\n\t\"./ro\": 62526,\n\t\"./ro.js\": 62526,\n\t\"./ru\": 62204,\n\t\"./ru.js\": 62204,\n\t\"./sd\": 43270,\n\t\"./sd.js\": 43270,\n\t\"./se\": 61541,\n\t\"./se.js\": 61541,\n\t\"./si\": 71921,\n\t\"./si.js\": 71921,\n\t\"./sk\": 49935,\n\t\"./sk.js\": 49935,\n\t\"./sl\": 46254,\n\t\"./sl.js\": 46254,\n\t\"./sq\": 59897,\n\t\"./sq.js\": 59897,\n\t\"./sr\": 42496,\n\t\"./sr-cyrl\": 11135,\n\t\"./sr-cyrl.js\": 11135,\n\t\"./sr.js\": 42496,\n\t\"./ss\": 32215,\n\t\"./ss.js\": 32215,\n\t\"./sv\": 84716,\n\t\"./sv.js\": 84716,\n\t\"./sw\": 50803,\n\t\"./sw.js\": 50803,\n\t\"./ta\": 31538,\n\t\"./ta.js\": 31538,\n\t\"./te\": 2302,\n\t\"./te.js\": 2302,\n\t\"./tet\": 25280,\n\t\"./tet.js\": 25280,\n\t\"./tg\": 14100,\n\t\"./tg.js\": 14100,\n\t\"./th\": 95385,\n\t\"./th.js\": 95385,\n\t\"./tk\": 736,\n\t\"./tk.js\": 736,\n\t\"./tl-ph\": 79726,\n\t\"./tl-ph.js\": 79726,\n\t\"./tlh\": 41873,\n\t\"./tlh.js\": 41873,\n\t\"./tr\": 36463,\n\t\"./tr.js\": 36463,\n\t\"./tzl\": 27491,\n\t\"./tzl.js\": 27491,\n\t\"./tzm\": 29500,\n\t\"./tzm-latn\": 80196,\n\t\"./tzm-latn.js\": 80196,\n\t\"./tzm.js\": 29500,\n\t\"./ug-cn\": 91287,\n\t\"./ug-cn.js\": 91287,\n\t\"./uk\": 35341,\n\t\"./uk.js\": 35341,\n\t\"./ur\": 36246,\n\t\"./ur.js\": 36246,\n\t\"./uz\": 55550,\n\t\"./uz-latn\": 77254,\n\t\"./uz-latn.js\": 77254,\n\t\"./uz.js\": 55550,\n\t\"./vi\": 78796,\n\t\"./vi.js\": 78796,\n\t\"./x-pseudo\": 22736,\n\t\"./x-pseudo.js\": 22736,\n\t\"./yo\": 28621,\n\t\"./yo.js\": 28621,\n\t\"./zh-cn\": 67601,\n\t\"./zh-cn.js\": 67601,\n\t\"./zh-hk\": 39053,\n\t\"./zh-hk.js\": 39053,\n\t\"./zh-mo\": 71248,\n\t\"./zh-mo.js\": 71248,\n\t\"./zh-tw\": 74725,\n\t\"./zh-tw.js\": 74725\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 35358;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [793], () => (__webpack_require__(47680)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["ContentfulSpace","ContentfulContentDeliveryAccessToken","STORAGE_KEY","REGLAMENT_DATA","MAX_CLASSES_PER_DAY","NOTIFICATIONS_CHANNEL_ID","WEB_VERSION_NAME","LINK_TO_WEB_VERSION","GetTimeDifference","earlier","later","momentA","moment","momentB","hourDifference","diff","minuteDifference","hours","minutes","seconds","determineInterval","timepoint","arguments","length","undefined","Date","interval","forEach","class_","value","start","hourAndMinuteStart","hourStart","split","minuteStart","hourAndMinuteEnd","hourEnd","minuteEnd","now","getFullYear","getMonth","getDate","parseInt","getContentfulClient","createClient","space","environment","accessToken","ensureExtension","filename","extension","endsWith","ensureNoExtension","slice","ensureEnding","text","ending","isMail","includes","isLandscapeWeb","window","innerWidth","innerHeight","FontName","palette","background","backgroundLight","textOnBackground","navigationBackground","numbers","grayedOut","grayishBlue","ongoingClass","globalStyles","StyleSheet","create","container","padding","scrollView","marginBottom","screen","flex","backgroundColor","centered","justifyContent","alignItems","fontFamily","CinzelRegular","fontSize","paragraph","marginVertical","lineHeight","sectionHeader","marginLeft","input","borderWidth","borderColor","borderRadius","errorText","color","fontWeight","marginTop","textAlign","navIcon","paddingHorizontal","paddingRight","separator","height","width","noDisplay","display","margin","zIndex","invisible","opacity","row","flexDirection","grayIcon","card","paddingVertical","elevation","shadowOffset","shadowColor","shadowOpacity","shadowRadius","link","underlinedLink","textDecorationLine","captionWithIcon","navigationButton","modalContentContainer","position","top","marginHorizontal","searchBar","Montserrat500","horizontalCenteredFlex","previewImagesFull","require","schedule","reglamentPreview","editorPreview","settingsPreview","images","uad_logo_text_not_vector","uad_logo_text_not_vector_hires","teamMemberImages","senchyk_andrii","zakharova_zarina","shepita_julia","ivanov_mykhailo","editorImages","lightbulb","drawerMenuImages","uad_logo_white_outline","imageIcons","museum","tiktok","warning_triangle","DrawerRoutes","EXAMPLE_NEWS","title","body","createdAt","NewsLoaderService","_createClass","_classCallCheck","_newsCached","key","_init","_asyncToGenerator","apply","_getNewsFromContentful","this","news","fetchContentfulEntries","items","map","entry","_ref","fields","sys","sort","a","b","getTime","_fetchContentfulEntries","client","getEntries","content_type","_getNewestArticleDate","getNewsFromContentful","_GetInstance","instance","init","_defineProperty","VIEWER","_jsx","Ionicons","name","size","REGLAMENT","TEACHERS","FontAwesome5","CONTACTS","NEWS","QnA","FontAwesome","TESTS","EDITOR","SETTINGS","ABOUT","YellowCircle","_ref$filled","filled","View","style","alignSelf","styles","pageLinkContainer","pageLink","CenturyGothic","drawerContainer","paddingTop","paddingBottom","drawerContainerBottom","activePageLink","drawerContainerHeader","borderBottomColor","borderBottomWidth","ASYNC_STORAGE_KEY_NEWS_CHECKED_DATE","shouldDisplayYellowCircle","RouteButtonFactory","currentRoute","routeNameToIconRef","_ref2","route","index","navigation","useNavigation","routeName","isCurrentRoute","isNewsRoute","yellowCircle","TouchableOpacity","onPress","screenName","AsyncStorage","setItem","toString","navigate","children","_jsxs","_objectSpread","current","Text","DrawerMenu","useRef","RouteIcons","routesContainer","useNavigationState","state","routes","isRunningInExpoGo_","constants","executionEnvironment","ExecutionEnvironment","StoreClient","breakpoint","topRoutes","bottomRoutes","_","RouteButton","Image","marginRight","source","ActivityIndicator","GetInstance","then","newestArticleDate","getNewestArticleDate","lastSeenArticle","getItem","lastSeenArticleDate","_x","Drawer","createDrawerNavigator","getRouteIcon","headerText","RouteIconConstructor","type","RouteIcon","props","MaterialIcons","openDrawer","BaseHeader","icon","headerContentContainer","GlobalHeader","headerContentElement","headerContent","SafeAreaView","header","WeekType","SEMESTER_START","SEMESTER_START_TYPE","Denominator","GetWeekType","timeDifferenceInDays","Math","trunc","Nominator","getStrict","array","Error","workDays","workDaysEn","workDaysEnLower","day","toLowerCase","CLASS_TYPE","CLASS_TYPE_SHORT","LECTURE","PRACTICE","LAB","ScheduleClass","data","_data$isBiweekly","_data$classType","weekName","isBiweekly","teacher","room","isSharedClass","classType","setWeek","week","getDay","isInCurrentTimeSlot","isMatchingWeekType","sampleName","sampleRoom","sampleTeacher","GetPlaceholder","DisplayEmptyDaysMode","DisplayTeacherMode","SettingsContext","React","AppText","android_hyphenationFrequency","appText","ScheduleText","MontserratMedium","letterSpacing","WeekTypeContext","classContainer","startAndEndTimesContainer","MontserratRegular","classStartText","classEndText","classNameText","flexGrow","teacherNameText","roomNumberText","classTypeAndRoomNumberContainer","roomNumberContainer","classAndTeacherBlock","flexBasis","TEACHER_NOT_FOUND_STRING","TeacherModel","teachers","teachersJson","teachersFuse","Fuse","keys","threshold","surname","match","search","item","getTeacherBySurname","teacherFullNameBits","patronymic","formatRoomName","scheduleClassInstance","unfoldClassText","join","replace","formatTeacherName","isEditable","settings","teacherTable","teacherSurname","surnameIsNull","surnameIsArray","isArray","_formatTeacherString","sn","getSurnameAndInitialsBySurname","displayTeacherNameMode","Full","displayTeacherName","getFullNameBySurname","SurnameAndInitials","ScheduleClassComponent","idx","displayRoomNumber","_ref$isEditable","_ref$highlightAsOngoi","highlightAsOngoing","_React$useState","_React$useState2","_slicedToArray","setState","isCurrentClassRef","isCurrent","_React$useState3","_React$useState4","setUnfoldClassText","_React$useState5","_React$useState6","unfoldTeacherText","setUnfoldTeacherText","useContext","selectedWeekType","_useState","useState","_useState2","isOngoingClass","setIsOngoingClass","className","shouldDisplayTeacher","Hide","_useState3","_useState4","isReady","setIsReady","useEffect","rerenderInterval","setInterval","isCurrentClass","clearInterval","reglamentClass","classStart","classEnd","testID","onLongPress","Clipboard","setStringAsync","ellipsizeMode","numberOfLines","Separator","upperElement","lowerElement","_ref$width","localStyles","isWeb","OpenDirection","renderNull","MAX_Z_INDEX","UnderlayContext","OverlayContext","_worklet_11297463661109_init_data","code","_worklet_14226329302007_init_data","_worklet_1531041503974_init_data","_worklet_9894800192349_init_data","_worklet_16996426391124_init_data","_worklet_3681576942287_init_data","_worklet_13951294944870_init_data","_worklet_9572686569050_init_data","_worklet_9572686569050_init_data2","_worklet_9572686569050_init_data3","_worklet_2274614876378_init_data","_worklet_3559337559422_init_data","_worklet_323845353274_init_data","_worklet_9348090095147_init_data","_worklet_5238723740326_init_data","_worklet_12886063976907_init_data","_worklet_8078986215979_init_data","ref","_props$renderOverlay","renderOverlay","_props$renderUnderlay","renderUnderlayLeft","_props$renderUnderlay2","renderUnderlayRight","_props$snapPointsLeft","snapPointsLeft","_props$snapPointsRigh","snapPointsRight","swipeEnabled","_props$activationThre","activationThreshold","_props$overSwipe","overSwipe","_props$swipeDamping","swipeDamping","_props$onChange","onChange","_props$animationConfi","animationConfig","springConfig","damping","mass","stiffness","overshootClamping","restSpeedThreshold","restDisplacementThreshold","NONE","openDirection","setOpenDirection","animStatePos","useSharedValue","isGestureActive","swipingLeft","useDerivedValue","anonymous","__closure","__workletHash","__initData","swipingRight","maxSnapPointLeft","max","_toConsumableArray","maxSnapPointRight","maxTranslateLeft","maxTranslateRight","percentOpenLeft","abs","percentOpenRight","hasLeft","hasRight","activeOffsetX","RIGHT","Number","MAX_VALUE","LEFT","leftStyle","useAnimatedStyle","floor","min","rightStyle","overlayStyle","transform","translateX","openLeft","snapPoint","options","toValue","Promise","resolve","resolvePromiseIfFinished","isFinished","onAnimationEnd","animated","runOnJS","withSpring","openRight","close","_openDirection","useImperativeHandle","refObject","open","startX","gesture","Gesture","Pan","onBegin","onStart","onUpdate","evt","rawVal","translationX","clampedVal","interpolate","Extrapolate","CLAMP","onEnd","velocityModifiedPosition","velocityX","allSnapPoints","p","concat","push","closestSnapPoint","reduce","acc","cur","Infinity","onComplete","enabled","sharedParams","useMemo","underlayRightParams","percentOpen","direction","underlayLeftParams","overlayParams","animPropsLeft","useAnimatedProps","pointerEvents","animPropsRight","Provider","Animated","animatedProps","underlay","GestureDetector","absoluteFillObject","UnderlayRightSide","onDeleteButtonPress","overlayContext","underlayContext","contextDirection","useCallback","openFnLeft","openFnRight","useSwipeableItemParams","underlayLeft","e","EditedSchedulesStorageService","_this","results","ScheduleLoaderService","scheduleFiles","scheduleFile","isOutdated","removeEditedSchedule","all","_createVersionForEdits","saveEditedSchedule","_x2","_saveEditedSchedule","scheduleLoader","jsonToDump","metadata","getScheduleFileMetadata","getScheduleFileByFileName","scheduleDays","JSON","stringify","_x3","_loadEditedSchedule","scheduleFileName","scheduleWithMetadata","parse","_x4","_isOutdated","contentfulScheduleFile","editVer","loadEditedSchedule","editVerMetadata","contentfulVerMetadata","_x5","scheduleName","removeItem","_hasEditedVersion","_x6","_ScheduleLoaderServic","_callSuper","_inherits","getSchedulesFromContentful","replaceContentfulSchedulesWithEditedVersions","sf","_replaceContentfulSchedulesWithEditedVersions","editedSchedulesStorage","editedCounterpartsPromises","editedSchedule","json_parsed","editedCounterparts","_dumpSchedule","editedScheduleStorage","ScheduleLoaderServiceBase","pathToScheduleFolder","FileSystem","documentDirectory","getInfoAsync","exists","getSchedulesFromFileSystem","checkForUpdatesAsync","getExampleSchedules","makeDirectoryAsync","intermediates","_getSchedulesFromFileSystem","allScheduleFileNames","readDirectoryAsync","file","readAsStringAsync","json","revision","updatedAt","_getSchedulesFromContentful","_this2","assets","getAssets","limit","scheduleClassesJson","linkToFile","url","res","fileName","fetch","blob","ExampleScheduleKN","ExampleScheduleIST","ExampleScheduleTE","find","_checkForUpdatesAsync","_this3","netInfo","NetInfo","isConnected","isInternetReachable","scheduleFileMetadatas","_ref3","updatedScheduleFiles","_ref4","sfm","oldSchedule","linkToDestFile","downloadAsync","writeAsStringAsync","LocalNotificationsService","exampleNotificationContent","subtitle","someData","notificationChannelId","identifier","Notifications","handleNotification","_handleNotification","shouldShowAlert","priority","MAX","shouldPlaySound","shouldSetBadge","registerNotificationsChannel","_registerNotificationsChannel","_sendNotification","content","message","trigger","channelId","catch","_scheduleNotification","nextTriggerDate","date","_sendExampleNotification","sendNotification","_scheduleExampleNotificationViaDate","secondsFromNow","scheduleNotification","_scheduleRepeatableExampleNotification","repeats","_scheduleRepeatableDailyExampleNotification","hour","minute","Event","SettingsService","displayEmptyDays","Display","currentScheduleName","notifyBeforeClass","notifyBeforeClassOffsetMinutes","SettingsEventEmitter","EventEmitter","fetchedSettings","readFromStorage","Object","entries","settingsObject","_saveToStorage","constructSettingsObjectFromProperties","jsonValue","emit","SETTINGS_UPDATED","_readFromStorage","_openAndroidSystemSettingsForNotifications","pkg","Constants","expoConfig","android","package","IntentLauncher","startActivityAsync","extra","ClassNotificationBuilder","notificationsService","negativeOffsetInMins","teachersTable","signature","getUniqueStringSignature","hourAndMinute","scheduleDay","monthDay","notificationDate","distance","setDate","setDayOnDate","dayNames","indexOf","twoWeeksInSeconds","offset","sequenceSize","spacingInSeconds","sequence","next","createEvenlySpacedTimeSequence","SEMESTER_MONTHS","notifDate","teacherName","hourPadded","minutePadded","weekday","ScheduleNotificationsService","_LocalNotificationsSe","_len","args","Array","_key","onConfigureNotificationsForScheduleStart","onConfigureNotificationsForScheduleEnd","_configureNotificationsForSchedule","_this$onConfigureNoti","_this$onConfigureNoti2","call","EditorStackRoutes","NoClassesText","SDstyles","noClassesText","Montserrat600","fadedDayContainerView","dayNameHeader","scheduleDayCard","ScheduleDayComponent","classesCollection","scheduleObject","dayName","_ref$weekType","weekType","fade","configureNotificationsCallback","updatedSchedule","configureNotificationsForSchedule","classes","setClasses","dayNameEnRef","d","mapUkrWorkDayToEnWorkDay","saveEditedClasses","classesWithoutPlaceholders","filter","isSampleClass","thisDay","biweeklyClassesOfOtherWeek","dumpSchedule","addPlaceholders","extendedContainer","fill","placeholderClasses","sortedClasses","ListComponent","DraggableFlatList","FlatList","Darken","keyExtractor","onDragEnd","ListEmptyComponent","scrollEnabled","nestedScrollEnabled","ItemSeparatorComponent","renderItem","drag","isActive","scheduleClassComponent","editableScheduleClassWrapper","SwipeableItem","filteredClasses","filteredClassesWithPlaceholders","onDeleteButtonPressed","SCHEDULE_CLASS_FORM","scheduleClass","currentlyViewedWeek","onFormDataUpdated","values","updatedClasses","t","trim","r","ScheduleDay","currentWeekType","_this$classes$find","otherWeek","matchingClass","ScheduleModel","specialtyName","year","weekendDays","dayClasses","objectName","_getScheduleFromScheduleLoader","startsWith","setSchedule","_getScheduleFromEditedSchedulesStorage","editedScheduleService","dayIndex","todayClasses","currentClass","modal","horizontalFlex","searchBarContainer","overlay","left","option","selectedOption","MontserratBold","closeButton","closeButtonText","checkIcon","right","OptionPickerModal","_ref$hasSearchBar","hasSearchBar","_ref$headerText","_ref$isOpen","isOpen","_ref$displaySeparator","displaySeparators","optionsParam","selectedOptionParam","onCloseModalCallback","onCloseModal","onSelected","optionIcon","_ref$isOptionSelectab","isOptionSelectable","windowHeight","useWindowDimensions","searchQuery","setSearchQuery","filteredOptions","FilterOptions","setSelectedOption","closeModal","Modal","animationType","transparent","visible","TextInput","onChangeText","placeholder","ScrollView","Pressable","getPageOne","image","previewImage","src","loading","SwiperSlide","page","imageContainer","pageTitle","pageDescriptionText","centeredDescriptionText","overflow","objectFit","objectPosition","documentHeight","swiperWidth","carouselContainer","viewPager","paginationCircles","circle","circleActive","pageBody","pagerNavigation","maxHeight","halfImageContainer","flexShrink","backButton","forwardButton","selectScheduleText","InroductoryCarouselScreen","onClose","currentPage","setCurrentPage","swiperRef","setIsVisible","_useState5","_useState6","schedulePickerModalVisible","setSchedulePickerModalVisible","_useState7","_useState8","schedulePickerData","setSchedulePickerData","f","slideTo","lastPageIndex","i","Swiper","initialSlide","onSwiper","swiper","onSlideChange","activeIndex","accessibilityLabel","selected","saveToStorage","newCurrentPage","setStatusBarHidden","baseStyles","scheduleHeaderStyles","backroundImage","sideMenuIcon","currentlyViewedDay","weekTypeText","weekTextContainer","selectedContainer","selectedText","ScheduleHeader","onWeekTypeChanged","navigation_","setWeekType","weekTypeInUkrainian","useRoute","EditActionsExplanatoryCard","paddingLeft","DateOverviewCard","currentDayString","toLocaleDateString","currentDayDate","month","currentWorkWeekInterval","currentDate","currentDayOfWeek","currentMonth","currentYear","mondayDate","fridayDate","upperRowText","lowerRowText","verticalSeparator","rootContainer","modalToggle","modalClose","modalContent","placeholderView","cardContainer","scheduleDaySelector","IS_FIRST_TIME_LAUNCH_KEY","scrolledToToday","todayIndex","ldash","ScheduleScreen","closeDrawer","isFirstTimeLaunch","setIsFirstTimeLaunch","scheduleRef","scheduleFileRef","settingsServiceRef","scrollViewContainerRef","isScheduleLoaded","setScheduleLoaded","setScheduleName","_useState9","_useState10","dataSourceCoords","setDataSourceCoords","scheduleNameRef","onSettingsUpdated","settingsService","_ldash$cloneDeep","newSchedule","getScheduleFromScheduleLoader","notifService","_onMount","scheduleLoaderInstance","firstScheduleFile","nameOfScheduleToLoad","on","onMount","removeListener","useFocusEffect","currentScheduleFile","_ldash$cloneDeep2","IntroductoryCarousel","contentContainerStyle","isEmpty","getNominatorClasses","getDenominatorClasses","shouldDisplayEmptyDay","onLayout","event","layout","nativeEvent","y","scrollTo","x","OnLayoutChange","animating","reglamentClassIndex","reglamentContainer","timePointTextContainer","timePointText","indexTextContainer","indexText","MontserratSemiBold","timePointDate","timeDataCard","currentClassIndexText","reglamentClassContainer","borderRightWidth","head","headText","ReglamentClass","classData","getReglamentClass","classStartTime","classEndTime","currentTimeInterval","wasCurrent","ReglamentScreen","TeachersScreen","filteredTeachers","userSelect","teacherCard","teacherDataText","selectable","Кваліфікаця","Linking","openURL","StackHeader","_ref$useSafeAreaView","useSafeAreaView","_ref$hasBackground","hasBackground","_ref$captionStyles","captionStyles","ViewComponent","headerTitle","goBack","CustomSwitch","onValueChange","_ref$initVal","initVal","_ref$disabled","disabled","otherProps","_objectWithoutProperties","_excluded","isEnabled","setIsEnabled","Switch","switch","trackColor","false","true","thumbColor","activeThumbColor","newValue","previousState","BlueCircle","RadioButtonGroup","onOptionSelected","_ref$selectedOptionIn","selectedOptionIndex","selectedIndex","setIndex","CheckBox","checked","checkedIcon","uncheckedIcon","optionTitle","containerStyle","checkboxContainer","AutoSubmitFormData","_useFormikContext","useFormikContext","initialValues","submitFormCallback","isSubmitting","submitForm","FormTextInput","formField","fieldCaption","captionText","cursorColor","textInputText","underline","noteText","ScheduleClassForm","_scheduleClass$teache","params","dayUkrIndex","findIndex","dayUkr","weekTypeUkr","initialFormikValues","Formik","onSubmit","handleChange","handleBlur","headerTextPrimary","headerTextSecondary","autoCapitalize","code_name","o","autocompleteContainer","ScheduleEditorScreen","Stack","createStackNavigator","EditorStack","Navigator","screenOptions","Screen","component","FacultiesTestScreen","renderFacultyCard","nameAbbreviation","nameFull","address","phone","mail","facultyCard","ContactsStackRoutes","corpsModalItems","corps","rectorateModalItems","isPhone","isLink","preparationDepartmentModalItems","internationalAffairsAndInformationDepartmentModalItems","admissionsCommitteeModalItems","accountingModalItems","contractEducationDepartmentModalItems","studentUnionModalItems","studentCouncilModalItems","linkName","socialMediaModalItems","screenBodyContainer","category","navigateToSubcategoryButton","subcategoryButtonContainer","categoryTitle","subcategoryTitle","optionText","WarningBar","warningTriangleImage","warningText","RalewayMedium","Category","titleIcon","subcategories","itemOnPress","ItemType","itemWithoutOnPress","EntypoIcon","constructModalItem","constructContentPresenterModal","initialOptions","ContactsScreen","corpsModalIsOpen","setCorpsModalIsOpen","rectorateModalIsOpen","setRectorateModalIsOpen","admissionCommitteeModalIsOpen","setAdmissionCommitteeModalIsOpen","_React$useState7","_React$useState8","preparationDepartmentModalIsOpen","setPreparationDepartmentModalIsOpen","_React$useState9","_React$useState10","internationalAffairsAndInformationDepartmentModalIsOpen","setInternationalAffairsAndInformationDepartmentModalIsOpen","_React$useState11","_React$useState12","accountingModalIsOpen","setAccountingModalIsOpen","_React$useState13","_React$useState14","contractEducationModalIsOpen","setContractEducationModalIsOpen","_React$useState15","_React$useState16","studentUnionModalIsOpen","setStudentUnionModalIsOpen","_React$useState17","_React$useState18","studentCouncilModalIsOpen","setStudentCouncilModalIsOpen","_React$useState19","_React$useState20","socialMediaModalIsOpen","setSocialMediaModalIsOpen","Octicons","ContactsStack","CONTACTS_MENU","FACULTIES","newsArticleCard","moreButton","CustomAutolink","rest","markdownLinkRegex","parsedText","inputText","lastIndex","result","linkText","parseMarkdownLinks","part","Autolink","linkStyle","NewsCard","dateObj","maxLength","isBodyExpanded","setIsBodyExpanded","bodyStateAdjustedText","shouldShowLengthControlButton","lengthControlButton","NewsScreen","setNews","fetchedNews","newsLoaderService","getExampleNews","Card","_ref$shadows","shadows","cardContentStyle","noShadow","cardContent","NotificationTestsScreen","ready","setReady","permission","setPermission","setScheduledNotifications","delayForExampleNotificationViaDate","setDelayForExampleNotificationViaDate","notification","setNotification","localNotificationsServiceRef","notificationListener","responseListener","requestConfigurePermissions","response","notifications","registeredNotifications","getAllScheduledNotificationsAsync","permissions","checkPermissionsAsync","status","request","Button","sendExampleNotification","Input","keyboardType","defaultValue","scheduleExampleNotificationViaDate","scheduleRepeatableExampleNotification","scheduleRepeatableDailyExampleNotification","cancelAllScheduledNotificationsAsync","Expander","collapsed","setCollapsed","Collapsible","ScheduledNotificationsScreen","showRegularClasses","setShowRegularClasses","showBiweeklyClasses","setShowBiweeklyClasses","filterQuery","setFilterQuery","scheduledNotifications","filteredScheduledNotifications","n","toUTCString","sortedScheduledNotifications","ToastAndroid","show","SHORT","minHeight","horizontal","onBlur","cancelScheduledNotificationAsync","ContentViewModal","modalChildren","FlatButton","button","FileSystemScreen","fileContentModalVisible","setFileContentModalVisible","selectedFileContent","setSelectedFileContent","currentDir","setCurrentDir","allFiles","setAllFiles","firstFieldText","setFirstFieldText","secondFieldText","setSecondFieldText","contentfulSchedule","setContentfulSchedule","contentfulScheduleAsAsset","setContentfulScheduleAsAsset","contentfulScheduleAsDownloadedAsset","setContentfulScheduleAsDownloadedAsset","_React$useState21","_React$useState22","allContentfulAssets","setAllContentfulAssets","saveToFile","path","initFields","_initFields","lines","getEntry","getAsset","asset","uri","assetNames","deleteAsync","isDirectory","ScheduleEditor","setSampleDay","currentRouteName","getId","firstScheduleFilename","isSlot","setData","random","dataElem","draggable","updatedClass","reorderable","TestEditorStack","ContactsModalTestScreen","ContactsTestStack","DeviceInfoScreen","_useWindowDimensions","aspectRatio","pixelRatio","PixelRatio","get","dpi","Tab","createBottomTabNavigator","TestTabs","headerShown","tabBarStyle","initialRouteName","tabBarIcon","_ref5","_ref6","_ref7","scrollViewContentContainer","loadingIndicatorOverlay","scrollViewDirect","pageBackground","settingValueContainer","categoryHeader","settingsSectionName","Raleway600","settingsCategory","borderTopWidth","centeredTextAndIcon","settingName","Raleway500","settingValue","settingsSectionIcon","settingRow","Settings","selectedSchedule","settingsValues","setSettingsValues","schedulePickerModalDisabled","setSchedulePickerModalDisabled","emptyDayDisplayModalVisible","setEmptyDayDisplayModalVisible","_useState11","_useState12","displayTeacherModeModalVisible","setDisplayTeacherModeModalVisible","_useState13","_useState14","_useState15","_useState16","_settingsServiceRef$c","ActivityIndicatorLarge","constructCategoryHeader","FontAwesomeIcon","constructSettingsRow","nv","categoryName","categoryIcon","settingDescription","changeSettingComponent","AboutScreen","appVersion","appJson","resizeMode","fontStyle","tileText","tile","teamSectionHeader","tilesContainer","teamMemberTile","teamMemberImageWrapper","teamMemberImage","teamMemberDescription","teamMemberName","regularLetterSpacing","teamMemberDetails","testerName","contactsEmail","copyrightContainer","appVersionContainer","tableBorderColor","sharedCellStyle","table","tableRow","tableHeaderCell","tableCell","headers","columnWidths","colsN","maxWidth","minWidth","rowIndex","cell","cellIndex","UnfoldableCard","bodyComponent","isBodyRevealed","setIsBodyRevealed","activeOpacity","UCStyles","unfoldableCard","revealButton","_Fragment","unfoldableCardText","RalewayRegular","QnAScreen","Table","AnalyticsService","_trackEvent2","eventName","_props","platform","version","trackEvent","showErrorView","error","resetErrorBoundary","stack","landscapeWebStyles","root","nativeStyles","AppStyles","SplashScreen","registerRootComponent","appIsReady","setAppIsReady","_useFonts","useFonts","_FONTS","LatoRegular","LatoBold","CenturyGothicBold","CenturyGothicItalic","GetAllAppFonts","fontsLoaded","Font","loadAsync","font","Entypo","markdown","ErrorBoundary","fallbackRender","NavigationContainer","Header","drawerContent","SettingsScreen","webpackContext","req","id","webpackContextResolve","__webpack_require__","module","exports","__webpack_module_cache__","moduleId","cachedModule","loaded","__webpack_modules__","m","deferred","O","chunkIds","fn","notFulfilled","fulfilled","j","every","splice","getter","__esModule","leafPrototypes","getProto","getPrototypeOf","obj","mode","ns","def","getOwnPropertyNames","definition","defineProperty","enumerable","g","globalThis","Function","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}