{"version":3,"file":"static/js/main.b102b6e5.js","mappings":"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","sources":["routes/globalDrawer.ts","constants/Constants.ts","constants/Keys.ts","utilities/utilities.ts","styles/global.ts","components/Header.tsx","routes/DrawerRoutes.ts","services/NewsLoaderService.ts","components/DrawerMenu.tsx","utilities/getWeekType.ts","utilities/getStrict.ts","constants/Days.ts","services/ScheduleLoaderService.ts","models/ScheduleModel.ts","models/TeacherTableModel.ts","constants/Events.ts","services/SettingsService.ts","contexts/settingsContext.ts","shared/AppText.tsx","components/ScheduleComponents/ScheduleText.tsx","components/ScheduleComponents/ScheduleClass.tsx","shared/Separator.tsx","components/ScheduleEditorComponents/ScheduleClassUnderlay.tsx","services/LocalNotificationsService.ts","services/ClassNotificationBuilder.ts","services/ScheduleNotificationsService.ts","routes/EditorStackRoutes.ts","constants/Descriptions.ts","components/ScheduleComponents/ScheduleDay.tsx","components/OptionPickerModal.tsx","screens/IntroductoryCarousel/Pages.tsx","screens/IntroductoryCarousel/IntroductoryCarousel.tsx","components/ScheduleComponents/ScheduleHeader.tsx","screens/ScheduleScreen.tsx","screens/ReglamentScreen.tsx","screens/TeachersScreen.tsx","components/StackHeader.tsx","shared/Switch.tsx","shared/RadioButtonGroup.tsx","screens/TestTabsScreens/scheduleEditorStack/ScheduleClassForm.tsx","screens/ScheduleEditorScreen.tsx","routes/EditorStack.tsx","screens/TestTabsScreens/FacultiesTestScreen.tsx","routes/ContactsStackRoutes.ts","constants/Contacts.tsx","screens/ContactsScreen.tsx","routes/ContactsStack.tsx","screens/NewsScreen.tsx","shared/card.tsx","screens/TestTabsScreens/NotificationTests.tsx","shared/Expander.tsx","screens/TestTabsScreens/ScheduledNotificationsScreen.tsx","components/ContentViewModal.tsx","shared/Button.tsx","screens/TestTabsScreens/FileSystemScreen.tsx","screens/TestTabsScreens/ScheduleEditor.tsx","routes/testEditorStack.tsx","screens/TestTabsScreens/ContactsModalsTestScreen.tsx","routes/ContactsTestStack.tsx","routes/testTabs.tsx","screens/SettingsScreen.tsx","screens/AboutScreen.tsx","App.tsx","index.js","node_modules/moment/locale|sync|/^/.*$","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { createDrawerNavigator } from \"@react-navigation/drawer\"\r\n\r\nexport const Drawer = createDrawerNavigator()\r\n","export type REGLAMENT_DATA_ELEM_TYPE = [number, string, string, string]\r\nexport type REGLAMENT_DATA_TYPE = REGLAMENT_DATA_ELEM_TYPE[]\r\n\r\nexport const REGLAMENT_DATA: REGLAMENT_DATA_TYPE = [\r\n  [1, \"8:30\", \"10:05\", \"9:15 – 9:20\"],\r\n  [2, \"10:15\", \"11:50\", \"11:00 – 11:05\"],\r\n  [3, \"12:20\", \"13:55\", \"13:05 – 13:10\"],\r\n  [4, \"14:05\", \"15:40\", \"14:50 – 14:55\"],\r\n  [5, \"15:50\", \"17:25\", \"16:35 – 16:40\"],\r\n  [6, \"17:35\", \"19:10\", \"18:20 – 18:25\"],\r\n]\r\n\r\nexport const suffixesForNumbers = {\r\n  1: \"-ша\",\r\n  2: \"-га\",\r\n  3: \"-тя\",\r\n  4: \"-та\",\r\n  5: \"-та\",\r\n  6: \"-та\",\r\n}\r\n\r\nexport const SEMESTER_MONTHS = 6\r\n\r\nexport const NOTIFICATIONS_CHANNEL_ID = \"interactive-schedule-notifications\"\r\n","import { CONTENTFUL_SPACE, CONTENTFUL_CONTENT_DELIVERY_ACCESS_TOKEN } from \"@env\"\r\n\r\nexport const ContentfulSpace = CONTENTFUL_SPACE\r\nexport const ContentfulContentDeliveryAccessToken = CONTENTFUL_CONTENT_DELIVERY_ACCESS_TOKEN\r\n\r\n// async-storage key udner which the app settings are stored. Can be whatever and is not confidential\r\nexport const STORAGE_KEY = \"@noid_schedule_app_settings103\"\r\n","import moment from \"moment\"\r\nimport { REGLAMENT_DATA_ELEM_TYPE, REGLAMENT_DATA } from \"../constants/Constants\"\r\n\r\nimport contentful from \"contentful/dist/contentful.browser.min.js\"\r\nimport { createClient } from \"contentful/dist/contentful.browser.min.js\"\r\n// import { ContentType, createClient as createClientProper } from \"contentful\"\r\n\r\nimport { ContentfulClientApi } from \"contentful\"\r\nimport { ContentfulContentDeliveryAccessToken, ContentfulSpace } from \"../constants/Keys\"\r\nimport { Platform } from \"react-native\"\r\nimport * as FileSystem from \"expo-file-system\"\r\nimport constants, { ExecutionEnvironment } from \"expo-constants\"\r\n\r\nexport const GetTimeDifference = (earlier: Date, later: Date) => {\r\n  let momentA = moment(earlier)\r\n  let momentB = moment(later)\r\n  let hourDifference = momentB.diff(momentA, \"hours\") as number\r\n  let minuteDifference = momentB.diff(momentA, \"minutes\") - hourDifference * 60\r\n  let secondDifference = momentB.diff(momentA, \"seconds\") - hourDifference * 60 * 60 - minuteDifference * 60\r\n\r\n  return {\r\n    hours: hourDifference,\r\n    minutes: minuteDifference,\r\n    seconds: secondDifference,\r\n  }\r\n}\r\n\r\nexport function createEvenlySpacedTimeSequence(sequenceSize: number, spacingInSeconds: number, start: Date): Date[] {\r\n  const sequence = []\r\n  let next = start\r\n\r\n  let index = 0\r\n  while (index < sequenceSize) {\r\n    sequence.push(next)\r\n    next = new Date(next.getTime() + spacingInSeconds * 1000)\r\n\r\n    index += 1\r\n  }\r\n\r\n  return sequence\r\n}\r\n\r\nexport function setDayOnDate(date: Date, day: number): Date {\r\n  const currentDay = date.getDay()\r\n  const distance = day - currentDay\r\n  date.setDate(date.getDate() + distance)\r\n\r\n  return date\r\n}\r\n\r\nfunction liesInRange(value: Date, start: Date, end: Date) {\r\n  return value <= end && value >= start\r\n}\r\n\r\n// get time slot of a timepoint\r\nexport function determineInterval(timepoint = new Date()): false | REGLAMENT_DATA_ELEM_TYPE {\r\n  let interval: false | REGLAMENT_DATA_ELEM_TYPE = false\r\n\r\n  REGLAMENT_DATA.forEach((class_) => {\r\n    let hourAndMinuteStart = class_[1]\r\n    let hourStart = hourAndMinuteStart.split(\":\")[0]\r\n    let minuteStart = hourAndMinuteStart.split(\":\")[1]\r\n\r\n    let hourAndMinuteEnd = class_[2]\r\n    let hourEnd = hourAndMinuteEnd.split(\":\")[0]\r\n    let minuteEnd = hourAndMinuteEnd.split(\":\")[1]\r\n\r\n    let now = new Date()\r\n    // TODO: annotate\r\n    let earlier = new Date(now.getFullYear(), now.getMonth(), now.getDate(), parseInt(hourStart), parseInt(minuteStart))\r\n    let later = new Date(now.getFullYear(), now.getMonth(), now.getDate(), parseInt(hourEnd), parseInt(minuteEnd))\r\n\r\n    if (liesInRange(timepoint, earlier, later)) {\r\n      interval = class_\r\n    }\r\n  })\r\n\r\n  return interval\r\n}\r\n\r\nconsole.log(\"[utilities] current interval is \", determineInterval())\r\n\r\nexport function getContentfulClient() {\r\n  console.log(\"contentful module: \", contentful)\r\n  console.log(\"create contentful client: \", createClient)\r\n\r\n  const client: ContentfulClientApi<undefiend> = createClient({\r\n    space: ContentfulSpace,\r\n    environment: \"master\", // defaults to 'master' if not set\r\n    accessToken: ContentfulContentDeliveryAccessToken,\r\n  })\r\n\r\n  return client\r\n}\r\n\r\nexport function ensureExtension(filename: string, extension: string) {\r\n  if (filename.endsWith(extension)) return filename\r\n\r\n  return filename + extension\r\n}\r\n\r\nexport function ensureNoExtension(filename: string, extension: string) {\r\n  if (!filename.endsWith(extension)) return filename\r\n\r\n  return filename.slice(0, -extension.length)\r\n}\r\n\r\nexport const isMail = (text: string) => {\r\n  return text.includes(\"@\") && !text.includes(\"http\")\r\n}\r\n\r\nexport function isRunningInExpoGo() {\r\n  const isRunningInExpo = constants.executionEnvironment == ExecutionEnvironment.StoreClient\r\n  return isRunningInExpo\r\n}\r\n\r\nexport function isRunningInBrowser() {\r\n  // const isRunningInBrowser = constants.executionEnvironment == ExecutionEnvironment.Bare\r\n\r\n  const isRunningInBrowser = Platform.OS === \"web\"\r\n  return isRunningInBrowser\r\n}\r\n\r\nexport function isHorizontalOrientation() {\r\n  if (isRunningInBrowser()) {\r\n    return window.innerWidth > window.innerHeight\r\n  }\r\n\r\n  return (\r\n    constants.platform.ios.interfaceOrientation === \"landscape\" ||\r\n    constants.platform.android.interfaceOrientation === \"landscape\"\r\n  )\r\n}\r\n\r\nexport function isLandscapeWeb() {\r\n  return isRunningInBrowser() && isHorizontalOrientation()\r\n}\r\n\r\nexport const loadJSON = async (pathToJSONFile: string) => {\r\n  const fileName = pathToJSONFile // Replace with the name of your JSON file\r\n  const filePath =\r\n    Platform.OS === \"android\" ? FileSystem.documentDirectory + fileName : FileSystem.documentDirectory + \"/\" + fileName\r\n\r\n  try {\r\n    const fileContents = await FileSystem.readAsStringAsync(filePath)\r\n\r\n    const data = JSON.parse(fileContents)\r\n    return data\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n","import { StyleSheet } from \"react-native\"\r\nimport { isLandscapeWeb, isRunningInBrowser } from \"../utilities/utilities\"\r\n\r\nexport const previewImages = {\r\n  schedule: require(\"../assets/images/previews/schedule-preview.png\"),\r\n  scheduleCropped: require(\"../assets/images/previews/schedule-view-cropped-preview-3.png\"),\r\n  reglamentPreview: require(\"../assets/images/previews/reglament-preview.png\"),\r\n  settingsPreview: require(\"../assets/images/previews/settings-preview.png\"),\r\n  editorPreview: require(\"../assets/images/previews/editor-preview.png\"),\r\n}\r\n\r\nexport const previewImagesFull = {\r\n  schedule: require(\"../assets/images/previews/previews-full/schedule-view-highlight.png\"),\r\n  reglamentPreview: require(\"../assets/images/previews/previews-full/reglament.png\"),\r\n  editorPreview: require(\"../assets/images/previews/previews-full/editor-view-preview.png\"),\r\n  settingsPreview: require(\"../assets/images/previews/previews-full/settings.png\"),\r\n}\r\n\r\nexport const images = {\r\n  uad_logo_text: require(\"../assets/images/uad_logo_text.svg\"),\r\n  uad_logo_text_not_vector: require(\"../assets/images/uad_logo_text_not_vector.png\"),\r\n  uad_logo_text_not_vector_hires: require(\"../assets/images/uad_logo_text_not_vector_hires.png\"),\r\n}\r\n\r\nexport const teamMemberImages = {\r\n  senchyk_andrii: require(\"../assets/images/team/senchyk_andrii.png\"),\r\n  zakharova_zarina: require(\"../assets/images/team/zakharova_zarina.png\"),\r\n  shepita_julia: require(\"../assets/images/team/shepita_julia.png\"),\r\n  ivanov_mykhailo: require(\"../assets/images/team/ivanov_mykhailo.png\"),\r\n}\r\n\r\nexport const editorImages = {\r\n  lightbulb: require(\"../assets/images/editor/lightbulb-nontrasparent-fixed.png\"),\r\n}\r\n\r\nexport const drawerMenuImages = {\r\n  uad_logo_white_outline: require(\"../assets/images/uad-logo-white-outline.png\"),\r\n}\r\n\r\nexport const imageIcons = {\r\n  museum: require(\"../assets/image_icons/museum.png\"),\r\n  tiktok: require(\"../assets/image_icons/tiktok.png\"),\r\n}\r\n\r\nexport const palette = {\r\n  background: \"#E6E6E6\",\r\n  backgroundLight: \"#F5F5F5\",\r\n  textOnBackground: \"#5A5A5A\",\r\n  navigationBackground: \"#1C5D8F\",\r\n  text: \"#525252\",\r\n  numbers: \"#888888\",\r\n  grayedOut: \"#888888\",\r\n  grayishBlue: \"#4A6172\",\r\n  ongoingClass: \"rgb(227, 239, 249)\",\r\n}\r\n\r\nexport const globalStyles = StyleSheet.create({\r\n  container: {\r\n    padding: 20,\r\n  },\r\n\r\n  scrollView: {\r\n    marginBottom: 80, // to make sure last item is visible.\r\n    // there is other way to do that: via flex\r\n  },\r\n\r\n  screen: {\r\n    flex: 1,\r\n    // backgroundColor: \"#E6E6E6\",\r\n    backgroundColor: palette.backgroundLight,\r\n    padding: 0, // I don't know what's a sensible value for this. Will figure out later\r\n  },\r\n\r\n  centered: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  text: {\r\n    fontFamily: \"cinzel-regular\",\r\n    fontSize: 18,\r\n  },\r\n\r\n  paragraph: {\r\n    marginVertical: 8,\r\n    lineHeight: 20,\r\n  },\r\n\r\n  sectionHeader: {\r\n    marginLeft: 24,\r\n  },\r\n\r\n  input: {\r\n    borderWidth: 1,\r\n    borderColor: \"#ddd\",\r\n    padding: 10,\r\n    fontSize: 18,\r\n    borderRadius: 6,\r\n    marginBottom: 10,\r\n  },\r\n\r\n  errorText: {\r\n    color: \"crimson\",\r\n    fontWeight: \"bold\",\r\n    marginBottom: 10,\r\n    marginTop: 6,\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  navIcon: {\r\n    color: \"white\",\r\n    paddingHorizontal: 16,\r\n    paddingRight: 10,\r\n  },\r\n\r\n  separator: {\r\n    height: 1, // haha\r\n    width: \"100%\",\r\n    backgroundColor: \"#E6E6E6\",\r\n  },\r\n\r\n  noDisplay: {\r\n    display: \"none\",\r\n    margin: 0,\r\n    padding: 0,\r\n    width: 0,\r\n    height: 0,\r\n    zIndex: -1,\r\n  },\r\n\r\n  invisible: {\r\n    opacity: 0,\r\n  },\r\n\r\n  row: {\r\n    flexDirection: \"row\",\r\n  },\r\n\r\n  grayIcon: {\r\n    color: \"rgba(136,136,136,1)\",\r\n    fontSize: 26,\r\n  },\r\n\r\n  card: {\r\n    borderRadius: 6,\r\n    backgroundColor: \"white\",\r\n\r\n    paddingVertical: 2,\r\n    paddingHorizontal: 5,\r\n\r\n    elevation: 1,\r\n    shadowOffset: { width: 1, height: 1 },\r\n    shadowColor: \"#333\",\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 2,\r\n  },\r\n\r\n  link: {\r\n    color: palette.navigationBackground,\r\n  },\r\n\r\n  underlinedLink: {\r\n    color: palette.navigationBackground,\r\n    textDecorationLine: \"underline\",\r\n  },\r\n\r\n  captionWithIcon: {\r\n    marginLeft: -3,\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  navigationButton: {\r\n    borderColor: palette.navigationBackground,\r\n    borderWidth: 1,\r\n\r\n    // paddingHorizontal: 15,\r\n    paddingVertical: 5,\r\n\r\n    borderRadius: 10,\r\n\r\n    width: 75,\r\n\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  modalContentContainer: {\r\n    position: \"absolute\",\r\n    top: \"10%\",\r\n\r\n    margin: 30,\r\n    marginHorizontal: isLandscapeWeb() ? \"35%\" : \"2%\", // 27 + 8 for sidebar\r\n    padding: 20,\r\n    borderRadius: 10,\r\n    backgroundColor: \"white\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: isLandscapeWeb() ? \"45%\" : \"95%\",\r\n  },\r\n})\r\n","import React from \"react\"\r\nimport { StyleSheet, Text, View } from \"react-native\"\r\nimport { MaterialIcons } from \"@expo/vector-icons\"\r\nimport { SafeAreaView } from \"react-native-safe-area-context\"\r\nimport { globalStyles } from \"../styles/global\"\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\"\r\n\r\nfunction BaseHeader({ title, navigation }) {\r\n  // extract current screen name from navigation state\r\n  const headerText = title\r\n  return (\r\n    <View style={styles.headerContentContainer}>\r\n      <TouchableOpacity>\r\n        <MaterialIcons onPress={() => navigation.openDrawer()} name=\"menu\" size={24} style={globalStyles.navIcon} />\r\n      </TouchableOpacity>\r\n\r\n      <Text style={styles.headerText}>{headerText}</Text>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default function GlobalHeader({\r\n  title,\r\n  navigation,\r\n  headerContent: headerContentElement,\r\n}: {\r\n  title: string\r\n  navigation: any\r\n  headerContent?: React.ReactNode\r\n}) {\r\n  return (\r\n    <SafeAreaView style={styles.header}>\r\n      {headerContentElement ? headerContentElement : <BaseHeader title={title} navigation={navigation} />}\r\n    </SafeAreaView>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  header: {\r\n    paddingVertical: 15,\r\n    width: \"100%\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#1C5D8F\",\r\n  },\r\n\r\n  headerText: {\r\n    fontSize: 20,\r\n    color: \"white\",\r\n    fontFamily: \"century-gothic\",\r\n  },\r\n\r\n  headerContentContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n  },\r\n})\r\n","export enum DrawerRoutes {\r\n  VIEWER = \"Мій Розклад\",\r\n  REGLAMENT = \"Регламент\",\r\n  TEACHERS = \"Викладачі\",\r\n  CONTACTS = \"Контакти\",\r\n  NEWS = \"Новини\",\r\n\r\n  TESTS = \"Тести\",\r\n  EDITOR = \"Редактор\",\r\n  SETTINGS = \"Налаштування\",\r\n  ABOUT = \"Про Застосунок\",\r\n}\r\n","// This is a singleton service that loads news from contenful and provides it to the rest of the application\r\n\r\nimport { getContentfulClient } from \"../utilities/utilities\"\r\n\r\nexport type NewsArticle = {\r\n  title: string\r\n  body: string\r\n  createdAt: string\r\n}\r\n\r\nexport default class NewsLoaderService {\r\n  protected static instance: NewsLoaderService\r\n\r\n  protected _newsCached: NewsArticle[] = []\r\n\r\n  static async GetInstance(): Promise<NewsLoaderService> {\r\n    if (!this.instance) {\r\n      this.instance = new this()\r\n      await this.instance.init()\r\n\r\n      console.log(`[${this.name}] news loader service instance constructed successfully`)\r\n    }\r\n\r\n    return this.instance\r\n  }\r\n\r\n  protected constructor() {}\r\n\r\n  protected async init() {}\r\n\r\n  async getNewsFromContentful(): Promise<NewsArticle[]> {\r\n    // retrieve schedules from contentful\r\n    console.log(`[News Loader] retrieving news from contentful`)\r\n\r\n    if (this._newsCached.length > 0) {\r\n      console.log(`[News Loader] returning cached news`)\r\n      return this._newsCached\r\n    }\r\n\r\n    const entries = await this.fetchContentfulEntries()\r\n\r\n    let news = entries.items.map((entry) => {\r\n      const {\r\n        title,\r\n        body,\r\n      }: {\r\n        title: string\r\n        body: string\r\n      } = entry.fields\r\n      const createdAt = entry.sys.createdAt\r\n      return {\r\n        title,\r\n        body,\r\n        createdAt,\r\n      }\r\n    })\r\n\r\n    // sort news by date\r\n    news = news.sort((a, b) => {\r\n      return new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()\r\n    })\r\n\r\n    console.log(`[News Loader] entries: ${JSON.stringify(news)}`)\r\n\r\n    this._newsCached = news\r\n    return news\r\n  }\r\n\r\n  async fetchContentfulEntries() {\r\n    const client = getContentfulClient()\r\n\r\n    const content_type = \"newsArticle\"\r\n    const entries = await client.getEntries({\r\n      content_type,\r\n    })\r\n\r\n    return entries\r\n  }\r\n\r\n  getExampleNews(): NewsArticle[] {\r\n    return [\r\n      {\r\n        title: \"Новина 1\",\r\n        body: \"Текст новини 1\",\r\n        createdAt: \"2021-06-01T00:00:00.000Z\",\r\n      },\r\n      {\r\n        title: \"Новина 2\",\r\n        body: \"Текст новини 2\",\r\n        createdAt: \"2022-06-02T00:00:00.000Z\",\r\n      },\r\n      {\r\n        title: \"Новина 3\",\r\n        body: \"Текст новини 3\",\r\n        createdAt: \"2023-06-03T00:00:00.000Z\",\r\n      },\r\n    ]\r\n  }\r\n\r\n  // TODO: move to utilities\r\n  async getNewestArticleDate(): Promise<Date> {\r\n    let news = await this.getNewsFromContentful()\r\n    return new Date(news[0].createdAt)\r\n  }\r\n}\r\n","import React, { useRef } from \"react\"\r\nimport { ActivityIndicator, Text, View, StyleSheet, Image } from \"react-native\"\r\nimport { FontAwesome5, Ionicons } from \"@expo/vector-icons\"\r\nimport { useNavigation, useNavigationState } from \"@react-navigation/native\"\r\nimport { drawerMenuImages, globalStyles, palette } from \"../styles/global\"\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport { DrawerRoutes } from \"../routes/DrawerRoutes\"\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\"\r\nimport NewsLoaderService from \"../services/NewsLoaderService\"\r\nimport { isRunningInExpoGo } from \"../utilities/utilities\"\r\nimport _ from \"lodash\"\r\n\r\n// let allIcons = Object.keys(Ionicons.getRawGlyphMap())\r\n// console.log(allIcons)\r\n\r\nlet shouldDisplayYellowCircle = true\r\nNewsLoaderService.GetInstance().then(async (instance) => {\r\n  let newestArticleDate = await instance.getNewestArticleDate()\r\n  let lastSeenArticle = await AsyncStorage.getItem(\"newsChecked\")\r\n  let lastSeenArticleDate = lastSeenArticle ? new Date(lastSeenArticle) : null\r\n\r\n  console.log(\"newestArticleDate\", newestArticleDate)\r\n  console.log(\"lastSeenArticleDate\", lastSeenArticleDate)\r\n\r\n  if (!lastSeenArticleDate || newestArticleDate.getTime() > lastSeenArticleDate.getTime()) {\r\n    shouldDisplayYellowCircle = true\r\n  } else {\r\n    shouldDisplayYellowCircle = false\r\n  }\r\n\r\n  console.log(\"shouldDisplayYellowCircle: \", shouldDisplayYellowCircle)\r\n})\r\n\r\nfunction YellowCircle({ filled = true }: { filled?: boolean }) {\r\n  return (\r\n    <View\r\n      style={{\r\n        marginLeft: 10,\r\n        marginTop: 5,\r\n\r\n        alignSelf: \"flex-start\",\r\n\r\n        width: 5,\r\n        height: 5,\r\n        borderRadius: 10,\r\n        backgroundColor: filled ? \"#FFE600\" : \"transparent\",\r\n        borderWidth: 1,\r\n        borderColor: !filled ? palette.grayedOut : \"transparent\",\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nexport default function DrawerMenu() {\r\n  const routeNameToIconRef = useRef({\r\n    [DrawerRoutes.VIEWER]: <Ionicons name=\"calendar\" color={\"white\"} size={18} />,\r\n    [DrawerRoutes.REGLAMENT]: <Ionicons name=\"time-sharp\" color={\"white\"} size={18} />,\r\n    [DrawerRoutes.TEACHERS]: <FontAwesome5 name=\"user-graduate\" color={\"white\"} size={18} />,\r\n    [DrawerRoutes.CONTACTS]: <Ionicons name=\"call\" color={\"white\"} size={18} />,\r\n    [DrawerRoutes.NEWS]: <Ionicons name=\"chatbox-ellipses\" color={\"white\"} size={18} />,\r\n\r\n    [DrawerRoutes.TESTS]: <Ionicons name=\"flask\" color={\"white\"} size={18} />,\r\n    [DrawerRoutes.EDITOR]: <Ionicons name=\"options\" color={\"white\"} size={18} />,\r\n    [DrawerRoutes.SETTINGS]: <FontAwesome5 name=\"cog\" color={\"white\"} size={18} />,\r\n    [DrawerRoutes.ABOUT]: <Ionicons name=\"information-circle\" color={\"white\"} size={18} />,\r\n  })\r\n\r\n  const navigation = useNavigation()\r\n  console.log(\"navigation\", navigation)\r\n\r\n  const handleNavigationButtonPress = (screeName: string) => {\r\n    console.log(\"handlePageLinkPress\", screeName)\r\n    navigation.navigate(screeName)\r\n  }\r\n\r\n  // Get all the routes from the navigation state\r\n  let routesContainer = useNavigationState((state) => state)\r\n  //   console.log(\"routes\", routesContainer)\r\n\r\n  if (routesContainer && routesContainer.routes) {\r\n    const isRunningInExpoGo_ = isRunningInExpoGo()\r\n\r\n    let routes = routesContainer.routes\r\n\r\n    let breakpoint = routes.length - 4\r\n    let topRoutes = routes.slice(0, breakpoint)\r\n    let bottomRoutes = routes.slice(breakpoint, routes.length)\r\n\r\n    if (!isRunningInExpoGo_) {\r\n      _.remove(bottomRoutes, (route) => route.name == DrawerRoutes.TESTS)\r\n    }\r\n\r\n    let currentRouteIndex = routesContainer.index\r\n    let currentRoute = routes[currentRouteIndex]\r\n\r\n    // NavigationRoute type isn't exported, thus I have to use typeof here\r\n    const RouteButton = ({ route, index }: { route: typeof currentRoute; index: number }) => {\r\n      const isCurrentRoute = route.name == currentRoute.name\r\n      const isNewsRoute = route.name == DrawerRoutes.NEWS\r\n\r\n      const yellowCircle =\r\n        shouldDisplayYellowCircle && isNewsRoute ? <YellowCircle /> : <View style={globalStyles.noDisplay} />\r\n\r\n      return (\r\n        <TouchableOpacity\r\n          key={index}\r\n          onPress={() => {\r\n            if (isNewsRoute) {\r\n              shouldDisplayYellowCircle = false\r\n              AsyncStorage.setItem(\"newsChecked\", new Date().toString())\r\n            }\r\n\r\n            handleNavigationButtonPress(route.name)\r\n          }}\r\n        >\r\n          <View\r\n            style={{\r\n              ...styles.pageLinkContainer,\r\n              ...(isCurrentRoute ? styles.activePageLink : {}),\r\n            }}\r\n          >\r\n            {routeNameToIconRef.current[route.name]}\r\n            <Text style={styles.pageLink}>{route.name}</Text>\r\n            {yellowCircle}\r\n          </View>\r\n        </TouchableOpacity>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <View style={styles.drawerContainer}>\r\n        <View>\r\n          <View style={styles.drawerContainerHeader}>\r\n            <Image\r\n              style={{ width: 35, height: 40, marginRight: 15 }}\r\n              source={drawerMenuImages.uad_logo_white_outline}\r\n            />\r\n            <Text style={{ fontSize: 24, fontFamily: \"century-gothic\", color: \"white\" }}>Розклад</Text>\r\n          </View>\r\n          {topRoutes.map((route, index: number) => {\r\n            return <RouteButton key={index} route={route} index={index} />\r\n          })}\r\n        </View>\r\n\r\n        <View style={styles.drawerContainerBottom}>\r\n          {bottomRoutes.map((route, index: number) => {\r\n            return <RouteButton key={index + topRoutes.length} route={route} index={index + topRoutes.length} />\r\n          })}\r\n        </View>\r\n      </View>\r\n    )\r\n  } else {\r\n    return (\r\n      <View style={{ ...styles.drawerContainer, ...globalStyles.centered }}>\r\n        <ActivityIndicator size={\"large\"} color={palette.navigationBackground} />\r\n      </View>\r\n    )\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  pageLinkContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 20,\r\n  },\r\n  pageLink: {\r\n    fontSize: 18,\r\n    marginLeft: 10,\r\n    color: \"white\",\r\n    fontFamily: \"century-gothic\",\r\n  },\r\n\r\n  drawerContainer: {\r\n    flex: 1,\r\n    justifyContent: \"space-between\",\r\n\r\n    backgroundColor: \"#1C5D8F\",\r\n    paddingTop: 35,\r\n    paddingBottom: 25,\r\n  },\r\n\r\n  drawerContainerBottom: {},\r\n\r\n  activePageLink: {\r\n    backgroundColor: \"lightblue\",\r\n  },\r\n\r\n  drawerContainerHeader: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n\r\n    marginBottom: 25,\r\n    paddingBottom: 15,\r\n\r\n    paddingHorizontal: 20,\r\n\r\n    borderBottomColor: \"rgba(0,0,0,0.1)\",\r\n    borderBottomWidth: 1,\r\n  },\r\n})\r\n","import { GetTimeDifference } from \"./utilities\"\r\n\r\nexport enum WeekType {\r\n  Nominator,\r\n  Denominator,\r\n}\r\n\r\n// month/day/year\r\n// const SEMESTER_START = new Date(\"10/3/2022\") // such string notation doesn't work in react native\r\nconst SEMESTER_START = new Date(2022, 9, 3) // month is 0-based\r\nconst SEMESTER_START_TYPE = WeekType.Denominator\r\n\r\nexport default function GetWeekType(timepoint = new Date()): WeekType {\r\n  // let timepoint = new Date()\r\n  let timeDifferenceInHours = GetTimeDifference(SEMESTER_START, timepoint).hours\r\n  let timeDifferenceInDays = timeDifferenceInHours / 24\r\n  let timeDifferenceInWeeks = Math.trunc(timeDifferenceInDays / 7)\r\n\r\n  if (timeDifferenceInWeeks % 2 == 0) {\r\n    if (SEMESTER_START_TYPE === WeekType.Denominator) {\r\n      return WeekType.Denominator\r\n    }\r\n    return WeekType.Nominator\r\n  } else {\r\n    if (SEMESTER_START_TYPE === WeekType.Denominator) {\r\n      return WeekType.Nominator\r\n    }\r\n    return WeekType.Denominator\r\n  }\r\n}\r\n","// checks whether index is not out of bounds and throws an error if it is\r\nexport default function getStrict(array: Array<any>, index: number) {\r\n  if (index >= array.length || index < 0) {\r\n    throw new Error(`[Array Indexing] Index out of bounds: ${index} (length: ${array.length})`)\r\n  }\r\n  return array[index]\r\n}\r\n","export const daysInShortenedForm = [\"Пн\", \"Вт\", \"Ср\", \"Чт\", \"Пт\"]\r\nexport const localizedDays = [\"Неділя\", \"Понеділок\", \"Вівторок\", \"Середа\", \"Четвер\", \"П'ятниця\", \"Субота\"]\r\n\r\nexport const workDays = [\"Понеділок\", \"Вівторок\", \"Середа\", \"Четвер\", \"П'ятниця\"]\r\nexport const workDaysEn = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"]\r\nexport const workDaysEnLower = workDaysEn.map((day) => day.toLowerCase())\r\n\r\nexport function mapEnWorkDayToUkrWorkDay(day: string): string {\r\n  let index = workDaysEnLower.indexOf(day.toLowerCase())\r\n  return workDays[index]\r\n}\r\n\r\nexport function mapUkrWorkDayToEnWorkDay(day: string): string {\r\n  day = day.toLowerCase()\r\n  let workDaysLower = workDays.map((d) => d.toLowerCase())\r\n\r\n  let index = workDaysLower.indexOf(day)\r\n  return workDaysEn[index]\r\n}\r\n","import * as FileSystem from \"expo-file-system\"\r\nimport { AssetFile } from \"contentful\"\r\nimport _ from \"lodash\"\r\nimport NetInfo from \"@react-native-community/netinfo\"\r\n\r\nimport ScheduleModel, { ScheduleDay } from \"../models/ScheduleModel\"\r\nimport { workDaysEnLower } from \"../constants/Days\"\r\nimport { ensureExtension, getContentfulClient, isRunningInBrowser } from \"../utilities/utilities\"\r\nimport ExampleScheduleKN from \"../assets/example_schedules/КН-example.json\"\r\nimport ExampleScheduleIST from \"../assets/example_schedules/ІСТ-example.json\"\r\nimport ExampleScheduleTE from \"../assets/example_schedules/ТЕ-example.json\"\r\n\r\n// This is a singleton service that loads schedules from local storage / contentful and provides it to the rest of the application\r\n// if no schedules are available (no schedules folder) it should retrieve them from contentful and store them locally\r\n// if schedules are indeed available, we gotta check whether they are up to date or not\r\n// for that we will have to rely on some additional field. Perhaps revision or perhaps creactedAt.\r\n// or perhaps both\r\n\r\ntype ScheduleFileMetadata = {\r\n  filename: string\r\n  revision: number\r\n  createdAt: string\r\n  updatedAt: string\r\n}\r\n\r\nexport interface ScheduleFile extends ScheduleFileMetadata {\r\n  json_parsed: string\r\n}\r\n\r\nexport default class ScheduleLoaderService {\r\n  protected static instance: ScheduleLoaderService\r\n\r\n  scheduleFiles: ScheduleFile[] = []\r\n\r\n  pathToScheduleFolder = `${FileSystem.documentDirectory}schedules/`\r\n\r\n  static async GetInstance(): Promise<ScheduleLoaderService> {\r\n    if (!this.instance) {\r\n      this.instance = new this()\r\n      await this.instance.init()\r\n\r\n      // log loaded schedule files\r\n      console.log(`[${this.name}] schedule loader service instance constructed successfully`)\r\n      console.log(`[${this.name}] schedule loader files:`)\r\n      this.instance.scheduleFiles.forEach((file) => console.log(`[${this.name}] file: ${file.filename}`))\r\n    }\r\n\r\n    return this.instance\r\n  }\r\n\r\n  protected constructor() {}\r\n\r\n  protected async init() {\r\n    // TODO: implement proper browser support\r\n    if (isRunningInBrowser()) {\r\n      this.getExampleSchedules()\r\n      return\r\n    }\r\n\r\n    // check whether schedules are available locally\r\n    const schedulesAvailableLocally = (await FileSystem.getInfoAsync(this.pathToScheduleFolder)).exists\r\n\r\n    if (schedulesAvailableLocally) {\r\n      await this.getSchedulesFromFileSystem()\r\n\r\n      // check for updates\r\n      try {\r\n        await this.checkForUpdatesAsync()\r\n      } catch (e) {\r\n        this.getExampleSchedules()\r\n      }\r\n    } else {\r\n      // create schedules folder\r\n      await FileSystem.makeDirectoryAsync(this.pathToScheduleFolder, { intermediates: true })\r\n\r\n      try {\r\n        await this.getSchedulesFromContentful()\r\n      } catch (e) {\r\n        this.getExampleSchedules()\r\n      }\r\n    }\r\n\r\n    this.scheduleFiles = _.sortBy(this.scheduleFiles, (sf) => sf.filename)\r\n  }\r\n\r\n  async getSchedulesFromFileSystem() {\r\n    console.log(`[Schedule Loader] schedules are available locally. loading...`)\r\n    let allScheduleFileNames = await FileSystem.readDirectoryAsync(this.pathToScheduleFolder)\r\n    // sort the filenames alphabetically\r\n    allScheduleFileNames.sort()\r\n\r\n    console.log(`[Schedule Loader] allScheduleFileNames: ${allScheduleFileNames}`)\r\n    const scheduleFiles: ScheduleFile[] = await Promise.all(\r\n      allScheduleFileNames.map(async (filename) => {\r\n        let file = await FileSystem.readAsStringAsync(`${this.pathToScheduleFolder}${filename}`)\r\n        let json = JSON.parse(file)\r\n        let { revision, createdAt, updatedAt, json_parsed } = json\r\n        return {\r\n          filename,\r\n          revision,\r\n          createdAt,\r\n          updatedAt,\r\n          json_parsed,\r\n        }\r\n      })\r\n    )\r\n\r\n    this.scheduleFiles = scheduleFiles\r\n    return scheduleFiles\r\n  }\r\n\r\n  // downloads schedules and sets them to .scheduleFiles\r\n  // also saves them to schedules folder\r\n  async getSchedulesFromContentful() {\r\n    // retrieve schedules from contentful\r\n    console.log(`[Schedule Loader] retrieving schedules from contentful`)\r\n\r\n    const client = getContentfulClient()\r\n    const assets = await client.getAssets({\r\n      limit: 1000,\r\n    })\r\n    console.log(`[Schedule Loader] retrieved ${assets.items.length} schedule assets from contentful`)\r\n\r\n    // iterate over assets and download them\r\n\r\n    const scheduleFiles: ScheduleFile[] = await Promise.all(\r\n      assets.items.map(async (a) => {\r\n        const file: AssetFile = a.fields.file\r\n\r\n        const protocol = \"https:\"\r\n        const linkToFile = protocol + file.url\r\n\r\n        // get file located at url and temporarily store it in .json file as I don't know how to download it in memory\r\n        const linkToDestFile = `${this.pathToScheduleFolder}${file.fileName}`\r\n        await FileSystem.downloadAsync(linkToFile, linkToDestFile)\r\n\r\n        const scheduleClassesJson = await FileSystem.readAsStringAsync(linkToDestFile)\r\n\r\n        let scheduleFile: ScheduleFile = {\r\n          filename: file.fileName,\r\n          revision: a.sys.revision,\r\n          createdAt: a.sys.createdAt,\r\n          updatedAt: a.sys.updatedAt,\r\n          json_parsed: JSON.parse(scheduleClassesJson),\r\n        }\r\n\r\n        if (!isRunningInBrowser()) {\r\n          // save schedule classes json together with metadata to schedules folder\r\n          await FileSystem.writeAsStringAsync(linkToDestFile, JSON.stringify(scheduleFile))\r\n        }\r\n\r\n        return scheduleFile\r\n      })\r\n    )\r\n\r\n    this.scheduleFiles = scheduleFiles\r\n  }\r\n\r\n  getExampleSchedules() {\r\n    console.log(`[Schedule Loader] retrieving example schedules`)\r\n\r\n    const scheduleFiles: ScheduleFile[] = [\r\n      {\r\n        filename: \"КН-example.json\",\r\n        revision: 0,\r\n        createdAt: \"\",\r\n        updatedAt: \"\",\r\n        json_parsed: ExampleScheduleKN,\r\n      },\r\n      {\r\n        filename: \"ІСТ-example.json\",\r\n        revision: 0,\r\n        createdAt: \"\",\r\n        updatedAt: \"\",\r\n        json_parsed: ExampleScheduleIST,\r\n      },\r\n\r\n      {\r\n        filename: \"ТЕ-example.json\",\r\n        revision: 0,\r\n        createdAt: \"\",\r\n        updatedAt: \"\",\r\n        json_parsed: ExampleScheduleTE,\r\n      },\r\n    ]\r\n\r\n    this.scheduleFiles = scheduleFiles\r\n\r\n    return scheduleFiles\r\n  }\r\n\r\n  getScheduleFileByFileName(fileName: string): ScheduleFile | undefined {\r\n    return this.scheduleFiles.find((sf) => sf.filename === fileName)\r\n  }\r\n\r\n  // checks for updates and updates schedules if they are outdated\r\n  async checkForUpdatesAsync() {\r\n    let netInfo = await NetInfo.fetch()\r\n\r\n    if (!netInfo.isConnected || !netInfo.isInternetReachable) {\r\n      console.log(`[Schedule Loader] no internet connection. skipping update check`)\r\n      return\r\n    }\r\n\r\n    const client = getContentfulClient()\r\n\r\n    const assets = await client.getAssets({\r\n      limit: 1000,\r\n    })\r\n    console.log(`[Schedule Loader] retrieved ${assets.items.length} schedule assets from contentful`)\r\n\r\n    // iterate over assets and download their metadata\r\n    // TODO: dry up the duplicate\r\n\r\n    const scheduleFileMetadatas: (ScheduleFileMetadata & { linkToFile: string })[] = await Promise.all(\r\n      assets.items.map(async (itm) => {\r\n        const file: AssetFile = itm.fields.file\r\n\r\n        const protocol = \"https:\"\r\n        const linkToFile = protocol + file.url\r\n\r\n        let scheduleFileMetadata: ScheduleFileMetadata & { linkToFile: string } = {\r\n          filename: file.fileName,\r\n          revision: itm.sys.revision,\r\n          createdAt: itm.sys.createdAt,\r\n          updatedAt: itm.sys.updatedAt,\r\n          linkToFile,\r\n        }\r\n\r\n        return scheduleFileMetadata\r\n      })\r\n    )\r\n\r\n    // update whatever schedules are outdated\r\n    const updatedScheduleFiles: ScheduleFile[] = await Promise.all(\r\n      scheduleFileMetadatas.map(async (sfm) => {\r\n        let oldSchedule = this.getScheduleFileByFileName(sfm.filename)\r\n        if (!oldSchedule) {\r\n          // schedule is new, download it\r\n          const linkToDestFile = `${this.pathToScheduleFolder}${sfm.filename}`\r\n          await FileSystem.downloadAsync(sfm.linkToFile, linkToDestFile)\r\n\r\n          let scheduleFile: ScheduleFile = {\r\n            filename: sfm.filename,\r\n            revision: sfm.revision,\r\n            createdAt: sfm.createdAt,\r\n            updatedAt: sfm.updatedAt,\r\n            json_parsed: JSON.parse(await FileSystem.readAsStringAsync(linkToDestFile)),\r\n          }\r\n\r\n          // write newly downloaded schedule to schedules folder\r\n          await FileSystem.writeAsStringAsync(linkToDestFile, JSON.stringify(scheduleFile))\r\n\r\n          return scheduleFile\r\n        } else {\r\n          // schedule exists, check if it's outdated\r\n          const isOutdated =\r\n            oldSchedule.revision < sfm.revision ||\r\n            new Date(oldSchedule.updatedAt) < new Date(sfm.updatedAt) ||\r\n            new Date(oldSchedule.createdAt) < new Date(sfm.createdAt)\r\n\r\n          //   console.log(`old schedule created at (date constructed from string): ${new Date(oldSchedule.createdAt)}`) // works\r\n          console.log(`[Schedule Loader] schedule ${sfm.filename} is outdated: ${isOutdated}`)\r\n          if (isOutdated) {\r\n            // schedule is outdated, download it\r\n            const linkToDestFile = `${this.pathToScheduleFolder}${sfm.filename}`\r\n            await FileSystem.downloadAsync(sfm.linkToFile, linkToDestFile)\r\n\r\n            let scheduleFile: ScheduleFile = {\r\n              filename: sfm.filename,\r\n              revision: sfm.revision,\r\n              createdAt: sfm.createdAt,\r\n              updatedAt: sfm.updatedAt,\r\n              json_parsed: JSON.parse(await FileSystem.readAsStringAsync(linkToDestFile)),\r\n            }\r\n\r\n            // write newly downloaded schedule to schedules folder (important)\r\n            await FileSystem.writeAsStringAsync(linkToDestFile, JSON.stringify(scheduleFile))\r\n\r\n            return scheduleFile\r\n          } else {\r\n            // schedule is up to date, do nothing\r\n            return oldSchedule\r\n          }\r\n        }\r\n      })\r\n    )\r\n\r\n    this.scheduleFiles = updatedScheduleFiles\r\n  }\r\n\r\n  // persists schedule model into file\r\n  dumpSchedule(schedule: ScheduleModel) {\r\n    // get corresponding schedule file\r\n    let scheduleFile = this.getScheduleFileByFileName(ensureExtension(schedule.name, \".json\"))\r\n\r\n    let jsonToDump: { [key: string]: ScheduleDay } = {}\r\n\r\n    workDaysEnLower.forEach((day, idx) => {\r\n      jsonToDump[day] = schedule.scheduleDays[idx]\r\n    })\r\n\r\n    // replace .json_parsed with schedule contents\r\n    scheduleFile!.json_parsed = jsonToDump\r\n\r\n    if (isRunningInBrowser()) {\r\n      return Promise.resolve()\r\n    }\r\n\r\n    console.log(`[Schedule Loader] dumping schedule ${scheduleFile?.filename} to file`)\r\n    // write to file\r\n    return FileSystem.writeAsStringAsync(\r\n      `${this.pathToScheduleFolder}${scheduleFile!.filename}`,\r\n      JSON.stringify(scheduleFile)\r\n    )\r\n  }\r\n}\r\n","import { Platform, ToastAndroid } from \"react-native\"\r\nimport GetWeekType from \"../utilities/getWeekType\"\r\nimport { determineInterval, ensureNoExtension } from \"../utilities/utilities\"\r\nimport getStrict from \"../utilities/getStrict\"\r\nimport { workDaysEnLower } from \"../constants/Days\"\r\nimport { REGLAMENT_DATA } from \"../constants/Constants\"\r\nimport ScheduleLoaderService from \"../services/ScheduleLoaderService\"\r\n\r\n// TODO: separate other models into own files\r\n\r\nexport default class ScheduleModel {\r\n  name: string\r\n  specialtyName: string\r\n  year: number\r\n\r\n  // TODO: move to constants\r\n  dayNames = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"].map((day) =>\r\n    day.toLowerCase()\r\n  )\r\n  weekendDays = [\"saturday\", \"sunday\"]\r\n  scheduleDays = new Array<ScheduleDay>()\r\n\r\n  constructor(name: string, specialtyName: string, year: number) {\r\n    this.name = name\r\n    this.specialtyName = specialtyName\r\n    this.year = year\r\n  }\r\n\r\n  setSchedule(data: { [key: string]: { classes: IScheduleClass[] } }) {\r\n    // console.log(\"[Schedule Model] processing raw schedule data \", data)\r\n\r\n    console.log(`[Schedule Model] setting schedule from the object:`)\r\n    console.log(data)\r\n\r\n    this.dayNames.forEach((day) => {\r\n      if (this.weekendDays.includes(day)) return\r\n\r\n      let dayClasses: IScheduleClass[] = data[day].classes\r\n      let scheduleDay = new ScheduleDay(day, dayClasses)\r\n      this.scheduleDays.push(scheduleDay)\r\n    })\r\n\r\n    console.log(\"[Schedule Model] loaded schedule from imported object\")\r\n  }\r\n\r\n  loadScheduleFromJSONFile() {}\r\n  loadScheduleFromImportedObject(objectName: string) {\r\n    throw new Error(\"Method not supported.\")\r\n  }\r\n\r\n  async getScheduleFromScheduleLoader(scheduleFileName: string) {\r\n    let scheduleLoader = await ScheduleLoaderService.GetInstance()\r\n    let scheduleFile = scheduleLoader.scheduleFiles.find((file) => file.filename.startsWith(scheduleFileName))\r\n\r\n    if (!scheduleFile) {\r\n      console.log(`[Schedule Model] schedule file ${scheduleFileName} not found`)\r\n      // TODO: move out of the model and to UI\r\n      ToastAndroid.show(\"Не вдалось завантажити розклад\", ToastAndroid.SHORT)\r\n\r\n      return\r\n    }\r\n\r\n    this.name = ensureNoExtension(scheduleFile.filename, \".json\")\r\n\r\n    console.log(`[Schedule Model] loading schedule from Schedule Loader: ${this.name}`)\r\n\r\n    let data: {\r\n      [key: string]: { classes: IScheduleClass[] }\r\n    } = scheduleFile.json_parsed\r\n\r\n    this.setSchedule(data)\r\n  }\r\n\r\n  getCurrentClass(): ScheduleClass | null {\r\n    const dayIndex = new Date().getDay()\r\n    const isWeekEnd = dayIndex == 0 || dayIndex == 6\r\n\r\n    if (isWeekEnd) return null\r\n\r\n    const todayClasses = this.scheduleDays[dayIndex - 1].classes\r\n    if (todayClasses.length == 0) return null\r\n\r\n    let currentClass = null\r\n\r\n    todayClasses.forEach((class_) => {\r\n      if (class_.isCurrent()) {\r\n        currentClass = class_\r\n      }\r\n    })\r\n\r\n    return currentClass\r\n  }\r\n}\r\n\r\nexport class ScheduleDay {\r\n  classes: ScheduleClass[]\r\n  name: string\r\n\r\n  constructor(name: string, classes: IScheduleClass[]) {\r\n    this.classes = classes.map((class_) => new ScheduleClass(class_, name))\r\n    this.name = name\r\n  }\r\n\r\n  getCurrentWeekClasses(): ScheduleClass[] {\r\n    let currentWeekType = GetWeekType() + 1\r\n    let currentWeekClasses = this.classes.filter((class_) => !class_.isBiweekly || class_.week == currentWeekType)\r\n    return currentWeekClasses\r\n  }\r\n\r\n  // пари по чисельнику\r\n  getNominatorClasses(): ScheduleClass[] {\r\n    let nominatorClasses = this.classes.filter((class_) => !class_.isBiweekly || class_.week == 1)\r\n    return nominatorClasses\r\n  }\r\n\r\n  // пари по знаменнику\r\n  getDenominatorClasses(): ScheduleClass[] {\r\n    let denominatorClasses = this.classes.filter((class_) => !class_.isBiweekly || class_.week == 2)\r\n    return denominatorClasses\r\n  }\r\n\r\n  getMatchingClassOfOtherWeek(class_: ScheduleClass) {\r\n    if (!class_.isBiweekly) return null\r\n\r\n    let otherWeek = class_.week == 1 ? 2 : 1\r\n    let index = class_.index\r\n\r\n    let matchingClass = this.classes.find((class_) => class_.index == index && class_.week == otherWeek)\r\n\r\n    return matchingClass\r\n  }\r\n}\r\n\r\nexport enum CLASS_TYPE {\r\n  LECTURE = \"Лекція\",\r\n  PRACTICE = \"Практична\",\r\n  LAB = \"Лабораторна\",\r\n}\r\n\r\nexport const CLASS_TYPE_SHORT = {\r\n  [CLASS_TYPE.LECTURE]: \"Лек\",\r\n  [CLASS_TYPE.PRACTICE]: \"Прак\",\r\n  [CLASS_TYPE.LAB]: \"Лаб\",\r\n}\r\n\r\nexport type ScheduleClassProps = {\r\n  index: number\r\n  isBiweekly: boolean\r\n  week: 1 | 2\r\n  name: string\r\n  teacher: string | string[]\r\n  room: string | string[]\r\n  isSharedClass: boolean\r\n\r\n  classType: CLASS_TYPE\r\n}\r\n\r\nexport interface IScheduleClass extends ScheduleClassProps {\r\n  getUniqueStringSignature(): string\r\n}\r\n\r\nexport class ScheduleClass implements IScheduleClass {\r\n  index: number\r\n  isBiweekly: boolean\r\n  week: 1 | 2 // 1 or 2, 1 - чисельник, 2 - знаменник\r\n  name: string\r\n  teacher: string | string[]\r\n  room: string | string[]\r\n  isSharedClass: boolean\r\n\r\n  day: string\r\n  weekName: string = \"\"\r\n\r\n  classType: CLASS_TYPE\r\n\r\n  constructor(data: ScheduleClassProps, day: string) {\r\n    this.index = data.index\r\n    this.isBiweekly = data.isBiweekly ?? false\r\n    this.name = data.name\r\n\r\n    // here you make assumptions as you parse the data (that separator character is pipe).\r\n    // Perhaps that's not the right place for such things\r\n    let teacherSeparator = \"|\"\r\n    if (typeof data.teacher == \"string\" && data.teacher.includes(teacherSeparator)) {\r\n      this.teacher = data.teacher.split(teacherSeparator)\r\n    } else {\r\n      this.teacher = data.teacher\r\n    }\r\n\r\n    let roomSeparator = \"|\"\r\n    if (typeof data.room == \"string\" && data.room.includes(roomSeparator)) {\r\n      this.room = data.room.split(roomSeparator)\r\n    } else {\r\n      this.room = data.room\r\n    }\r\n\r\n    this.isSharedClass = data.isSharedClass\r\n    this.day = day\r\n\r\n    this.classType = data.classType ?? CLASS_TYPE.LECTURE\r\n\r\n    this.setWeek(data.week)\r\n  }\r\n\r\n  static sampleName = \"Редагувати\"\r\n  static sampleTeacher = \"Викладач не зазначений\"\r\n  static sampleRoom = \"...\"\r\n\r\n  static GetPlaceholder(day: string, index: number, week: 1 | 2) {\r\n    return new ScheduleClass(\r\n      {\r\n        index,\r\n        isBiweekly: true,\r\n        week,\r\n        name: this.sampleName,\r\n        teacher: this.sampleTeacher,\r\n        room: this.sampleRoom,\r\n        isSharedClass: false,\r\n      },\r\n      day\r\n    )\r\n  }\r\n\r\n  setWeek(week: 1 | 2) {\r\n    this.week = week\r\n    this.weekName = this.isBiweekly ? (this.week === 1 ? \"Чисельник\" : \"Знаменник\") : \"\"\r\n  }\r\n\r\n  getUniqueStringSignature(): string {\r\n    return `[${this.day} * ${this.index}] ${this.name} * ${this.teacher} * ${this.room} <${this.weekName}>})`\r\n  }\r\n\r\n  isCurrent() {\r\n    // debugger\r\n\r\n    // return this.index == 3\r\n\r\n    let isInCurrentDay = this.day == workDaysEnLower[new Date().getDay() - 1]\r\n\r\n    if (!isInCurrentDay) return false\r\n\r\n    let isInCurrentTimeSlot = determineInterval() == getStrict(REGLAMENT_DATA, this.index - 1)\r\n    let isMatchingWeekType = GetWeekType() + 1 == this.week\r\n    let isOngoingClass = isInCurrentTimeSlot && (!this.isBiweekly || isMatchingWeekType)\r\n\r\n    return isOngoingClass\r\n  }\r\n\r\n  isSampleClass() {\r\n    // TODO: find better way to compare lists\r\n\r\n    let isSample =\r\n      this.name == ScheduleClass.sampleName &&\r\n      this.room == ScheduleClass.sampleRoom &&\r\n      this.teacher.toString() == [ScheduleClass.sampleTeacher].toString()\r\n\r\n    return isSample\r\n  }\r\n}\r\n","import teachersJson from \"../assets/teachers.json\"\r\n\r\nimport Fuse from \"fuse.js\"\r\n\r\n// TODO: make teacher model\r\n\r\ntype Teacher = {\r\n  \"ПІБ викладача\": string\r\n  Кваліфікаця: string\r\n  \"E-mail\": string\r\n  \"Кафедра Абревіатура\": string\r\n  \"Кафедра Повна назва\": string\r\n  \"Кафедра Посилання\": string\r\n  \"№\": number\r\n}\r\n\r\nexport default class TeacherTableModel {\r\n  teachers = teachersJson\r\n  teachersFuse = new Fuse(this.teachers, {\r\n    keys: [\"ПІБ викладача\"],\r\n    threshold: 0.3,\r\n  })\r\n\r\n  private static instance: TeacherTableModel\r\n\r\n  static GetInstance(): TeacherTableModel {\r\n    if (!TeacherTableModel.instance) {\r\n      TeacherTableModel.instance = new TeacherTableModel()\r\n    }\r\n\r\n    return TeacherTableModel.instance\r\n  }\r\n\r\n  private constructor() {\r\n    console.log(\"teacher table model constructed successfully\")\r\n  }\r\n\r\n  getTeacherBySurname(surname: string): Teacher | string {\r\n    // sanitized surname string: remove periods and spaces\r\n    // surname = surname.split(\" \")[0].replace(\".\", \"\").replace(\" \", \"\")\r\n\r\n    if (typeof surname != \"string\") return \"Викладача не знайдено\"\r\n\r\n    let match = this.teachersFuse.search(surname)\r\n\r\n    if (match.length == 0) return \"Викладача не знайдено\"\r\n\r\n    return match[0].item\r\n  }\r\n\r\n  getFullNameBySurname(surname: string): string {\r\n    let teacher = this.getTeacherBySurname(surname)\r\n    if (teacher == \"Викладача не знайдено\") return surname\r\n\r\n    if (typeof teacher == \"string\") return teacher\r\n    return teacher[\"ПІБ викладача\"]\r\n  }\r\n\r\n  getSurnameAndInitialsBySurname(surname: string): string {\r\n    let teacher = this.getTeacherBySurname(surname)\r\n    if (typeof teacher == \"string\") return surname\r\n\r\n    surname = teacher[\"ПІБ викладача\"].split(\" \")[0]\r\n    let name = teacher[\"ПІБ викладача\"].split(\" \")[1]\r\n    let patronymic = teacher[\"ПІБ викладача\"].split(\" \")[2]\r\n\r\n    return `${surname} ${name[0]}. ${patronymic[0]}.`\r\n  }\r\n}\r\n","export enum Event {\r\n  SETTINGS_UPDATED = \"settings updated\",\r\n}\r\n","import AsyncStorage from \"@react-native-async-storage/async-storage\"\r\nimport EventEmitter from \"events\"\r\nimport ScheduleLoaderService from \"./ScheduleLoaderService\"\r\nimport Constants from \"expo-constants\"\r\nimport * as Notifications from \"expo-notifications\"\r\nimport * as IntentLauncher from \"expo-intent-launcher\"\r\nimport { NOTIFICATIONS_CHANNEL_ID } from \"../constants/Constants\"\r\nimport { STORAGE_KEY } from \"../constants/Keys\"\r\nimport { Event } from \"../constants/Events\"\r\n\r\n// TODO: avoid creating duplicate handlers for \"settings updated\" event\r\n\r\nexport enum DisplayEmptyDaysMode {\r\n  Display = \"Відображати\",\r\n  Darken = \"Затемняти\",\r\n  Hide = \"Приховати\",\r\n}\r\n\r\nexport enum DisplayTeacherMode {\r\n  Full = \"ПІБ\",\r\n  SurnameAndInitials = \"Прізвище та ініціали\",\r\n  Hide = \"Приховати\",\r\n}\r\n\r\n// update place 1 for new setting\r\nexport type ScheduleAppSettings = {\r\n  currentScheduleName: string\r\n  notifyBeforeClass: boolean\r\n  notifyBeforeClassOffsetMinutes: number\r\n  displayRoomNumber: boolean\r\n  displayTeacherName: DisplayTeacherMode\r\n\r\n  displayEmptyRows: boolean // TODO: use enum here\r\n  displayEmptyDays: DisplayEmptyDaysMode\r\n}\r\n\r\ninterface ISettingsService extends ScheduleAppSettings {\r\n  saveToStorage: () => Promise<void>\r\n  readFromStorage: () => Promise<ScheduleAppSettings | null>\r\n}\r\n\r\n// // update place 2 for new setting\r\n// as of now in order to add a new setting you have to modify 3 places\r\n// that doesn't sound great.\r\n// make sure you start with ScheduleAppSettings type\r\n\r\n// loads and saves settings to async storage\r\n// also provides a way to subscribe to settings change event\r\nexport default class SettingsService implements ISettingsService {\r\n  displayEmptyDays: DisplayEmptyDaysMode = DisplayEmptyDaysMode.Display\r\n  currentScheduleName = \"\" // Object.keys(scheduleFilesJSON)[0] // this has to match the name of the file in assets/schedules\r\n  notifyBeforeClass = true\r\n  notifyBeforeClassOffsetMinutes = 0\r\n  displayRoomNumber = true\r\n  displayTeacherName = DisplayTeacherMode.Full\r\n  displayEmptyRows = true\r\n\r\n  private static instance: SettingsService\r\n\r\n  SettingsEventEmmiter = new EventEmitter()\r\n\r\n  static async GetInstance(): Promise<SettingsService> {\r\n    if (!SettingsService.instance) {\r\n      SettingsService.instance = new SettingsService()\r\n      await SettingsService.instance.init()\r\n      console.log(\"settings service instance constructed successfully\")\r\n    }\r\n\r\n    return SettingsService.instance\r\n  }\r\n\r\n  private async init() {\r\n    // get first schedule from ScheduleLoaderService and use it as default\r\n    let scheduleLoader = await ScheduleLoaderService.GetInstance()\r\n    this.currentScheduleName = scheduleLoader.scheduleFiles[0].filename\r\n\r\n    const fetchedSettings = await this.readFromStorage()\r\n    if (!fetchedSettings) return\r\n\r\n    // gotta make sure that each and every property is set\r\n\r\n    console.log(\"[SettingsService] fetched settings:\")\r\n    console.log(fetchedSettings)\r\n\r\n    console.log(\"settings fetched. Populating properties...\")\r\n    for (const [key, value] of Object.entries(fetchedSettings)) {\r\n      console.log(`[fetched settings] ${key}: ${value}`)\r\n      this[key] = value\r\n    }\r\n\r\n    console.log(`[SettingsService] current schedule name: ${this.currentScheduleName}`)\r\n    if (this.currentScheduleName == \"\" || this.currentScheduleName == \".json\") {\r\n      console.log(\"current schedule name is empty. setting it to default...\")\r\n      this.currentScheduleName = scheduleLoader.scheduleFiles[0].filename\r\n    }\r\n  }\r\n\r\n  // update place 3 for new setting\r\n  constructSettingsObjectFromProperties(): ScheduleAppSettings {\r\n    return {\r\n      currentScheduleName: this.currentScheduleName,\r\n      notifyBeforeClass: this.notifyBeforeClass,\r\n      notifyBeforeClassOffsetMinutes: this.notifyBeforeClassOffsetMinutes,\r\n      displayRoomNumber: this.displayRoomNumber,\r\n      displayEmptyRows: this.displayEmptyRows,\r\n      displayEmptyDays: this.displayEmptyDays,\r\n      displayTeacherName: this.displayTeacherName,\r\n    }\r\n  }\r\n\r\n  // TODO: Refactor\r\n  // \"settings updated\" event should be emmitted every time they're updated, but not necessarily saved to storage\r\n  async saveToStorage() {\r\n    try {\r\n      const settingsObject = this.constructSettingsObjectFromProperties()\r\n      const jsonValue = JSON.stringify(settingsObject)\r\n      await AsyncStorage.setItem(STORAGE_KEY, jsonValue)\r\n\r\n      this.SettingsEventEmmiter.emit(Event.SETTINGS_UPDATED, this)\r\n    } catch (e) {\r\n      // saving error\r\n      console.error(e)\r\n    }\r\n  }\r\n\r\n  async readFromStorage(): Promise<ScheduleAppSettings | null> {\r\n    try {\r\n      console.log(\"trying to read settings from storage... storage key is: \", STORAGE_KEY)\r\n      const jsonValue = await AsyncStorage.getItem(STORAGE_KEY)\r\n      return jsonValue != null ? JSON.parse(jsonValue) : null\r\n    } catch (e) {\r\n      console.log(\"failed to parse whatever was read from settings. returning null...\")\r\n      // error reading value\r\n      console.error(e)\r\n      return null\r\n    }\r\n  }\r\n\r\n  async openAndroidSystemSettingsForNotifications() {\r\n    const pkg = Constants.manifest.android.package\r\n    const channel = await Notifications.getNotificationChannelAsync(NOTIFICATIONS_CHANNEL_ID)\r\n    const allChannels = await Notifications.getNotificationChannelsAsync()\r\n    console.log(\"[Notification Tests] All channels of this app: \")\r\n    console.log(allChannels)\r\n    console.log(\"[Notification Tests] Channel id for main channel: \" + channel?.id)\r\n\r\n    // TODO: fix expo go notification settings not opening when the code is running in expo go\r\n\r\n    IntentLauncher.startActivityAsync(\"android.settings.CHANNEL_NOTIFICATION_SETTINGS\", {\r\n      // data: \"package:\" + pkg,\r\n      extra: {\r\n        \"android.provider.extra.CHANNEL_ID\": pkg == \"host.exp.exponent\" ? \"expo-experience\" : NOTIFICATIONS_CHANNEL_ID,\r\n        \"android.provider.extra.APP_PACKAGE\": pkg,\r\n      },\r\n    })\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport SettingsService from \"../services/SettingsService\"\r\n\r\nexport const SettingsContext = React.createContext<SettingsService | null>(null)\r\n","import React from \"react\"\r\nimport { View, Text, StyleSheet } from \"react-native\"\r\nimport { TextProps } from \"react-native-elements\"\r\nimport { palette } from \"../styles/global\"\r\n\r\n// export default class AppText extends Text {\r\n\r\n//     render(){\r\n//         return <Text style={[styles.appText, this.props.style]}>{this.props.children}</Text>\r\n//     }\r\n\r\n// }\r\n\r\nexport default function AppText(props: TextProps) {\r\n  return (\r\n    <Text android_hyphenationFrequency=\"full\" {...props} style={[styles.appText, props.style]}>\r\n      {props.children}\r\n    </Text>\r\n  )\r\n}\r\n\r\n// AppText.propTypes = {\r\n//   ...Text.propTypes,\r\n//   // add any additional propTypes here\r\n// }\r\n\r\nconst styles = StyleSheet.create({\r\n  appText: {\r\n    fontFamily: \"montserrat-medium\",\r\n    fontSize: 12,\r\n    // letterSpacing: -0.5,\r\n    color: palette.text,\r\n  },\r\n})\r\n","import React from \"react\"\r\nimport { View, Text, StyleSheet } from \"react-native\"\r\nimport { TextProps } from \"react-native-elements\"\r\nimport { palette } from \"../../styles/global\"\r\nimport AppText from \"../../shared/AppText\"\r\n\r\nexport default function ScheduleText(props: TextProps) {\r\n  return (\r\n    //     backgroundColor: \"rgb(227, 239, 249)\",\r\n\r\n    <AppText\r\n      // selectionColor={\"rgb(227, 239, 249)\"}\r\n      // selectable={true}\r\n      android_hyphenationFrequency=\"full\"\r\n      {...props}\r\n      style={[styles.appText, props.style]}\r\n    >\r\n      {props.children}\r\n    </AppText>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  appText: {\r\n    fontFamily: \"montserrat-medium\",\r\n    fontSize: 12,\r\n    letterSpacing: -0.5,\r\n    color: palette.text,\r\n  },\r\n})\r\n","import React, { useContext, useEffect, useState } from \"react\"\r\nimport { View, Text, StyleSheet, useWindowDimensions, ActivityIndicator, ToastAndroid } from \"react-native\"\r\nimport { CLASS_TYPE, CLASS_TYPE_SHORT, ScheduleClass } from \"../../models/ScheduleModel\"\r\nimport { globalStyles, palette } from \"../../styles/global\"\r\nimport getStrict from \"../../utilities/getStrict\"\r\nimport { REGLAMENT_DATA } from \"../../constants/Constants\"\r\nimport _ from \"lodash\"\r\nimport TeacherTableModel from \"../../models/TeacherTableModel\"\r\nimport SettingsService, { DisplayTeacherMode } from \"../../services/SettingsService\"\r\nimport { SettingsContext } from \"../../contexts/settingsContext\"\r\nimport ScheduleText from \"./ScheduleText\"\r\nimport * as Clipboard from \"expo-clipboard\"\r\n\r\nexport const formatRoomName = (scheduleClassInstance: ScheduleClass, unfoldClassText: boolean) => {\r\n  let room = \"\"\r\n\r\n  if (\r\n    scheduleClassInstance.room == \"\" ||\r\n    scheduleClassInstance.room == null ||\r\n    scheduleClassInstance.room == undefined\r\n  ) {\r\n    // collapse all kinds of missing values into empty string\r\n    room = \"\"\r\n  } else {\r\n    if (typeof scheduleClassInstance.room == \"string\") {\r\n      room = scheduleClassInstance.room\r\n    } else if (scheduleClassInstance.room.length != undefined) {\r\n      // array check\r\n      room = scheduleClassInstance.room.join(\"\\n\")\r\n    }\r\n  }\r\n\r\n  // pad dots with spaces\r\n  room = room.replace(/\\.(?!\\s)/g, \". \")\r\n\r\n  if (!unfoldClassText) {\r\n    room = room.split(\"\\n\")[0]\r\n  }\r\n\r\n  return room\r\n}\r\n\r\nexport const formatTeacherName = (\r\n  scheduleClassInstance: ScheduleClass,\r\n  isEditable: boolean,\r\n  settings: SettingsService | null // can be null if isEditable is true\r\n) => {\r\n  let teacher = \"\"\r\n\r\n  let teacherTable = TeacherTableModel.GetInstance()\r\n  let teacherSurname = scheduleClassInstance.teacher\r\n  if (teacherSurname == null) {\r\n    teacher = \"...\"\r\n  } else if (typeof teacherSurname != \"string\") {\r\n    if (teacherSurname.length == 1) {\r\n      teacher = teacherTable.getFullNameBySurname(teacherSurname[0])\r\n    } else {\r\n      let teachers = teacherSurname.map((sn) => teacherTable.getSurnameAndInitialsBySurname(sn))\r\n      teacher = teachers.join(\", \")\r\n    }\r\n  } else {\r\n    let displayTeacherNameMode = isEditable ? DisplayTeacherMode.Full : settings!.displayTeacherName\r\n\r\n    if (displayTeacherNameMode == DisplayTeacherMode.Full) {\r\n      teacher = teacherTable.getFullNameBySurname(teacherSurname)\r\n    } else if (displayTeacherNameMode == DisplayTeacherMode.SurnameAndInitials) {\r\n      teacher = teacherTable.getSurnameAndInitialsBySurname(teacherSurname)\r\n    }\r\n  }\r\n\r\n  return teacher\r\n}\r\n\r\nexport default function ScheduleClassComponent({\r\n  scheduleClassInstance,\r\n  idx,\r\n  displayRoomNumber,\r\n  isEditable = false,\r\n  highlightAsOngoing = false,\r\n}: {\r\n  scheduleClassInstance: ScheduleClass\r\n  idx: number\r\n  displayRoomNumber: boolean\r\n  isEditable?: boolean\r\n  highlightAsOngoing?: boolean\r\n}) {\r\n  let [state, setState] = React.useState({})\r\n  let isCurrentClassRef = React.useRef(scheduleClassInstance.isCurrent())\r\n\r\n  const [unfoldClassText, setUnfoldClassText] = React.useState(isEditable)\r\n  const [unfoldTeacherText, setUnfoldTeacherText] = React.useState(isEditable)\r\n\r\n  const { height, width } = useWindowDimensions()\r\n  const settings = useContext(SettingsContext)\r\n\r\n  let [isOngoingClass, setIsOngoingClass] = useState(false)\r\n  let className = scheduleClassInstance.name\r\n  let room = formatRoomName(scheduleClassInstance, unfoldClassText)\r\n  let teacher = formatTeacherName(scheduleClassInstance, isEditable, settings) // need to run this on every rerender because teacher name could have changed in settings\r\n\r\n  let shouldDisplayTeacher = isEditable || settings!.displayTeacherName != DisplayTeacherMode.Hide\r\n\r\n  const [isReady, setIsReady] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const rerenderInterval = setInterval(() => {\r\n      // periodically re-render component to update ongoing class\r\n\r\n      let isCurrentClass = scheduleClassInstance.isCurrent()\r\n      let wasCurrent = isCurrentClassRef.current\r\n\r\n      if (isCurrentClass != wasCurrent) {\r\n        isCurrentClassRef.current = isCurrentClass\r\n        setState({})\r\n      }\r\n    }, 15000)\r\n\r\n    async function init() {\r\n      setIsOngoingClass(scheduleClassInstance.isCurrent())\r\n      setIsReady(true)\r\n    }\r\n\r\n    init()\r\n\r\n    return () => clearInterval(rerenderInterval)\r\n  }, [])\r\n\r\n  let reglamentClass = getStrict(REGLAMENT_DATA, scheduleClassInstance.index - 1)\r\n\r\n  let classStart: string = reglamentClass[1]\r\n  if (classStart.length == 4) classStart = \"0\" + classStart\r\n\r\n  const classEnd: string = reglamentClass[2]\r\n\r\n  if (!isReady) {\r\n    return (\r\n      <View style={[{ paddingVertical: 10 }]}>\r\n        <ActivityIndicator size=\"small\" color={palette.navigationBackground} />\r\n      </View>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <View key={idx}>\r\n      <View style={{ ...styles.classContainer, ...(isOngoingClass || highlightAsOngoing ? styles.ongoingClass : {}) }}>\r\n        <View style={styles.startAndEndTimesContainer}>\r\n          <ScheduleText style={[styles.text, styles.classStartText]}>{classStart}</ScheduleText>\r\n          <ScheduleText style={[styles.text, styles.classEndText]}>{classEnd} </ScheduleText>\r\n        </View>\r\n        <View style={styles.classAndTeacherBlock}>\r\n          <ScheduleText\r\n            onPress={() => {\r\n              if (isEditable) return\r\n              setUnfoldClassText(!unfoldClassText)\r\n            }}\r\n            // onLongPress={() => null} // necessary for text to be selectable on long press (otherwise onPress will rerender the component in attempt to expand it)\r\n\r\n            onLongPress={() => {\r\n              if (isEditable) return\r\n              Clipboard.setStringAsync(className).then(() => {\r\n                ToastAndroid.show(\"Скопійовано: предмет\", ToastAndroid.SHORT)\r\n              })\r\n            }}\r\n            style={[styles.classNameText, teacher == \"...\" ? { flexGrow: 0 } : {}]}\r\n            ellipsizeMode=\"tail\"\r\n            numberOfLines={!unfoldClassText ? 1 : 0}\r\n          >\r\n            {className}\r\n          </ScheduleText>\r\n          <ScheduleText\r\n            onPress={() => {\r\n              if (isEditable) return\r\n\r\n              setUnfoldTeacherText(!unfoldTeacherText)\r\n            }}\r\n            // onLongPress={() => null} // necessary for text to be selectable on long press (otherwise onPress will rerender the component in attempt to expand it)\r\n\r\n            onLongPress={() => {\r\n              if (isEditable) return\r\n              Clipboard.setStringAsync(teacher).then(() => {\r\n                ToastAndroid.show(\"Скопійовано: викладач\", ToastAndroid.SHORT)\r\n              })\r\n            }}\r\n            style={[styles.teacherNameText, !shouldDisplayTeacher || teacher == \"...\" ? globalStyles.noDisplay : {}]}\r\n            ellipsizeMode=\"tail\"\r\n            numberOfLines={!unfoldTeacherText ? 1 : 0}\r\n          >\r\n            {teacher}\r\n          </ScheduleText>\r\n        </View>\r\n        <View style={styles.classTypeAndRoomNumberContainer}>\r\n          <View\r\n            style={\r\n              scheduleClassInstance.classType != CLASS_TYPE.LECTURE && !unfoldClassText\r\n                ? styles.roomNumberContainer\r\n                : globalStyles.noDisplay\r\n            }\r\n          >\r\n            <ScheduleText style={styles.roomNumberText}>\r\n              {CLASS_TYPE_SHORT[scheduleClassInstance.classType]}\r\n            </ScheduleText>\r\n          </View>\r\n\r\n          <View style={displayRoomNumber ? styles.roomNumberContainer : globalStyles.noDisplay}>\r\n            <ScheduleText\r\n              onLongPress={() => {\r\n                if (isEditable) return\r\n\r\n                Clipboard.setStringAsync(room).then(() => {\r\n                  ToastAndroid.show(\"Скопійовано: аудиторія\", ToastAndroid.SHORT)\r\n                })\r\n              }}\r\n              style={styles.roomNumberText}\r\n            >\r\n              {room}\r\n            </ScheduleText>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  ongoingClass: {\r\n    // backgroundColor: \"rgba(28, 93, 143, 0.1)\",\r\n    backgroundColor: \"rgb(227, 239, 249)\",\r\n  },\r\n\r\n  classContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginVertical: 5,\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 3,\r\n    borderRadius: 5,\r\n  },\r\n\r\n  startAndEndTimesContainer: {\r\n    alignItems: \"flex-start\",\r\n    width: \"10%\",\r\n    marginRight: \"4%\",\r\n  },\r\n\r\n  separator: {\r\n    ...globalStyles.separator,\r\n\r\n    backgroundColor: \"rgba(217, 217, 217, 0.4)\",\r\n  },\r\n\r\n  text: {\r\n    fontFamily: \"montserrat-regular\",\r\n    color: palette.text,\r\n  },\r\n\r\n  classStartText: {\r\n    fontFamily: \"montserrat-regular\",\r\n    color: palette.text,\r\n    alignSelf: \"center\",\r\n  },\r\n\r\n  classEndText: {\r\n    fontFamily: \"montserrat-regular\",\r\n    color: palette.text,\r\n    alignSelf: \"center\",\r\n  },\r\n\r\n  classNameText: {\r\n    fontFamily: \"montserrat-medium\",\r\n    color: palette.text,\r\n    alignSelf: \"flex-start\",\r\n    textAlign: \"left\",\r\n    flexGrow: 0.5,\r\n  },\r\n\r\n  teacherNameText: {\r\n    fontFamily: \"montserrat-regular\",\r\n    color: palette.grayedOut,\r\n  },\r\n\r\n  roomNumberText: {\r\n    fontFamily: \"montserrat-regular\",\r\n    color: palette.text,\r\n    textAlign: \"right\",\r\n  },\r\n\r\n  classTypeAndRoomNumberContainer: {\r\n    width: \"12%\",\r\n  },\r\n\r\n  roomNumberContainer: {\r\n    // flexGrow: 0.12,\r\n    alignItems: \"flex-end\",\r\n    textAlign: \"right\",\r\n  },\r\n\r\n  classAndTeacherBlock: {\r\n    // width: \"74%\",\r\n    flexBasis: \"74%\",\r\n    flexGrow: 1,\r\n    // flexGrow: 0.74,\r\n    // flexGrow: 1,\r\n    alignItems: \"flex-start\",\r\n    textAlign: \"left\",\r\n  },\r\n})\r\n","import React from \"react\"\r\nimport { View, Text, StyleSheet } from \"react-native\"\r\nimport { globalStyles } from \"../styles/global\"\r\n\r\nexport default function Separator({\r\n  upperElement,\r\n  lowerElement,\r\n  color,\r\n  width = \"100%\",\r\n}: {\r\n  upperElement: any\r\n  lowerElement: any\r\n  color?: string\r\n  width?: string\r\n}) {\r\n  const localStyles = StyleSheet.create({\r\n    separator: {\r\n      ...globalStyles.separator,\r\n      backgroundColor: color || globalStyles.separator.backgroundColor,\r\n      width: width,\r\n      alignSelf: \"center\",\r\n    },\r\n  })\r\n\r\n  if (upperElement && lowerElement) {\r\n    return <View style={localStyles.separator} />\r\n  }\r\n\r\n  return <View style={globalStyles.noDisplay} />\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n})\r\n","import React from \"react\"\r\nimport { useSwipeableItemParams } from \"react-native-swipeable-item\"\r\nimport { TouchableOpacity, View, StyleSheet } from \"react-native\"\r\nimport { Ionicons } from \"@expo/vector-icons\"\r\nimport { globalStyles, palette } from \"../../styles/global\"\r\n\r\n// TODO: hide this component children right when hide animation starts\r\n// TODO: make sure that class start and class end block gets completely hidden when main content is shifted to the side\r\n\r\nexport default function UnderlayRightSide({\r\n  onDeleteButtonPress: onDeleteButtonPress,\r\n}: {\r\n  onDeleteButtonPress: () => void\r\n}) {\r\n  const { close } = useSwipeableItemParams<Item>()\r\n\r\n  return (\r\n    <View style={[globalStyles.row, styles.underlayLeft]}>\r\n      <View>\r\n        <TouchableOpacity\r\n          onPress={(e) => {\r\n            onDeleteButtonPress()\r\n            close()\r\n          }}\r\n        >\r\n          <Ionicons name=\"trash-outline\" size={14} color={palette.grayedOut} />\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  underlayLeft: {\r\n    flex: 1,\r\n    backgroundColor: palette.ongoingClass,\r\n    justifyContent: \"flex-end\",\r\n    alignItems: \"center\",\r\n    marginVertical: 2,\r\n    padding: 10,\r\n    borderRadius: 10,\r\n  },\r\n})\r\n","import * as Notifications from \"expo-notifications\"\r\nimport { Platform } from \"react-native\"\r\nimport { isRunningInBrowser } from \"../utilities/utilities\"\r\n\r\n// expo notifications docs: https://docs.expo.dev/versions/latest/sdk/notifications/\r\n// Expo's Push Notification Tool: https://expo.dev/notifications\r\n\r\ninterface ILocalNotificationsService {\r\n  sendNotification(content: Notifications.NotificationContentInput): Promise<void>\r\n  scheduleNotification(\r\n    content: Notifications.NotificationContentInput,\r\n    trigger: Notifications.NotificationTriggerInput\r\n  ): Promise<void>\r\n  cancelAllScheduledNotificationsAsync(): Promise<void>\r\n  cancelScheduledNotificationAsync(identifier: string): Promise<void>\r\n  getAllScheduledNotificationsAsync(): Promise<Notifications.NotificationRequest[]>\r\n  checkPermissionsAsync(): Promise<Notifications.NotificationPermissionsStatus>\r\n}\r\n\r\n// singleton\r\nexport default class LocalNotificationsService implements ILocalNotificationsService {\r\n  protected static instance: LocalNotificationsService\r\n  exampleNotificationContent: Notifications.NotificationContentInput = {\r\n    title: \"Мультимедійне видавництво\",\r\n    body: \"Миклушка І. З.\",\r\n    subtitle: \"[10:15] Пара починається\",\r\n    data: { someData: \"додаткова інформація тут\" },\r\n  }\r\n  notificationChannelId = \"interactive-schedule-notifications\"\r\n\r\n  static async GetInstance(): Promise<LocalNotificationsService> {\r\n    if (!this.instance) {\r\n      this.instance = new this()\r\n      await this.instance.init()\r\n      console.log(`[${this.name}] local notifications service instance constructed successfully`)\r\n    }\r\n\r\n    return this.instance\r\n  }\r\n\r\n  protected constructor() {}\r\n  cancelScheduledNotificationAsync(identifier: string): Promise<void> {\r\n    return Notifications.cancelScheduledNotificationAsync(identifier)\r\n  }\r\n\r\n  cancelAllScheduledNotificationsAsync(): Promise<void> {\r\n    return Notifications.cancelAllScheduledNotificationsAsync()\r\n  }\r\n  getAllScheduledNotificationsAsync(): Promise<Notifications.NotificationRequest[]> {\r\n    return Notifications.getAllScheduledNotificationsAsync()\r\n  }\r\n  checkPermissionsAsync(): Promise<Notifications.NotificationPermissionsStatus> {\r\n    return Notifications.getPermissionsAsync()\r\n  }\r\n\r\n  protected async init() {\r\n    Notifications.setNotificationHandler({\r\n      handleNotification: async () => ({\r\n        shouldShowAlert: true,\r\n        priority: Notifications.AndroidNotificationPriority.MAX,\r\n        shouldPlaySound: true,\r\n        shouldSetBadge: true,\r\n      }),\r\n    })\r\n    await this.registerNotificationsChannel()\r\n\r\n    if (!isRunningInBrowser()) {\r\n      let permissionsGranted = (await this.checkPermissionsAsync()).granted\r\n      if (!permissionsGranted) await Notifications.requestPermissionsAsync()\r\n\r\n      console.log(`[Local Notifications] permissions granted: ${permissionsGranted}`)\r\n    }\r\n\r\n    console.log(\"local notifications service initialized\")\r\n  }\r\n\r\n  async registerNotificationsChannel() {\r\n    if (Platform.OS === \"android\") {\r\n      // delete default notification channel that expo creates for you\r\n      await Notifications.deleteNotificationChannelAsync(\"default\")\r\n\r\n      Notifications.setNotificationChannelAsync(this.notificationChannelId, {\r\n        name: \"Сповіщення про початок пари\",\r\n        importance: Notifications.AndroidImportance.MAX,\r\n        vibrationPattern: [0, 250, 250, 250],\r\n        lightColor: \"#FF231F7C\",\r\n        lockscreenVisibility: Notifications.AndroidNotificationVisibility.PUBLIC,\r\n      })\r\n    }\r\n  }\r\n\r\n  async sendNotification(content: Notifications.NotificationContentInput) {\r\n    const message: Notifications.NotificationRequestInput = {\r\n      identifier: this.notificationChannelId,\r\n      content: {\r\n        ...content,\r\n        priority: \"high\",\r\n      },\r\n      // I have to set seconds to 1, otherwise the notification is not shown.\r\n      // I don't know whether it's a bug or something else\r\n      trigger: {\r\n        seconds: 1,\r\n        channelId: this.notificationChannelId,\r\n      },\r\n    }\r\n\r\n    Notifications.scheduleNotificationAsync(message).catch((e) => {\r\n      console.error(\"error while sending notification\")\r\n      console.log(\"...this is the notification that was supposed to be sent:\")\r\n      console.log(message)\r\n    })\r\n  }\r\n\r\n  async scheduleNotification(\r\n    content: Notifications.NotificationContentInput,\r\n    trigger: Notifications.NotificationTriggerInput\r\n  ) {\r\n    // TODO: narrow down types\r\n    if (trigger == null || typeof trigger != \"object\") {\r\n      throw new Error(\"trigger is not an object\")\r\n    }\r\n\r\n    // TODO: pass channel id to trigger\r\n\r\n    // random unique identifier will be generated if not specified\r\n    let notificationId = undefined\r\n\r\n    const message: Notifications.NotificationRequestInput = {\r\n      identifier: notificationId,\r\n      content: {\r\n        ...content,\r\n        priority: \"high\",\r\n      },\r\n      trigger: trigger,\r\n    }\r\n\r\n    let nextTriggerDate = await Notifications.getNextTriggerDateAsync(trigger)\r\n    let now = new Date()\r\n\r\n    if (nextTriggerDate == null && trigger.date >= now) {\r\n      throw new Error(\"nextTriggerDate is null for this notification: \" + trigger.date)\r\n    }\r\n\r\n    Notifications.scheduleNotificationAsync(message)\r\n  }\r\n\r\n  // - - - methods for testing - - -\r\n  // TODO: move to separate class\r\n\r\n  async sendExampleNotification() {\r\n    this.sendNotification(this.exampleNotificationContent)\r\n  }\r\n\r\n  async scheduleExampleNotificationViaDate(secondsFromNow = 5) {\r\n    let trigger: Notifications.NotificationTriggerInput = {\r\n      date: new Date(Date.now() + secondsFromNow * 1000),\r\n      channelId: this.notificationChannelId,\r\n    }\r\n\r\n    this.scheduleNotification(this.exampleNotificationContent, trigger)\r\n  }\r\n\r\n  async scheduleRepeatableExampleNotification() {\r\n    let trigger: Notifications.NotificationTriggerInput = {\r\n      seconds: 5,\r\n      repeats: true,\r\n      channelId: this.notificationChannelId,\r\n    }\r\n\r\n    this.scheduleNotification(this.exampleNotificationContent, trigger)\r\n  }\r\n\r\n  async scheduleRepeatableDailyExampleNotification() {\r\n    let trigger: Notifications.DailyTriggerInput = {\r\n      hour: 14,\r\n      minute: 41,\r\n      repeats: true,\r\n      channelId: this.notificationChannelId,\r\n    }\r\n\r\n    this.scheduleNotification(this.exampleNotificationContent, trigger)\r\n  }\r\n}\r\n","import { DateTriggerInput, NotificationContentInput, WeeklyTriggerInput } from \"expo-notifications\"\r\nimport ScheduleModel, { ScheduleClass, ScheduleDay } from \"../models/ScheduleModel\"\r\nimport GetWeekType from \"../utilities/getWeekType\"\r\nimport { createEvenlySpacedTimeSequence, setDayOnDate } from \"../utilities/utilities\"\r\nimport LocalNotificationsService from \"./LocalNotificationsService\"\r\nimport { REGLAMENT_DATA, SEMESTER_MONTHS } from \"../constants/Constants\"\r\nimport TeacherTableModel from \"../models/TeacherTableModel\"\r\n\r\nexport default class ClassNotificationBuilder {\r\n  signature: string\r\n\r\n  hour: number\r\n  minute: number\r\n\r\n  notificationsService: LocalNotificationsService\r\n  schedule: ScheduleModel\r\n  class_: ScheduleClass\r\n\r\n  teachersTable = TeacherTableModel.GetInstance()\r\n\r\n  constructor(\r\n    schedule: ScheduleModel,\r\n    class_: ScheduleClass,\r\n    notificationsService: LocalNotificationsService,\r\n    negativeOffsetInMins: number\r\n  ) {\r\n    this.notificationsService = notificationsService\r\n\r\n    this.schedule = schedule\r\n    this.class_ = class_\r\n\r\n    this.signature = class_.getUniqueStringSignature()\r\n\r\n    // use reglament to determine hour and minute\r\n    let hourAndMinute = REGLAMENT_DATA[class_.index - 1][1]\r\n\r\n    this.hour = parseInt(hourAndMinute.split(\":\")[0])\r\n    this.minute = parseInt(hourAndMinute.split(\":\")[1])\r\n\r\n    this.minute -= negativeOffsetInMins\r\n    if (this.minute < 0) {\r\n      this.minute += 60\r\n      this.hour -= 1\r\n    }\r\n  }\r\n\r\n  constructBiweeklyNotificationsSequence(scheduleDay: ScheduleDay) {\r\n    // we need to generate lots of periodic biweekly notifications. Here a period is two weeks\r\n    // we need approx this number of notifications: n of months in semester * 2. n of months in semester = ~6\r\n\r\n    // construct notification date\r\n    let now = new Date()\r\n\r\n    let monthDay = now.getDate()\r\n    let notificationDate = new Date(now.getFullYear(), now.getMonth(), monthDay, this.hour, this.minute)\r\n    notificationDate = setDayOnDate(notificationDate, this.schedule.dayNames.indexOf(scheduleDay.name))\r\n\r\n    // construct future notification dates\r\n    let twoWeeksInSeconds = 60 * 60 * 24 * 7 * 2\r\n    // add additional week of offset if week types don't match. It's important to add 1 to week type enum returned by GetWeekType() because it's 0-indexed\r\n    let offset = GetWeekType() + 1 == this.class_.week ? 0 : twoWeeksInSeconds / 2\r\n    let offsetInMillis = offset * 1000\r\n    notificationDate = new Date(offsetInMillis + notificationDate.getTime())\r\n\r\n    let notificationDates = createEvenlySpacedTimeSequence(SEMESTER_MONTHS * 2, twoWeeksInSeconds, notificationDate)\r\n\r\n    // construct future notification objects for expo-notifications\r\n    let notificationObjects = notificationDates.map((notifDate) => {\r\n      let trigger: DateTriggerInput = {\r\n        date: notifDate,\r\n        channelId: this.notificationsService.notificationChannelId,\r\n      }\r\n\r\n      // format teacher name\r\n      let teacherName = this.class_.teacher\r\n      if (teacherName) {\r\n        teacherName =\r\n          typeof teacherName == \"string\" ? this.teachersTable.getFullNameBySurname(teacherName) : teacherName.join(\", \")\r\n      } else {\r\n        teacherName = \"\"\r\n      }\r\n\r\n      // pad hour and minute with 0 if they consist of only one digit\r\n      let hourPadded = this.hour < 10 ? \"0\" + this.hour : this.hour\r\n      let minutePadded = this.minute < 10 ? \"0\" + this.minute : this.minute\r\n\r\n      // construct notification object that will be passed to expo-notifications\r\n      let content: NotificationContentInput = {\r\n        title: this.class_.name,\r\n        body: teacherName,\r\n        subtitle: `[${hourPadded}:${minutePadded}] Пара починається`,\r\n      }\r\n\r\n      return { content: content, trigger: trigger }\r\n    })\r\n\r\n    return notificationObjects\r\n  }\r\n\r\n  constructWeeklyNotification(scheduleDay: ScheduleDay) {\r\n    // construct trigger object that will be passed to expo-notifications\r\n    let trigger: WeeklyTriggerInput = {\r\n      weekday: this.schedule.dayNames.indexOf(scheduleDay.name) + 1, // why do we add + 1 here? because weekday is 1-indexed, but dayNames is 0-indexed\r\n      hour: this.hour,\r\n      minute: this.minute,\r\n\r\n      repeats: true,\r\n      channelId: this.notificationsService.notificationChannelId,\r\n    }\r\n\r\n    // format teacher name\r\n    let teacherName = this.class_.teacher\r\n    if (teacherName) {\r\n      teacherName =\r\n        typeof teacherName == \"string\" ? this.teachersTable.getFullNameBySurname(teacherName) : teacherName.join(\", \")\r\n    } else {\r\n      teacherName = \"\"\r\n    }\r\n\r\n    // pad hour and minute with 0 if they consist of only one digit\r\n    let hourPadded = this.hour < 10 ? \"0\" + this.hour : this.hour\r\n    let minutePadded = this.minute < 10 ? \"0\" + this.minute : this.minute\r\n\r\n    // construct notification object that will be passed to expo-notifications\r\n    const weeklyNotif = {\r\n      content: {\r\n        title: this.class_.name,\r\n        body: teacherName,\r\n        subtitle: `[${hourPadded}:${minutePadded}] Пара починається`,\r\n      },\r\n      trigger: trigger,\r\n    }\r\n\r\n    return weeklyNotif\r\n  }\r\n}\r\n","import { DateTriggerInput, NotificationContentInput } from \"expo-notifications\"\r\nimport ScheduleModel from \"../models/ScheduleModel\"\r\nimport LocalNotificationsService from \"./LocalNotificationsService\"\r\nimport SettingsService from \"./SettingsService\"\r\nimport ClassNotificationBuilder from \"./ClassNotificationBuilder\"\r\nimport { isRunningInBrowser } from \"../utilities/utilities\"\r\n\r\n// TODO: Read about override keyword in TypeScript\r\n\r\n// singleton service. Main function is constructing and registering notifications for entire schedule\r\nexport default class ScheduleNotificationsService extends LocalNotificationsService {\r\n  onConfigureNotificationsForScheduleStart: null | (() => void) = null\r\n  onConfigureNotificationsForScheduleEnd: null | (() => void) = null\r\n\r\n  protected static instance: ScheduleNotificationsService\r\n\r\n  static async GetInstance(): Promise<ScheduleNotificationsService> {\r\n    if (!this.instance) {\r\n      this.instance = new ScheduleNotificationsService()\r\n      await this.instance.init()\r\n      console.log(`[${this.name}] service instance constructed successfully`)\r\n    }\r\n\r\n    return this.instance\r\n  }\r\n\r\n  async configureNotificationsForSchedule(schedule: ScheduleModel) {\r\n    console.log(`[configure notifications] configuring notifications for schedule ${schedule.name}`)\r\n    this.onConfigureNotificationsForScheduleStart?.call(this)\r\n\r\n    // get notifications service and settings service\r\n    const notificationsService = await LocalNotificationsService.GetInstance()\r\n    const settingsService = await SettingsService.GetInstance()\r\n\r\n    // check whether notifications are enabled\r\n    if (!isRunningInBrowser() && settingsService.notifyBeforeClass) {\r\n      // if notifications are enabled, then schedule notifications for each class\r\n      // make sure to not register duplicate notifications by either checking for duplicates or deleting all notifications before setting any\r\n      await notificationsService.cancelAllScheduledNotificationsAsync()\r\n\r\n      const configureDays = schedule.scheduleDays.map(async (day) => {\r\n        const configureDayClasses = day.classes.map(async (class_) => {\r\n          let notifBuilder = new ClassNotificationBuilder(\r\n            schedule,\r\n            class_,\r\n            notificationsService,\r\n            settingsService.notifyBeforeClassOffsetMinutes\r\n          )\r\n\r\n          if (class_.isBiweekly) {\r\n            let notifications = notifBuilder.constructBiweeklyNotificationsSequence(day)\r\n\r\n            await Promise.all(\r\n              notifications.map((notif) => {\r\n                return notificationsService.scheduleNotification(notif.content, notif.trigger)\r\n              })\r\n            )\r\n          } else {\r\n            let weeklyNotif = notifBuilder.constructWeeklyNotification(day)\r\n\r\n            return await notificationsService.scheduleNotification(weeklyNotif.content, weeklyNotif.trigger)\r\n          }\r\n        })\r\n\r\n        await Promise.all(configureDayClasses)\r\n      })\r\n\r\n      await Promise.all(configureDays)\r\n    }\r\n\r\n    this.onConfigureNotificationsForScheduleEnd?.call(this)\r\n  }\r\n}\r\n","export enum EditorStackRoutes {\r\n  EDITOR = \"Editor\",\r\n  SCHEDULE_CLASS_FORM = \"ScheduleClassForm\",\r\n}\r\n","export const NoClassesText = [\r\n  \"Пар немає\",\r\n  \"Чудовий день (бо пар нема)\",\r\n  \"Просили передати, що пар не буде\",\r\n  \"Пар не буде, сьогодні чілимо\",\r\n  \"Академ. вихідний\",\r\n]\r\n","import React, { useCallback, useContext, useEffect, useRef, useState } from \"react\"\r\nimport { Text, View, StyleSheet, ActivityIndicator } from \"react-native\"\r\nimport Card from \"../../shared/card\"\r\nimport { globalStyles, palette } from \"../../styles/global\"\r\nimport ScheduleModel, { ScheduleClass, ScheduleClassProps, ScheduleDay } from \"../../models/ScheduleModel\"\r\nimport _ from \"lodash\"\r\nimport ScheduleClassComponent from \"./ScheduleClass\"\r\nimport Separator from \"../../shared/Separator\"\r\nimport GetWeekType from \"../../utilities/getWeekType\"\r\nimport { Ionicons } from \"@expo/vector-icons\"\r\nimport { FlatList, TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport { useNavigation } from \"@react-navigation/native\"\r\nimport SwipeableItem, { useSwipeableItemParams } from \"react-native-swipeable-item\"\r\n// import { EditorStackRoutes } from \"../routes/editorStack\"\r\nimport UnderlayRightSide from \"../ScheduleEditorComponents/ScheduleClassUnderlay\"\r\nimport DraggableFlatList from \"react-native-draggable-flatlist\"\r\nimport AppText from \"../../shared/AppText\"\r\nimport { mapUkrWorkDayToEnWorkDay } from \"../../constants/Days\"\r\nimport ScheduleLoaderService from \"../../services/ScheduleLoaderService\"\r\nimport ScheduleNotificationsService from \"../../services/ScheduleNotificationsService\"\r\nimport SettingsService, { DisplayEmptyDaysMode } from \"../../services/SettingsService\"\r\nimport { EditorStackRoutes } from \"../../routes/EditorStackRoutes\"\r\nimport { SettingsContext } from \"../../contexts/settingsContext\"\r\nimport { NoClassesText } from \"../../constants/Descriptions\"\r\n\r\n// TODO: accelerate disengage time once an item gets dropped into new slot\r\n\r\nexport default function ScheduleDayComponent({\r\n  classesCollection,\r\n  scheduleObject,\r\n  dayName,\r\n  scheduleDay,\r\n  displayRoomNumber,\r\n  weekType = GetWeekType(),\r\n  fade,\r\n  isEditable = false,\r\n}: {\r\n  classesCollection: ScheduleClass[]\r\n  scheduleObject: ScheduleModel\r\n  dayName: string\r\n  scheduleDay: ScheduleDay\r\n  displayRoomNumber: boolean\r\n  weekType?: number\r\n  fade: boolean\r\n  isEditable?: boolean\r\n}): JSX.Element {\r\n  if (scheduleDay == undefined) {\r\n    return (\r\n      <View style={styles.scheduleDayCard}>\r\n        <Text style={globalStyles.dayNameHeader}>{dayName}</Text>\r\n        <View>\r\n          <View style={globalStyles.centered}>\r\n            <ActivityIndicator size=\"large\" color={palette.navigationBackground} />\r\n          </View>\r\n        </View>\r\n      </View>\r\n    )\r\n  }\r\n\r\n  const settings = useContext(SettingsContext)\r\n\r\n  const configureNotificationsCallback = useCallback(\r\n    _.debounce(async (updatedSchedule) => {\r\n      let scheduleNotificationService = await ScheduleNotificationsService.GetInstance()\r\n      scheduleNotificationService.configureNotificationsForSchedule(updatedSchedule)\r\n    }, 3000),\r\n    []\r\n  )\r\n\r\n  let navigation = useNavigation()\r\n\r\n  let [classes, setClasses] = useState<ScheduleClass[]>([])\r\n  let dayNameEnRef = useRef(mapUkrWorkDayToEnWorkDay(dayName).toLowerCase())\r\n\r\n  function saveEditedClasses(classes: ScheduleClass[]) {\r\n    console.log(\"saving edited classes\")\r\n    let updatedSchedule = scheduleObject\r\n    let classesWithoutPlaceholders = classes.filter((class_) => !class_.isSampleClass())\r\n\r\n    let thisDay = updatedSchedule.scheduleDays.find((day) => day.name == dayNameEnRef.current)\r\n    // construct new classes array with classes of other week preserved\r\n\r\n    let biweeklyClassesOfOtherWeek = thisDay!.classes.filter(\r\n      (class_) => class_.isBiweekly && class_.week != weekType + 1\r\n    )\r\n\r\n    thisDay!.classes = [...classesWithoutPlaceholders, ...biweeklyClassesOfOtherWeek]\r\n\r\n    ScheduleLoaderService.GetInstance().then((instance) => {\r\n      instance.dumpSchedule(updatedSchedule)\r\n    })\r\n\r\n    SettingsService.GetInstance().then((instance) => {\r\n      if (instance.notifyBeforeClass) {\r\n        configureNotificationsCallback(updatedSchedule)\r\n      }\r\n    })\r\n  }\r\n\r\n  // any time new updated classes collection prop is passed, add placeholders to it and update state\r\n  // it also initializes classes state on first render\r\n  useEffect(() => {\r\n    setClasses(addPlaceholders(classesCollection))\r\n  }, [classesCollection])\r\n\r\n  useEffect(() => {\r\n    console.log(\"mounting schedule day component\")\r\n  }, [])\r\n\r\n  function addPlaceholders(classes: ScheduleClass[]) {\r\n    if (!isEditable) {\r\n      return classes\r\n    }\r\n\r\n    let extendedContainer: ScheduleClass[] = [undefined, undefined, undefined, undefined, undefined, undefined]\r\n    extendedContainer = extendedContainer.map((_, idx) => {\r\n      let class_ = classes.find((class_) => class_.index == idx + 1)\r\n      const shouldCreatePlaceholderClass = class_ == undefined\r\n\r\n      if (shouldCreatePlaceholderClass) {\r\n        return ScheduleClass.GetPlaceholder(dayNameEnRef.current, idx + 1, weekType + 1)\r\n      } else {\r\n        return class_\r\n      }\r\n    })\r\n\r\n    return extendedContainer\r\n  }\r\n\r\n  // flat list doesn't suppress scroll events while nested inside ScrollView and is preferrable if component is not editable\r\n  const ListComponent = isEditable ? DraggableFlatList : FlatList\r\n\r\n  return (\r\n    <View key={dayName + weekType}>\r\n      <Text style={styles.dayNameHeader}>{dayName}</Text>\r\n      <View\r\n        style={[\r\n          styles.scheduleDayCard,\r\n          classes.length == 0 && settings?.displayEmptyDays == DisplayEmptyDaysMode.Darken\r\n            ? styles.fadedDayContainerView\r\n            : {},\r\n        ]}\r\n      >\r\n        <ListComponent\r\n          data={classes}\r\n          keyExtractor={(item) => item.index + \"\" + item.week}\r\n          onDragEnd={({ data }) => {\r\n            // reindex\r\n            data = data.map((class_, idx) => {\r\n              class_.index = idx + 1\r\n              return class_\r\n            })\r\n\r\n            // TODO: Refactor into one function\r\n            setClasses(data)\r\n            saveEditedClasses(data)\r\n          }}\r\n          ListEmptyComponent={() => {\r\n            return (\r\n              <AppText style={styles.noClassesText}>\r\n                {_.sample(NoClassesText)}\r\n              </AppText>\r\n            )\r\n          }}\r\n          scrollEnabled={false}\r\n          nestedScrollEnabled={false}\r\n          ItemSeparatorComponent={() => {\r\n            return <Separator width=\"97%\" color=\"rgba(217, 217, 217, 0.4)\" upperElement={true} lowerElement={true} /> // TODO: Refactor\r\n          }}\r\n          renderItem={({ item, drag, isActive }) => {\r\n            let class_ = item\r\n            let idx = item.index - 1\r\n\r\n            // normal class component\r\n            let scheduleClassComponent = (\r\n              <ScheduleClassComponent\r\n                displayRoomNumber={displayRoomNumber}\r\n                idx={idx}\r\n                key={idx + \"\" + class_.week}\r\n                scheduleClassInstance={class_}\r\n                isEditable={isEditable}\r\n                noTeacherText=\"Викладач\"\r\n                highlightAsOngoing={isActive}\r\n              />\r\n            )\r\n\r\n            const onDeleteButtonPressed = () => {\r\n              let filteredClasses = classes.filter((class_) => class_.index != idx + 1)\r\n              let filteredClassesWithPlaceholders = addPlaceholders(filteredClasses)\r\n              setClasses(filteredClassesWithPlaceholders)\r\n              saveEditedClasses(filteredClassesWithPlaceholders)\r\n            }\r\n\r\n            // editable class component\r\n            let editableScheduleClassWrapper = (\r\n              <SwipeableItem\r\n                key={idx + \"\" + class_.week}\r\n                // item={item}\r\n                renderUnderlayLeft={() => (\r\n                  <UnderlayRightSide\r\n                    onDeleteButtonPress={() => {\r\n                      onDeleteButtonPressed()\r\n                    }}\r\n                  />\r\n                )}\r\n                // renderUnderlayRight={() => <UnderlayLeft />}\r\n                snapPointsLeft={[50]} // snap points for right side underlay\r\n                snapPointsRight={[0]} // disable left side underlay\r\n                activationThreshold={10}\r\n              >\r\n                <TouchableOpacity\r\n                  onPress={(e) => {\r\n                    navigation.push(EditorStackRoutes.SCHEDULE_CLASS_FORM, {\r\n                      scheduleClass: class_,\r\n                      currentlyViewedWeek: weekType,\r\n                      onFormDataUpdated: (values: ScheduleClassProps) => {\r\n                        let updatedClasses = classes.map((class_) => {\r\n                          if (class_.index == idx + 1) {\r\n                            // process the values\r\n                            let teacher = values.teacher.split(\",\").map((t: string) => t.trim())\r\n                            let room = values.room.split(\",\").map((r: string) => r.trim())\r\n                            let isBiweekly =\r\n                              typeof values.isBiweekly == \"string\" ? JSON.parse(values.isBiweekly) : values.isBiweekly\r\n\r\n                            let wasBiweekly = class_.isBiweekly\r\n\r\n                            // if class wasn't biweekly and now it is, update week to currently viewed week\r\n                            if (!wasBiweekly && isBiweekly) {\r\n                              console.log(\"wasn't biweekly and now it is\")\r\n                              console.log(\"new weekType will be:\", weekType + 1)\r\n                              class_.isBiweekly = isBiweekly\r\n\r\n                              class_.setWeek(weekType + 1)\r\n                            }\r\n\r\n                            return new ScheduleClass(\r\n                              { ...class_, ...values, teacher, room, isBiweekly },\r\n                              dayNameEnRef.current\r\n                            )\r\n                          } else {\r\n                            return class_\r\n                          }\r\n                        })\r\n\r\n                        setClasses(updatedClasses)\r\n                        saveEditedClasses(updatedClasses)\r\n                      },\r\n                    })\r\n                  }}\r\n                  onLongPress={drag}\r\n                >\r\n                  {scheduleClassComponent}\r\n                </TouchableOpacity>\r\n              </SwipeableItem>\r\n            )\r\n\r\n            return <View>{isEditable ? editableScheduleClassWrapper : scheduleClassComponent}</View>\r\n          }}\r\n        />\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  noClassesText: {\r\n    fontSize: 14,\r\n    marginVertical: 10,\r\n    justifyContent: \"center\",\r\n    alignSelf: \"center\",\r\n\r\n    fontFamily: \"montserrat-600\",\r\n\r\n    color: palette.grayedOut,\r\n  },\r\n\r\n  fadedDayContainerView: {\r\n    opacity: 0.5,\r\n  },\r\n\r\n  dayNameHeader: {\r\n    fontFamily: \"montserrat-600\",\r\n    fontSize: 14,\r\n    ...globalStyles.sectionHeader,\r\n    color: palette.text,\r\n  },\r\n\r\n  scheduleDayCard: {\r\n    marginTop: 5,\r\n    marginBottom: 15,\r\n    marginHorizontal: 5,\r\n    borderRadius: 6,\r\n    backgroundColor: \"white\",\r\n\r\n    paddingVertical: 2,\r\n    paddingHorizontal: 5,\r\n\r\n    elevation: 1,\r\n    shadowOffset: { width: 1, height: 1 },\r\n    shadowColor: \"#333\",\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 2,\r\n  },\r\n\r\n  row: {\r\n    flexDirection: \"row\",\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: 15,\r\n  },\r\n})\r\n","import React, { useEffect } from \"react\"\r\nimport { View, Text, StyleSheet, Modal, Pressable, ScrollView, useWindowDimensions } from \"react-native\"\r\nimport { Button, Input } from \"react-native-elements\"\r\nimport { globalStyles, palette } from \"../styles/global\"\r\nimport { TextInput, TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport { Ionicons } from \"@expo/vector-icons\"\r\nimport AppText from \"../shared/AppText\"\r\n\r\n// TODO: fix modal content overflowing when keyboard is shown\r\n// TODO: refactor onClose to something more understandable\r\n\r\nexport default function OptionPickerModal({\r\n  hasSearchBar = true,\r\n  headerText = \"\",\r\n  isOpen = false,\r\n  displaySeparators = true,\r\n  initialOptions,\r\n  initialSelectedOption,\r\n  renderItem,\r\n  closeModal: closeModalCallback,\r\n  onSelected,\r\n  optionIcon,\r\n  isOptionSelectable = true,\r\n}: {\r\n  hasSearchBar?: boolean\r\n  headerText?: string\r\n  isOpen: boolean\r\n  displaySeparators?: boolean\r\n  initialOptions: string[]\r\n  initialSelectedOption: string\r\n  renderItem?: (option: string, idx: number) => JSX.Element\r\n  closeModal: () => void\r\n  onSelected: (option: string) => void\r\n  optionIcon?: JSX.Element\r\n  isOptionSelectable?: boolean\r\n}) {\r\n  const { height, width } = useWindowDimensions()\r\n\r\n  const [options, setOptions] = React.useState<string[]>(initialOptions)\r\n  const [searchQuery, setSearchQuery] = React.useState<string>(\"\")\r\n\r\n  const filteredOptions = hasSearchBar\r\n    ? options.filter((option) => JSON.stringify(option).toLowerCase().includes(searchQuery.toLowerCase()))\r\n    : options\r\n\r\n  const [selectedOption, setSelectedOption] = React.useState<string>(initialSelectedOption)\r\n\r\n  console.log(\"selectedOption in schedule picker modal:\", selectedOption)\r\n\r\n  const closeModal = () => {\r\n    setSearchQuery(\"\")\r\n    closeModalCallback()\r\n    console.log(\"cleared search query and closed schedule picker modal\")\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      console.log(\"unmounting schedule picker modal\")\r\n      setSearchQuery(\"\")\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <Modal animationType=\"fade\" transparent={true} style={styles.modal} visible={isOpen}>\r\n      <View style={styles.overlay} />\r\n      <View style={styles.modalContentContainer}>\r\n        <View style={{ width: \"100%\" }}>\r\n          <Text style={styles.header}>{headerText ?? \"\"}</Text>\r\n          <View style={[styles.horizontalFlex, styles.searchBarContainer, !hasSearchBar ? globalStyles.noDisplay : {}]}>\r\n            <Ionicons name=\"search-outline\" size={14} style={{ marginHorizontal: 5 }} color={palette.grayedOut} />\r\n            <TextInput style={styles.searchBar} onChangeText={setSearchQuery} placeholder=\"Пошук групи\" />\r\n          </View>\r\n        </View>\r\n        <ScrollView style={{ width: \"100%\", height: 0.4 * height }}>\r\n          {filteredOptions.map((option, idx) => (\r\n            <View key={idx}>\r\n              {renderItem ? (\r\n                renderItem(option, idx)\r\n              ) : (\r\n                <Pressable\r\n                  onPress={() => {\r\n                    if (!isOptionSelectable) return\r\n\r\n                    setSelectedOption(option)\r\n                    onSelected(option)\r\n                    closeModal()\r\n                  }}\r\n                >\r\n                  <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n                    <View\r\n                      style={{\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                      }}\r\n                    >\r\n                      {optionIcon}\r\n\r\n                      <AppText style={{ ...styles.option, ...(selectedOption == option ? styles.selectedOption : {}) }}>\r\n                        {option}\r\n                      </AppText>\r\n                    </View>\r\n\r\n                    {selectedOption == option ? (\r\n                      <Ionicons style={styles.checkIcon} name=\"checkmark-outline\" color={\"#1C5D8FCC\"} size={24} />\r\n                    ) : (\r\n                      <View />\r\n                    )}\r\n                  </View>\r\n                </Pressable>\r\n              )}\r\n\r\n              {displaySeparators && idx != options.length - 1 ? <View style={styles.separator}></View> : <View />}\r\n            </View>\r\n          ))}\r\n        </ScrollView>\r\n\r\n        <Pressable onPress={() => closeModal()}>\r\n          <View style={styles.closeButton}>\r\n            <Text style={styles.closeButtonText}>Закрити</Text>\r\n          </View>\r\n        </Pressable>\r\n      </View>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  modal: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"red\", // not gonna work cause it's transparent\r\n  },\r\n\r\n  horizontalFlex: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  searchBarContainer: {\r\n    marginLeft: -4,\r\n    marginVertical: 10,\r\n    backgroundColor: \"#F2F2F2\",\r\n    borderRadius: 7,\r\n    padding: 5,\r\n    paddingVertical: 2,\r\n  },\r\n\r\n  searchBar: {\r\n    fontSize: 12,\r\n    flex: 1,\r\n    fontFamily: \"montserrat-500\",\r\n  },\r\n\r\n  modalContentContainer: {\r\n    ...globalStyles.modalContentContainer,\r\n    // top: \"5%\",\r\n  },\r\n\r\n  overlay: {\r\n    backgroundColor: \"rgba(0, 0, 0, 0.25)\",\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n\r\n  option: {\r\n    fontFamily: \"montserrat-500\",\r\n    color: palette.text,\r\n    width: \"100%\",\r\n    marginVertical: 10,\r\n  },\r\n\r\n  selectedOption: {\r\n    fontFamily: \"montserrat-600\",\r\n  },\r\n\r\n  separator: {\r\n    height: 1, // haha\r\n    width: \"100%\",\r\n    marginVertical: 6,\r\n    backgroundColor: \"#E6E6E6\",\r\n  },\r\n\r\n  header: {\r\n    fontFamily: \"montserrat-bold\",\r\n    fontSize: 20,\r\n    marginBottom: 10,\r\n    color: palette.text,\r\n  },\r\n\r\n  closeButton: {\r\n    backgroundColor: \"#FFFFFF\",\r\n    borderWidth: 1,\r\n    borderColor: \"#E6E6E6\",\r\n    padding: 10,\r\n    paddingHorizontal: 30,\r\n    marginTop: 10,\r\n    // borderRadius: 10,\r\n\r\n    shadowColor: \"rgba(0,0,0,1)\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 1,\r\n    },\r\n    elevation: 0.2,\r\n    shadowOpacity: 0.0,\r\n    shadowRadius: 0,\r\n    borderRadius: 10,\r\n  },\r\n\r\n  closeButtonText: {\r\n    fontFamily: \"montserrat-600\",\r\n    color: palette.grayedOut,\r\n    fontSize: 16,\r\n  },\r\n\r\n  checkIcon: {\r\n    position: \"absolute\",\r\n    right: 0,\r\n  },\r\n})\r\n","import { View, Text, StyleSheet, ImageBackground } from \"react-native\"\r\nimport AppText from \"../../shared/AppText\"\r\nimport { previewImages, palette, globalStyles, previewImagesFull } from \"../../styles/global\"\r\nimport { isRunningInBrowser } from \"../../utilities/utilities\"\r\n\r\n// Import Swiper React components\r\nimport { SwiperSlide } from \"swiper/react\"\r\n\r\n// Import Swiper styles\r\nimport \"swiper/css\"\r\n\r\n// TODO: integrate with native carousel (it uses cropped preview images)\r\n// TODO: get full size screenshots\r\n// TODO: adapt settings page to web\r\n\r\nexport function getPageOne() {\r\n  const pageOne = (\r\n    <SwiperSlide style={styles.page} key=\"1\">\r\n      <View style={styles.imageContainer}>\r\n        <img style={styles.previewImage} src={previewImagesFull.schedule} />\r\n      </View>\r\n      <AppText style={styles.pageTitle}>Розклад</AppText>\r\n      <View style={styles.pageDescriptionText}>\r\n        <AppText style={styles.centeredDescriptionText}>\r\n          Розклад занять в академії чергується тижнями: чисельник, знаменник.\r\n        </AppText>\r\n        <br />\r\n        <AppText style={styles.centeredDescriptionText}>\r\n          Якщо цього тижня – чисельник, то перемикач <Text style={{ color: palette.navigationBackground }}>Чис</Text>{\" \"}\r\n          буде активним.\r\n        </AppText>\r\n      </View>\r\n    </SwiperSlide>\r\n  )\r\n\r\n  return pageOne\r\n}\r\n\r\nexport function getPageTwo() {\r\n  const pageTwo = (\r\n    <SwiperSlide style={styles.page} key=\"2\">\r\n      <View style={{ ...styles.imageContainer }}>\r\n        <img style={styles.previewImage} src={previewImagesFull.reglamentPreview} />\r\n      </View>\r\n      <AppText style={styles.pageTitle}>Регламент</AppText>\r\n      <View style={styles.pageDescriptionText}>\r\n        <AppText style={styles.centeredDescriptionText}>\r\n          Звичайний регламент... Але з{\" \"}\r\n          <AppText style={{ color: palette.navigationBackground }}>підсвіткою поточної пари </AppText>✨\r\n        </AppText>\r\n      </View>\r\n    </SwiperSlide>\r\n  )\r\n\r\n  return pageTwo\r\n}\r\n\r\nexport function getPageThree() {\r\n  const pageThree = (\r\n    <SwiperSlide style={styles.page} key=\"3\">\r\n      <View style={styles.imageContainer}>\r\n        <img style={styles.previewImage} src={previewImagesFull.editorPreview} />\r\n      </View>\r\n      <AppText style={styles.pageTitle}>Редактор</AppText>\r\n      <View style={styles.pageDescriptionText}>\r\n        <AppText style={styles.centeredDescriptionText}>\r\n          Дозволяє виправити чи змінити розклад за власними побажаннями.\r\n        </AppText>\r\n      </View>\r\n    </SwiperSlide>\r\n  )\r\n\r\n  return pageThree\r\n}\r\n\r\nexport function getPageFour() {\r\n  const pageFour = (\r\n    <SwiperSlide style={styles.page} key=\"4\">\r\n      <View style={styles.imageContainer}>\r\n        <img style={styles.previewImage} src={previewImagesFull.settingsPreview} />\r\n      </View>\r\n      <AppText style={styles.pageTitle}>Налаштування</AppText>\r\n      <View style={styles.pageDescriptionText}>\r\n        <AppText style={styles.centeredDescriptionText}>Вигляд розкладу та сповіщення можна налаштувати тут.</AppText>\r\n      </View>\r\n    </SwiperSlide>\r\n  )\r\n\r\n  return pageFour\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  page: {\r\n    // height: \"80vh\",\r\n    // width: \"100vw\",\r\n    // alignSelf: \"stretch\",\r\n\r\n    // marginHorizontal: \"5%\",\r\n    // marginLeft: \"5%\",\r\n    marginBottom: 20,\r\n    marginHorizontal: 20,\r\n\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n\r\n  pageTitle: {\r\n    fontSize: 24,\r\n    color: palette.navigationBackground,\r\n    textAlign: \"center\",\r\n    marginVertical: isRunningInBrowser() ? 20 : 10,\r\n    marginTop: isRunningInBrowser() ? 40 : 20,\r\n  },\r\n\r\n  imageContainer: {\r\n    borderRadius: 10,\r\n    height: \"55%\",\r\n    // width: \"100%\",\r\n    // flex: 1,\r\n    alignSelf: \"stretch\",\r\n\r\n    overflow: \"hidden\",\r\n    flexDirection: \"row\",\r\n\r\n    // backgroundColor: \"orange\",\r\n  },\r\n\r\n  previewImage: {\r\n    borderRadius: 10,\r\n\r\n    width: \"100%\",\r\n    height: \"max-content\",\r\n  },\r\n\r\n  centeredDescriptionText: {\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  pageDescriptionText: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n})\r\n","import React, { useEffect, useRef, useState } from \"react\"\r\n\r\nimport { View, Button, StyleSheet, Text, Image, TouchableOpacity, ActivityIndicator } from \"react-native\"\r\nimport { palette, globalStyles, previewImages } from \"../../styles/global\"\r\nimport AppText from \"../../shared/AppText\"\r\n\r\n// Import Swiper React components\r\nimport { Swiper, SwiperSlide, useSwiper } from \"swiper/react\"\r\n\r\n// Import Swiper styles\r\nimport \"swiper/css\"\r\n\r\nimport _ from \"lodash\"\r\nimport { setStatusBarHidden } from \"expo-status-bar\"\r\nimport OptionPickerModal from \"../../components/OptionPickerModal\"\r\nimport { DrawerRoutes } from \"../../routes/DrawerRoutes\"\r\nimport SettingsService from \"../../services/SettingsService\"\r\nimport { ensureExtension, ensureNoExtension, isLandscapeWeb } from \"../../utilities/utilities\"\r\nimport { useNavigation } from \"@react-navigation/native\"\r\nimport ScheduleLoaderService from \"../../services/ScheduleLoaderService\"\r\nimport { getPageFour, getPageOne, getPageThree, getPageTwo } from \"./Pages\"\r\nimport { Swiper as SwiperType } from \"swiper/types\"\r\n\r\n// TODO: move shared logic to a separate file. As of now, lots if it is a copypaste from IntroductoryCarousel.native.tsx\r\n// TODO: fix navigation falling out of viewport on firefox\r\n\r\n// TODO: get replace document height with viewport height\r\nconst documentHeight = window.innerHeight\r\nconst swiperWidth = isLandscapeWeb() ? `${documentHeight / 2}px` : \"95%\"\r\n\r\nexport default function InroductoryCarouselScreen({ onClose }: { onClose?: () => void }) {\r\n  const [currentPage, setCurrentPage] = React.useState(0)\r\n  const swiperRef = useRef<SwiperType>()\r\n\r\n  let [isVisible, setIsVisible] = useState(true)\r\n  let [isReady, setIsReady] = useState(false)\r\n\r\n  let [schedulePickerModalVisible, setSchedulePickerModalVisible] = useState(false)\r\n\r\n  let [schedulePickerData, setSchedulePickerData] = useState<string[]>([])\r\n\r\n  const navigation = useNavigation()\r\n\r\n  const lastPageIndex = 3\r\n\r\n  useEffect(() => {\r\n    async function init() {\r\n      let scheduleLodaderInstance = await ScheduleLoaderService.GetInstance()\r\n\r\n      let schedulePickerData = scheduleLodaderInstance.scheduleFiles.map((f) => ensureNoExtension(f.filename, \".json\"))\r\n      setSchedulePickerData(schedulePickerData)\r\n\r\n      setIsReady(true)\r\n    }\r\n\r\n    init()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (swiperRef.current) {\r\n      swiperRef.current.slideTo(currentPage)\r\n    }\r\n  }, [currentPage])\r\n\r\n  if (!isReady) {\r\n    return (\r\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\r\n        <ActivityIndicator size=\"large\" color={palette.navigationBackground} />\r\n      </View>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <View style={{ ...styles.overlay }}>\r\n      <View style={styles.paginationCircles}>\r\n        {_.times(lastPageIndex + 1, (i) => (\r\n          <View key={i} style={[styles.circle, currentPage == i ? styles.circleActive : {}]} />\r\n        ))}\r\n      </View>\r\n\r\n      <Swiper\r\n        initialSlide={currentPage}\r\n        style={{ display: \"flex\", width: swiperWidth, flex: 1 }}\r\n        onSwiper={(swiper) => (swiperRef.current = swiper)}\r\n        onSlideChange={(swiper) => {\r\n          setCurrentPage(swiper.activeIndex)\r\n        }}\r\n      >\r\n        {getPageOne()}\r\n        {getPageTwo()}\r\n\r\n        {getPageThree()}\r\n        {getPageFour()}\r\n      </Swiper>\r\n      {currentPage == 0 ? (\r\n        <View style={[styles.pagerNavigation, { justifyContent: \"center\" }]}>\r\n          <TouchableOpacity\r\n            style={[styles.navigationButton, { width: 150 }]}\r\n            onPress={() => {\r\n              setSchedulePickerModalVisible(true)\r\n            }}\r\n          >\r\n            <AppText\r\n              accessibilityLabel=\"selectSchedule\"\r\n              style={{ color: palette.navigationBackground, fontFamily: \"montserrat-600\" }}\r\n            >\r\n              Обрати розклад\r\n            </AppText>\r\n          </TouchableOpacity>\r\n          <OptionPickerModal\r\n            headerText=\"Вибери свою групу\"\r\n            isOpen={schedulePickerModalVisible}\r\n            initialOptions={schedulePickerData}\r\n            initialSelectedOption={\"\"}\r\n            closeModal={() => setSchedulePickerModalVisible(false)}\r\n            onSelected={(selected) => {\r\n              SettingsService.GetInstance().then((i) => {\r\n                i.currentScheduleName = ensureExtension(selected, \".json\")\r\n                i.saveToStorage()\r\n\r\n                let newCurrentPage = _.clamp(currentPage + 1, 0, lastPageIndex)\r\n                setCurrentPage(newCurrentPage)\r\n              })\r\n            }}\r\n          />\r\n        </View>\r\n      ) : (\r\n        <View style={styles.pagerNavigation}>\r\n          <TouchableOpacity\r\n            style={[styles.navigationButton, styles.backButton]}\r\n            onPress={() => {\r\n              let newCurrentPage = _.clamp(currentPage - 1, 0, 999)\r\n\r\n              setCurrentPage(newCurrentPage)\r\n            }}\r\n          >\r\n            <AppText\r\n              style={{ color: palette.navigationBackground, fontFamily: \"montserrat-600\", color: palette.grayedOut }}\r\n            >\r\n              Назад\r\n            </AppText>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            style={styles.navigationButton}\r\n            onPress={() => {\r\n              let isCloseButton = currentPage == lastPageIndex\r\n\r\n              if (isCloseButton) {\r\n                setStatusBarHidden(false, \"fade\")\r\n                setIsVisible(false)\r\n                onClose?.()\r\n                navigation.navigate(DrawerRoutes.VIEWER)\r\n              }\r\n\r\n              let newCurrentPage = _.clamp(currentPage + 1, 0, lastPageIndex)\r\n              setCurrentPage(newCurrentPage)\r\n            }}\r\n          >\r\n            <AppText style={{ color: palette.navigationBackground, fontFamily: \"montserrat-600\" }}>\r\n              {currentPage != lastPageIndex ? \"Далі\" : \"Закрити\"}\r\n            </AppText>\r\n          </TouchableOpacity>\r\n        </View>\r\n      )}\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  carouselContainer: {\r\n    backgroundColor: \"#F5F5F5\",\r\n    // backgroundColor: \"red\",\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    flex: 1,\r\n    zIndex: 9999,\r\n\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  container: {\r\n    flex: 1,\r\n    height: \"100%\",\r\n  },\r\n\r\n  viewPager: {\r\n    flex: 1,\r\n    padding: 0,\r\n    marginHorizontal: 30,\r\n  },\r\n  page: {\r\n    // height: \"100%\",\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  paginationCircles: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginVertical: 20,\r\n\r\n    width: \"100%\",\r\n  },\r\n\r\n  circle: {\r\n    width: 5,\r\n    height: 5,\r\n    margin: 5,\r\n    borderRadius: 123,\r\n    backgroundColor: \"#D9D9D9\",\r\n    flexDirection: \"row\",\r\n  },\r\n\r\n  circleActive: {\r\n    backgroundColor: \"#7B7B7B\",\r\n  },\r\n\r\n  pageBody: {\r\n    marginBottom: 20,\r\n    // flex: 1,\r\n    // height: \"100%\",\r\n  },\r\n\r\n  overlay: {\r\n    backgroundColor: \"#F5F5F5\",\r\n    // backgroundColor: \"red\",\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    flex: 1,\r\n    zIndex: 9998,\r\n  },\r\n\r\n  pagerNavigation: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: 20,\r\n    alignSelf: \"center\",\r\n    width: swiperWidth,\r\n  },\r\n\r\n  pageTitle: {\r\n    fontSize: 24,\r\n    color: palette.navigationBackground,\r\n    textAlign: \"center\",\r\n    marginVertical: 10,\r\n    marginTop: 20,\r\n  },\r\n\r\n  imageContainer: {\r\n    borderRadius: 10,\r\n    height: \"65%\",\r\n    maxHeight: \"65%\",\r\n    width: \"90%\",\r\n    // backgroundColor: \"green\",\r\n\r\n    overflow: \"auto\",\r\n\r\n    // borderColor: palette.navigationBackground,\r\n    // borderWidth: 1,\r\n    // borderColor: palette.grayishBlue,\r\n\r\n    // elevation: 0,\r\n    // shadowOffset: { width: 1, height: 1 },\r\n    // shadowColor: palette.navigationBackground,\r\n    // shadowOpacity: 0.3,\r\n    // shadowRadius: 2,\r\n\r\n    alignItems: \"flex-start\",\r\n    justifyContent: \"flex-start\",\r\n    flexDirection: \"row\",\r\n  },\r\n\r\n  previewImage: {\r\n    borderRadius: 10,\r\n    // borderColor: palette.backgroundLight,\r\n\r\n    // backgroundColor: palette.navigationBackground,\r\n\r\n    // height: \"100%\",\r\n    // width: \"100%\",\r\n\r\n    // resizeMode: \"cover\" is the default\r\n    // resizeMode: \"contain\",\r\n\r\n    // alignSelf: \"flex-start\",\r\n    // alignItems: \"flex-start\",\r\n    // justifyContent: \"flex-start\",\r\n\r\n    // flexDirection: \"column\",\r\n  },\r\n\r\n  halfImageContainer: {\r\n    height: \"30%\",\r\n  },\r\n\r\n  navigationButton: {\r\n    ...globalStyles.navigationButton,\r\n  },\r\n\r\n  backButton: {\r\n    borderColor: palette.grayedOut,\r\n  },\r\n\r\n  forwardButton: {\r\n    borderColor: palette.navigationBackground,\r\n    borderWidth: 1,\r\n  },\r\n\r\n  centeredDescriptionText: {\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  pageDescriptionText: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n})\r\n","import React from \"react\"\r\nimport { StyleSheet, Text, View, Image, Pressable, ImageBackground } from \"react-native\"\r\nimport { MaterialIcons } from \"@expo/vector-icons\"\r\nimport { SafeAreaView } from \"react-native-safe-area-context\"\r\nimport { globalStyles, palette } from \"../../styles/global\"\r\nimport GetWeekType, { WeekType } from \"../../utilities/getWeekType\"\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport { useNavigation } from \"@react-navigation/native\"\r\nimport { ExecutionEnvironment, NativeConstants, Constants, PlatformManifest, AndroidManifest } from \"expo-constants\"\r\nimport constants from \"expo-constants\"\r\n\r\n// TODO: Dry up. I simply copypasted this code from Header.tsx\r\n// TODO: Display activity indicator during changing week type\r\n\r\nexport default function ScheduleHeader({\r\n  title,\r\n  onWeekTypeChanged,\r\n}: {\r\n  title: string\r\n  onWeekTypeChanged: (weekType: WeekType) => void\r\n}) {\r\n  const navigation_ = useNavigation()\r\n\r\n  const [weekType, setWeekType] = React.useState<WeekType>(GetWeekType())\r\n  const weekTypeInUkrainian = weekType === WeekType.Nominator ? \"Чисельник\" : \"Знаменник\"\r\n  console.log(\"[Schedule Header] weekType: \", weekType)\r\n  console.log(\"[Schedule Header] weekType in Ukrainian: \", weekTypeInUkrainian)\r\n\r\n  // extract current screen name from navigation state\r\n  const headerText = title.split(\".\")[0]\r\n  return (\r\n    <SafeAreaView style={styles.header}>\r\n      <View style={styles.headerContentContainer}>\r\n        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n          <TouchableOpacity>\r\n            <MaterialIcons\r\n              onPress={() => navigation_.openDrawer()}\r\n              name=\"menu\"\r\n              size={24}\r\n              style={globalStyles.navIcon}\r\n            />\r\n          </TouchableOpacity>\r\n\r\n          <Text style={styles.headerText}>{headerText}</Text>\r\n        </View>\r\n        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n          <View style={[{ flexDirection: \"row\", alignItems: \"center\", marginRight: 12 }]}>\r\n            <View\r\n              style={[\r\n                styles.weekTextContainer,\r\n                weekTypeInUkrainian == \"Чисельник\" ? styles.selectedContainer : {},\r\n                { marginRight: 5 },\r\n              ]}\r\n            >\r\n              <Text\r\n                style={[styles.weekTypeText, weekTypeInUkrainian == \"Чисельник\" ? styles.selectedText : {}]}\r\n                onPress={() => {\r\n                  onWeekTypeChanged(0)\r\n                  setWeekType(0)\r\n                }}\r\n              >\r\n                Чис\r\n              </Text>\r\n            </View>\r\n\r\n            <View\r\n              style={[styles.weekTextContainer, weekTypeInUkrainian == \"Знаменник\" ? styles.selectedContainer : {}]}\r\n            >\r\n              <Text\r\n                onPress={() => {\r\n                  // debugger\r\n                  onWeekTypeChanged(1)\r\n                  setWeekType(1)\r\n                }}\r\n                style={[styles.weekTypeText, weekTypeInUkrainian == \"Знаменник\" ? styles.selectedText : {}]}\r\n              >\r\n                Знам\r\n              </Text>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </SafeAreaView>\r\n  )\r\n}\r\nconst baseStyles = StyleSheet.create({\r\n  text: {\r\n    color: \"white\",\r\n    fontFamily: \"century-gothic\",\r\n  },\r\n})\r\n\r\nconst styles = StyleSheet.create({\r\n  header: {\r\n    paddingVertical: 15,\r\n    width: \"100%\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#1C5D8F\",\r\n  },\r\n\r\n  backroundImage: {\r\n    width: \"100%\",\r\n  },\r\n\r\n  headerText: {\r\n    fontSize: 20,\r\n    color: \"#333\",\r\n    color: \"white\",\r\n    fontFamily: \"century-gothic\",\r\n  },\r\n  sideMenuIcon: {\r\n    color: \"white\",\r\n    marginHorizontal: 16,\r\n    marginRight: 10,\r\n    zIndex: 8888,\r\n  },\r\n\r\n  headerContentContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    width: \"100%\",\r\n  },\r\n\r\n  currentlyViewedDay: {\r\n    fontSize: 14,\r\n    ...baseStyles.text,\r\n    marginLeft: 10,\r\n    marginHorizontal: 16,\r\n  },\r\n\r\n  weekTypeText: {\r\n    fontSize: 16,\r\n    ...baseStyles.text,\r\n    // marginHorizontal: 16,\r\n  },\r\n\r\n  weekTextContainer: {\r\n    paddingHorizontal: 5,\r\n    paddingVertical: 4,\r\n  },\r\n\r\n  selectedContainer: {\r\n    // fontWeight: \"bold\",\r\n    // fontSize: 17,\r\n    // marginHorizontal: 15,\r\n    borderRadius: 5,\r\n    backgroundColor: \"white\",\r\n  },\r\n\r\n  selectedText: {\r\n    color: palette.navigationBackground,\r\n  },\r\n})\r\n","import React from \"react\"\r\n\r\nimport { useCallback, useRef, useState } from \"react\"\r\nimport { View, StyleSheet, ActivityIndicator, ToastAndroid, Image } from \"react-native\"\r\nimport { editorImages, globalStyles, palette } from \"../styles/global\"\r\n\r\nimport ScheduleDayComponent from \"../components/ScheduleComponents/ScheduleDay\"\r\nimport { useEffect } from \"react\"\r\nimport SettingsService, { DisplayEmptyDaysMode } from \"../services/SettingsService\"\r\nimport ScheduleModel from \"../models/ScheduleModel\"\r\n\r\nimport { useErrorBoundary } from \"react-error-boundary\"\r\nimport { ScrollView } from \"react-native-gesture-handler\"\r\nimport _ from \"lodash\"\r\nimport { workDays } from \"../constants/Days\"\r\nimport ScheduleNotificationsService from \"../services/ScheduleNotificationsService\"\r\nimport ScheduleLoaderService, { ScheduleFile } from \"../services/ScheduleLoaderService\"\r\nimport { SettingsContext } from \"../contexts/settingsContext\"\r\nimport { ensureExtension, ensureNoExtension, isRunningInBrowser } from \"../utilities/utilities\"\r\nimport IntroductoryCarousel from \"./IntroductoryCarousel/IntroductoryCarousel\"\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\"\r\nimport GetWeekType, { WeekType } from \"../utilities/getWeekType\"\r\nimport { useFocusEffect, useNavigation } from \"@react-navigation/native\"\r\nimport AppText from \"../shared/AppText\"\r\nimport ScheduleHeader from \"../components/ScheduleComponents/ScheduleHeader\"\r\nimport { Event } from \"../constants/Events\"\r\n\r\n// TODO: scroll to current day on mount only instead of doing so on every rerender?\r\n\r\nexport default function ScheduleScreen({ isEditable = false }: { isEditable: boolean }) {\r\n  // [web] a workaround to render drawer menu content without explicitly opening it\r\n\r\n  if (isRunningInBrowser()) {\r\n    const navigation = useNavigation()\r\n    navigation.openDrawer()\r\n    navigation.closeDrawer()\r\n  }\r\n\r\n  // const { showBoundary } = useErrorBoundary()\r\n  const todayIndex = _.clamp(new Date().getDay() - 1, 0, 4)\r\n\r\n  // state for unconditional rerendering\r\n  const [state, setState] = useState({})\r\n  const [isFirstTimeLaunch, setIsFirstTimeLaunch] = useState<string | null>(\"false\") // async storage can't store anything other than strings\r\n\r\n  let scheduleRef = useRef<ScheduleModel | null>(null)\r\n  let scheduleFileRef = useRef<ScheduleFile | null>(null)\r\n  let settingsServiceRef = useRef<SettingsService>(null)\r\n\r\n  let scrollViewContainerRef = useRef<ScrollView | null>(null)\r\n\r\n  const [scheduleLoaded, setScheduleLoaded] = useState(false)\r\n  const [scheduleName, setScheduleName] = useState(\"\")\r\n  const [dataSourceCords, setDataSourceCords] = useState<any[]>([])\r\n\r\n  const scheduleNameStateRef = useRef<string>()\r\n  scheduleNameStateRef.current = scheduleName\r\n\r\n  const [weekType, setWeekType] = React.useState<WeekType>(GetWeekType())\r\n\r\n  const onSettingsUpdated = useCallback(\r\n    async (settingsService: SettingsService) => {\r\n      // if schedule didn't change then there is nothing to do here\r\n      console.log(\" - - - deciding whether to update schedule or not - - -\")\r\n      let settingsScheduleName = ensureNoExtension(settingsService.currentScheduleName, \".json\")\r\n      let currentScheduleName = ensureNoExtension(scheduleNameStateRef.current, \".json\")\r\n      console.log(\"settings schedule name: \", settingsScheduleName)\r\n      console.log(\"schedule name: \", currentScheduleName)\r\n\r\n      const shouldUpdateSchedule = settingsScheduleName !== currentScheduleName\r\n      console.log(\" - - -\")\r\n\r\n      if (shouldUpdateSchedule) {\r\n        // construct new schedule object and setState for schedule name\r\n        const newSchedule = new ScheduleModel(\"groupname_groupyear\", \"groupname\", 5)\r\n        await newSchedule.getScheduleFromScheduleLoader(settingsService.currentScheduleName)\r\n\r\n        // configure notifications for schedule, but only if it's not in editor\r\n        if (!isEditable) {\r\n          const notifService = await ScheduleNotificationsService.GetInstance()\r\n          await notifService.configureNotificationsForSchedule(newSchedule)\r\n        }\r\n\r\n        scheduleRef.current = newSchedule\r\n        let scheduleLoaderService = await ScheduleLoaderService.GetInstance()\r\n        let updatedSchedule = scheduleLoaderService.getScheduleFileByFileName(\r\n          ensureExtension(settingsService.currentScheduleName, \".json\")\r\n        )\r\n        // TODO: Refactor XD\r\n        scheduleFileRef.current = _.cloneDeep(updatedSchedule) ?? null\r\n\r\n        setScheduleName(settingsService.currentScheduleName)\r\n      } else {\r\n        // assume that something else changed and we need to rerender to reflect those changes\r\n        // (in editor, everything is always unfolded and there is no need to update)\r\n        if (isEditable) return\r\n        setState({})\r\n      }\r\n    },\r\n    [scheduleName]\r\n  )\r\n\r\n  useEffect(() => {\r\n    async function onMount() {\r\n      let settingsService = await SettingsService.GetInstance()\r\n\r\n      console.log(\"[Schedule.tsx] settingsService instance: \", settingsService)\r\n\r\n      let scheduleLoaderInstance = await ScheduleLoaderService.GetInstance()\r\n\r\n      settingsServiceRef.current = settingsService\r\n\r\n      let schedule = new ScheduleModel(\"groupname_groupyear\", \"groupname\", 5)\r\n\r\n      // check whether the schedule that settings service is referencing exists. Otherwise load first available schedule\r\n      let scheduleFile = scheduleLoaderInstance.getScheduleFileByFileName(settingsService.currentScheduleName)\r\n      let firstScheduleFile = scheduleLoaderInstance.scheduleFiles[0]\r\n\r\n      scheduleFileRef.current = _.cloneDeep(scheduleFile ?? firstScheduleFile)\r\n\r\n      await schedule.getScheduleFromScheduleLoader(\r\n        scheduleFile ? settingsService.currentScheduleName : firstScheduleFile.filename\r\n      )\r\n\r\n      // configure notifications for schedule, but only if it's not in editor\r\n      if (!isEditable) {\r\n        ScheduleNotificationsService.GetInstance().then((i) => {\r\n          console.log(\"will call configureNotificationsForSchedule on schedule: \", schedule.name)\r\n          i.configureNotificationsForSchedule(schedule)\r\n        })\r\n      }\r\n\r\n      console.log(\"[Schedule.tsx] schedule: \", schedule)\r\n\r\n      settingsService.SettingsEventEmmiter.on(Event.SETTINGS_UPDATED, onSettingsUpdated)\r\n      console.log(\"subscribed to settings updated event\")\r\n      console.log(\"n of subscribers: \", settingsService.SettingsEventEmmiter.listenerCount(Event.SETTINGS_UPDATED))\r\n\r\n      scheduleRef.current = schedule\r\n\r\n      setIsFirstTimeLaunch(await AsyncStorage.getItem(\"isFirstTimeLaunch\"))\r\n\r\n      setScheduleName(schedule.name)\r\n      setScheduleLoaded(true)\r\n    }\r\n\r\n    onMount()\r\n\r\n    return () => {\r\n      SettingsService.GetInstance().then((settingsService: SettingsService) => {\r\n        settingsService.SettingsEventEmmiter.removeListener(Event.SETTINGS_UPDATED, onSettingsUpdated)\r\n      })\r\n    }\r\n  }, [])\r\n\r\n  const onWeekTypeChanged = (weekType: number) => {\r\n    console.log(\"week type changed to: \", weekType)\r\n    // display toast message if in editor\r\n    // switching to it takes longer...\r\n    if (isEditable) {\r\n      // TODO: make cross platform version of toast\r\n      if (!isRunningInBrowser()) {\r\n        ToastAndroid.show(\"Завантаження...\", ToastAndroid.LONG)\r\n      }\r\n    }\r\n    setWeekType(weekType)\r\n  }\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      if (isEditable) return\r\n\r\n      // compare current schedule file with the one in loader\r\n      // if they are different, update schedule\r\n\r\n      // return if schedule or schedule file is not loaded yet\r\n      if (!scheduleRef.current || !scheduleFileRef.current) {\r\n        console.log(\"[schedule screen focus] schedule or schedule file is not loaded yet\")\r\n        return\r\n      }\r\n\r\n      let currentScheduleFile = scheduleFileRef.current\r\n      ScheduleLoaderService.GetInstance().then((instance) => {\r\n        let scheduleFile = instance.getScheduleFileByFileName(currentScheduleFile!.filename)\r\n        // debugger\r\n\r\n        // have to compare them this way because the objects themselves have different ids\r\n        if (JSON.stringify(currentScheduleFile.json_parsed) != JSON.stringify(scheduleFile!.json_parsed)) {\r\n          console.log(\"[schedule screen focus] schedule file changed, rerendering...\")\r\n          // setScheduleLoaded(false)\r\n\r\n          // update refs\r\n          scheduleFileRef.current = _.cloneDeep(scheduleFile) ?? null\r\n\r\n          let newSchedule = new ScheduleModel(\"groupname_groupyear\", \"groupname\", 5)\r\n          scheduleRef.current! = newSchedule\r\n          newSchedule.getScheduleFromScheduleLoader(scheduleFile!.filename).then(() => {\r\n            setState({})\r\n          })\r\n        } else {\r\n          console.log(\"[schedule screen focus] schedule file didn't change\")\r\n        }\r\n      })\r\n\r\n      // show toast\r\n      // ToastAndroid.show(\"У переглядачі\", ToastAndroid.SHORT)\r\n\r\n      return () => {\r\n        // ToastAndroid.show(\"Поза переглядачем\", ToastAndroid.SHORT)\r\n      }\r\n    }, [])\r\n  )\r\n\r\n  if (!scheduleLoaded) {\r\n    return (\r\n      <View style={styles.rootContainer}>\r\n        <ScheduleHeader title=\"Розклад\" onWeekTypeChanged={onWeekTypeChanged} />\r\n        <View style={{ justifyContent: \"center\", alignItems: \"center\", flex: 1 }}>\r\n          <ActivityIndicator size=\"large\" animating={true} color={palette.navigationBackground} />\r\n        </View>\r\n      </View>\r\n    )\r\n  }\r\n\r\n  // TODO: implement web version of Onboarding screen\r\n  if (isFirstTimeLaunch != \"false\") {\r\n    return (\r\n      <IntroductoryCarousel\r\n        onClose={() => {\r\n          setIsFirstTimeLaunch(\"false\")\r\n          AsyncStorage.setItem(\"isFirstTimeLaunch\", \"false\")\r\n        }}\r\n      />\r\n    )\r\n  }\r\n\r\n  console.log(\"[Schedule View] will render schedule screen\")\r\n\r\n  return (\r\n    <SettingsContext.Provider value={settingsServiceRef.current}>\r\n      <View style={styles.rootContainer}>\r\n        <ScheduleHeader title={scheduleName} onWeekTypeChanged={onWeekTypeChanged} />\r\n\r\n        <ScrollView\r\n          style={\r\n            {\r\n              // flex: 1\r\n              // ^breaks it on mobile\r\n            }\r\n          }\r\n          contentContainerStyle={{ paddingBottom: 0 }}\r\n          ref={scrollViewContainerRef}\r\n          // nestedScrollEnabled={false}\r\n        >\r\n          {/* explanatory card if in editor */}\r\n\r\n          {isEditable ? (\r\n            <View style={[styles.scheduleDayCard]}>\r\n              <View\r\n                style={[\r\n                  {\r\n                    marginVertical: 5,\r\n                    paddingHorizontal: 10,\r\n                    paddingLeft: 5,\r\n                    paddingVertical: 3,\r\n                  },\r\n                  { flexDirection: \"row\" },\r\n                ]}\r\n              >\r\n                <View\r\n                  style={[\r\n                    {\r\n                      marginRight: 5,\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Image source={editorImages.lightbulb} style={{ height: 50, width: 50 }} />\r\n                </View>\r\n                <View>\r\n                  {/* TODO: bolden the action words */}\r\n                  <AppText style={{ fontFamily: \"century-gothic\", fontSize: 13, letterSpacing: 0.1 }}>\r\n                    Перемістити: затиснути та перетягнути\r\n                  </AppText>\r\n\r\n                  <AppText style={{ fontFamily: \"century-gothic\", fontSize: 13, letterSpacing: 0.1 }}>\r\n                    Видалити: свайп ліворуч\r\n                  </AppText>\r\n\r\n                  <AppText style={{ fontFamily: \"century-gothic\", fontSize: 13, letterSpacing: 0.1 }}>\r\n                    Редагувати: натиснути на пару\r\n                  </AppText>\r\n                </View>\r\n              </View>\r\n            </View>\r\n          ) : null}\r\n          {/* temp slice for performance reasons */}\r\n          {workDays.slice(0, 111).map((day, idx) => {\r\n            const item = day\r\n            const isEmpty = scheduleRef.current!.scheduleDays[idx].getCurrentWeekClasses().length === 0\r\n            const shouldDisplayEmptyDay = settingsServiceRef.current!.displayEmptyDays != DisplayEmptyDaysMode.Hide\r\n\r\n            if (!isEditable && isEmpty && !shouldDisplayEmptyDay) {\r\n              return <View style={globalStyles.noDisplay} key={day + weekType}></View>\r\n            }\r\n\r\n            let scheduleDay = scheduleRef.current!.scheduleDays[idx]\r\n            let classes = weekType == 0 ? scheduleDay.getNominatorClasses() : scheduleDay.getDenominatorClasses()\r\n\r\n            return (\r\n              <View\r\n                style={styles.cardContainer}\r\n                key={day + weekType}\r\n                onLayout={(event) => {\r\n                  const layout = event.nativeEvent.layout\r\n                  dataSourceCords[idx] = layout.y\r\n                  setDataSourceCords(dataSourceCords)\r\n                  // console.log(\"- - - component layout data (start) - - - \")\r\n                  // console.log(dataSourceCords)\r\n                  // console.log(\"height:\", layout.height)\r\n                  // console.log(\"width:\", layout.width)\r\n                  // console.log(\"x:\", layout.x)\r\n                  // console.log(\"y:\", layout.y)\r\n                  // console.log(\"- - - component layout data (end) - - - \")\r\n\r\n                  if (dataSourceCords.length < todayIndex) return\r\n                  if (this.scrolledToToday == true) return\r\n\r\n                  // this should happen only once\r\n                  scrollViewContainerRef.current!.scrollTo({\r\n                    x: 0,\r\n                    y: dataSourceCords[todayIndex],\r\n                    animated: true,\r\n                  })\r\n\r\n                  // TODO: Refactor\r\n                  if (dataSourceCords.length == 5) {\r\n                    this.scrolledToToday = true\r\n                  }\r\n                }}\r\n              >\r\n                <ScheduleDayComponent\r\n                  classesCollection={classes}\r\n                  scheduleObject={scheduleRef.current!}\r\n                  dayName={item}\r\n                  dayIndex={idx}\r\n                  scheduleDay={scheduleRef.current!.scheduleDays[idx]}\r\n                  displayRoomNumber={!isEditable ? settingsServiceRef.current!.displayRoomNumber : true}\r\n                  showSeparator={idx !== workDays.length - 1}\r\n                  weekType={weekType}\r\n                  fade={\r\n                    !isEditable\r\n                      ? isEmpty && settingsServiceRef.current!.displayEmptyDays == DisplayEmptyDaysMode.Darken\r\n                      : false\r\n                  }\r\n                  isEditable={isEditable}\r\n                ></ScheduleDayComponent>\r\n              </View>\r\n            )\r\n          })}\r\n        </ScrollView>\r\n      </View>\r\n    </SettingsContext.Provider>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  rootContainer: {\r\n    // width: \"70%\",\r\n    // alignSelf: \"center\",\r\n\r\n    // paddingBottom: 60,\r\n    ...globalStyles.screen,\r\n\r\n    // flex: 0,\r\n    backgroundColor: \"#F5F5F5\",\r\n  },\r\n  modalToggle: {\r\n    marginBottom: 10,\r\n    borderWidth: 1,\r\n    borderColor: \"lightgray\",\r\n    padding: 10,\r\n    borderRadius: 10,\r\n    alignSelf: \"center\",\r\n  },\r\n\r\n  modalClose: {\r\n    marginTop: 20,\r\n    marginBottom: 0,\r\n  },\r\n\r\n  modalContent: {\r\n    flex: 1,\r\n  },\r\n\r\n  selected: {\r\n    backgroundColor: \"white\",\r\n    color: \"black\",\r\n    padding: 5,\r\n    borderRadius: 10,\r\n    marginBottom: 5,\r\n  },\r\n\r\n  placeholderView: {\r\n    height: 35,\r\n  },\r\n  cardContainer: {\r\n    // height: 350,\r\n    padding: 5,\r\n  },\r\n\r\n  scheduleDaySelector: {\r\n    padding: 5,\r\n    zIndex: 9999,\r\n    position: \"absolute\",\r\n    top: 0,\r\n    right: 0,\r\n    backgroundColor: \"rgba(0,0,0,0.5)\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  scheduleDayCard: {\r\n    marginTop: 10,\r\n    marginBottom: 15,\r\n    marginHorizontal: 10,\r\n    borderRadius: 6,\r\n    backgroundColor: \"white\",\r\n\r\n    paddingVertical: 2,\r\n    paddingHorizontal: 5,\r\n\r\n    elevation: 1,\r\n    shadowOffset: { width: 1, height: 1 },\r\n    shadowColor: \"#333\",\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 2,\r\n  },\r\n})\r\n","import React, { Component, useEffect, useRef, useState } from \"react\"\r\nimport { FlatList, View, StyleSheet, TouchableOpacity, TouchableWithoutFeedback, PixelRatio } from \"react-native\"\r\nimport Card from \"../shared/card\"\r\nimport { Text } from \"react-native-elements\"\r\nimport { globalStyles, palette } from \"../styles/global\"\r\nimport SafeAccessArray from \"../utilities/getStrict\"\r\nimport * as Device from \"expo-device\"\r\n\r\nimport { useWindowDimensions } from \"react-native\"\r\nimport { determineInterval } from \"../utilities/utilities\"\r\nimport { REGLAMENT_DATA } from \"../constants/Constants\"\r\nimport AppText from \"../shared/AppText\"\r\nimport { ScrollView } from \"react-native-gesture-handler\"\r\n\r\nconsole.log(\"Importing modules...\")\r\n\r\nexport const getReglamentClass = (index: number) => {\r\n  // console.log(`Getting class at index ${index}...`)\r\n  // throw if index is out of bounds\r\n  if (index < 0 || index > REGLAMENT_DATA.length - 1) {\r\n    throw new Error(\"Index out of bounds\")\r\n  }\r\n\r\n  return REGLAMENT_DATA[index]\r\n}\r\n\r\nconst tableData = {\r\n  tableHead: [\"#\", \"Початок\", \"Кінець\", \"Перерва\"],\r\n  tableData: REGLAMENT_DATA,\r\n}\r\n\r\nconsole.log(\"Creating tableData...\")\r\n\r\n// TODO: try to make own table component with flexbox (additional motivation here is to have builds not fail due to react-native-table-component)\r\n// or follow this article: https://rn-master.com/sortable-react-native-table-example/\r\n\r\nexport default function ReglamentScreen() {\r\n  console.log(\"Rendering ReglamentScreen...\")\r\n  return (\r\n    <View style={[styles.reglamentContainer, { paddingTop: 20 }]}>\r\n      <ScrollView>\r\n        {REGLAMENT_DATA.map((item, index) => {\r\n          return <ReglamentClass index={index} key={index} />\r\n        })}\r\n      </ScrollView>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst ReglamentClass = ({ index }: { index: number }) => {\r\n  const classData = getReglamentClass(index)\r\n\r\n  let currentTimeInterval = determineInterval()\r\n  let isCurrentClassRef = useRef(currentTimeInterval == classData)\r\n\r\n  let [state, setState] = useState({})\r\n  // rerender component if it's not current class anymore or became current class\r\n\r\n  useEffect(() => {\r\n    console.log(`Rendering ReglamentClass at index ${index} for the first time...`)\r\n\r\n    const interval = setInterval(() => {\r\n      let wasCurrent = isCurrentClassRef.current\r\n      let isCurrent = determineInterval() == classData\r\n      if (wasCurrent != isCurrent) {\r\n        isCurrentClassRef.current = isCurrent\r\n        setState({})\r\n      }\r\n    }, 15000)\r\n\r\n    return () => {\r\n      clearInterval(interval)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <View style={styles.reglamentClassContainer}>\r\n      <AppText style={styles.reglamentClassIndex}>{index + 1} пара</AppText>\r\n      <View style={[styles.timeDataCard, isCurrentClassRef.current ? styles.currentClass : {}]}>\r\n        <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\r\n          <View style={{ alignItems: \"flex-start\" }}>\r\n            <AppText style={styles.timePointText}>ПОЧАТОК</AppText>\r\n            <AppText style={styles.timePointDate}>{classData[1]}</AppText>\r\n          </View>\r\n\r\n          <View style={{ alignItems: \"center\", justifyContent: \"space-between\" }}>\r\n            <AppText style={styles.timePointText}>ПЕРЕРВА</AppText>\r\n            <AppText style={[styles.timePointDate, { fontSize: 13 }]}>{classData[3]}</AppText>\r\n          </View>\r\n          <View style={{ alignItems: \"flex-end\" }}>\r\n            <AppText style={styles.timePointText}>КІНЕЦЬ</AppText>\r\n            <AppText style={styles.timePointDate}>{classData[2]}</AppText>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst ReglamentTable = () => {\r\n  console.log(\"Rendering Reglament Component...\")\r\n  const [data, setData] = useState(tableData)\r\n\r\n  let currentTimeInterval = determineInterval()\r\n  let currentLesson = currentTimeInterval ? currentTimeInterval[0] : -1\r\n\r\n  const tableRef = React.useRef(null)\r\n\r\n  const { height, width } = useWindowDimensions()\r\n  const w = width\r\n  let pixelRatio = PixelRatio.get()\r\n  console.log(`Pixel ratio for this device (resolution: w: ${width}, h: ${height}) is ${pixelRatio} `)\r\n\r\n  let cellWidths = [0.09 * w, 0.25 * w, 0.2 * w, 0.39 * w]\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View ref={tableRef} style={{ borderWidth: 0, borderColor: \"teal\" }}>\r\n        <View style={{ ...styles.row, ...styles.head }}>\r\n          {data.tableHead.map((cellText, index) => {\r\n            return (\r\n              <AppText style={{ ...styles.text, ...styles.headerText, width: cellWidths[index], textAlign: \"center\" }}>\r\n                {cellText}\r\n              </AppText>\r\n            )\r\n          })}\r\n        </View>\r\n\r\n        {data.tableData.map((row, index) => {\r\n          if (row[0] === currentLesson) {\r\n            return (\r\n              <View style={styles.row}>\r\n                {row.map((cellText, index) => {\r\n                  return (\r\n                    <AppText\r\n                      style={{\r\n                        ...styles.text,\r\n                        width: cellWidths[index],\r\n                        backgroundColor: \"orange\",\r\n                        textAlign: \"center\",\r\n                      }}\r\n                    >\r\n                      {cellText}\r\n                    </AppText>\r\n                  )\r\n                })}\r\n              </View>\r\n            )\r\n          } else {\r\n            return (\r\n              <View style={styles.row}>\r\n                {row.map((cellText, index) => {\r\n                  return <Text style={{ ...styles.text, width: cellWidths[index] }}>{cellText}</Text>\r\n                })}\r\n              </View>\r\n            )\r\n          }\r\n        })}\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\n// TODO: Remove unused styles\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    width: \"100%\",\r\n    overflow: \"scroll\",\r\n    padding: 10,\r\n    paddingTop: 30,\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  reglamentClassIndex: {\r\n    fontSize: 14,\r\n    fontFamily: \"montserrat-600\",\r\n    color: palette.text,\r\n\r\n    marginLeft: 10,\r\n    marginBottom: 7,\r\n  },\r\n\r\n  reglamentContainer: {\r\n    ...globalStyles.screen,\r\n    flex: 1,\r\n\r\n    backgroundColor: palette.backgroundLight,\r\n    // backgroundColor: \"red\",\r\n  },\r\n\r\n  timePointText: {\r\n    color: palette.grayishBlue,\r\n    fontFamily: \"montserrat-bold\",\r\n  },\r\n\r\n  timePointDate: {\r\n    marginTop: 3,\r\n    fontSize: 14,\r\n    color: palette.text,\r\n  },\r\n\r\n  timeDataCard: {\r\n    borderRadius: 7,\r\n    backgroundColor: \"white\",\r\n    margin: 0,\r\n    padding: 10,\r\n\r\n    elevation: 1,\r\n    shadowOffset: { width: 1, height: 1 },\r\n    shadowColor: \"#333\",\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 2,\r\n  },\r\n\r\n  currentClass: {\r\n    // backgroundColor: \"rgb(227, 239, 249)\",\r\n    backgroundColor: \"#CCDFF1\",\r\n  },\r\n\r\n  reglamentClassContainer: {\r\n    marginHorizontal: 8,\r\n    marginBottom: 18,\r\n  },\r\n\r\n  head: {},\r\n  text: { margin: 0, textAlign: \"center\", borderBottomWidth: 1, borderRightWidth: 1, padding: 12 },\r\n  headerText: { fontWeight: \"bold\", fontSize: 14 },\r\n  headText: { margin: 6, fontWeight: \"bold\" },\r\n  row: {\r\n    flexDirection: \"row\",\r\n    // backgroundColor: \"red\",\r\n    backgroundColor: \"#f1f8ff\",\r\n  },\r\n})\r\n","import { Ionicons } from \"@expo/vector-icons\"\r\nimport React, { useRef } from \"react\"\r\nimport { View, StyleSheet, TextInput, Linking } from \"react-native\"\r\nimport { globalStyles, palette } from \"../styles/global\"\r\nimport useEffect from \"react\"\r\n\r\nimport teachersJson from \"../assets/teachers.json\"\r\nimport { FlatList } from \"react-native-gesture-handler\"\r\nimport Card from \"../shared/card\"\r\nimport TeacherTableModel from \"../models/TeacherTableModel\"\r\nimport AppText from \"../shared/AppText\"\r\n\r\n// TODO: fix scroll view intercepting select event on text\r\n\r\nexport default function TeachersScreen() {\r\n  const [searchQuery, setSearchQuery] = React.useState<string>(\"\")\r\n\r\n  const teachersTable = useRef(TeacherTableModel.GetInstance())\r\n\r\n  const [teachers, setTeachers] = React.useState<typeof teachersJson>(teachersTable.current.teachers)\r\n\r\n  const filteredTeachers = teachers.filter((teacher) => {\r\n    const teacherJson = JSON.stringify(teacher)\r\n    return teacherJson.toLowerCase().includes(searchQuery.toLowerCase())\r\n  })\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={{ ...styles.horizontalFlex, ...styles.searchBarContainer }}>\r\n        <Ionicons name=\"search-outline\" size={14} style={{ marginHorizontal: 5 }} color={palette.grayedOut} />\r\n        <TextInput style={styles.searchBar} onChangeText={setSearchQuery} placeholder=\"Знайти викладача\" />\r\n      </View>\r\n      <View></View>\r\n      <FlatList\r\n        data={filteredTeachers}\r\n        userSelect=\"text\"\r\n        keyExtractor={(item) => item[\"№\"]}\r\n        renderItem={({ item, index }) => {\r\n          const teacher = item\r\n          return (\r\n            <View key={index} style={styles.teacherCard}>\r\n              <AppText\r\n                style={{\r\n                  fontFamily: \"montserrat-bold\",\r\n                }}\r\n                selectable\r\n              >\r\n                {teacher[\"ПІБ викладача\"]}\r\n              </AppText>\r\n              <AppText style={[]} selectable>\r\n                {teacher.Кваліфікаця}\r\n              </AppText>\r\n              <AppText\r\n                style={[globalStyles.link]}\r\n                selectable\r\n                onPress={() => {\r\n                  console.log(\"pressed\")\r\n                  Linking.openURL(teacher[\"Кафедра Посилання\"])\r\n                }}\r\n              >\r\n                {`Кафедра ${teacher[\"Кафедра Абревіатура\"]} (${teacher[\"Кафедра Повна назва\"]})`}\r\n              </AppText>\r\n\r\n              {!teacher[\"E-mail\"].endsWith(\".ru\") ? (\r\n                <AppText\r\n                  style={[globalStyles.underlinedLink]}\r\n                  selectable\r\n                  onPress={() => {\r\n                    console.log(\"pressed\")\r\n                    // open email\r\n                    Linking.openURL(\"mailto:\" + teacher[\"E-mail\"])\r\n                  }}\r\n                >\r\n                  {teacher[\"E-mail\"]}\r\n                </AppText>\r\n              ) : (\r\n                <View />\r\n              )}\r\n            </View>\r\n          )\r\n        }}\r\n      />\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: palette.backgroundLight,\r\n  },\r\n\r\n  horizontalFlex: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  searchBarContainer: {\r\n    marginVertical: 10,\r\n    backgroundColor: palette.background,\r\n    borderRadius: 7,\r\n    padding: 5,\r\n    paddingVertical: 2,\r\n\r\n    marginHorizontal: 10,\r\n  },\r\n\r\n  searchBar: {\r\n    fontSize: 14,\r\n    flex: 1,\r\n    fontFamily: \"montserrat-500\",\r\n  },\r\n\r\n  teacherCard: {\r\n    marginVertical: 5,\r\n    marginHorizontal: 10,\r\n    padding: 10,\r\n    paddingVertical: 12,\r\n    borderRadius: 7,\r\n    backgroundColor: \"white\",\r\n\r\n    elevation: 1,\r\n    shadowOffset: { width: 1, height: 1 },\r\n    shadowColor: \"#333\",\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 2,\r\n  },\r\n})\r\n","import React from \"react\"\r\nimport { StyleSheet, Text, View, Image, Pressable, ImageBackground } from \"react-native\"\r\nimport { Ionicons, MaterialIcons } from \"@expo/vector-icons\"\r\nimport { SafeAreaView } from \"react-native-safe-area-context\"\r\nimport { globalStyles, palette } from \"../styles/global\"\r\nimport { useNavigation } from \"@react-navigation/native\"\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\"\r\n\r\nexport default function StackHeader({\r\n  title,\r\n  useSafeAreaView = true,\r\n  hasBackground = true,\r\n  captionStyles = undefined,\r\n}: {\r\n  title: string\r\n  useSafeAreaView?: boolean\r\n  hasBackground?: boolean\r\n  captionStyles?: any\r\n}) {\r\n  const navigation = useNavigation()\r\n\r\n  //   const openMenu = () => {\r\n  //     console.log(\"opening drawer\")\r\n  //     // navigation.openDrawer()\r\n  //   }\r\n\r\n  const ViewComponent = useSafeAreaView ? SafeAreaView : View\r\n\r\n  // extract current screen name from navigation state\r\n  const headerText = title\r\n  return (\r\n    <ViewComponent style={[styles.header, !hasBackground ? { backgroundColor: \"transparent\" } : {}]}>\r\n      <View style={styles.headerTitle}>\r\n        <TouchableOpacity>\r\n          <Ionicons\r\n            onPress={() => navigation.goBack()}\r\n            name=\"chevron-back-outline\"\r\n            size={24}\r\n            style={[globalStyles.navIcon, captionStyles]}\r\n          />\r\n        </TouchableOpacity>\r\n\r\n        <Text style={[styles.headerText, captionStyles]}>{headerText}</Text>\r\n      </View>\r\n    </ViewComponent>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  header: {\r\n    paddingVertical: 15,\r\n    width: \"100%\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: palette.navigationBackground,\r\n  },\r\n\r\n  headerText: {\r\n    fontSize: 20,\r\n    color: \"white\",\r\n    fontFamily: \"century-gothic\",\r\n  },\r\n\r\n  headerTitle: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n  },\r\n})\r\n","import React, { useState } from \"react\"\r\nimport { View, Switch, StyleSheet } from \"react-native\"\r\nimport { palette } from \"../styles/global\"\r\n\r\n// TODO: find better colors for toggled state\r\n\r\nexport default function CustomSwitch({\r\n  onValueChange,\r\n  initVal = false,\r\n  disabled = false,\r\n}: {\r\n  initVal?: boolean\r\n  disabled?: boolean\r\n  onValueChange?: (newValue: boolean) => void\r\n}): JSX.Element {\r\n  const [isEnabled, setIsEnabled] = useState(initVal)\r\n  const toggleSwitch = () => setIsEnabled((previousState) => !previousState)\r\n\r\n  // disabled = true\r\n\r\n  return (\r\n    <Switch\r\n      style={styles.switch}\r\n      trackColor={{ false: \"#767577\", true: palette.navigationBackground }}\r\n      thumbColor={\"#eeeeee\"}\r\n      ios_backgroundColor=\"#3e3e3e\"\r\n      onValueChange={(newValue) => {\r\n        if (disabled) return\r\n        toggleSwitch()\r\n        onValueChange && onValueChange(newValue)\r\n      }}\r\n      value={isEnabled}\r\n    />\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  switch: {\r\n    height: 24,\r\n    width: 44,\r\n  },\r\n})\r\n","import React from \"react\"\r\nimport { CheckBox } from \"react-native-elements\"\r\nimport { View, StyleSheet } from \"react-native\"\r\nimport AppText from \"./AppText\"\r\nimport { palette } from \"../styles/global\"\r\n\r\nfunction BlueCircle(filled = true) {\r\n  return (\r\n    <View\r\n      style={{\r\n        width: 15,\r\n        height: 15,\r\n        borderRadius: 10,\r\n        backgroundColor: filled ? palette.navigationBackground : \"transparent\",\r\n        borderWidth: 1,\r\n        borderColor: !filled ? palette.grayedOut : \"transparent\",\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\ntype Option = {\r\n  title: string\r\n  code_name: string\r\n}\r\n\r\nexport function RadioButtonGroup({\r\n  options,\r\n  onOptionSelected,\r\n  selectedOptionIndex = 0,\r\n}: {\r\n  options: Option[]\r\n  onOptionSelected: (option: Option) => void\r\n  selectedOptionIndex?: number\r\n}) {\r\n  const [selectedIndex, setIndex] = React.useState(selectedOptionIndex)\r\n\r\n  return (\r\n    <View style={{ flexGrow: 0, marginLeft: 20 }}>\r\n      {options.map((option, index) => (\r\n        <CheckBox\r\n          checked={selectedIndex === index}\r\n          onPress={() => setIndex(index) || onOptionSelected(option)}\r\n          checkedIcon={BlueCircle()}\r\n          uncheckedIcon={BlueCircle(false)}\r\n          title={<AppText style={styles.optionTitle}>{option.title}</AppText>}\r\n          containerStyle={styles.checkboxContainer}\r\n        />\r\n      ))}\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  optionTitle: {\r\n    marginLeft: 10,\r\n    fontSize: 14,\r\n  },\r\n\r\n  checkboxContainer: {\r\n    backgroundColor: \"transparent\",\r\n    borderWidth: 0,\r\n    flexGrow: 0,\r\n    marginVertical: 7,\r\n    marginLeft: 0,\r\n    padding: 0,\r\n  },\r\n})\r\n","import { useRoute } from \"@react-navigation/native\"\r\nimport React, { useCallback } from \"react\"\r\nimport AppText from \"../../../shared/AppText\"\r\nimport { View, StyleSheet, TextInput, Platform, TextInputProps } from \"react-native\"\r\nimport { palette } from \"../../../styles/global\"\r\nimport CustomSwitch from \"../../../shared/Switch\"\r\nimport { CLASS_TYPE, ScheduleClass, ScheduleClassProps } from \"../../../models/ScheduleModel\"\r\nimport { Formik, useFormikContext } from \"formik\"\r\nimport { REGLAMENT_DATA } from \"../../../constants/Constants\"\r\nimport getStrict from \"../../../utilities/getStrict\"\r\nimport { formatRoomName } from \"../../../components/ScheduleComponents/ScheduleClass\"\r\nimport _ from \"lodash\"\r\nimport { workDays, workDaysEnLower } from \"../../../constants/Days\"\r\nimport { WeekType } from \"../../../utilities/getWeekType\"\r\nimport { RadioButtonGroup } from \"../../../shared/RadioButtonGroup\"\r\n\r\n// autocomplete library: https://www.npmjs.com/package/react-native-autocomplete-input\r\n// another one: https://www.npmjs.com/package/react-native-autocomplete-dropdown\r\n\r\n// TODO: do not display all suggestions at once, but only those that match the query (unless query is empty, then display nothing)\r\n\r\ntype ScheduleClassEditables = Omit<ScheduleClassProps, \"index\" | \"isSharedClass\" | \"day\" | \"weekName\" | \"week\">\r\n\r\nconst AutoSubmitFormData = () => {\r\n  // Grab values and submitForm from context\r\n\r\n  let {\r\n    values,\r\n    initialValues,\r\n  }: {\r\n    values: ScheduleClassEditables\r\n    initialValues: ScheduleClassEditables\r\n  } = useFormikContext()\r\n\r\n  const { isSubmitting } = useFormikContext()\r\n\r\n  let submitFormCallback = useCallback(_.debounce(useFormikContext().submitForm, 1000), [])\r\n\r\n  // submitForm = _.debounce(submitForm, 1000)\r\n\r\n  React.useEffect(() => {\r\n    // values.teacher = [values.teacher]\r\n\r\n    // do not submit form if values haven't changed\r\n    if (values == initialValues) {\r\n      console.log(\"values haven't changed, won't submit\")\r\n      return\r\n    }\r\n\r\n    // Submit the form imperatively\r\n    // if (!isSubmitting) submitFormCallback()\r\n    // else console.log(\"already submitting, won't submit again\")\r\n    submitFormCallback()\r\n  }, [values])\r\n  return null\r\n}\r\n\r\n// a decorator around TextInput that adds a bottom border and styles the text\r\nconst FormTextInput = (props: TextInputProps & { captionText: string; noteText: string | undefined }) => {\r\n  return (\r\n    <View style={[styles.formField]}>\r\n      <AppText style={[styles.fieldCaption]}>{props.captionText}</AppText>\r\n\r\n      <View>\r\n        <TextInput cursorColor={palette.navigationBackground} style={styles.textInputText} {...props} />\r\n        <View style={[styles.underline]} />\r\n        {props.noteText ? (\r\n          <AppText style={[styles.fieldCaption, { fontSize: 12, fontFamily: \"montserrat-medium\" }]}>\r\n            {props.noteText}\r\n          </AppText>\r\n        ) : null}\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default function ScheduleClassForm() {\r\n  // const navigation = useNavigation()\r\n  // const options = navigation\r\n\r\n  const route = useRoute()\r\n  const data = route.params\r\n  const {\r\n    scheduleClass,\r\n    currentlyViewedWeek,\r\n    onFormDataUpdated,\r\n  }: {\r\n    scheduleClass: ScheduleClass\r\n    currentlyViewedWeek: WeekType\r\n    onFormDataUpdated: (data: ScheduleClassProps) => void\r\n  } = data\r\n\r\n  let kbAvoidingViewBehavior: \"padding\" | \"height\" | \"position\" = Platform.OS === \"ios\" ? \"padding\" : \"height\"\r\n  kbAvoidingViewBehavior = \"position\" // position seems to work better than height\r\n\r\n  let reglamentClass = getStrict(REGLAMENT_DATA, scheduleClass.index - 1)\r\n\r\n  let classStart: string = reglamentClass[1]\r\n  if (classStart.length == 4) classStart = \"0\" + classStart\r\n\r\n  const classEnd: string = reglamentClass[2]\r\n\r\n  const teacher = scheduleClass.teacher ?? \"\"\r\n\r\n  const dayUkrIndex = workDaysEnLower.findIndex((d) => scheduleClass.day == d)\r\n  console.log(\"|\" + scheduleClass.day + \"|\")\r\n  const dayUkr = workDays[dayUkrIndex]\r\n\r\n  const weekTypeUkr = currentlyViewedWeek == 0 ? \"Чисельник\" : \"Знаменник\"\r\n\r\n  const classType = scheduleClass.classType\r\n\r\n  const scheduleClassEditables = _.pick(scheduleClass, [\"isBiweekly\", \"name\", \"teacher\", \"room\", \"classType\"])\r\n\r\n  const initialFormikValues: ScheduleClassEditables = {\r\n    ...scheduleClassEditables,\r\n    teacher: typeof teacher !== \"string\" ? teacher.join(\", \") : teacher,\r\n    room: formatRoomName(scheduleClass, true),\r\n  }\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialFormikValues}\r\n      onSubmit={(values) => {\r\n        console.log(\"Submitting Formik form...\")\r\n        console.log(values)\r\n        onFormDataUpdated(values)\r\n      }}\r\n    >\r\n      {({ values, handleChange, handleBlur, submitForm }) => {\r\n        return (\r\n          <View>\r\n            <View\r\n              style={[\r\n                styles.row,\r\n                {\r\n                  justifyContent: \"space-between\",\r\n                },\r\n              ]}\r\n            >\r\n              <View>\r\n                <AppText style={[styles.headerTextPrimary]}>Пара №{scheduleClass.index}</AppText>\r\n                <AppText style={[styles.headerTextSecondary]}>\r\n                  {classStart} – {classEnd}\r\n                </AppText>\r\n              </View>\r\n\r\n              <View>\r\n                <AppText\r\n                  style={[\r\n                    {\r\n                      textAlign: \"right\",\r\n                    },\r\n                    styles.headerTextPrimary,\r\n                  ]}\r\n                >\r\n                  {weekTypeUkr}\r\n                </AppText>\r\n                <AppText\r\n                  style={[\r\n                    {\r\n                      textAlign: \"right\",\r\n                    },\r\n                    styles.headerTextSecondary,\r\n                  ]}\r\n                >\r\n                  {dayUkr}\r\n                </AppText>\r\n              </View>\r\n            </View>\r\n            <FormTextInput captionText=\"Предмет\" value={values.name} onChangeText={handleChange(\"name\")} />\r\n\r\n            <FormTextInput\r\n              autoCapitalize=\"words\"\r\n              captionText=\"Викладач\"\r\n              value={values.teacher}\r\n              noteText=\"*якщо декілька – прізвища через кому\"\r\n              onChangeText={handleChange(\"teacher\")}\r\n            />\r\n\r\n            <FormTextInput\r\n              captionText=\"Аудиторія\"\r\n              value={values.room}\r\n              noteText=\"*якщо декілька – через кому\"\r\n              onChangeText={handleChange(\"room\")}\r\n            />\r\n            {/* \r\n            <View style={[styles.row]}>\r\n              <AppText>Посилання: </AppText>\r\n              <TextInput placeholder=\"https://us04web.zoom.us/j/75735448331?pwd=4X7q7Wu5jf43QTje5BuhChQnUcL6I1.1\" />\r\n            </View> */}\r\n            <RadioButtonGroup\r\n              options={[\r\n                {\r\n                  title: CLASS_TYPE.LECTURE,\r\n                  code_name: CLASS_TYPE.LECTURE,\r\n                },\r\n                {\r\n                  title: CLASS_TYPE.LAB,\r\n                  code_name: CLASS_TYPE.LAB,\r\n                },\r\n                {\r\n                  title: CLASS_TYPE.PRACTICE,\r\n                  code_name: CLASS_TYPE.PRACTICE,\r\n                },\r\n              ]}\r\n              onOptionSelected={(o) => handleChange(\"classType\")(o.code_name)}\r\n              selectedOptionIndex={\r\n                values.classType == CLASS_TYPE.LECTURE ? 0 : values.classType == CLASS_TYPE.LAB ? 1 : 2\r\n              }\r\n            />\r\n\r\n            <View\r\n              style={[\r\n                styles.row,\r\n                {\r\n                  justifyContent: \"space-between\",\r\n                  paddingHorizontal: 20,\r\n                  paddingRight: 10,\r\n                },\r\n              ]}\r\n            >\r\n              <AppText\r\n                style={[\r\n                  {\r\n                    fontSize: 14,\r\n                    fontFamily: \"montserrat-medium\",\r\n                  },\r\n                ]}\r\n              >\r\n                Щотижнева пара\r\n              </AppText>\r\n              {/* <TextInput placeholder=\"Лекція\" /> */}\r\n\r\n              <CustomSwitch initVal={!values.isBiweekly} onValueChange={(e) => handleChange(\"isBiweekly\")(!e + \"\")} />\r\n            </View>\r\n\r\n            {/* <KeyboardAvoidingView behavior={kbAvoidingViewBehavior} style={[styles.row]}>\r\n        <AppText>KeyboardAvoidingView -1</AppText>\r\n        <Button title={\"Button\"} />\r\n      </KeyboardAvoidingView> */}\r\n            <AutoSubmitFormData />\r\n          </View>\r\n        )\r\n      }}\r\n    </Formik>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  row: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 20,\r\n  },\r\n\r\n  formField: {\r\n    marginVertical: 10,\r\n    paddingHorizontal: 20,\r\n  },\r\n\r\n  autocompleteContainer: {\r\n    flex: 1,\r\n    left: 0,\r\n    position: \"absolute\",\r\n    right: 0,\r\n    top: 0,\r\n    zIndex: 1,\r\n  },\r\n\r\n  underline: {\r\n    height: 1,\r\n    backgroundColor: \"#C6C4C4\",\r\n    width: \"100%\",\r\n\r\n    marginVertical: 1,\r\n  },\r\n\r\n  fieldCaption: {\r\n    fontFamily: \"montserrat-semibold\",\r\n    color: palette.grayedOut,\r\n  },\r\n\r\n  textInputText: {\r\n    fontSize: 14,\r\n    fontFamily: \"montserrat-semibold\",\r\n    color: palette.text,\r\n  },\r\n\r\n  headerTextPrimary: {\r\n    fontSize: 14,\r\n    fontFamily: \"montserrat-medium\",\r\n  },\r\n\r\n  headerTextSecondary: {\r\n    fontSize: 14,\r\n    fontFamily: \"montserrat-medium\",\r\n    color: palette.grayedOut,\r\n  },\r\n})\r\n","import React from \"react\"\r\nimport ScheduleScreen from \"./ScheduleScreen\"\r\n\r\nexport default function ScheduleEditorScreen() {\r\n  return <ScheduleScreen isEditable={true} />\r\n}\r\n","import { createStackNavigator } from \"@react-navigation/stack\"\r\nimport * as React from \"react\"\r\nimport ScheduleEditor from \"../screens/TestTabsScreens/ScheduleEditor\"\r\nimport { View } from \"react-native\"\r\nimport StackHeader from \"../components/StackHeader\"\r\nimport ScheduleClassForm from \"../screens/TestTabsScreens/scheduleEditorStack/ScheduleClassForm\"\r\nimport ScheduleEditorScreen from \"../screens/ScheduleEditorScreen\"\r\n\r\nconst Stack = createStackNavigator()\r\n\r\nexport enum EditorStackRoutes {\r\n  EDITOR = \"Editor\",\r\n  SCHEDULE_CLASS_FORM = \"ScheduleClassForm\",\r\n}\r\n\r\nexport default function EditorStack() {\r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={\r\n        {\r\n          // headerShown: false,\r\n        }\r\n      }\r\n    >\r\n      <Stack.Screen\r\n        name={EditorStackRoutes.EDITOR}\r\n        component={ScheduleEditorScreen}\r\n        options={{\r\n          header: () => <View />,\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name={EditorStackRoutes.SCHEDULE_CLASS_FORM}\r\n        component={ScheduleClassForm}\r\n        options={{\r\n          header: (props) => <StackHeader title={\"Пара\"} />,\r\n        }}\r\n      />\r\n    </Stack.Navigator>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { View, Text, StyleSheet, Linking } from \"react-native\"\r\nimport { globalStyles, palette } from \"../../styles/global\"\r\nimport AppText from \"../../shared/AppText\"\r\nimport { Ionicons } from \"@expo/vector-icons\"\r\nimport { ScrollView, TouchableOpacity } from \"react-native-gesture-handler\"\r\n\r\nexport default function FacultiesTestScreen() {\r\n  // TODO: perhaps, copy name and full name to clipboard on press\r\n\r\n  const renderFacultyCard = (\r\n    nameAbbreviation: string,\r\n    nameFull: string,\r\n    address: string,\r\n    phone: string,\r\n    mail: string\r\n  ) => {\r\n    return (\r\n      <View style={styles.facultyCard}>\r\n        <AppText\r\n          style={{\r\n            fontSize: 18,\r\n            fontFamily: \"montserrat-bold\",\r\n          }}\r\n        >\r\n          {nameAbbreviation}\r\n        </AppText>\r\n        <AppText style={[]}>{nameFull}</AppText>\r\n        <View style={[globalStyles.captionWithIcon, { marginVertical: 2 }]}>\r\n          <Ionicons name=\"location\" color={palette.grayedOut} size={16} />\r\n          <AppText style={{ marginLeft: 5, fontSize: 14, fontFamily: \"montserrat-semibold\" }}>{address}</AppText>\r\n        </View>\r\n        <TouchableOpacity\r\n          onPress={() => Linking.openURL(`tel:${phone}`)}\r\n          style={[globalStyles.captionWithIcon, { marginVertical: 2 }]}\r\n        >\r\n          <Ionicons name=\"call\" color={palette.grayedOut} size={16} />\r\n          <AppText style={{ marginLeft: 5, fontSize: 14, fontFamily: \"montserrat-semibold\" }}>{phone}</AppText>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity\r\n          onPress={() => Linking.openURL(`mailto:${mail}`)}\r\n          style={[globalStyles.captionWithIcon, { marginVertical: 2 }]}\r\n        >\r\n          <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />\r\n          <AppText\r\n            style={[{ marginLeft: 5, fontSize: 14, fontFamily: \"montserrat-semibold\" }, globalStyles.underlinedLink]}\r\n          >\r\n            {mail}\r\n          </AppText>\r\n        </TouchableOpacity>\r\n      </View>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      {renderFacultyCard(\r\n        \"ФВПІТ\",\r\n        \"Факультет видавничо-поліграфічних, інформаційних технологій\",\r\n        \"вул. Під Голоском, 19, ауд. 234\",\r\n        \"(032) 242 23 77\",\r\n        \"fvpit@uad.lviv.ua\"\r\n      )}\r\n\r\n      {renderFacultyCard(\r\n        \"ФКПІ\",\r\n        \"Факультет комп'ютерно-поліграфічної інженерії\",\r\n        \"вул. Під Голоском, 19, ауд. 219\",\r\n        \"(032) 242 23 76\",\r\n        \"fpu@uad.lviv.ua\"\r\n      )}\r\n\r\n      {renderFacultyCard(\r\n        \"ФМКП\",\r\n        \"Факультет медіакомунікацій та підприємництва\",\r\n        \"вул. Під Голоском, 19, ауд. 313\",\r\n        \"(032) 242 23 75\",\r\n        \"feoks@uad.lviv.ua\"\r\n      )}\r\n    </ScrollView>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 20,\r\n    paddingTop: 0,\r\n  },\r\n\r\n  facultyCard: {\r\n    ...globalStyles.card,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 12,\r\n\r\n    marginVertical: 5,\r\n  },\r\n})\r\n","export enum ContactsStackRoutes {\r\n  CONTACTS_MENU = \"Контакти (Меню)\",\r\n  FACULTIES = \"Факультети\",\r\n}\r\n","import { FontAwesome, Ionicons } from \"@expo/vector-icons\"\r\nimport React from \"react\"\r\nimport { Image } from \"react-native-elements\"\r\nimport { imageIcons, palette } from \"../styles/global\"\r\nimport AppText from \"../shared/AppText\"\r\nimport { View } from \"react-native\"\r\n\r\nexport type ModalItem = {\r\n  icon: JSX.Element\r\n  text: string\r\n  isPhone?: boolean\r\n  isLink?: boolean\r\n  linkName?: string\r\n}\r\n\r\nlet academyCorps = [\r\n  \"вул. Під Голоском, 19\",\r\n  \"вул. Підвальна, 17\",\r\n  \"вул. Личаківська, 3\",\r\n  \"вул. Коцюбинського, 21\",\r\n  \"вул. Винниченка, 12\",\r\n]\r\n\r\n// Корпуси академії\r\nexport const corpsModalItems = academyCorps.map((corps) => {\r\n  return {\r\n    text: corps,\r\n    icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n  }\r\n})\r\n\r\n// Ректорат\r\nexport const rectorateModalItems: ModalItem[] = [\r\n  {\r\n    icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n    text: \"вул. Під Голоском, 19, ауд. 234\",\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n    text: \"(032) 242 23 77\",\r\n    isPhone: true,\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n    text: \"uad@uad.edu.ua\",\r\n    isLink: true,\r\n  },\r\n]\r\n\r\n// Підготовче відділення\r\nexport const preparationDepartmentModalItems: ModalItem[] = [\r\n  {\r\n    icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n    text: \"вул. Під Голоском, 19, ауд. 218\",\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n    text: \"(032) 242 23 78\",\r\n    isPhone: true,\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n    text: \"pv@uad.edu.ua\",\r\n    isLink: true,\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"globe\" color={palette.grayedOut} size={16} />,\r\n    text: \"http://www.uad-pv.pp.ua/\",\r\n    isLink: true,\r\n  },\r\n]\r\n\r\n// Відділ міжнародних звʼязків та інформаційного забезпечення\r\nexport const internationalAffairsAndInformationDepartmentModalItems: ModalItem[] = [\r\n  {\r\n    icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n    text: \"вул. Під Голоском, 19\",\r\n  },\r\n\r\n  {\r\n    icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n    text: \"(032) 259 94 21\",\r\n    isPhone: true,\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n    text: \"ird@uad.lviv.ua\",\r\n    isLink: true,\r\n  },\r\n]\r\n\r\n// Приймальна комісія\r\nexport const admissionsCommitteeModalItems: ModalItem[] = [\r\n  {\r\n    icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n    text: \"вул. Під Голоском, 19, каб. 417, 200\",\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n    text: \"(067) 149 14 00\",\r\n    isPhone: true,\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n    text: \"pk@uad.edu.ua\",\r\n    isLink: true,\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n    text: \"pk.uad.lviv@gmail.com\",\r\n    isLink: true,\r\n  },\r\n]\r\n\r\n// Бухгалтерія\r\nexport const accountingModalItems: ModalItem[] = [\r\n  {\r\n    icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n    text: \"вул. Під Голоском, 19, ауд. 213\",\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n    text: \"(032) 242 23 46\",\r\n    isPhone: true,\r\n  },\r\n]\r\n\r\n// Відділ платної форми навчання\r\nexport const contractEducationDepartmentModalItems: ModalItem[] = [\r\n  {\r\n    icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n    text: \"вул. Під Голоском, 19, ауд. 234а\",\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n    text: \"(032) 242 23 80\",\r\n    isPhone: true,\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n    text: \"vpn_uad@ukr.net\",\r\n    isLink: true,\r\n  },\r\n]\r\n\r\n// Профком студентів\r\nexport const studentUnionModalItems: ModalItem[] = [\r\n  {\r\n    icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n    text: \"вул. Під Голоском, 19, ауд. 311\",\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n    text: \"(032) 242 23 79\",\r\n    isPhone: true,\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n    text: \"(067) 67 23 173\",\r\n    isPhone: true,\r\n  },\r\n]\r\n\r\n// Студентська рада\r\nexport const studentCouncilModalItems: ModalItem[] = [\r\n  {\r\n    icon: <FontAwesome name=\"instagram\" color={palette.grayedOut} size={16} />,\r\n    text: \"https://www.instagram.com/uad_lviv/\",\r\n    isLink: true,\r\n    linkName: \"uad_lviv\",\r\n  },\r\n]\r\n\r\n// Соц. мережі академії\r\nexport const socialMediaModalItems: ModalItem[] = [\r\n  {\r\n    icon: (\r\n      <View style={{ marginLeft: 2 }}>\r\n        <FontAwesome name=\"instagram\" color={palette.grayedOut} size={16} />\r\n      </View>\r\n    ),\r\n\r\n    text: \"https://www.instagram.com/uad_lviv/\",\r\n    isLink: true,\r\n    linkName: \"@uad_lviv\",\r\n  },\r\n  {\r\n    icon: <FontAwesome name=\"telegram\" color={palette.grayedOut} size={16} />,\r\n    text: \"https://t.me/uad_live\",\r\n    isLink: true,\r\n    linkName: \"@uad_live\",\r\n  },\r\n  {\r\n    icon: <FontAwesome name=\"youtube-play\" color={palette.grayedOut} size={16} />,\r\n    text: \"https://www.youtube.com/user/UADtelevision\",\r\n    isLink: true,\r\n    linkName: \"UADtelevision\",\r\n  },\r\n  {\r\n    icon: <FontAwesome name=\"facebook-official\" color={palette.grayedOut} size={16} />,\r\n    text: \"https://www.facebook.com/uadlv\",\r\n    isLink: true,\r\n  },\r\n  {\r\n    icon: (\r\n      <Image\r\n        source={imageIcons.tiktok}\r\n        // color={palette.grayedOut}\r\n        style={{\r\n          width: 16,\r\n          height: 18,\r\n        }}\r\n      />\r\n    ),\r\n    text: \"https://www.tiktok.com/@uad.lviv\",\r\n    isLink: true,\r\n    linkName: \"@uad.lviv\",\r\n  },\r\n]\r\n","import React from \"react\"\r\nimport { View, Text, StyleSheet, FlatList, Linking, Pressable } from \"react-native\"\r\nimport Separator from \"../shared/Separator\"\r\nimport EntypoIcon from \"react-native-vector-icons/Entypo\"\r\nimport { globalStyles, imageIcons, palette } from \"../styles/global\"\r\nimport AppText from \"../shared/AppText\"\r\nimport { Ionicons, Octicons } from \"@expo/vector-icons\"\r\nimport { ScrollView, TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport { Image } from \"react-native-elements\"\r\nimport OptionPickerModal from \"../components/OptionPickerModal\"\r\nimport {\r\n  ModalItem,\r\n  accountingModalItems,\r\n  admissionsCommitteeModalItems,\r\n  contractEducationDepartmentModalItems,\r\n  corpsModalItems,\r\n  internationalAffairsAndInformationDepartmentModalItems,\r\n  preparationDepartmentModalItems,\r\n  rectorateModalItems,\r\n  socialMediaModalItems,\r\n  studentCouncilModalItems,\r\n  studentUnionModalItems,\r\n} from \"../constants/Contacts\"\r\nimport { isMail, isRunningInBrowser } from \"../utilities/utilities\"\r\nimport { useNavigation } from \"@react-navigation/native\"\r\n\r\n// TODO: Fix faculties screen opening twice in browser, cause\r\n// \"item.props.onPress = null\"\r\n// throws in web and can't be used there\r\n\r\nfunction Category({\r\n  title,\r\n  titleIcon,\r\n  subcategories,\r\n  onPress,\r\n  children,\r\n}: {\r\n  title: string\r\n  titleIcon: JSX.Element\r\n  subcategories: string[]\r\n  onPress: () => void\r\n  children?: JSX.Element\r\n}) {\r\n  return (\r\n    <View style={styles.category}>\r\n      <View style={styles.categoryTitle}>\r\n        {titleIcon}\r\n        <AppText style={[{ fontSize: 14, fontFamily: \"montserrat-semibold\", marginLeft: 5 }]}>{title}</AppText>\r\n      </View>\r\n      <FlatList\r\n        data={children}\r\n        style={[globalStyles.card, { paddingHorizontal: 10, paddingVertical: 10 }]}\r\n        keyExtractor={(item, index) => index.toString()}\r\n        ItemSeparatorComponent={() => {\r\n          return <Separator color=\"rgba(217, 217, 217, 0.4)\" upperElement={true} lowerElement={true} /> // TODO: Refactor\r\n        }}\r\n        renderItem={({ item }) => {\r\n          const itemOnPress = item.props.onPress\r\n\r\n          if (!isRunningInBrowser()) {\r\n            item.props.onPress = null\r\n          }\r\n\r\n          return (\r\n            <TouchableOpacity\r\n              onPress={(e) => {\r\n                // item.props.onPress()\r\n                // e ? e.stopPropagation() : null\r\n\r\n                // if (!e) return\r\n\r\n                // if (e) {\r\n                //   if (e.target != e.currentTarget || e.isPropagationStopped()) return\r\n                // }\r\n\r\n                // console.log(\"executing on press handler as parent\")\r\n\r\n                itemOnPress() // hoist the onPress handler to the parent\r\n              }}\r\n              style={styles.subcategoryButtonContainer}\r\n            >\r\n              <AppText style={[{ fontSize: 15 }]}>{item}</AppText>\r\n              <EntypoIcon name=\"chevron-small-right\" style={globalStyles.grayIcon}></EntypoIcon>\r\n            </TouchableOpacity>\r\n          )\r\n        }}\r\n      />\r\n    </View>\r\n  )\r\n}\r\n\r\nconst constructModalItem = (item: ModalItem, idx) => {\r\n  return (\r\n    <View\r\n      style={{\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        marginVertical: 6,\r\n      }}\r\n    >\r\n      {item.icon}\r\n      <AppText\r\n        onPress={() => {\r\n          if (item.isLink) {\r\n            if (isMail(item.text)) Linking.openURL(`mailto:${item.text}`)\r\n            else Linking.openURL(item.text)\r\n          } else if (item.isPhone) Linking.openURL(`tel:${item.text}`)\r\n        }}\r\n        style={[styles.optionText, item.isLink ? globalStyles.underlinedLink : {}]}\r\n      >\r\n        {item.linkName ? item.linkName : item.text}\r\n      </AppText>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst constructContentPresenterModal = (\r\n  headerText: string,\r\n  isOpen: boolean,\r\n  onCloseModal: () => void,\r\n  initialOptions: ModalItem[],\r\n  displaySeparators = false\r\n) => {\r\n  return (\r\n    <OptionPickerModal\r\n      headerText={headerText}\r\n      isOpen={isOpen}\r\n      hasSearchBar={false}\r\n      displaySeparators={displaySeparators}\r\n      closeModal={onCloseModal}\r\n      initialOptions={initialOptions}\r\n      renderItem={constructModalItem}\r\n      isOptionSelectable={false}\r\n    />\r\n  )\r\n}\r\n\r\nexport default function ContactsScreen() {\r\n  const navigation = useNavigation()\r\n\r\n  let [corpsModalIsOpen, setCorpsModalIsOpen] = React.useState(false)\r\n\r\n  let [rectorateModalIsOpen, setRectorateModalIsOpen] = React.useState(false)\r\n  let [admissionCommitteeModalIsOpen, setAdmissionCommitteeModalIsOpen] = React.useState(false)\r\n  let [preparationDepartmentModalIsOpen, setPreparationDepartmentModalIsOpen] = React.useState(false)\r\n  let [\r\n    internationalAffairsAndInformationDepartmentModalIsOpen,\r\n    setInternationalAffairsAndInformationDepartmentModalIsOpen,\r\n  ] = React.useState(false)\r\n\r\n  let [accountingModalIsOpen, setAccountingModalIsOpen] = React.useState(false)\r\n  let [contractEducationModalIsOpen, setContractEducationModalIsOpen] = React.useState(false)\r\n  let [studentUnionModalIsOpen, setStudentUnionModalIsOpen] = React.useState(false)\r\n  let [studentCouncilModalIsOpen, setStudentCouncilModalIsOpen] = React.useState(false)\r\n  let [socialMediaModalIsOpen, setSocialMediaModalIsOpen] = React.useState(false)\r\n\r\n  const structureAndSubdivisionsSubcategories = [\r\n    \"Ректорат\",\r\n    \"Приймальна комісія\",\r\n    \"Підготовче відділення\",\r\n    \"Відділ міжнародних зв'язків та інф. забезпечення\",\r\n    \"Бухгалтерія\",\r\n    \"Відділ платної форми навчання\",\r\n    \"Профком студентів\",\r\n  ]\r\n\r\n  const studentCommunitiesSubcategories = [\"Студентська рада\", \"Соц. мережі академії\"]\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <Category\r\n        title=\"Корпуси та факультети\"\r\n        titleIcon={\r\n          <Image\r\n            style={{\r\n              width: 14,\r\n              height: 14,\r\n              opacity: 0.5,\r\n            }}\r\n            source={imageIcons.museum}\r\n          />\r\n        }\r\n      >\r\n        <Pressable onPress={() => setCorpsModalIsOpen(true)}>\r\n          <AppText style={styles.subcategoryTitle}>Корпуси академії</AppText>\r\n\r\n          {constructContentPresenterModal(\r\n            \"Корпуси академії\",\r\n            corpsModalIsOpen,\r\n            () => setCorpsModalIsOpen(false),\r\n            corpsModalItems\r\n          )}\r\n        </Pressable>\r\n\r\n        <AppText\r\n          onPress={(e) => {\r\n            console.log(\"executing on press handler as child\")\r\n\r\n            navigation.push(\"Факультети\")\r\n            // e.stopPropagation()\r\n            // e.preventDefault()\r\n\r\n            return true\r\n          }}\r\n          style={styles.subcategoryTitle}\r\n        >\r\n          Факультети академії\r\n        </AppText>\r\n      </Category>\r\n\r\n      <Category\r\n        title=\"Структура і підрозділи\"\r\n        titleIcon={<Ionicons name=\"git-merge-outline\" size={16} color={palette.text} />}\r\n        subcategories={structureAndSubdivisionsSubcategories}\r\n      >\r\n        <Pressable onPress={() => setRectorateModalIsOpen(true)}>\r\n          {constructContentPresenterModal(\r\n            \"Ректорат\",\r\n            rectorateModalIsOpen,\r\n            () => setRectorateModalIsOpen(false),\r\n            rectorateModalItems\r\n          )}\r\n          <AppText style={styles.subcategoryTitle}>Ректорат</AppText>\r\n        </Pressable>\r\n\r\n        <Pressable onPress={() => setAdmissionCommitteeModalIsOpen(true)}>\r\n          {constructContentPresenterModal(\r\n            \"Приймальна комісія\",\r\n            admissionCommitteeModalIsOpen,\r\n            () => setAdmissionCommitteeModalIsOpen(false),\r\n            admissionsCommitteeModalItems\r\n          )}\r\n          <AppText style={styles.subcategoryTitle}>Приймальна комісія</AppText>\r\n        </Pressable>\r\n\r\n        <Pressable onPress={() => setPreparationDepartmentModalIsOpen(true)}>\r\n          {constructContentPresenterModal(\r\n            \"Підготовче відділення\",\r\n            preparationDepartmentModalIsOpen,\r\n            () => setPreparationDepartmentModalIsOpen(false),\r\n            preparationDepartmentModalItems\r\n          )}\r\n          <AppText style={styles.subcategoryTitle}>Підготовче відділення</AppText>\r\n        </Pressable>\r\n\r\n        <Pressable onPress={() => setInternationalAffairsAndInformationDepartmentModalIsOpen(true)}>\r\n          {constructContentPresenterModal(\r\n            \"Відділ міжнародних звʼязків та інф. забезпечення\",\r\n            internationalAffairsAndInformationDepartmentModalIsOpen,\r\n            () => setInternationalAffairsAndInformationDepartmentModalIsOpen(false),\r\n            internationalAffairsAndInformationDepartmentModalItems\r\n          )}\r\n          <AppText style={[styles.subcategoryTitle]}>Відділ міжнародних звʼязків{\"\\n\"}та інф. забезпечення</AppText>\r\n        </Pressable>\r\n\r\n        <Pressable onPress={() => setAccountingModalIsOpen(true)}>\r\n          {constructContentPresenterModal(\r\n            \"Бухгалтерія\",\r\n            accountingModalIsOpen,\r\n            () => setAccountingModalIsOpen(false),\r\n            accountingModalItems\r\n          )}\r\n          <AppText style={styles.subcategoryTitle}>Бухгалтерія</AppText>\r\n        </Pressable>\r\n\r\n        <Pressable onPress={() => setContractEducationModalIsOpen(true)}>\r\n          {constructContentPresenterModal(\r\n            \"Відділ платної форми навчання\",\r\n            contractEducationModalIsOpen,\r\n            () => setContractEducationModalIsOpen(false),\r\n            contractEducationDepartmentModalItems\r\n          )}\r\n          <AppText style={styles.subcategoryTitle}>Відділ платної форми навчання</AppText>\r\n        </Pressable>\r\n\r\n        <Pressable onPress={() => setStudentUnionModalIsOpen(true)}>\r\n          {constructContentPresenterModal(\r\n            \"Профком студентів\",\r\n            studentUnionModalIsOpen,\r\n            () => setStudentUnionModalIsOpen(false),\r\n            studentUnionModalItems\r\n          )}\r\n          <AppText style={styles.subcategoryTitle}>Профком студентів</AppText>\r\n        </Pressable>\r\n      </Category>\r\n\r\n      <Category\r\n        title=\"Студентські спільноти\"\r\n        titleIcon={<Octicons name=\"accessibility\" size={16} color={palette.text} />}\r\n        onPress={() => {}}\r\n      >\r\n        <Pressable onPress={() => setStudentCouncilModalIsOpen(true)}>\r\n          {constructContentPresenterModal(\r\n            \"Студентська рада\",\r\n            studentCouncilModalIsOpen,\r\n            () => setStudentCouncilModalIsOpen(false),\r\n            studentCouncilModalItems\r\n          )}\r\n          <AppText style={styles.subcategoryTitle}>Студентська рада</AppText>\r\n        </Pressable>\r\n\r\n        <Pressable onPress={() => setSocialMediaModalIsOpen(true)}>\r\n          {constructContentPresenterModal(\r\n            \"Соц. мережі академії\",\r\n            socialMediaModalIsOpen,\r\n            () => setSocialMediaModalIsOpen(false),\r\n            socialMediaModalItems\r\n          )}\r\n          <AppText style={styles.subcategoryTitle}>Соц. мережі академії</AppText>\r\n        </Pressable>\r\n      </Category>\r\n    </ScrollView>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 10,\r\n    paddingBottom: 20,\r\n  },\r\n\r\n  category: {\r\n    marginVertical: 10,\r\n  },\r\n\r\n  navigateToSubcategoryButton: {},\r\n\r\n  subcategoryButtonContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    marginVertical: 8,\r\n  },\r\n\r\n  categoryTitle: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginLeft: 14,\r\n    marginBottom: 5,\r\n  },\r\n\r\n  subcategoryTitle: {\r\n    fontSize: 15,\r\n  },\r\n\r\n  optionText: {\r\n    marginLeft: 10,\r\n    fontSize: 16,\r\n  },\r\n})\r\n","import * as React from \"react\"\r\n\r\nimport { createStackNavigator } from \"@react-navigation/stack\"\r\nimport FacultiesTestScreen from \"../screens/TestTabsScreens/FacultiesTestScreen\"\r\nimport ContactsModalTestScreen from \"../screens/TestTabsScreens/ContactsModalsTestScreen\"\r\nimport { View } from \"react-native\"\r\nimport { ContactsStackRoutes } from \"./ContactsStackRoutes\"\r\nimport StackHeader from \"../components/StackHeader\"\r\nimport ContactsScreen from \"../screens/ContactsScreen\"\r\nimport { palette } from \"../styles/global\"\r\n\r\nconst Stack = createStackNavigator()\r\n\r\nexport default function ContactsStack() {\r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={\r\n        {\r\n          // headerShown: false,\r\n        }\r\n      }\r\n    >\r\n      <Stack.Screen\r\n        name={ContactsStackRoutes.CONTACTS_MENU}\r\n        component={ContactsScreen}\r\n        options={{\r\n          header: () => <View />,\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name={ContactsStackRoutes.FACULTIES}\r\n        component={FacultiesTestScreen}\r\n        options={{\r\n          header: (props) => (\r\n            <StackHeader\r\n              title={\"Факультети академії\"}\r\n              useSafeAreaView={false}\r\n              hasBackground={false}\r\n              captionStyles={{ color: palette.text, fontFamily: \"montserrat-bold\", fontSize: 20 }}\r\n            />\r\n          ),\r\n        }}\r\n      />\r\n    </Stack.Navigator>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { View, StyleSheet } from \"react-native\"\r\nimport AppText from \"../shared/AppText\"\r\nimport { globalStyles, palette } from \"../styles/global\"\r\nimport { FlatList, TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport _ from \"lodash\"\r\nimport NewsLoaderService, { NewsArticle } from \"../services/NewsLoaderService\"\r\n\r\n// TODO: move to utils\r\nfunction truncateText(text: string, maxLength: number) {\r\n  if (text.length > maxLength) {\r\n    return text.slice(0, maxLength) + \"...\"\r\n  } else {\r\n    return text\r\n  }\r\n}\r\n\r\nfunction NewsCard({ date, title, body }: { date: string; title: string; body: string }) {\r\n  // convert date into day/month/year format\r\n  let dateObj = new Date(date)\r\n  let day = dateObj.getDate()\r\n  let month = dateObj.getMonth() + 1\r\n  let year = dateObj.getFullYear()\r\n  date = `${day}.${month}.${year}`\r\n\r\n  let [isBodyExpanded, setIsBodyExpanded] = useState(false)\r\n\r\n  return (\r\n    <View style={{ marginBottom: 15 }}>\r\n      <AppText style={{ alignSelf: \"center\" }}>{date}</AppText>\r\n      <View style={styles.newsArticleCard}>\r\n        <AppText style={{ fontFamily: \"montserrat-bold\", fontSize: 14 }}>{title}</AppText>\r\n        <AppText style={{ marginVertical: 15, fontFamily: \"montserrat-regular\" }}>\r\n          {isBodyExpanded ? body : truncateText(body, 280)}\r\n        </AppText>\r\n        <TouchableOpacity onPress={() => setIsBodyExpanded(!isBodyExpanded)} style={styles.moreButton}>\r\n          <AppText style={{ fontFamily: \"montserrat-semibold\", color: palette.navigationBackground }}>\r\n            {!isBodyExpanded ? \"Детальніше\" : \"Згорнути\"}\r\n          </AppText>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default function NewsScreen() {\r\n  let [news, setNews] = useState<NewsArticle[]>([\r\n    //     {\r\n    //       //   createdAt: \"14.04.2023\",\r\n    //       createdAt: new Date().toDateString(),\r\n    //       title: \"Новий випуск журналу “Студентський MOOD”\",\r\n    //       body: `Привітики друзі! Прийшла весна і вже починає радувати нас сонечком та зеленню 🌷\r\n    // Сьогодні ж замість сонця - наш \"Студентський MOOD\"!\r\n    // Підготували вам тексти про відпочинок, війну та інше)\r\n    // Читайте, піклуйтеся про себе і близьких, і хай весна принесе всім нам лише хороші новини! 🌱`.repeat(2),\r\n    //     },\r\n  ])\r\n\r\n  useEffect(() => {\r\n    async function onMount() {\r\n      const newsLoaderService = await NewsLoaderService.GetInstance()\r\n      let fetchedNews\r\n      try {\r\n        fetchedNews = await newsLoaderService.getNewsFromContentful()\r\n      } catch (e) {\r\n        fetchedNews = newsLoaderService.getExampleNews()\r\n      }\r\n\r\n      setNews([...news, ...fetchedNews])\r\n    }\r\n\r\n    onMount()\r\n  }, [])\r\n\r\n  return (\r\n    <FlatList\r\n      data={news}\r\n      renderItem={({ item }) => <NewsCard date={item.createdAt} title={item.title} body={item.body} />}\r\n      style={styles.container}\r\n    />\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 10,\r\n  },\r\n\r\n  newsArticleCard: {\r\n    ...globalStyles.card,\r\n    paddingVertical: 15,\r\n    paddingHorizontal: 15,\r\n\r\n    marginVertical: 5,\r\n  },\r\n\r\n  moreButton: {\r\n    ...globalStyles.navigationButton,\r\n    width: \"100%\",\r\n    paddingVertical: 7,\r\n  },\r\n})\r\n","import React from \"react\"\r\nimport { View, StyleSheet } from \"react-native\"\r\n\r\nexport default function Card({\r\n  children,\r\n  shadows = true,\r\n  cardContentStyle = {},\r\n}: {\r\n  children: any\r\n  shadows?: boolean\r\n  cardContentStyle?: StyleSheet\r\n}) {\r\n  return (\r\n    <View style={{ ...styles.card, ...(!shadows ? styles.noShadow : {}) }}>\r\n      <View style={styles.cardContent}>{children}</View>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  card: {\r\n    // height: \"95%\",\r\n    // width: \"98%\",\r\n    borderRadius: 6,\r\n    elevation: 3,\r\n    backgroundColor: \"#fff\",\r\n    shadowOffset: { width: 1, height: 1 },\r\n    shadowColor: \"#333\",\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 2,\r\n    marginHorizontal: 4,\r\n    marginVertical: 6,\r\n    overflow: \"scroll\",\r\n  },\r\n\r\n  noShadow: {\r\n    elevation: 0,\r\n    shadowOpacity: 0,\r\n  },\r\n\r\n  cardContent: {\r\n    marginHorizontal: 5,\r\n    marginVertical: 20,\r\n  },\r\n})\r\n","import { useState, useEffect, useRef } from \"react\"\r\nimport { Text, View, Button } from \"react-native\"\r\nimport * as Notifications from \"expo-notifications\"\r\nimport React from \"react\"\r\nimport LocalNotificationsService from \"../../services/LocalNotificationsService\"\r\nimport { ScrollView } from \"react-native-gesture-handler\"\r\nimport Card from \"../../shared/card\"\r\nimport { Input } from \"react-native-elements\"\r\nimport Constants from \"expo-constants\"\r\nimport * as IntentLauncher from \"expo-intent-launcher\"\r\n\r\n// TODO: handle daylight savings. Perhaps ask user to reload notifications, that could be easier\r\n// this makes sense: if the user is interested in the app, they will cooperate\r\n\r\n// TODO: Test biweekly notifications\r\n\r\n// TODO: Fix package name not being resolved correctly first time the app is launched\r\n// a temp fix would be to always open notification channel settings for actual app\r\n\r\n// TODO: Configure notificatitions to appear on the lock screen\r\n\r\nexport default function NotificationTestsScreen() {\r\n  const [ready, setReady] = useState(false)\r\n\r\n  const [permission, setPermission] = useState<Notifications.PermissionStatus | null>(null)\r\n  const [scheduledNotifications, setScheduledNotifications] = useState<Notifications.NotificationRequest[]>([])\r\n  const [delayForExampleNotificationViaDate, setDelayForExampleNotificationViaDate] = useState(\"5\")\r\n\r\n  const [notification, setNotification] = useState<Notifications.Notification | null>(null)\r\n\r\n  const localNotificationsServiceRef = useRef<LocalNotificationsService | null>(null)\r\n\r\n  const notificationListener = useRef<Notifications.Subscription>()\r\n  const responseListener = useRef<Notifications.Subscription>()\r\n\r\n  // data: \"package:\" + pkg,\r\n  // \"interactive-schedule-notifications\"\r\n\r\n  const requestConfigurePermissions = async () => {\r\n    // navigate to notification channel settings\r\n    // const pkg = Constants.manifest.releaseChannel ? Constants.manifest.android.package : \"host.exp.exponent\"\r\n\r\n    // IntentLauncher.startActivityAsync(\"android.settings.APP_NOTIFICATION_SETTINGS\", {\r\n    //   // data: \"package:\" + pkg,\r\n    //   extra: {\r\n    //     // \"android.provider.extra.CHANNEL_ID\": \"Default\",\r\n    //     \"android.provider.extra.APP_PACKAGE\": pkg,\r\n    //   },\r\n    // })\r\n\r\n    // const pkg = Constants.manifest.releaseChannel ? Constants.manifest.android.package : \"host.exp.exponent\"\r\n    const pkg = Constants.manifest.android.package\r\n    const allChannels = await Notifications.getNotificationChannelsAsync()\r\n    const channel = await Notifications.getNotificationChannelAsync(\"interactive-schedule-notifications\")\r\n    console.log(\"[Notification Tests] All channels of this app: \")\r\n    console.log(allChannels)\r\n    console.log(\"[Notification Tests] Channel id for main channel: \" + channel?.id)\r\n\r\n    IntentLauncher.startActivityAsync(\"android.settings.CHANNEL_NOTIFICATION_SETTINGS\", {\r\n      // data: \"package:\" + pkg,\r\n      extra: {\r\n        \"android.provider.extra.CHANNEL_ID\":\r\n          pkg == \"host.exp.exponent\" ? \"expo-experience\" : \"interactive-schedule-notifications\",\r\n        \"android.provider.extra.APP_PACKAGE\": pkg,\r\n      },\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    notificationListener.current = Notifications.addNotificationReceivedListener((notification) => {\r\n      setNotification(notification)\r\n      console.log(\"notification has beed shown\")\r\n    })\r\n\r\n    responseListener.current = Notifications.addNotificationResponseReceivedListener((response) => {\r\n      console.log(\"user responded to notification:\" + JSON.stringify(response))\r\n    })\r\n\r\n    const init = async () => {\r\n      let notifications = await LocalNotificationsService.GetInstance()\r\n      localNotificationsServiceRef.current = notifications\r\n\r\n      let registeredNotifications = await notifications.getAllScheduledNotificationsAsync()\r\n      let permissions = await notifications.checkPermissionsAsync()\r\n\r\n      setScheduledNotifications(registeredNotifications)\r\n      setPermission(permissions.status)\r\n\r\n      setReady(true)\r\n    }\r\n\r\n    init()\r\n\r\n    return () => {\r\n      Notifications.removeNotificationSubscription(notificationListener.current!)\r\n      Notifications.removeNotificationSubscription(responseListener.current!)\r\n    }\r\n  }, [])\r\n\r\n  if (!ready) {\r\n    return (\r\n      <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\r\n        <Text>Завантаження...</Text>\r\n      </View>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ScrollView contentContainerStyle={{ alignItems: \"center\" }}>\r\n      <Card style={{ backgroundColor: \"magenta\" }}>\r\n        <Text>Сповіщення дозволені: {permission}</Text>\r\n      </Card>\r\n\r\n      <View style={{ alignItems: \"center\", justifyContent: \"center\" }}>\r\n        <Text>Title: {notification && notification.request.content.title} </Text>\r\n        <Text>Body: {notification && notification.request.content.body}</Text>\r\n        <Text>Data: {notification && JSON.stringify(notification.request.content.data)}</Text>\r\n      </View>\r\n\r\n      <View>\r\n        <Text\r\n          style={{\r\n            alignSelf: \"center\",\r\n            marginBottom: 10,\r\n          }}\r\n        >\r\n          Сповіщення:\r\n        </Text>\r\n\r\n        <Button\r\n          title=\"Надіслати локальне сповіщення (приходить зі затримкою в ~3-5 секунд)\"\r\n          onPress={async () => {\r\n            localNotificationsServiceRef.current!.sendExampleNotification()\r\n          }}\r\n        />\r\n      </View>\r\n\r\n      <View style={{ marginVertical: 10 }}>\r\n        <View style={{ flexDirection: \"row\", width: \"50%\", alignItems: \"center\" }}>\r\n          <Text>Через секунд:</Text>\r\n          <Input\r\n            keyboardType=\"number-pad\"\r\n            defaultValue={delayForExampleNotificationViaDate}\r\n            onChangeText={(newValue) => setDelayForExampleNotificationViaDate(newValue)}\r\n          />\r\n        </View>\r\n\r\n        <Button\r\n          title={`Прислати сповіщення через ${delayForExampleNotificationViaDate} секунд`}\r\n          color={\"green\"}\r\n          onPress={async () => {\r\n            localNotificationsServiceRef.current!.scheduleExampleNotificationViaDate(\r\n              parseInt(delayForExampleNotificationViaDate)\r\n            )\r\n          }}\r\n        />\r\n      </View>\r\n\r\n      <View style={{ marginVertical: 10 }}>\r\n        <Text>Має показувати сповіщення кожні 5 секунд, навіть якщо додаток повністю закритий</Text>\r\n        <View style={{ marginVertical: 10 }}>\r\n          <Button\r\n            title=\"Присилати сповіщення кожнi 5 секунд\"\r\n            color={\"green\"}\r\n            onPress={async () => {\r\n              localNotificationsServiceRef.current!.scheduleRepeatableExampleNotification()\r\n            }}\r\n          />\r\n        </View>\r\n\r\n        <View style={{ marginVertical: 10 }}>\r\n          <Button\r\n            title=\"Присилати сповіщення кожного дня о 12:00\"\r\n            color={\"green\"}\r\n            onPress={async () => {\r\n              localNotificationsServiceRef.current!.scheduleRepeatableDailyExampleNotification()\r\n            }}\r\n          />\r\n        </View>\r\n\r\n        <View style={{ marginVertical: 10 }}>\r\n          <Button\r\n            title=\"Попросити дозволу на сповіщення\"\r\n            color={\"green\"}\r\n            onPress={async () => {\r\n              localNotificationsServiceRef.current!.checkPermissionsAsync\r\n            }}\r\n          />\r\n        </View>\r\n\r\n        <Button\r\n          title=\"Зупинити періодичні сповіщення\"\r\n          color={\"red\"}\r\n          onPress={async () => {\r\n            localNotificationsServiceRef.current!.cancelAllScheduledNotificationsAsync()\r\n          }}\r\n        />\r\n\r\n        <View>\r\n          <Text>Наступне Сповіщення</Text>\r\n          <Button\r\n            title=\"Попросити налаштувати сповіщення\"\r\n            onPress={() => {\r\n              requestConfigurePermissions()\r\n            }}\r\n          />\r\n        </View>\r\n      </View>\r\n    </ScrollView>\r\n  )\r\n}\r\n","import * as React from \"react\"\r\nimport {\r\n  PixelRatio,\r\n  Pressable,\r\n  Text,\r\n  TouchableOpacity,\r\n  TouchableOpacityBase,\r\n  View,\r\n  useWindowDimensions,\r\n} from \"react-native\"\r\nimport { NavigationContainer } from \"@react-navigation/native\"\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\"\r\nimport { Ionicons } from \"@expo/vector-icons\"\r\nimport NotificationTestsScreen from \"../screens/TestTabsScreens/NotificationTests\"\r\nimport Collapsible from \"react-native-collapsible\"\r\nimport { TouchableHighlight } from \"react-native-gesture-handler\"\r\nimport AppText from \"./AppText\"\r\n\r\nexport default function Expander({ header, children }: { header: string; children: React.ReactNode }) {\r\n  let [collapsed, setCollapsed] = React.useState(true)\r\n  //   console.log(\"[Expander] expander recieved these children:\")\r\n  //   console.log(children)\r\n\r\n  return (\r\n    <View>\r\n      <TouchableOpacity onPress={() => setCollapsed(!collapsed)}>\r\n        <AppText>\r\n          {header} <Ionicons name={collapsed ? \"arrow-down\" : \"arrow-up\"} />\r\n        </AppText>\r\n      </TouchableOpacity>\r\n\r\n      <Collapsible collapsed={collapsed}>{children}</Collapsible>\r\n    </View>\r\n  )\r\n}\r\n","import { useState, useEffect, useRef } from \"react\"\r\nimport { Text, View, Button, ToastAndroid } from \"react-native\"\r\n\r\nimport LocalNotificationsService from \"../../services/LocalNotificationsService\"\r\nimport * as Notifications from \"expo-notifications\"\r\nimport { FlatList, ScrollView } from \"react-native-gesture-handler\"\r\nimport React from \"react\"\r\nimport Card from \"../../shared/card\"\r\nimport Expander from \"../../shared/Expander\"\r\nimport { CheckBox, Input, SearchBar } from \"react-native-elements\"\r\nimport _ from \"lodash\"\r\n\r\n// TODO: Consider this warning:\r\n// VirtualizedList: You have a large list that is slow to update - make sure your renderItem function renders components that follow React performance best practices\r\n// like PureComponent, shouldComponentUpdate, etc. {\"contentLength\": 7060, \"dt\": 598, \"prevDt\": 859}\r\n\r\nexport default function ScheduledNotificationsScreen() {\r\n  const [ready, setReady] = useState(false)\r\n\r\n  let [showRegularClasses, setShowRegularClasses] = useState(false)\r\n  let [showBiweeklyClasses, setShowBiweeklyClasses] = useState(true)\r\n  let [filterQuery, setFilterQuery] = useState(\"\")\r\n\r\n  // fetch all scheduled nootifications\r\n  const localNotificationsServiceRef = useRef<LocalNotificationsService | null>(null)\r\n  let [scheduledNotifications, setScheduledNotifications] = useState<Notifications.NotificationRequest[]>([])\r\n\r\n  const scheduledNotificationsWithParsedTimestamp = _.cloneDeep(scheduledNotifications).map((n) => {\r\n    if (n.trigger.type === \"date\") {\r\n      n.trigger.value = new Date(n.trigger.value).toUTCString()\r\n      // n.trigger.timeZoneOffset = new Date(n.trigger.value).getTimezoneOffset()\r\n    }\r\n\r\n    return n\r\n  })\r\n  const filteredScheduledNotifications = scheduledNotificationsWithParsedTimestamp.filter((n) => {\r\n    if (n.trigger.type === \"weekly\" && !showRegularClasses) return false\r\n    if (n.trigger.type === \"date\" && !showBiweeklyClasses) return false\r\n\r\n    if (JSON.stringify(n).includes(filterQuery)) {\r\n      return true\r\n    }\r\n    return false\r\n  })\r\n\r\n  const sortedScheduledNotifications = _.sortBy(filteredScheduledNotifications, (n) => {\r\n    if (n.trigger.type === \"weekly\") {\r\n      return n.trigger.weekday * 24 * 60 + n.trigger.hour * 60 + n.trigger.minute\r\n    } else if (n.trigger.type === \"date\") {\r\n      return new Date(n.trigger.value) - 0\r\n    }\r\n  })\r\n\r\n  // display them\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      let notifications = await LocalNotificationsService.GetInstance()\r\n      localNotificationsServiceRef.current = notifications\r\n\r\n      let registeredNotifications = await notifications.getAllScheduledNotificationsAsync()\r\n\r\n      setScheduledNotifications(registeredNotifications)\r\n      setReady(true)\r\n    }\r\n\r\n    init()\r\n  }, [])\r\n\r\n  return (\r\n    <View style={{ alignItems: \"center\", marginTop: 40 }}>\r\n      <Text>Всього запланованих сповіщень: {scheduledNotifications.length}</Text>\r\n      <Button\r\n        title=\"Fetch All Scheduled Notifications\"\r\n        onPress={async () => {\r\n          // show toast\r\n          // AndroidToast.show(\"Fetching all scheduled notifications...\", AndroidToast.SHORT)\r\n\r\n          ToastAndroid.show(\"Fetching all scheduled notifications...\", ToastAndroid.SHORT)\r\n          let notifications = await localNotificationsServiceRef.current!.getAllScheduledNotificationsAsync()\r\n\r\n          setScheduledNotifications(notifications)\r\n          ToastAndroid.show(\"Fetched and set state...\", ToastAndroid.SHORT)\r\n        }}\r\n      />\r\n      <Text>Список запланованих сповіщень: </Text>\r\n      <ScrollView style={{ minHeight: 55 }} horizontal contentContainerStyle={{ flexDirection: \"row\" }}>\r\n        <CheckBox\r\n          checked={showRegularClasses}\r\n          onPress={() => setShowRegularClasses(!showRegularClasses)}\r\n          title={\"Щотижневі пари\"}\r\n        />\r\n        <CheckBox\r\n          checked={showBiweeklyClasses}\r\n          onPress={() => setShowBiweeklyClasses(!showBiweeklyClasses)}\r\n          title={\"Щодвотижневі пари (Ті, що по чисельнику/знаменнику\"}\r\n        />\r\n      </ScrollView>\r\n\r\n      <View style={{ width: \"70%\" }}>\r\n        <Input\r\n          ref={(search) => (this.search = search)}\r\n          onChangeText={(text) => setFilterQuery(text)}\r\n          placeholder=\"Filter By Text\"\r\n          onBlur={() => null}\r\n        />\r\n      </View>\r\n\r\n      <FlatList\r\n        data={sortedScheduledNotifications}\r\n        keyExtractor={(item) => item.identifier}\r\n        ListEmptyComponent={() => (\r\n          <View>\r\n            <Text>Сповіщень не знайдено</Text>\r\n          </View>\r\n        )}\r\n        renderItem={({ item, index }) => {\r\n          const notification = item\r\n\r\n          return (\r\n            <Card\r\n              key={index}\r\n              style={{\r\n                backgroundColor: \"red\",\r\n              }}\r\n            >\r\n              <Text style={{ alignSelf: \"center\" }}>Notification #{index + 1}</Text>\r\n              <Text>\r\n                Notification title: <Text style={{ fontWeight: \"bold\" }}>{notification.content.title}</Text>{\" \"}\r\n              </Text>\r\n              <Text>Notification trigger type: {notification.trigger.type}</Text>\r\n              <Expander header=\"Notification Details\">\r\n                <View>\r\n                  <Text>Details:</Text>\r\n                  <Text>Notification id: {notification.identifier} </Text>\r\n\r\n                  <Text> {JSON.stringify(notification.trigger)} </Text>\r\n                </View>\r\n              </Expander>\r\n\r\n              <View style={{ marginVertical: 10, alignItems: \"flex-end\" }}>\r\n                <Button\r\n                  onPress={() =>\r\n                    localNotificationsServiceRef.current!.cancelScheduledNotificationAsync(notification.identifier)\r\n                  }\r\n                  title=\"Cancel\"\r\n                  color={\"red\"}\r\n                />\r\n              </View>\r\n            </Card>\r\n          )\r\n        }}\r\n      />\r\n    </View>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { View, Text, StyleSheet } from \"react-native\"\r\nimport AppText from \"../shared/AppText\"\r\nimport { Modal } from \"react-native\"\r\nimport { Pressable } from \"react-native\"\r\nimport { ScrollView } from \"react-native-gesture-handler\"\r\nimport { globalStyles } from \"../styles/global\"\r\n\r\n// TODO: Add types to props\r\n\r\nexport default function ContentViewModal(props) {\r\n  return (\r\n    <Modal animationType=\"fade\" transparent={true} style={styles.modal} visible={props.visible}>\r\n      <Pressable onPress={() => props.closeModal()} style={styles.overlay}></Pressable>\r\n\r\n      <View style={styles.modalContentContainer}>\r\n        <ScrollView style={styles.modalChildren}>{props.children}</ScrollView>\r\n      </View>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  modal: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"red\", // not gonna work cause it's transparent\r\n  },\r\n\r\n  overlay: {\r\n    backgroundColor: \"rgba(0, 0, 0, 0.25)\",\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n\r\n  modalContentContainer: {\r\n    ...globalStyles.modalContentContainer,\r\n  },\r\n\r\n  modalChildren: {\r\n    height: \"100%\",\r\n  },\r\n})\r\n","import React from \"react\"\r\n\r\nimport { View } from \"react-native\"\r\nimport { Pressable, Text } from \"react-native\"\r\nimport { StyleSheet } from \"react-native\"\r\nimport { TouchableHighlight, TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport AppText from \"./AppText\"\r\nimport { palette } from \"../styles/global\"\r\n\r\nexport default function FlatButton({ onPress, text, color }) {\r\n  return (\r\n    <TouchableOpacity style={{ alignItems: \"flex-start\" }} onPress={onPress}>\r\n      <View style={styles.button}>\r\n        <AppText style={styles.closeButtonText}>{text}</AppText>\r\n      </View>\r\n    </TouchableOpacity>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  closeButtonText: {\r\n    fontFamily: \"montserrat-600\",\r\n    color: palette.grayedOut,\r\n    fontSize: 16,\r\n  },\r\n\r\n  button: {\r\n    alignItems: \"flex-start\",\r\n    backgroundColor: \"#FFFFFF\",\r\n    borderWidth: 1,\r\n    borderColor: \"#E6E6E6\",\r\n    padding: 10,\r\n    paddingHorizontal: 30,\r\n    marginTop: 10,\r\n    // borderRadius: 10,\r\n\r\n    shadowColor: \"rgba(0,0,0,1)\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 1,\r\n    },\r\n    elevation: 0.2,\r\n    shadowOpacity: 0.0,\r\n    shadowRadius: 0,\r\n    borderRadius: 10,\r\n  },\r\n})\r\n","import { useEffect } from \"react\"\r\nimport React from \"react\"\r\n\r\nimport { View, Text, StyleSheet, NativeSyntheticEvent, TextInputFocusEventData, Pressable } from \"react-native\"\r\nimport AppText from \"../../shared/AppText\"\r\n\r\nimport * as FileSystem from \"expo-file-system\"\r\nimport { Button } from \"@rneui/themed\"\r\nimport { Input } from \"react-native-elements\"\r\nimport ContentViewModal from \"../../components/ContentViewModal\"\r\nimport { ScrollView, TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport { createClient } from \"contentful/dist/contentful.browser.min.js\"\r\nimport { AssetFile, ContentfulClientApi } from \"contentful\"\r\nimport Expander from \"../../shared/Expander\"\r\nimport ScheduleLoaderService from \"../../services/ScheduleLoaderService\"\r\nimport FlatButton from \"../../shared/Button\"\r\n\r\nconst pathToSchedules = `assets/schedules/`\r\n// const istSchedule = FileSystem.readAsStringAsync(pathToSchedules + \"IST-51M.json\")\r\n// const bundledAssetsInfo = FileSystem.getInfoAsync(\"\")\r\n\r\nexport default function FileSystemScreen() {\r\n  const [bundledAssetsInfo, setBundledAssetsInfo] = React.useState([])\r\n\r\n  const [fileContentModalVisible, setFileContentModalVisible] = React.useState(false)\r\n  const [selectedFileContent, setSelectedFileContent] = React.useState(\"selected file content\")\r\n\r\n  const [currentDir, setCurrentDir] = React.useState<string>(FileSystem.documentDirectory)\r\n  const [allFiles, setAllFiles] = React.useState<string[]>([])\r\n\r\n  const [firstFieldText, setFirstFieldText] = React.useState(\"\")\r\n  const [secondFieldText, setSecondFieldText] = React.useState(\"\")\r\n\r\n  const [contentfulSchedule, setContentfulSchedule] = React.useState(\"\")\r\n  const [contentfulScheduleAsAsset, setContentfulScheduleAsAsset] = React.useState(\"\")\r\n  const [contentfulScheduleAsDownloadedAsset, setContentfulScheduleAsDownloadedAsset] = React.useState(\"\")\r\n  const [allContentfulAssets, setAllContentfulAssets] = React.useState(\"\")\r\n\r\n  const saveToFile = async () => {\r\n    const text = firstFieldText + \"\\n\" + secondFieldText\r\n\r\n    const path = FileSystem.documentDirectory + \"test.txt\"\r\n    const content = text\r\n\r\n    await FileSystem.writeAsStringAsync(path, content)\r\n\r\n    const info = await FileSystem.getInfoAsync(path)\r\n    console.log(\"save successful. file info:\")\r\n    console.log(info)\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function init() {\r\n      // const info = await FileSystem.readDirectoryAsync(FileSystem.bundleDirectory)\r\n      // console.log(\"bundled assets info:\")\r\n      // console.log(info)\r\n\r\n      let allFiles = await FileSystem.readDirectoryAsync(currentDir)\r\n\r\n      console.log(\"all files:\")\r\n      console.log(allFiles)\r\n      setAllFiles(allFiles)\r\n\r\n      const client: ContentfulClientApi<undefiend> = createClient({\r\n        space: \"ude6y2h1h61l\",\r\n        environment: \"master\", // defaults to 'master' if not set\r\n        accessToken: \"hQc8OI2VQrAnLLSWSpflQyByQUZ_t5ct1Ed8axAu7M0\",\r\n      })\r\n\r\n      client\r\n        .getEntry(\"4DlBdNKIvYPma8B18WwQsJ\")\r\n        .then((entry) => {\r\n          console.log(entry)\r\n          setContentfulSchedule(JSON.stringify(entry, null, 4))\r\n        })\r\n        .catch((e) => {\r\n          console.error(\"fetching contentful schedule failed:\")\r\n          console.error(e)\r\n        })\r\n\r\n      client\r\n        .getAsset(\"2wFiyBYGXQbdRvtnSAS8Xm\")\r\n        .then((asset) => {\r\n          console.log(asset)\r\n          setContentfulScheduleAsAsset(JSON.stringify(asset, null, 4))\r\n          const file: AssetFile = asset.fields.file\r\n\r\n          const protocol = \"https:\"\r\n          const linkToFile = file.url\r\n          FileSystem.downloadAsync(protocol + linkToFile, FileSystem.documentDirectory + file.fileName, {}).then(\r\n            (res) => {\r\n              console.log(\"downloaded file:\")\r\n              console.log(res)\r\n\r\n              FileSystem.readAsStringAsync(res.uri).then((content) => {\r\n                setContentfulScheduleAsDownloadedAsset(content)\r\n              })\r\n            }\r\n          )\r\n        })\r\n        .catch((e) => {\r\n          console.error(\"fetching contentful schedule as asset failed:\")\r\n          console.error(e)\r\n\r\n          setContentfulScheduleAsAsset(\"failed to download the asset\")\r\n          setContentfulScheduleAsDownloadedAsset(\"failed to download the asset\")\r\n        })\r\n\r\n      client.getAssets().then((assets) => {\r\n        console.log(assets)\r\n\r\n        let assetNames: string[] = []\r\n\r\n        if (assets.items.length !== 0) {\r\n          assetNames = assets.items.map((a) => a.fields.file.fileName)\r\n        }\r\n\r\n        setAllContentfulAssets(JSON.stringify(assetNames, null, 4))\r\n      })\r\n\r\n      await initFields()\r\n\r\n      // for testing purposes:\r\n      let scheudleLoaderInstance = ScheduleLoaderService.GetInstance()\r\n    }\r\n\r\n    init()\r\n  }, [])\r\n\r\n  async function initFields() {\r\n    // read from test.txt\r\n    const path = FileSystem.documentDirectory + \"test.txt\"\r\n\r\n    let content: string\r\n\r\n    try {\r\n      content = await FileSystem.readAsStringAsync(path)\r\n    } catch (e) {\r\n      content = \"a\\nb\"\r\n    }\r\n    const lines = content.split(\"\\n\")\r\n\r\n    setFirstFieldText(lines[0])\r\n    setSecondFieldText(lines[1])\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View>\r\n        <Input onChangeText={(text) => setFirstFieldText(text)} value={firstFieldText} />\r\n        <Input onChangeText={(text) => setSecondFieldText(text)} value={secondFieldText} />\r\n      </View>\r\n      <View style={{ flexDirection: \"row\" }}>\r\n        <Button color={\"success\"} title={\"Зберегти\"} onPress={() => saveToFile()} />\r\n        <Button color={\"error\"} title={\"Скасувати\"} onPress={() => initFields()} />\r\n      </View>\r\n      <View>\r\n        <FlatButton\r\n          text={\"Усі Файли\"}\r\n          onPress={() => {\r\n            setCurrentDir(FileSystem.documentDirectory)\r\n            FileSystem.readDirectoryAsync(FileSystem.documentDirectory).then((content) => {\r\n              setAllFiles(content)\r\n            })\r\n          }}\r\n        />\r\n        <ScrollView>\r\n          {allFiles.map((f, idx) => (\r\n            <TouchableOpacity\r\n              key={idx}\r\n              onLongPress={() => {\r\n                FileSystem.deleteAsync(currentDir + f).then(() => {\r\n                  setAllFiles(allFiles.filter((file) => file !== f))\r\n                })\r\n              }}\r\n              onPress={async () => {\r\n                let isFolder = (await FileSystem.getInfoAsync(FileSystem.documentDirectory + f)).isDirectory\r\n\r\n                if (isFolder) {\r\n                  setCurrentDir(FileSystem.documentDirectory + f + \"/\")\r\n                  FileSystem.readDirectoryAsync(FileSystem.documentDirectory + f).then((content) => {\r\n                    setAllFiles(content)\r\n                  })\r\n                } else {\r\n                  FileSystem.readAsStringAsync(currentDir + f).then((content) => {\r\n                    setSelectedFileContent(content)\r\n                    setFileContentModalVisible(true)\r\n                  })\r\n                }\r\n              }}\r\n            >\r\n              <AppText>{f}</AppText>\r\n            </TouchableOpacity>\r\n          ))}\r\n        </ScrollView>\r\n      </View>\r\n      <View>\r\n        <AppText style={{ color: \"red\" }}>Файли, що йдуть разом з додатком (не працює):</AppText>\r\n        <View></View>\r\n      </View>\r\n      <View>\r\n        <Expander header=\"Contentful Entry тест\">\r\n          <ScrollView style={{ height: 500 }}>\r\n            <AppText>{contentfulSchedule}</AppText>\r\n          </ScrollView>\r\n        </Expander>\r\n      </View>\r\n      <View>\r\n        <Expander header=\"Contentful Asset Test\">\r\n          <ScrollView style={{ height: 200 }}>\r\n            <AppText>{contentfulScheduleAsAsset}</AppText>\r\n          </ScrollView>\r\n        </Expander>\r\n      </View>\r\n      <View>\r\n        <Expander header=\"Contentful Asset As Downloaded File Test\">\r\n          <ScrollView style={{ height: 200 }}>\r\n            <AppText>{contentfulScheduleAsDownloadedAsset}</AppText>\r\n          </ScrollView>\r\n        </Expander>\r\n      </View>\r\n      <View>\r\n        <Expander header=\"All Contentful Assets\">\r\n          <ScrollView style={{ height: 200 }}>\r\n            <AppText>{allContentfulAssets}</AppText>\r\n          </ScrollView>\r\n        </Expander>\r\n      </View>\r\n\r\n      <ContentViewModal visible={fileContentModalVisible} closeModal={() => setFileContentModalVisible(false)}>\r\n        <AppText>{selectedFileContent}</AppText>\r\n      </ContentViewModal>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n})\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { View, Text, StyleSheet } from \"react-native\"\r\nimport { Button } from \"react-native-elements\"\r\nimport { SafeAreaView } from \"react-native-safe-area-context\"\r\nimport ScheduleLoaderService from \"../../services/ScheduleLoaderService\"\r\nimport ScheduleModel, { ScheduleDay } from \"../../models/ScheduleModel\"\r\nimport SettingsService from \"../../services/SettingsService\"\r\nimport { FlatList, TouchableOpacity } from \"react-native-gesture-handler\"\r\n\r\nimport { useSwipeableItemParams } from \"react-native-swipeable-item\"\r\nimport { globalStyles } from \"../../styles/global\"\r\nimport { useNavigation } from \"@react-navigation/native\"\r\nimport _ from \"lodash\"\r\nimport { EditorStackRoutes } from \"../../routes/EditorStackRoutes\"\r\n\r\nimport \"setimmediate\"\r\n\r\n// TODO: use this library to implement swipeable items\r\n// https://github.com/computerjazz/react-native-swipeable-item\r\n\r\nexport default function ScheduleEditor() {\r\n  let [isReady, setIsReady] = useState(false)\r\n  let [sampleScheduleDay, setSampleDay] = useState<ScheduleDay>()\r\n\r\n  let settingsServiceRef = React.useRef<SettingsService | null>(null)\r\n\r\n  let navigation = useNavigation()\r\n  const currentRouteName = navigation.getId()\r\n\r\n  useEffect(() => {\r\n    async function init() {\r\n      let scheduleLoaderInstance = await ScheduleLoaderService.GetInstance()\r\n      let schedule = new ScheduleModel(\"groupname_groupyear\", \"groupname\", 5)\r\n\r\n      // TODO: Fix warning about undefined\r\n\r\n      let firstScheduleFile = scheduleLoaderInstance.scheduleFiles[0]\r\n      let firstScheduleFilename = firstScheduleFile.filename\r\n      console.log(\"first schedule filename:\", firstScheduleFilename)\r\n\r\n      await schedule.getScheduleFromScheduleLoader(firstScheduleFilename)\r\n\r\n      let settingsService = await SettingsService.GetInstance()\r\n      settingsServiceRef.current = settingsService\r\n\r\n      setSampleDay(schedule.scheduleDays[0])\r\n      setIsReady(true)\r\n    }\r\n\r\n    init()\r\n  }, [])\r\n\r\n  let [data, setData] = useState([\r\n    { key: \"1\", title: \"Item 1\", isSlot: true },\r\n    { key: \"2\", title: \"Item 2\", isSlot: true },\r\n    { key: \"3\", title: \"Item 3\", isSlot: false },\r\n    // { key: \"4\", title: \"Item 4\", isSlot: false },\r\n    // { key: \"5\", title: \"Item 5\", isSlot: false },\r\n    // { key: \"6\", title: \"Item 6\", isSlot: false },\r\n    // { key: \"7\", title: \"Item 7\", isSlot: true },\r\n    // { key: \"8\", title: \"Item 8\", isSlot: false },\r\n    // { key: \"9\", title: \"Item 9\", isSlot: false },\r\n    // { key: \"10\", title: \"Item 10\", isSlot: false },\r\n  ])\r\n\r\n  if (!isReady) {\r\n    return (\r\n      <View>\r\n        <Text>Loading...</Text>\r\n      </View>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <View>\r\n        <Text>Редактор</Text>\r\n        <Text> ({currentRouteName})</Text>\r\n        <View style={[{ flexDirection: \"row\", justifyContent: \"space-around\" }]}>\r\n          <Button title=\"Save\" />\r\n          <Button title=\"Cancel\" />\r\n          <Button title=\"Reset\" />\r\n        </View>\r\n        <FlatList\r\n          scrollEnabled={true}\r\n          nestedScrollEnabled={false}\r\n          data={[data, data, data, data]}\r\n          keyExtractor={(item) => Math.random().toString()}\r\n          renderItem={({ item }) => {\r\n            let dataElem = item\r\n            return (\r\n              <FlatList\r\n                // scrollEnabled={false}\r\n                // nestedScrollEnabled={true}\r\n                // prop\r\n                data={dataElem}\r\n                key={Math.random().toString()}\r\n                keyExtractor={(item) => _.random(0, 100000, false).toString()}\r\n                onDragEnd={({ data }) => console.log(\"[drag end] data:\", data)}\r\n                renderItem={({ item: draggable, drag, isActive }) => {\r\n                  return (\r\n                    <TouchableOpacity\r\n                      style={[\r\n                        { backgroundColor: isActive ? \"orange\" : \"red\" },\r\n                        { margin: 10 },\r\n                        draggable.isSlot ? { backgroundColor: \"gray\" } : {},\r\n                      ]}\r\n                      onLongPress={drag}\r\n                      onPress={() => {\r\n                        navigation.push(EditorStackRoutes.SCHEDULE_CLASS_FORM, {\r\n                          scheduleClass: draggable,\r\n                          onFormDataUpdated: (updatedClass) => {\r\n                            console.log(\"updated class:\", updatedClass)\r\n\r\n                            let isNewEntry = updatedClass.title != \"\"\r\n                            let isSlot = !isNewEntry\r\n\r\n                            setData(\r\n                              dataElem.map((class_) =>\r\n                                class_.key === draggable.key ? { ...class_, ...updatedClass, isSlot } : class_\r\n                              )\r\n                            )\r\n                          },\r\n                        })\r\n                      }}\r\n                    >\r\n                      {/* <SwipeableItem\r\n                        key={draggable.key}\r\n                        // item={item}\r\n                        renderUnderlayLeft={() => <UnderlayRightSide />}\r\n                        // renderUnderlayRight={() => <UnderlayLeft />}\r\n                        snapPointsLeft={[!draggable.isSlot ? 50 : 0]} // snap points for right side underlay\r\n                        snapPointsRight={[0]} // disable left side underlay\r\n                        activationThreshold={10}\r\n                      > */}\r\n                      <View style={[styles.reorderable]}>\r\n                        <Text>{draggable.title}</Text>\r\n                      </View>\r\n                      {/* </SwipeableItem> */}\r\n                    </TouchableOpacity>\r\n                  )\r\n                }}\r\n              />\r\n            )\r\n          }}\r\n          style={{ padding: 20 }}\r\n        ></FlatList>\r\n      </View>\r\n    </SafeAreaView>\r\n  )\r\n}\r\n\r\nconst UnderlayRightSide = () => {\r\n  const { close } = useSwipeableItemParams<Item>()\r\n  function openClassEditScreen(): void {}\r\n\r\n  return (\r\n    <View\r\n      style={[\r\n        styles.row,\r\n        styles.underlayLeft,\r\n        {\r\n          // alignSelf: \"center\",\r\n        },\r\n      ]}\r\n    >\r\n      <View>\r\n        <TouchableOpacity onPress={() => close()}>\r\n          <Text style={styles.text}>Del</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n\r\n  reorderable: {\r\n    height: 20,\r\n    width: \"95%\",\r\n    ...globalStyles.centered,\r\n    marginVertical: 5,\r\n  },\r\n\r\n  row: {\r\n    flexDirection: \"row\",\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: 15,\r\n  },\r\n\r\n  underlayLeft: {\r\n    flex: 1,\r\n    backgroundColor: \"lime\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n\r\n  text: {\r\n    fontWeight: \"bold\",\r\n    color: \"white\",\r\n    fontSize: 32,\r\n  },\r\n})\r\n","import { createStackNavigator } from \"@react-navigation/stack\"\r\nimport * as React from \"react\"\r\nimport ScheduleEditor from \"../screens/TestTabsScreens/ScheduleEditor\"\r\nimport { View } from \"react-native\"\r\nimport StackHeader from \"../components/StackHeader\"\r\nimport ScheduleClassForm from \"../screens/TestTabsScreens/scheduleEditorStack/ScheduleClassForm\"\r\nimport { EditorStackRoutes } from \"./EditorStackRoutes\"\r\n\r\nconst Stack = createStackNavigator()\r\n\r\nexport default function TestEditorStack() {\r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={\r\n        {\r\n          // headerShown: false,\r\n        }\r\n      }\r\n    >\r\n      <Stack.Screen\r\n        name={EditorStackRoutes.EDITOR}\r\n        component={ScheduleEditor}\r\n        options={{\r\n          header: () => <View />,\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name={EditorStackRoutes.SCHEDULE_CLASS_FORM}\r\n        component={ScheduleClassForm}\r\n        options={{\r\n          header: (props) => <StackHeader title={\"Пара\"} />,\r\n        }}\r\n      />\r\n    </Stack.Navigator>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { View, Text, StyleSheet, Button, Linking } from \"react-native\"\r\nimport OptionPickerModal from \"../../components/OptionPickerModal\"\r\nimport { globalStyles, imageIcons, palette } from \"../../styles/global\"\r\nimport { FontAwesome, Ionicons, MaterialIcons } from \"@expo/vector-icons\"\r\nimport { SafeAreaView } from \"react-native-safe-area-context\"\r\nimport AppText from \"../../shared/AppText\"\r\nimport { useNavigation } from \"@react-navigation/native\"\r\nimport { ContactsStackRoutes } from \"../../routes/ContactsStackRoutes\"\r\nimport { Image } from \"react-native-elements\"\r\nimport { isMail } from \"../../utilities/utilities\"\r\n\r\ntype ModalItem = {\r\n  icon: JSX.Element\r\n  text: string\r\n  isPhone?: boolean\r\n  isLink?: boolean\r\n  linkName?: string\r\n}\r\n\r\nexport default function ContactsModalTestScreen() {\r\n  let navigation = useNavigation()\r\n\r\n  let [corpsModalIsOpen, setCorpsModalIsOpen] = React.useState(false)\r\n  let [rectorateModalIsOpen, setRectorateModalIsOpen] = React.useState(false)\r\n  let [preparationDepartmentModalIsOpen, setPreparationDepartmentModalIsOpen] = React.useState(false)\r\n  let [\r\n    internationalAffairsAndInformationDepartmentModalIsOpen,\r\n    setInternationalAffairsAndInformationDepartmentModalIsOpen,\r\n  ] = React.useState(false)\r\n  let [admissionCommitteeModalIsOpen, setAdmissionCommitteeModalIsOpen] = React.useState(false)\r\n  let [studentCouncilModalIsOpen, setStudentCouncilModalIsOpen] = React.useState(false)\r\n  let [socialMediaModalIsOpen, setSocialMediaModalIsOpen] = React.useState(false)\r\n\r\n  let academyCorps = [\r\n    \"вул. Під Голоском, 19\",\r\n    \"вул. Підвальна, 17\",\r\n    \"вул. Личаківська, 3\",\r\n    \"вул. Коцюбинського, 21\",\r\n    \"вул. Винниченка, 12\",\r\n  ]\r\n\r\n  // Корпуси академії\r\n  let corpsModalItems = academyCorps.map((corps) => {\r\n    return {\r\n      text: corps,\r\n      icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n    }\r\n  })\r\n\r\n  // Ректорат\r\n  let rectorateModalItems: ModalItem[] = [\r\n    {\r\n      icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n      text: \"вул. Під Голоском, 19, ауд. 234\",\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n      text: \"(032) 242 23 77\",\r\n      isPhone: true,\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n      text: \"uad@uad.edu.ua\",\r\n      isLink: true,\r\n    },\r\n  ]\r\n\r\n  // Підготовче відділення\r\n  let preparationDepartmentModalItems: ModalItem[] = [\r\n    {\r\n      icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n      text: \"вул. Під Голоском, 19, ауд. 218\",\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n      text: \"(032) 242 23 78\",\r\n      isPhone: true,\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n      text: \"pv@uad.edu.ua\",\r\n      isLink: true,\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"globe\" color={palette.grayedOut} size={16} />,\r\n      text: \"http://www.uad-pv.pp.ua/\",\r\n      isLink: true,\r\n    },\r\n  ]\r\n\r\n  // Відділ міжнародних звʼязків та інформаційного забезпечення\r\n  let internationalAffairsAndInformationDepartmentModalItems: ModalItem[] = [\r\n    {\r\n      icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n      text: \"вул. Під Голоском, 19\",\r\n    },\r\n\r\n    {\r\n      icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n      text: \"(032) 259 94 21\",\r\n      isPhone: true,\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n      text: \"ird@uad.lviv.ua\",\r\n      isLink: true,\r\n    },\r\n  ]\r\n\r\n  // Приймальна комісія\r\n  let admissionsCommitteeModalItems: ModalItem[] = [\r\n    {\r\n      icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n      text: \"вул. Під Голоском, 19, каб. 417, 200\",\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n      text: \"(067) 149 14 00\",\r\n      isPhone: true,\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n      text: \"pk@uad.edu.ua\",\r\n      isLink: true,\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n      text: \"pk.uad.lviv@gmail.com\",\r\n      isLink: true,\r\n    },\r\n  ]\r\n\r\n  // Бухгалтерія\r\n  let accountingModalItems: ModalItem[] = [\r\n    {\r\n      icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n      text: \"вул. Під Голоском, 19, ауд. 213\",\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n      text: \"(032) 242 23 46\",\r\n      isPhone: true,\r\n    },\r\n  ]\r\n\r\n  // Відділ платної форми навчання\r\n  let contractEducationDepartmentModalItems: ModalItem[] = [\r\n    {\r\n      icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n      text: \"вул. Під Голоском, 19, ауд. 234а\",\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n      text: \"(032) 242 23 80\",\r\n      isPhone: true,\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n      text: \"vpn_uad@ukr.net\",\r\n      isLink: true,\r\n    },\r\n  ]\r\n\r\n  // Профком студентів\r\n  let studentUnionModalItems: ModalItem[] = [\r\n    {\r\n      icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n      text: \"вул. Під Голоском, 19, ауд. 311\",\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n      text: \"(032) 242 23 79\",\r\n      isPhone: true,\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n      text: \"(067) 67 23 173\",\r\n      isPhone: true,\r\n    },\r\n  ]\r\n\r\n  // Студентська рада\r\n  let studentCouncilModalItems: ModalItem[] = [\r\n    {\r\n      icon: <FontAwesome name=\"instagram\" color={palette.grayedOut} size={16} />,\r\n      text: \"https://www.instagram.com/uad_lviv/\",\r\n      isLink: true,\r\n      linkName: \"uad_lviv\",\r\n    },\r\n  ]\r\n\r\n  // Соц. мережі академії\r\n  let socialMediaModalItems: ModalItem[] = [\r\n    {\r\n      icon: <FontAwesome name=\"instagram\" color={palette.grayedOut} size={16} />,\r\n      text: \"https://www.instagram.com/uad_lviv/\",\r\n      isLink: true,\r\n      linkName: \"@uad_lviv\",\r\n    },\r\n    {\r\n      icon: <FontAwesome name=\"telegram\" color={palette.grayedOut} size={16} />,\r\n      text: \"https://t.me/uad_live\",\r\n      isLink: true,\r\n      linkName: \"@uad_live\",\r\n    },\r\n    {\r\n      icon: <FontAwesome name=\"youtube-play\" color={palette.grayedOut} size={16} />,\r\n      text: \"https://www.youtube.com/user/UADtelevision\",\r\n      isLink: true,\r\n      linkName: \"UADtelevision\",\r\n    },\r\n    {\r\n      icon: <FontAwesome name=\"facebook-official\" color={palette.grayedOut} size={16} />,\r\n      text: \"https://www.facebook.com/uadlv\",\r\n      isLink: true,\r\n    },\r\n    {\r\n      icon: (\r\n        <Image\r\n          source={imageIcons.tiktok}\r\n          // color={palette.grayedOut}\r\n          style={{\r\n            width: 16,\r\n            height: 18,\r\n          }}\r\n        />\r\n      ),\r\n      text: \"https://www.tiktok.com/@uad.lviv\",\r\n      isLink: true,\r\n      linkName: \"@uad.lviv\",\r\n    },\r\n  ]\r\n\r\n  const constructModalItem = (item: ModalItem, idx) => {\r\n    return (\r\n      <View\r\n        style={{\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          marginVertical: 6,\r\n        }}\r\n      >\r\n        {item.icon}\r\n        <AppText\r\n          onPress={() => {\r\n            if (item.isLink) {\r\n              if (isMail(item.text)) Linking.openURL(`mailto:${item.text}`)\r\n              else Linking.openURL(item.text)\r\n            } else if (item.isPhone) Linking.openURL(`tel:${item.text}`)\r\n          }}\r\n          style={[styles.optionText, item.isLink ? globalStyles.underlinedLink : {}]}\r\n        >\r\n          {item.linkName ? item.linkName : item.text}\r\n        </AppText>\r\n      </View>\r\n    )\r\n  }\r\n\r\n  const constructContentPresenterModal = (\r\n    headerText: string,\r\n    isOpen: boolean,\r\n    onCloseModal: () => void,\r\n    initialOptions: typeof rectorateModalItems,\r\n    displaySeparators = false\r\n  ) => {\r\n    return (\r\n      <OptionPickerModal\r\n        headerText={headerText}\r\n        isOpen={isOpen}\r\n        hasSearchBar={false}\r\n        displaySeparators={displaySeparators}\r\n        closeModal={onCloseModal}\r\n        initialOptions={initialOptions}\r\n        renderItem={constructModalItem}\r\n        isOptionSelectable={false}\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <View>\r\n        <Button title=\"Корпуси академії\" onPress={() => setCorpsModalIsOpen(true)} />\r\n        {constructContentPresenterModal(\r\n          \"Корпуси академії\",\r\n          corpsModalIsOpen,\r\n          () => setCorpsModalIsOpen(false),\r\n          corpsModalItems,\r\n          true\r\n        )}\r\n      </View>\r\n      <View>\r\n        <Button title=\"Ректорат\" onPress={() => setRectorateModalIsOpen(true)} />\r\n        {constructContentPresenterModal(\r\n          \"Ректорат\",\r\n          rectorateModalIsOpen,\r\n          () => setRectorateModalIsOpen(false),\r\n          rectorateModalItems\r\n        )}\r\n      </View>\r\n\r\n      <View>\r\n        <Button title=\"Підготовче відділення\" onPress={() => setPreparationDepartmentModalIsOpen(true)} />\r\n        {constructContentPresenterModal(\r\n          \"Підготовче відділення\",\r\n          preparationDepartmentModalIsOpen,\r\n          () => setPreparationDepartmentModalIsOpen(false),\r\n          preparationDepartmentModalItems\r\n        )}\r\n      </View>\r\n      <View>\r\n        {/* push Faculties Screen on top of stack */}\r\n        <Button title=\"Факультети академії\" onPress={() => navigation.push(ContactsStackRoutes.FACULTIES)} />\r\n      </View>\r\n\r\n      <View>\r\n        <Button\r\n          title=\"Відділ міжнародних звʼязків та інформаційного забезпечення\"\r\n          onPress={() => setInternationalAffairsAndInformationDepartmentModalIsOpen(true)}\r\n        />\r\n        {constructContentPresenterModal(\r\n          \"Відділ міжнародних звʼязків та інформаційного забезпечення\",\r\n          internationalAffairsAndInformationDepartmentModalIsOpen,\r\n          () => setInternationalAffairsAndInformationDepartmentModalIsOpen(false),\r\n          internationalAffairsAndInformationDepartmentModalItems\r\n        )}\r\n      </View>\r\n      <View>\r\n        <Button title=\"Приймальна комісія\" onPress={() => setAdmissionCommitteeModalIsOpen(true)} />\r\n        {constructContentPresenterModal(\r\n          \"Приймальна комісія\",\r\n          admissionCommitteeModalIsOpen,\r\n          () => setAdmissionCommitteeModalIsOpen(false),\r\n          admissionsCommitteeModalItems\r\n        )}\r\n      </View>\r\n\r\n      <View>\r\n        <Button title=\"Студентська рада\" onPress={() => setStudentCouncilModalIsOpen(true)} />\r\n        {constructContentPresenterModal(\r\n          \"Студентська рада\",\r\n          studentCouncilModalIsOpen,\r\n          () => setStudentCouncilModalIsOpen(false),\r\n          studentCouncilModalItems\r\n        )}\r\n      </View>\r\n\r\n      <View>\r\n        <Button title=\"Соц. мережі академії\" onPress={() => setSocialMediaModalIsOpen(true)} />\r\n        {constructContentPresenterModal(\r\n          \"Соц. мережі академії\",\r\n          socialMediaModalIsOpen,\r\n          () => setSocialMediaModalIsOpen(false),\r\n          socialMediaModalItems\r\n        )}\r\n      </View>\r\n    </SafeAreaView>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    margin: 20,\r\n    justifyContent: \"space-around\",\r\n  },\r\n  optionText: {\r\n    marginLeft: 10,\r\n    fontSize: 16,\r\n  },\r\n})\r\n","import * as React from \"react\"\r\n\r\nimport { createStackNavigator } from \"@react-navigation/stack\"\r\nimport FacultiesTestScreen from \"../screens/TestTabsScreens/FacultiesTestScreen\"\r\nimport ContactsModalTestScreen from \"../screens/TestTabsScreens/ContactsModalsTestScreen\"\r\nimport { View } from \"react-native\"\r\nimport { ContactsStackRoutes } from \"./ContactsStackRoutes\"\r\nimport StackHeader from \"../components/StackHeader\"\r\n\r\nconst Stack = createStackNavigator()\r\n\r\nexport default function ContactsTestStack() {\r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={\r\n        {\r\n          // headerShown: false,\r\n        }\r\n      }\r\n    >\r\n      <Stack.Screen\r\n        name={ContactsStackRoutes.CONTACTS_MENU}\r\n        component={ContactsModalTestScreen}\r\n        options={{\r\n          header: () => <View />,\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name={ContactsStackRoutes.FACULTIES}\r\n        component={FacultiesTestScreen}\r\n        options={{\r\n          header: (props) => <StackHeader title={\"Факультети академії\"} />,\r\n        }}\r\n      />\r\n    </Stack.Navigator>\r\n  )\r\n}\r\n","import * as React from \"react\"\r\nimport { PixelRatio, Text, View, useWindowDimensions } from \"react-native\"\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\"\r\nimport { Ionicons } from \"@expo/vector-icons\"\r\nimport NotificationTestsScreen from \"../screens/TestTabsScreens/NotificationTests\"\r\nimport ScheduledNotificationsScreen from \"../screens/TestTabsScreens/ScheduledNotificationsScreen\"\r\nimport InroductoryCarouselScreen from \"../screens/IntroductoryCarousel/IntroductoryCarousel\"\r\nimport FileSystemScreen from \"../screens/TestTabsScreens/FileSystemScreen\"\r\nimport TestEditorStack from \"./testEditorStack\"\r\nimport ContactsTestStack from \"./ContactsTestStack\"\r\n\r\nfunction DeviceInfoScreen() {\r\n  const { height, width } = useWindowDimensions()\r\n  const aspectRatio = height / width\r\n  let pixelRatio = PixelRatio.get()\r\n  let dpi = 160 * pixelRatio\r\n\r\n  return (\r\n    <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\r\n      <Text>Інформація про пристрій</Text>\r\n      <Text>Ширина вікна: {width}</Text>\r\n      <Text>Висота вікна: {height}</Text>\r\n      <Text>Pixel ratio: {pixelRatio}</Text>\r\n      <Text>Aspect ratio: {aspectRatio}</Text>\r\n      <Text>DPI: {dpi}</Text>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst Tab = createBottomTabNavigator()\r\n\r\nexport default function TestTabs() {\r\n  return (\r\n    <Tab.Navigator\r\n      screenOptions={{\r\n        headerShown: false,\r\n        tabBarStyle: {\r\n          // display: \"none\",\r\n        },\r\n      }}\r\n      initialRouteName=\"Модальні вікна\"\r\n    >\r\n      <Tab.Screen\r\n        name=\"Заплановані Сповіщення\"\r\n        component={ScheduledNotificationsScreen}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => <Ionicons name=\"notifications-circle\" color={color} size={size} />,\r\n        }}\r\n      />\r\n\r\n      <Tab.Screen\r\n        name=\"Сповіщення\"\r\n        component={NotificationTestsScreen}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => <Ionicons name=\"notifications\" color={color} size={size} />,\r\n        }}\r\n      />\r\n\r\n      <Tab.Screen\r\n        name=\"Вступне Вікно\"\r\n        component={InroductoryCarouselScreen}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => <Ionicons name=\"enter\" color={color} size={size} />,\r\n        }}\r\n      />\r\n\r\n      <Tab.Screen\r\n        name=\"Файлова Система\"\r\n        component={FileSystemScreen}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => <Ionicons name=\"folder\" color={color} size={size} />,\r\n        }}\r\n      />\r\n\r\n      <Tab.Screen\r\n        name=\"Редактор\"\r\n        component={TestEditorStack}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => <Ionicons name=\"options\" color={color} size={size} />,\r\n        }}\r\n      />\r\n\r\n      <Tab.Screen\r\n        name=\"Модальні вікна\"\r\n        component={ContactsTestStack}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => <Ionicons name=\"md-file-tray-stacked\" color={color} size={size} />,\r\n        }}\r\n      />\r\n\r\n      <Tab.Screen\r\n        name=\"Інше\"\r\n        component={DeviceInfoScreen}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => <Ionicons name=\"ellipsis-horizontal\" color={color} size={size} />,\r\n        }}\r\n      />\r\n    </Tab.Navigator>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { StyleSheet, View, Text, ActivityIndicator } from \"react-native\"\r\nimport FontAwesomeIcon from \"react-native-vector-icons/FontAwesome\"\r\nimport EntypoIcon from \"react-native-vector-icons/Entypo\"\r\nimport { ScrollView } from \"react-native\"\r\nimport CustomSwitch from \"../shared/Switch\"\r\nimport SettingsService, { DisplayEmptyDaysMode, DisplayTeacherMode } from \"../services/SettingsService\"\r\nimport { globalStyles, palette } from \"../styles/global\"\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport OptionPickerModal from \"../components/OptionPickerModal\"\r\nimport ScheduleNotificationsService from \"../services/ScheduleNotificationsService\"\r\nimport ScheduleModel from \"../models/ScheduleModel\"\r\nimport ScheduleLoaderService from \"../services/ScheduleLoaderService\"\r\nimport { ensureExtension, ensureNoExtension, isRunningInBrowser } from \"../utilities/utilities\"\r\nimport AppText from \"../shared/AppText\"\r\nimport FlatButton from \"../shared/Button\"\r\nimport OutlinedButton from \"../shared/OutlinedButton\"\r\nimport { Ionicons } from \"@expo/vector-icons\"\r\n\r\n// TODO: Fix settings page visually spazzing out on mount\r\n// it's not the switches\r\n// it's not the effect that saves updated settings to disk\r\n// it's not notification events updating state\r\n// it's not other setters\r\n// this is something that only happens when the main content is rendered\r\n// removing activity indicator as alternative layout breaks settings service integration and makes schedule picker fail to load options\r\n// hell. Let's start with simply refactoring the layout into components\r\n\r\nexport default function Settings() {\r\n  let [schedulePickerData, setSchedulePickerData] = useState<string[]>([])\r\n\r\n  const settingsServiceRef = React.useRef<SettingsService | null>(null)\r\n\r\n  // Note: Update place 0\r\n  let [settingsValues, setSettingsValues] = useState({\r\n    selectedSchedule: \"\",\r\n    displayRoomNumber: false,\r\n    notifyBeforeClass: false,\r\n    displayEmptyDays: \"...\",\r\n    displayTeacherName: \"...\",\r\n    notifyBeforeClassOffsetMinutes: 0,\r\n  })\r\n\r\n  let [schedulePickerModalVisible, setSchedulePickerModalVisible] = useState(false)\r\n  let [schedulePickerModalDisabled, setSchedulePickerModalDisabled] = useState(false)\r\n\r\n  let [emptyDayDisplayModalVisible, setEmptyDayDisplayModalVisible] = useState(false)\r\n\r\n  let [displayTeacherModeModalVisible, setDisplayTeacherModeModalVisible] = useState(false)\r\n  let [notifyBeforehandModalVisible, setNotifyBeforehandModalVisible] = useState(false)\r\n\r\n  const [isReady, setIsReady] = useState(false)\r\n\r\n  useEffect(() => {\r\n    async function onMount() {\r\n      const settingsService = await SettingsService.GetInstance()\r\n      settingsServiceRef.current = settingsService\r\n\r\n      // Note: Update place 1\r\n\r\n      let {\r\n        currentScheduleName,\r\n        displayRoomNumber,\r\n        notifyBeforeClass,\r\n        displayEmptyDays,\r\n        displayTeacherName,\r\n        notifyBeforeClassOffsetMinutes,\r\n      } = settingsServiceRef.current\r\n\r\n      setSettingsValues({\r\n        selectedSchedule: ensureNoExtension(currentScheduleName, \".json\"),\r\n        displayRoomNumber,\r\n        notifyBeforeClass,\r\n        displayEmptyDays,\r\n        displayTeacherName,\r\n        notifyBeforeClassOffsetMinutes,\r\n      })\r\n\r\n      console.log(\"[settings screen init] settingsService.currentSchedule:\", settingsService.currentScheduleName)\r\n\r\n      // setDisplayEmptyDayMode(settingsServiceRef.current.displayEmptyDays)\r\n\r\n      // disable schedule picker modal when notifications are being configured\r\n      const notifService = await ScheduleNotificationsService.GetInstance()\r\n\r\n      notifService.onConfigureNotificationsForScheduleStart = () => {\r\n        setSchedulePickerModalDisabled(true)\r\n        // ToastAndroid.show(\"Configuring notifications...\", ToastAndroid.SHORT)\r\n      }\r\n      notifService.onConfigureNotificationsForScheduleEnd = () => {\r\n        setSchedulePickerModalDisabled(false)\r\n\r\n        // ToastAndroid.show(\"Notifications have been configured\", ToastAndroid.SHORT)\r\n      }\r\n\r\n      let scheduleLodaderInstance = await ScheduleLoaderService.GetInstance()\r\n\r\n      let schedulePickerData = scheduleLodaderInstance.scheduleFiles.map((f) => ensureNoExtension(f.filename, \".json\"))\r\n      setSchedulePickerData(schedulePickerData)\r\n\r\n      setIsReady(true)\r\n    }\r\n    onMount()\r\n  }, [])\r\n\r\n  // write settings to disk on each update to make sure they aren't lost\r\n  useEffect(() => {\r\n    if (!isReady) return\r\n\r\n    // Note: Update place 2\r\n    let {\r\n      selectedSchedule,\r\n      displayRoomNumber,\r\n      notifyBeforeClass,\r\n      displayEmptyDays,\r\n      displayTeacherName,\r\n      notifyBeforeClassOffsetMinutes,\r\n    } = settingsValues\r\n\r\n    // TODO: Refactor this\r\n    let settingsService = settingsServiceRef.current!\r\n    settingsService.currentScheduleName = ensureExtension(selectedSchedule, \".json\")\r\n    settingsService.displayRoomNumber = displayRoomNumber\r\n    settingsService.notifyBeforeClass = notifyBeforeClass\r\n    settingsService.displayEmptyDays = displayEmptyDays as DisplayEmptyDaysMode\r\n    settingsService.displayTeacherName = displayTeacherName as DisplayTeacherMode\r\n    settingsService.notifyBeforeClassOffsetMinutes = notifyBeforeClassOffsetMinutes\r\n\r\n    settingsService.saveToStorage()\r\n  }, [settingsValues])\r\n  async function toggleNotifs(enable: boolean) {\r\n    let scheduleNotifService = await ScheduleNotificationsService.GetInstance()\r\n    if (enable) {\r\n      // TODO: Refactor. Find a way to reference currently selected schedule in ScheduleScreen\r\n      let schedule = new ScheduleModel(\"foo\", \"bar\", 99)\r\n      schedule.getScheduleFromScheduleLoader(settingsServiceRef.current!.currentScheduleName)\r\n      scheduleNotifService.configureNotificationsForSchedule(schedule)\r\n    } else {\r\n      await scheduleNotifService.cancelAllScheduledNotificationsAsync()\r\n    }\r\n  }\r\n\r\n  function constructCategoryHeader(categoryName: string, categoryIcon: JSX.Element) {\r\n    return (\r\n      <View style={styles.categoryHeader}>\r\n        {categoryIcon}\r\n        <AppText style={styles.settingsSectionName}>{categoryName}</AppText>\r\n      </View>\r\n    )\r\n  }\r\n\r\n  function constructSettingsRow(settingDescription: string, changeSettingComponent: JSX.Element) {\r\n    return (\r\n      <View style={styles.settingRow}>\r\n        <AppText style={styles.settingName}>{settingDescription}</AppText>\r\n        {changeSettingComponent}\r\n      </View>\r\n    )\r\n  }\r\n\r\n  if (!isReady) {\r\n    return (\r\n      <View\r\n        style={[\r\n          { flex: 1, justifyContent: \"center\", alignItems: \"center\" },\r\n          styles.loadingIndicatorOverlay,\r\n          isReady ? globalStyles.noDisplay : {},\r\n        ]}\r\n      >\r\n        <ActivityIndicator size=\"large\" color={palette.navigationBackground} />\r\n      </View>\r\n    )\r\n  }\r\n\r\n  // setTimeout(() => {\r\n  //   setIsReady(true)\r\n  // }, 500)\r\n\r\n  let notificationsSection = !isRunningInBrowser() ? (\r\n    <View>\r\n      {constructCategoryHeader(\r\n        \"Сповіщення\",\r\n        <FontAwesomeIcon name=\"bell-o\" style={styles.settingsSectionIcon}></FontAwesomeIcon>\r\n      )}\r\n\r\n      <View style={styles.settingsCategory}>\r\n        {constructSettingsRow(\r\n          \"Нагадувати про початок пари\",\r\n          <CustomSwitch\r\n            onValueChange={(nv) => {\r\n              setSettingsValues({\r\n                ...settingsValues,\r\n                notifyBeforeClass: nv,\r\n              })\r\n\r\n              toggleNotifs(nv)\r\n            }}\r\n            initVal={settingsValues.notifyBeforeClass}\r\n            disabled={false}\r\n          />\r\n        )}\r\n        <View style={styles.separator}></View>\r\n\r\n        {constructSettingsRow(\r\n          \"Сповіщати заздалегідь\",\r\n          <View>\r\n            <TouchableOpacity onPress={() => setNotifyBeforehandModalVisible(true)}>\r\n              <View style={styles.settingValueContainer}>\r\n                <AppText style={styles.settingValue}>{settingsValues.notifyBeforeClassOffsetMinutes + \" хв.\"}</AppText>\r\n                <EntypoIcon name=\"chevron-small-right\" style={styles.grayIcon}></EntypoIcon>\r\n              </View>\r\n            </TouchableOpacity>\r\n\r\n            <OptionPickerModal\r\n              hasSearchBar={false}\r\n              isOpen={notifyBeforehandModalVisible}\r\n              initialOptions={[0, 5, 10, 15, 20].map((n) => n + \" хв.\")}\r\n              initialSelectedOption={settingsValues.notifyBeforeClassOffsetMinutes + \" хв.\"}\r\n              closeModal={() => setNotifyBeforehandModalVisible(false)}\r\n              onSelected={(selected) => {\r\n                let selectedInt = parseInt(selected)\r\n                setSettingsValues({\r\n                  ...settingsValues,\r\n                  notifyBeforeClassOffsetMinutes: selectedInt,\r\n                })\r\n\r\n                toggleNotifs(settingsValues.notifyBeforeClass)\r\n              }}\r\n            />\r\n          </View>\r\n        )}\r\n\r\n        <View style={styles.separator}></View>\r\n\r\n        {constructSettingsRow(\r\n          \"Звук, місце появи сповіщення та ін.\",\r\n          <View style={[styles.settingValueContainer, { marginRight: 3 }]}>\r\n            {/* TODO: Unhardcode margin right */}\r\n\r\n            <TouchableOpacity onPress={settingsServiceRef.current?.openAndroidSystemSettingsForNotifications}>\r\n              <Ionicons name=\"open\" size={14} color={palette.navigationBackground} />\r\n            </TouchableOpacity>\r\n          </View>\r\n        )}\r\n      </View>\r\n    </View>\r\n  ) : null\r\n\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <ScrollView style={styles.scrollViewDirect} contentContainerStyle={styles.scrollViewContentContainer}>\r\n        <View style={styles.pageBackground}>\r\n          {notificationsSection}\r\n\r\n          {constructCategoryHeader(\r\n            \"Розклад\",\r\n            <FontAwesomeIcon name=\"calendar-o\" style={styles.settingsSectionIcon}></FontAwesomeIcon>\r\n          )}\r\n          <View style={styles.settingsCategory}>\r\n            <View>\r\n              <View>\r\n                <View style={styles.settingRow}>\r\n                  <AppText style={styles.settingName}>Мій розклад</AppText>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => {\r\n                      console.log(\"selected schedule before toggling modal:\", settingsValues.selectedSchedule)\r\n                      setSchedulePickerModalVisible(true)\r\n                    }}\r\n                    disabled={schedulePickerModalDisabled}\r\n                    style={styles.centeredTextAndIcon}\r\n                  >\r\n                    {/* TODO: Remove hardcoded margins. Those were set to make activity indicator and actual content to have same size */}\r\n\r\n                    {schedulePickerModalDisabled ? (\r\n                      <ActivityIndicator\r\n                        style={{ marginRight: 10, marginVertical: 3.5 }}\r\n                        size=\"small\"\r\n                        color={palette.navigationBackground}\r\n                      />\r\n                    ) : (\r\n                      <View\r\n                        style={{\r\n                          flexDirection: \"row\",\r\n                          alignItems: \"center\",\r\n                        }}\r\n                      >\r\n                        <AppText style={styles.settingValue}>\r\n                          {ensureNoExtension(settingsValues.selectedSchedule, \".json\")}\r\n                        </AppText>\r\n                        <EntypoIcon name=\"chevron-small-right\" style={styles.grayIcon}></EntypoIcon>\r\n                      </View>\r\n                    )}\r\n\r\n                    {/* TODO: remove the temp fix. The issue is that I don't know why updated prop doesn't rerender the modal */}\r\n                    {settingsValues.selectedSchedule != \"\" ? (\r\n                      <OptionPickerModal\r\n                        headerText=\"Вибери свою групу\"\r\n                        isOpen={schedulePickerModalVisible}\r\n                        initialOptions={schedulePickerData}\r\n                        initialSelectedOption={settingsValues.selectedSchedule}\r\n                        closeModal={() => setSchedulePickerModalVisible(false)}\r\n                        onSelected={(selected) => {\r\n                          setSettingsValues({\r\n                            ...settingsValues,\r\n                            selectedSchedule: ensureExtension(selected, \".json\"),\r\n                          })\r\n                        }}\r\n                      />\r\n                    ) : (\r\n                      <View style={globalStyles.noDisplay} />\r\n                    )}\r\n                  </TouchableOpacity>\r\n                </View>\r\n\r\n                <View style={styles.separator} />\r\n\r\n                {constructSettingsRow(\r\n                  \"Відображати номер аудиторії\",\r\n                  <CustomSwitch\r\n                    initVal={settingsValues.displayRoomNumber}\r\n                    onValueChange={(nv) => {\r\n                      setSettingsValues({\r\n                        ...settingsValues,\r\n                        displayRoomNumber: nv,\r\n                      })\r\n                    }}\r\n                  />\r\n                )}\r\n\r\n                <View style={styles.separator} />\r\n\r\n                {constructSettingsRow(\r\n                  \"Відображати викладача\",\r\n                  <View>\r\n                    <TouchableOpacity\r\n                      onPress={() => setDisplayTeacherModeModalVisible(true)}\r\n                      style={styles.centeredTextAndIcon}\r\n                    >\r\n                      <AppText style={styles.settingValue}>{settingsValues.displayTeacherName}</AppText>\r\n                      <EntypoIcon name=\"chevron-small-right\" style={styles.grayIcon}></EntypoIcon>\r\n                    </TouchableOpacity>\r\n                    <OptionPickerModal\r\n                      hasSearchBar={false}\r\n                      isOpen={displayTeacherModeModalVisible}\r\n                      initialOptions={[\r\n                        DisplayTeacherMode.Full,\r\n                        DisplayTeacherMode.SurnameAndInitials,\r\n                        DisplayTeacherMode.Hide,\r\n                      ]}\r\n                      initialSelectedOption={settingsValues.displayTeacherName}\r\n                      closeModal={() => setDisplayTeacherModeModalVisible(false)}\r\n                      onSelected={(selected) => {\r\n                        setSettingsValues({\r\n                          ...settingsValues,\r\n                          displayTeacherName: selected,\r\n                        })\r\n                      }}\r\n                    />\r\n                  </View>\r\n                )}\r\n\r\n                <View style={styles.separator}></View>\r\n\r\n                {constructSettingsRow(\r\n                  \"Порожні дні\",\r\n                  <View>\r\n                    <TouchableOpacity\r\n                      onPress={() => setEmptyDayDisplayModalVisible(true)}\r\n                      style={styles.centeredTextAndIcon}\r\n                    >\r\n                      <AppText style={styles.settingValue}>{settingsValues.displayEmptyDays}</AppText>\r\n                      <EntypoIcon name=\"chevron-small-right\" style={styles.grayIcon}></EntypoIcon>\r\n                    </TouchableOpacity>\r\n                    <OptionPickerModal\r\n                      hasSearchBar={false}\r\n                      isOpen={emptyDayDisplayModalVisible}\r\n                      initialOptions={[\r\n                        DisplayEmptyDaysMode.Display,\r\n                        DisplayEmptyDaysMode.Darken,\r\n                        DisplayEmptyDaysMode.Hide,\r\n                      ]}\r\n                      initialSelectedOption={settingsValues.displayEmptyDays}\r\n                      closeModal={() => setEmptyDayDisplayModalVisible(false)}\r\n                      onSelected={(selected) => {\r\n                        setSettingsValues({\r\n                          ...settingsValues,\r\n                          displayEmptyDays: selected,\r\n                        })\r\n                      }}\r\n                    />\r\n                  </View>\r\n                )}\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </ScrollView>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport const styles = StyleSheet.create({\r\n  scrollViewContentContainer: {\r\n    // backgroundColor: \"green\",\r\n  },\r\n\r\n  loadingIndicatorOverlay: {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    backgroundColor: palette.background,\r\n\r\n    zIndex: 9999,\r\n  },\r\n\r\n  scrollViewDirect: {\r\n    ...globalStyles.screen,\r\n    paddingBottom: 24,\r\n  },\r\n\r\n  pageBackground: {\r\n    // minHeight: \"100%\",\r\n  },\r\n\r\n  settingValueContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  categoryHeader: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginTop: 24,\r\n    marginLeft: 24,\r\n  },\r\n  settingsSectionName: {\r\n    fontFamily: \"raleway-600\",\r\n    color: \"rgba(90,90,90,1)\",\r\n    fontSize: 14,\r\n\r\n    marginLeft: 6,\r\n  },\r\n\r\n  settingsCategory: {\r\n    padding: 10,\r\n    paddingBottom: 5,\r\n    margin: 11,\r\n\r\n    backgroundColor: \"rgba(255,255,255,1)\",\r\n    borderRadius: 9,\r\n  },\r\n\r\n  separator: {\r\n    width: \"100%\",\r\n    height: 1,\r\n    borderWidth: 0,\r\n    borderTopWidth: 1,\r\n    borderColor: \"rgba(242,242,242,1)\",\r\n  },\r\n\r\n  centeredTextAndIcon: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  settingName: {\r\n    fontFamily: \"raleway-500\",\r\n    color: \"rgba(82,82,82,1)\",\r\n    fontSize: 15,\r\n  },\r\n  settingValue: {\r\n    fontFamily: \"montserrat-medium\",\r\n    color: \"rgba(136,136,136,1)\",\r\n    height: 17,\r\n    textAlign: \"right\",\r\n    fontSize: 12,\r\n  },\r\n  grayIcon: {\r\n    ...globalStyles.grayIcon,\r\n  },\r\n\r\n  settingsSectionIcon: {\r\n    color: \"rgba(90,90,90,1)\",\r\n    fontSize: 15,\r\n  },\r\n  settingRow: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    // alignItems: \"center\",\r\n    // ^ doesn't work as expected\r\n\r\n    marginVertical: 10,\r\n  },\r\n})\r\n","import React from \"react\"\r\nimport { View, Image, StyleSheet, TouchableOpacity, Linking } from \"react-native\"\r\nimport { globalStyles, images, palette, teamMemberImages } from \"../styles/global\"\r\nimport { FontAwesome5, Ionicons } from \"@expo/vector-icons\"\r\nimport AppText from \"../shared/AppText\"\r\nimport { ScrollView } from \"react-native-gesture-handler\"\r\nimport { useNavigation } from \"@react-navigation/native\"\r\nimport { DrawerRoutes } from \"../routes/DrawerRoutes\"\r\n\r\nexport default function AboutScreen() {\r\n  const appVersion = \"1.0.1\"\r\n  const navigation = useNavigation()\r\n\r\n  return (\r\n    <ScrollView style={globalStyles.screen}>\r\n      <View style={styles.card}>\r\n        <View style={[styles.row]}>\r\n          <AppText style={{ color: \"#333333\", letterSpacing: 0 }}>Перший в історії УАД</AppText>\r\n          {/* <SvgUri source={images.uad_logo_text} width=\"200\" height={\"200\"} /> */}\r\n          <Image\r\n            style={{\r\n              width: 73,\r\n              height: 34,\r\n              resizeMode: \"contain\",\r\n\r\n              // backgroundColor: \"red\",\r\n            }}\r\n            source={images.uad_logo_text_not_vector_hires}\r\n          />\r\n        </View>\r\n        <View style={[styles.row, { alignItems: \"flex-end\", marginTop: 45 }]}>\r\n          <AppText style={styles.header}>Інтерактивний {\"\\n\"}розклад</AppText>\r\n          <AppText\r\n            style={{\r\n              color: palette.textOnBackground,\r\n              fontStyle: \"italic\",\r\n              fontSize: 10,\r\n              letterSpacing: 0,\r\n            }}\r\n          >\r\n            і не тільки\r\n          </AppText>\r\n        </View>\r\n      </View>\r\n      <View style={[globalStyles.centered]}>\r\n        <View\r\n          style={[\r\n            styles.card,\r\n            globalStyles.centered,\r\n\r\n            {\r\n              flexDirection: \"row\",\r\n              // justifyContent: \"space-between\",\r\n              width: 110 * 2 + 20,\r\n            },\r\n          ]}\r\n        >\r\n          <TouchableOpacity\r\n            style={[\r\n              {\r\n                width: 110,\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            onPress={() => {\r\n              navigation.navigate(DrawerRoutes.VIEWER)\r\n            }}\r\n          >\r\n            <Ionicons name=\"calendar\" color={palette.textOnBackground} size={48} />\r\n            <AppText style={styles.tileText}>Розклад</AppText>\r\n          </TouchableOpacity>\r\n\r\n          <View\r\n            style={[\r\n              {\r\n                justifyContent: \"center\",\r\n                alignSelf: \"center\",\r\n              },\r\n            ]}\r\n          >\r\n            <Ionicons name=\"add-sharp\" color={palette.textOnBackground} size={32} />\r\n          </View>\r\n\r\n          <TouchableOpacity\r\n            style={[\r\n              {\r\n                alignItems: \"center\",\r\n                width: 110,\r\n              },\r\n            ]}\r\n            onPress={() => {\r\n              navigation.navigate(DrawerRoutes.EDITOR)\r\n            }}\r\n          >\r\n            <Ionicons name=\"options\" color={palette.textOnBackground} size={48} />\r\n            <AppText style={styles.tileText}>Редактор</AppText>\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            style={[styles.card, styles.tile]}\r\n            onPress={() => {\r\n              navigation.navigate(DrawerRoutes.REGLAMENT)\r\n            }}\r\n          >\r\n            <Ionicons name=\"time-sharp\" color={palette.textOnBackground} size={48} />\r\n            <AppText style={styles.tileText}>Регламент</AppText>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity\r\n            style={[styles.card, styles.tile]}\r\n            onPress={() => {\r\n              navigation.navigate(DrawerRoutes.TEACHERS)\r\n            }}\r\n          >\r\n            <FontAwesome5 name=\"user-graduate\" color={palette.textOnBackground} size={48} />\r\n            <AppText style={styles.tileText}>Викладачі</AppText>\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            style={[styles.card, styles.tile]}\r\n            onPress={() => {\r\n              navigation.navigate(DrawerRoutes.CONTACTS)\r\n            }}\r\n          >\r\n            <Ionicons name=\"call\" color={palette.textOnBackground} size={48} />\r\n            <AppText style={styles.tileText}>Контакти</AppText>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity\r\n            style={[styles.card, styles.tile]}\r\n            onPress={() => {\r\n              navigation.navigate(DrawerRoutes.NEWS)\r\n            }}\r\n          >\r\n            <Ionicons name=\"chatbox-ellipses\" color={palette.textOnBackground} size={48} />\r\n            <AppText style={styles.tileText}>Новини</AppText>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n\r\n      <View style={[styles.card]}>\r\n        <AppText style={[styles.teamSectionHeader]}>Команда проекту</AppText>\r\n        <View style={[styles.tilesContainer]}>\r\n          <View style={[styles.row]}>\r\n            <View style={[styles.teamMemberTile]}>\r\n              {/* image container */}\r\n              <View style={styles.teamMemberImageWrapper}>\r\n                <Image style={styles.teamMemberImage} source={teamMemberImages.senchyk_andrii} />\r\n              </View>\r\n              {/* team member description */}\r\n              <View style={styles.teamMemberDescription}>\r\n                <AppText style={[styles.teamMemberName, styles.regularLetterSpacing]}>Сенчик Андрій</AppText>\r\n                <AppText style={[styles.teamMemberDetails]}>Програмування{\"\\n\"}</AppText>\r\n              </View>\r\n            </View>\r\n\r\n            <View style={[styles.teamMemberTile]}>\r\n              {/* image container */}\r\n              <View style={styles.teamMemberImageWrapper}>\r\n                <Image style={styles.teamMemberImage} source={teamMemberImages.zakharova_zarina} />\r\n              </View>\r\n              {/* team member description */}\r\n              <View style={styles.teamMemberDescription}>\r\n                <AppText style={[styles.teamMemberName, styles.regularLetterSpacing]}>Захарова Заріна</AppText>\r\n                <AppText style={[styles.teamMemberDetails]}>\r\n                  Керування проектом{\"\\n\"}\r\n                  Дизайн\r\n                </AppText>\r\n              </View>\r\n            </View>\r\n          </View>\r\n          <View\r\n            style={[\r\n              styles.row,\r\n              {\r\n                marginTop: 40,\r\n              },\r\n            ]}\r\n          >\r\n            <View style={[styles.teamMemberTile]}>\r\n              {/* image container */}\r\n              <View style={styles.teamMemberImageWrapper}>\r\n                <Image style={styles.teamMemberImage} source={teamMemberImages.shepita_julia} />\r\n              </View>\r\n              {/* team member description */}\r\n              <View style={styles.teamMemberDescription}>\r\n                <AppText style={[styles.teamMemberName, styles.regularLetterSpacing]}>Шепіта Юлія</AppText>\r\n                <AppText style={[styles.teamMemberDetails]}>Робота з контентом</AppText>\r\n              </View>\r\n            </View>\r\n\r\n            <View style={[styles.teamMemberTile]}>\r\n              {/* image container */}\r\n              <View style={styles.teamMemberImageWrapper}>\r\n                <Image style={styles.teamMemberImage} source={teamMemberImages.ivanov_mykhailo} />\r\n              </View>\r\n              {/* team member description */}\r\n              <View style={styles.teamMemberDescription}>\r\n                <AppText style={[styles.teamMemberName, styles.regularLetterSpacing]}>Іванов Михайло</AppText>\r\n                <AppText style={[styles.teamMemberDetails]}>Тестування</AppText>\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </View>\r\n\r\n      <View style={[styles.card]}>\r\n        <AppText style={[styles.teamSectionHeader, { marginBottom: 10 }]}>Зворотній зв'язок</AppText>\r\n        <AppText style={[{ fontSize: 13, fontFamily: \"montserrat-600\", marginBottom: 5 }]}>\r\n          Виникли запитання або ідеї як покращити наш застосунок? Напиши нам!\r\n        </AppText>\r\n        <View style={[globalStyles.centered, { flexDirection: \"row\" }]}>\r\n          <Ionicons name=\"mail\" color={palette.navigationBackground} size={19} style={{ marginRight: 5 }} />\r\n          <AppText\r\n            onPress={() => {\r\n              Linking.openURL(\"mailto:schedule.uad@gmail.com\")\r\n            }}\r\n            style={styles.contactsEmail}\r\n          >\r\n            schedule.uad@gmail.com\r\n          </AppText>\r\n        </View>\r\n      </View>\r\n\r\n      <View style={[styles.copyrightContainer]}>\r\n        <AppText style={[{ textAlign: \"center\", fontFamily: \"century-gothic\" }]}>\r\n          Авторські права 2023 © Українська Академія Друкарства. Усі права захищені\r\n        </AppText>\r\n      </View>\r\n\r\n      <View style={[styles.appVersionContainer]}>\r\n        <AppText style={[{ fontFamily: \"century-gothic\", color: \"#5A5A5A\" }]}>{appVersion} </AppText>\r\n      </View>\r\n    </ScrollView>\r\n  )\r\n}\r\n\r\nconst teamMemberImageWidth = 110\r\n\r\nconst styles = StyleSheet.create({\r\n  header: {\r\n    fontSize: 26,\r\n    color: palette.navigationBackground,\r\n    fontFamily: \"century-gothic\",\r\n  },\r\n\r\n  row: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n\r\n  tile: {\r\n    borderRadius: 18,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    alignSelf: \"flex-start\",\r\n\r\n    width: 110,\r\n\r\n    padding: 15,\r\n  },\r\n\r\n  tilesContainer: {\r\n    // width: \"100%\",\r\n  },\r\n\r\n  teamMemberTile: {\r\n    width: \"50%\",\r\n    ...globalStyles.centered,\r\n  },\r\n\r\n  teamSectionHeader: {\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    letterSpacing: 0,\r\n    marginBottom: 20,\r\n  },\r\n\r\n  teamMemberName: {\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n    color: palette.navigationBackground,\r\n  },\r\n\r\n  teamMemberDetails: {\r\n    letterSpacing: 0,\r\n    fontFamily: \"raleway-600\",\r\n    textAlign: \"center\",\r\n    letterSpacing: 0,\r\n  },\r\n\r\n  regularLetterSpacing: {\r\n    letterSpacing: 0,\r\n  },\r\n\r\n  teamMemberDescription: {\r\n    marginTop: 15,\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  teamMemberImage: {\r\n    width: teamMemberImageWidth,\r\n    height: teamMemberImageWidth,\r\n    borderRadius: 999,\r\n    resizeMode: \"contain\",\r\n  },\r\n\r\n  teamMemberImageWrapper: {\r\n    backgroundColor: \"gray\",\r\n\r\n    borderRadius: 999,\r\n\r\n    elevation: 3,\r\n    shadowOffset: { width: 1, height: 1 },\r\n    shadowColor: \"#333\",\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 2,\r\n  },\r\n\r\n  tileText: {\r\n    fontFamily: \"century-gothic\",\r\n    fontSize: 14,\r\n  },\r\n\r\n  card: {\r\n    // marginVertical: 5,\r\n    // marginHorizontal: 10,\r\n    padding: 15,\r\n    margin: 10,\r\n    // paddingVertical: 12,\r\n    borderRadius: 10,\r\n    backgroundColor: \"white\",\r\n\r\n    elevation: 1,\r\n    shadowOffset: { width: 1, height: 1 },\r\n    shadowColor: \"#333\",\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 2,\r\n  },\r\n\r\n  contactsEmail: {\r\n    color: palette.navigationBackground,\r\n    fontSize: 16,\r\n    fontFamily: \"century-gothic\",\r\n    textAlign: \"center\",\r\n    textDecorationLine: \"underline\",\r\n    marginBottom: 3,\r\n  },\r\n\r\n  copyrightContainer: {\r\n    marginTop: 5,\r\n\r\n    backgroundColor: palette.background,\r\n    paddingHorizontal: 50,\r\n    paddingVertical: 7,\r\n  },\r\n\r\n  appVersionContainer: {\r\n    backgroundColor: \"white\",\r\n    alignItems: \"flex-end\",\r\n    paddingVertical: 2,\r\n    paddingRight: 5,\r\n  },\r\n})\r\n","import * as SplashScreen from \"expo-splash-screen\"\n// Keep the splash screen visible while we fetch resources\nSplashScreen.preventAutoHideAsync()\n\nimport \"react-native-gesture-handler\"\nimport { Text, View, StyleSheet } from \"react-native\"\nimport React, { useEffect, useState } from \"react\"\n\nimport { NavigationContainer } from \"@react-navigation/native\"\n\nimport { useFonts } from \"expo-font\"\nimport { Drawer } from \"./routes/globalDrawer\"\nimport Header from \"./components/Header\"\n\nimport { ErrorBoundary } from \"react-error-boundary\"\nimport { ScrollView } from \"react-native-gesture-handler\"\nimport DrawerMenu from \"./components/DrawerMenu\"\nimport { DrawerRoutes } from \"./routes/DrawerRoutes\"\n\n// screens\n\nimport ScheduleScreen from \"./screens/ScheduleScreen\"\nimport ReglamentScreen from \"./screens/ReglamentScreen\"\nimport TeachersScreen from \"./screens/TeachersScreen\"\nimport EditorStack from \"./routes/EditorStack\"\nimport ContactsStack from \"./routes/ContactsStack\"\nimport NewsScreen from \"./screens/NewsScreen\"\nimport TestTabs from \"./routes/testTabs\"\nimport SettingsScreen from \"./screens/SettingsScreen\"\nimport AboutScreen from \"./screens/AboutScreen\"\nimport { isLandscapeWeb, isRunningInBrowser } from \"./utilities/utilities\"\n;(\"use client\")\n\nfunction fallbackRender({ error, resetErrorBoundary }) {\n  // Call resetErrorBoundary() to reset the error boundary and retry the render.\n\n  return (\n    <ScrollView>\n      <Text>Something went wrong:</Text>\n      <Text style={{ color: \"red\" }}>{JSON.stringify(error.message)}</Text>\n      <Text style={{ color: \"red\" }}>{JSON.stringify(error.stack)}</Text>\n    </ScrollView>\n  )\n}\n\nexport default function App() {\n  try {\n    const [appIsReady, setAppIsReady] = useState(false)\n\n    const [fontsLoaded] = useFonts({\n      \"lato-regular\": require(\"./assets/fonts/Lato-Regular.ttf\"),\n      \"lato-bold\": require(\"./assets/fonts/Lato-Bold.ttf\"),\n      \"cinzel-regular\": require(\"./assets/fonts/CinzelDecorative-Regular.ttf\"),\n\n      \"montserrat-regular\": require(\"./assets/fonts/Montserrat-Regular.ttf\"),\n      \"montserrat-medium\": require(\"./assets/fonts/Montserrat-Medium.ttf\"),\n      \"montserrat-semibold\": require(\"./assets/fonts/Montserrat-SemiBold.ttf\"),\n\n      \"raleway-regular\": require(\"./assets/fonts/Raleway-Regular.ttf\"),\n\n      \"montserrat-500\": require(\"./assets/fonts/Montserrat-Medium.ttf\"),\n      \"montserrat-600\": require(\"./assets/fonts/Montserrat-SemiBold.ttf\"),\n\n      \"montserrat-bold\": require(\"./assets/fonts/Montserrat-Bold.ttf\"),\n      \"raleway-500\": require(\"./assets/fonts/Raleway-Regular.ttf\"),\n      \"raleway-600\": require(\"./assets/fonts/Raleway-Medium.ttf\"),\n\n      \"century-gothic\": require(\"./assets/fonts/CenturyGothic.ttf\"),\n      \"century-gothic-bold\": require(\"./assets/fonts/GOTHICB.ttf\"),\n      \"century-gothic-italic\": require(\"./assets/fonts/GOTHICI.ttf\"),\n    })\n\n    useEffect(() => {\n      if (fontsLoaded) {\n        SplashScreen.hideAsync().then(() => setAppIsReady(true))\n      }\n    }, [fontsLoaded])\n\n    if (!appIsReady) {\n      return null\n    }\n\n    const markdown = (\n      <ErrorBoundary fallbackRender={fallbackRender}>\n        {/* <View style={style.root}></View> */}\n\n        <NavigationContainer>\n          <View style={styles.root}>\n            <Drawer.Navigator\n              screenOptions={{\n                header: (props) => <Header navigation={props.navigation} title={props.route.name} />,\n              }}\n              drawerContent={(props) => <DrawerMenu {...props} />}\n            >\n              <Drawer.Screen\n                name={DrawerRoutes.VIEWER}\n                component={ScheduleScreen}\n                options={{\n                  header: (props) => <View />,\n                }}\n              />\n\n              <Drawer.Screen name={DrawerRoutes.REGLAMENT} component={ReglamentScreen} />\n\n              <Drawer.Screen name={DrawerRoutes.TEACHERS} component={TeachersScreen} />\n\n              <Drawer.Screen name={DrawerRoutes.CONTACTS} component={ContactsStack} />\n\n              <Drawer.Screen name={DrawerRoutes.NEWS} component={NewsScreen} />\n\n              <Drawer.Screen\n                name={DrawerRoutes.EDITOR}\n                options={{\n                  header: (props) => <View />,\n                }}\n                component={EditorStack}\n              />\n\n              <Drawer.Screen\n                name={DrawerRoutes.TESTS}\n                component={TestTabs}\n                options={{\n                  header: (props) => <View />,\n                }}\n              />\n\n              <Drawer.Screen name={DrawerRoutes.SETTINGS} component={SettingsScreen} />\n\n              <Drawer.Screen name={DrawerRoutes.ABOUT} component={AboutScreen} />\n            </Drawer.Navigator>\n          </View>\n        </NavigationContainer>\n      </ErrorBoundary>\n    )\n\n    return markdown\n  } catch (e) {\n    console.log(e)\n    return (\n      <ScrollView>\n        <Text>\n          Something went wrong. Something went wrong. Something went wrong. Something went wrong. Something went wrong.\n          Something went wrong.\n        </Text>\n        <Text>\n          Something went wrong. Something went wrong. Something went wrong. Something went wrong. Something went wrong.\n          Something went wrong.\n        </Text>\n        <Text>\n          Something went wrong. Something went wrong. Something went wrong. Something went wrong. Something went wrong.\n          Something went wrong.\n        </Text>\n        <Text>\n          {JSON.stringify(e.message, null, 4)}\n          {JSON.stringify(e.stack, null, 4)}\n        </Text>\n      </ScrollView>\n    )\n  }\n}\n\nconst drawerMenuWidthPx = 320\n\nconst landscapeWebStyles = StyleSheet.create({\n  root: {\n    width: \"50%\",\n    minWidth: \"50%\",\n    maxWidth: \"50%\",\n\n    maxHeight: \"100%\",\n\n    flexGrow: 1,\n    marginLeft: \"33%\", // free space divided by two and + drawerMenuWidthPx in % * 0.5\n    // TODO: unhardcode the percentage\n  },\n})\n\nconst nativeStyles = StyleSheet.create({\n  root: {\n    width: \"100%\",\n    flex: 1,\n  },\n})\n\nconst styles = isLandscapeWeb() ? landscapeWebStyles : nativeStyles\n","import { registerRootComponent } from \"expo\"\n\nimport App from \"./App\"\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App)\n","var map = {\n\t\"./af\": 94506,\n\t\"./af.js\": 94506,\n\t\"./ar\": 59687,\n\t\"./ar-dz\": 62887,\n\t\"./ar-dz.js\": 62887,\n\t\"./ar-kw\": 66307,\n\t\"./ar-kw.js\": 66307,\n\t\"./ar-ly\": 51664,\n\t\"./ar-ly.js\": 51664,\n\t\"./ar-ma\": 89926,\n\t\"./ar-ma.js\": 89926,\n\t\"./ar-sa\": 85207,\n\t\"./ar-sa.js\": 85207,\n\t\"./ar-tn\": 52912,\n\t\"./ar-tn.js\": 52912,\n\t\"./ar.js\": 59687,\n\t\"./az\": 5011,\n\t\"./az.js\": 5011,\n\t\"./be\": 25997,\n\t\"./be.js\": 25997,\n\t\"./bg\": 4427,\n\t\"./bg.js\": 4427,\n\t\"./bm\": 85385,\n\t\"./bm.js\": 85385,\n\t\"./bn\": 67703,\n\t\"./bn-bd\": 57002,\n\t\"./bn-bd.js\": 57002,\n\t\"./bn.js\": 67703,\n\t\"./bo\": 39841,\n\t\"./bo.js\": 39841,\n\t\"./br\": 45642,\n\t\"./br.js\": 45642,\n\t\"./bs\": 69038,\n\t\"./bs.js\": 69038,\n\t\"./ca\": 53512,\n\t\"./ca.js\": 53512,\n\t\"./cs\": 39497,\n\t\"./cs.js\": 39497,\n\t\"./cv\": 6479,\n\t\"./cv.js\": 6479,\n\t\"./cy\": 89318,\n\t\"./cy.js\": 89318,\n\t\"./da\": 97229,\n\t\"./da.js\": 97229,\n\t\"./de\": 63460,\n\t\"./de-at\": 51044,\n\t\"./de-at.js\": 51044,\n\t\"./de-ch\": 26445,\n\t\"./de-ch.js\": 26445,\n\t\"./de.js\": 63460,\n\t\"./dv\": 32096,\n\t\"./dv.js\": 32096,\n\t\"./el\": 16048,\n\t\"./el.js\": 16048,\n\t\"./en-au\": 74301,\n\t\"./en-au.js\": 74301,\n\t\"./en-ca\": 66855,\n\t\"./en-ca.js\": 66855,\n\t\"./en-gb\": 761,\n\t\"./en-gb.js\": 761,\n\t\"./en-ie\": 46127,\n\t\"./en-ie.js\": 46127,\n\t\"./en-il\": 49157,\n\t\"./en-il.js\": 49157,\n\t\"./en-in\": 37199,\n\t\"./en-in.js\": 37199,\n\t\"./en-nz\": 31511,\n\t\"./en-nz.js\": 31511,\n\t\"./en-sg\": 47309,\n\t\"./en-sg.js\": 47309,\n\t\"./eo\": 92160,\n\t\"./eo.js\": 92160,\n\t\"./es\": 68582,\n\t\"./es-do\": 71885,\n\t\"./es-do.js\": 71885,\n\t\"./es-mx\": 2553,\n\t\"./es-mx.js\": 2553,\n\t\"./es-us\": 16962,\n\t\"./es-us.js\": 16962,\n\t\"./es.js\": 68582,\n\t\"./et\": 98890,\n\t\"./et.js\": 98890,\n\t\"./eu\": 37704,\n\t\"./eu.js\": 37704,\n\t\"./fa\": 22562,\n\t\"./fa.js\": 22562,\n\t\"./fi\": 70877,\n\t\"./fi.js\": 70877,\n\t\"./fil\": 34246,\n\t\"./fil.js\": 34246,\n\t\"./fo\": 78341,\n\t\"./fo.js\": 78341,\n\t\"./fr\": 19867,\n\t\"./fr-ca\": 82347,\n\t\"./fr-ca.js\": 82347,\n\t\"./fr-ch\": 17683,\n\t\"./fr-ch.js\": 17683,\n\t\"./fr.js\": 19867,\n\t\"./fy\": 21982,\n\t\"./fy.js\": 21982,\n\t\"./ga\": 13905,\n\t\"./ga.js\": 13905,\n\t\"./gd\": 13443,\n\t\"./gd.js\": 13443,\n\t\"./gl\": 66905,\n\t\"./gl.js\": 66905,\n\t\"./gom-deva\": 91324,\n\t\"./gom-deva.js\": 91324,\n\t\"./gom-latn\": 41890,\n\t\"./gom-latn.js\": 41890,\n\t\"./gu\": 37134,\n\t\"./gu.js\": 37134,\n\t\"./he\": 96835,\n\t\"./he.js\": 96835,\n\t\"./hi\": 81394,\n\t\"./hi.js\": 81394,\n\t\"./hr\": 13564,\n\t\"./hr.js\": 13564,\n\t\"./hu\": 46269,\n\t\"./hu.js\": 46269,\n\t\"./hy-am\": 57269,\n\t\"./hy-am.js\": 57269,\n\t\"./id\": 44254,\n\t\"./id.js\": 44254,\n\t\"./is\": 8699,\n\t\"./is.js\": 8699,\n\t\"./it\": 28301,\n\t\"./it-ch\": 92887,\n\t\"./it-ch.js\": 92887,\n\t\"./it.js\": 28301,\n\t\"./ja\": 64642,\n\t\"./ja.js\": 64642,\n\t\"./jv\": 62168,\n\t\"./jv.js\": 62168,\n\t\"./ka\": 94501,\n\t\"./ka.js\": 94501,\n\t\"./kk\": 49537,\n\t\"./kk.js\": 49537,\n\t\"./km\": 45808,\n\t\"./km.js\": 45808,\n\t\"./kn\": 34881,\n\t\"./kn.js\": 34881,\n\t\"./ko\": 62951,\n\t\"./ko.js\": 62951,\n\t\"./ku\": 92452,\n\t\"./ku.js\": 92452,\n\t\"./ky\": 1853,\n\t\"./ky.js\": 1853,\n\t\"./lb\": 77639,\n\t\"./lb.js\": 77639,\n\t\"./lo\": 34502,\n\t\"./lo.js\": 34502,\n\t\"./lt\": 60874,\n\t\"./lt.js\": 60874,\n\t\"./lv\": 18237,\n\t\"./lv.js\": 18237,\n\t\"./me\": 87878,\n\t\"./me.js\": 87878,\n\t\"./mi\": 64234,\n\t\"./mi.js\": 64234,\n\t\"./mk\": 17535,\n\t\"./mk.js\": 17535,\n\t\"./ml\": 43896,\n\t\"./ml.js\": 43896,\n\t\"./mn\": 63046,\n\t\"./mn.js\": 63046,\n\t\"./mr\": 80927,\n\t\"./mr.js\": 80927,\n\t\"./ms\": 37224,\n\t\"./ms-my\": 66332,\n\t\"./ms-my.js\": 66332,\n\t\"./ms.js\": 37224,\n\t\"./mt\": 24866,\n\t\"./mt.js\": 24866,\n\t\"./my\": 24206,\n\t\"./my.js\": 24206,\n\t\"./nb\": 66723,\n\t\"./nb.js\": 66723,\n\t\"./ne\": 45097,\n\t\"./ne.js\": 45097,\n\t\"./nl\": 37529,\n\t\"./nl-be\": 1355,\n\t\"./nl-be.js\": 1355,\n\t\"./nl.js\": 37529,\n\t\"./nn\": 30296,\n\t\"./nn.js\": 30296,\n\t\"./oc-lnc\": 4802,\n\t\"./oc-lnc.js\": 4802,\n\t\"./pa-in\": 77057,\n\t\"./pa-in.js\": 77057,\n\t\"./pl\": 69850,\n\t\"./pl.js\": 69850,\n\t\"./pt\": 15552,\n\t\"./pt-br\": 83726,\n\t\"./pt-br.js\": 83726,\n\t\"./pt.js\": 15552,\n\t\"./ro\": 1717,\n\t\"./ro.js\": 1717,\n\t\"./ru\": 79117,\n\t\"./ru.js\": 79117,\n\t\"./sd\": 61742,\n\t\"./sd.js\": 61742,\n\t\"./se\": 92049,\n\t\"./se.js\": 92049,\n\t\"./si\": 83329,\n\t\"./si.js\": 83329,\n\t\"./sk\": 27619,\n\t\"./sk.js\": 27619,\n\t\"./sl\": 76707,\n\t\"./sl.js\": 76707,\n\t\"./sq\": 84281,\n\t\"./sq.js\": 84281,\n\t\"./sr\": 60436,\n\t\"./sr-cyrl\": 13408,\n\t\"./sr-cyrl.js\": 13408,\n\t\"./sr.js\": 60436,\n\t\"./ss\": 27500,\n\t\"./ss.js\": 27500,\n\t\"./sv\": 6950,\n\t\"./sv.js\": 6950,\n\t\"./sw\": 54222,\n\t\"./sw.js\": 54222,\n\t\"./ta\": 73746,\n\t\"./ta.js\": 73746,\n\t\"./te\": 1130,\n\t\"./te.js\": 1130,\n\t\"./tet\": 34740,\n\t\"./tet.js\": 34740,\n\t\"./tg\": 13378,\n\t\"./tg.js\": 13378,\n\t\"./th\": 20628,\n\t\"./th.js\": 20628,\n\t\"./tk\": 92622,\n\t\"./tk.js\": 92622,\n\t\"./tl-ph\": 30100,\n\t\"./tl-ph.js\": 30100,\n\t\"./tlh\": 22871,\n\t\"./tlh.js\": 22871,\n\t\"./tr\": 33600,\n\t\"./tr.js\": 33600,\n\t\"./tzl\": 18985,\n\t\"./tzl.js\": 18985,\n\t\"./tzm\": 3627,\n\t\"./tzm-latn\": 51145,\n\t\"./tzm-latn.js\": 51145,\n\t\"./tzm.js\": 3627,\n\t\"./ug-cn\": 4790,\n\t\"./ug-cn.js\": 4790,\n\t\"./uk\": 97712,\n\t\"./uk.js\": 97712,\n\t\"./ur\": 99529,\n\t\"./ur.js\": 99529,\n\t\"./uz\": 99141,\n\t\"./uz-latn\": 61737,\n\t\"./uz-latn.js\": 61737,\n\t\"./uz.js\": 99141,\n\t\"./vi\": 98205,\n\t\"./vi.js\": 98205,\n\t\"./x-pseudo\": 20697,\n\t\"./x-pseudo.js\": 20697,\n\t\"./yo\": 37826,\n\t\"./yo.js\": 37826,\n\t\"./zh-cn\": 83994,\n\t\"./zh-cn.js\": 83994,\n\t\"./zh-hk\": 36892,\n\t\"./zh-hk.js\": 36892,\n\t\"./zh-mo\": 43884,\n\t\"./zh-mo.js\": 43884,\n\t\"./zh-tw\": 85136,\n\t\"./zh-tw.js\": 85136\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [59], () => (__webpack_require__(40632)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["Drawer","createDrawerNavigator","REGLAMENT_DATA","NOTIFICATIONS_CHANNEL_ID","STORAGE_KEY","GetTimeDifference","earlier","later","momentA","moment","momentB","hourDifference","diff","minuteDifference","hours","minutes","seconds","determineInterval","timepoint","arguments","length","undefined","Date","interval","forEach","class_","value","start","hourAndMinuteStart","hourStart","split","minuteStart","hourAndMinuteEnd","hourEnd","minuteEnd","now","getFullYear","getMonth","getDate","parseInt","getContentfulClient","createClient","space","environment","accessToken","ensureExtension","filename","extension","endsWith","ensureNoExtension","slice","isMail","text","includes","isRunningInBrowser","Platform","OS","isLandscapeWeb","window","innerWidth","innerHeight","constants","platform","ios","interfaceOrientation","android","_ref","_asyncToGenerator","pathToJSONFile","fileName","filePath","FileSystem","documentDirectory","fileContents","readAsStringAsync","JSON","parse","e","require","previewImagesFull","schedule","reglamentPreview","editorPreview","settingsPreview","images","uad_logo_text","uad_logo_text_not_vector","uad_logo_text_not_vector_hires","teamMemberImages","senchyk_andrii","zakharova_zarina","shepita_julia","ivanov_mykhailo","editorImages","lightbulb","drawerMenuImages","uad_logo_white_outline","imageIcons","museum","tiktok","palette","background","backgroundLight","textOnBackground","navigationBackground","numbers","grayedOut","grayishBlue","ongoingClass","globalStyles","StyleSheet","create","container","padding","scrollView","marginBottom","screen","flex","backgroundColor","centered","justifyContent","alignItems","fontFamily","fontSize","paragraph","marginVertical","lineHeight","sectionHeader","marginLeft","input","borderWidth","borderColor","borderRadius","errorText","color","fontWeight","marginTop","textAlign","navIcon","paddingHorizontal","paddingRight","separator","height","width","noDisplay","display","margin","zIndex","invisible","opacity","row","flexDirection","grayIcon","card","paddingVertical","elevation","shadowOffset","shadowColor","shadowOpacity","shadowRadius","link","underlinedLink","textDecorationLine","captionWithIcon","navigationButton","modalContentContainer","position","top","marginHorizontal","BaseHeader","title","navigation","headerText","_jsxs","View","style","styles","headerContentContainer","children","_jsx","TouchableOpacity","MaterialIcons","onPress","openDrawer","name","size","Text","GlobalHeader","_ref2","headerContentElement","headerContent","SafeAreaView","header","DrawerRoutes","NewsLoaderService","_classCallCheck","_newsCached","_createClass","key","_init","apply","_getNewsFromContentful","this","news","fetchContentfulEntries","items","map","entry","_entry$fields","fields","body","createdAt","sys","sort","a","b","getTime","_fetchContentfulEntries","client","getEntries","content_type","_getNewestArticleDate","getNewsFromContentful","_GetInstance","instance","init","shouldDisplayYellowCircle","YellowCircle","_ref2$filled","filled","alignSelf","DrawerMenu","_useRef","routeNameToIconRef","useRef","_defineProperty","VIEWER","Ionicons","REGLAMENT","TEACHERS","FontAwesome5","CONTACTS","NEWS","TESTS","EDITOR","SETTINGS","ABOUT","useNavigation","routesContainer","useNavigationState","state","routes","isRunningInExpoGo_","executionEnvironment","ExecutionEnvironment","StoreClient","breakpoint","topRoutes","bottomRoutes","_","route","currentRoute","index","RouteButton","_ref3","isCurrentRoute","isNewsRoute","yellowCircle","screeName","AsyncStorage","setItem","toString","navigate","_objectSpread","pageLinkContainer","activePageLink","current","pageLink","drawerContainer","drawerContainerHeader","Image","marginRight","source","drawerContainerBottom","ActivityIndicator","GetInstance","then","newestArticleDate","getNewestArticleDate","lastSeenArticle","getItem","lastSeenArticleDate","_x","paddingTop","paddingBottom","borderBottomColor","borderBottomWidth","WeekType","SEMESTER_START","SEMESTER_START_TYPE","Denominator","GetWeekType","timeDifferenceInDays","Math","trunc","Nominator","getStrict","array","Error","workDays","workDaysEn","workDaysEnLower","day","toLowerCase","ScheduleLoaderService","scheduleFiles","pathToScheduleFolder","getExampleSchedules","getInfoAsync","exists","getSchedulesFromFileSystem","checkForUpdatesAsync","makeDirectoryAsync","intermediates","getSchedulesFromContentful","sf","_getSchedulesFromFileSystem","_this","allScheduleFileNames","readDirectoryAsync","Promise","all","file","json","revision","updatedAt","json_parsed","_getSchedulesFromContentful","_this2","assets","getAssets","limit","linkToFile","url","linkToDestFile","downloadAsync","scheduleClassesJson","scheduleFile","writeAsStringAsync","stringify","_x2","ExampleScheduleKN","ExampleScheduleIST","ExampleScheduleTE","find","_checkForUpdatesAsync","_this3","netInfo","NetInfo","isConnected","isInternetReachable","scheduleFileMetadatas","itm","_x3","updatedScheduleFiles","_ref4","sfm","oldSchedule","getScheduleFileByFileName","_x4","jsonToDump","idx","scheduleDays","resolve","ScheduleModel","specialtyName","year","dayNames","weekendDays","Array","data","dayClasses","classes","scheduleDay","ScheduleDay","push","objectName","_getScheduleFromScheduleLoader","scheduleFileName","startsWith","setSchedule","ToastAndroid","show","SHORT","dayIndex","getDay","todayClasses","currentClass","isCurrent","ScheduleClass","currentWeekType","filter","isBiweekly","week","otherWeek","matchingClass","CLASS_TYPE","CLASS_TYPE_SHORT","_CLASS_TYPE_SHORT","LECTURE","PRACTICE","LAB","_data$isBiweekly","_data$classType","weekName","teacher","room","isSharedClass","classType","setWeek","isInCurrentTimeSlot","isMatchingWeekType","sampleName","sampleRoom","sampleTeacher","TeacherTableModel","teachers","teachersJson","teachersFuse","Fuse","keys","threshold","surname","match","search","item","getTeacherBySurname","patronymic","Event","DisplayEmptyDaysMode","DisplayTeacherMode","SettingsService","displayEmptyDays","Display","currentScheduleName","notifyBeforeClass","notifyBeforeClassOffsetMinutes","displayRoomNumber","displayTeacherName","Full","displayEmptyRows","SettingsEventEmmiter","EventEmitter","scheduleLoader","fetchedSettings","readFromStorage","Object","entries","_slicedToArray","_saveToStorage","settingsObject","constructSettingsObjectFromProperties","jsonValue","emit","SETTINGS_UPDATED","_readFromStorage","_openAndroidSystemSettingsForNotifications","pkg","Constants","manifest","package","Notifications","IntentLauncher","startActivityAsync","extra","SettingsContext","React","AppText","props","android_hyphenationFrequency","appText","ScheduleText","letterSpacing","formatRoomName","scheduleClassInstance","unfoldClassText","join","replace","formatTeacherName","isEditable","settings","teacherTable","teacherSurname","getFullNameBySurname","sn","getSurnameAndInitialsBySurname","displayTeacherNameMode","SurnameAndInitials","ScheduleClassComponent","_ref$isEditable","_ref$highlightAsOngoi","highlightAsOngoing","_React$useState","_React$useState2","setState","isCurrentClassRef","_React$useState3","_React$useState4","setUnfoldClassText","_React$useState5","_React$useState6","unfoldTeacherText","setUnfoldTeacherText","_useWindowDimensions","useWindowDimensions","useContext","_useState","useState","_useState2","isOngoingClass","setIsOngoingClass","className","shouldDisplayTeacher","Hide","_useState3","_useState4","isReady","setIsReady","useEffect","rerenderInterval","setInterval","isCurrentClass","clearInterval","reglamentClass","classStart","classEnd","classContainer","startAndEndTimesContainer","classStartText","classEndText","classAndTeacherBlock","onLongPress","Clipboard","setStringAsync","classNameText","flexGrow","ellipsizeMode","numberOfLines","teacherNameText","classTypeAndRoomNumberContainer","roomNumberContainer","roomNumberText","flexBasis","Separator","upperElement","lowerElement","_ref$width","localStyles","UnderlayRightSide","onDeleteButtonPress","close","useSwipeableItemParams","underlayLeft","LocalNotificationsService","exampleNotificationContent","subtitle","someData","notificationChannelId","identifier","handleNotification","_handleNotification","shouldShowAlert","priority","MAX","shouldPlaySound","shouldSetBadge","registerNotificationsChannel","checkPermissionsAsync","granted","_registerNotificationsChannel","importance","vibrationPattern","lightColor","lockscreenVisibility","PUBLIC","_sendNotification","content","message","trigger","channelId","catch","_scheduleNotification","nextTriggerDate","date","_sendExampleNotification","sendNotification","_scheduleExampleNotificationViaDate","secondsFromNow","scheduleNotification","_scheduleRepeatableExampleNotification","repeats","_scheduleRepeatableDailyExampleNotification","hour","minute","ClassNotificationBuilder","notificationsService","negativeOffsetInMins","teachersTable","signature","getUniqueStringSignature","hourAndMinute","monthDay","notificationDate","distance","setDate","setDayOnDate","indexOf","twoWeeksInSeconds","offset","sequenceSize","spacingInSeconds","sequence","next","createEvenlySpacedTimeSequence","SEMESTER_MONTHS","notifDate","teacherName","hourPadded","minutePadded","weekday","ScheduleNotificationsService","_LocalNotificationsSe","_inherits","_super","_createSuper","_len","args","_key","call","concat","onConfigureNotificationsForScheduleStart","onConfigureNotificationsForScheduleEnd","_configureNotificationsForSchedule","_this$onConfigureNoti","_this$onConfigureNoti2","settingsService","cancelAllScheduledNotificationsAsync","configureDays","configureDayClasses","notifBuilder","weeklyNotif","constructWeeklyNotification","notifications","constructBiweeklyNotificationsSequence","notif","EditorStackRoutes","NoClassesText","ScheduleDayComponent","classesCollection","scheduleObject","dayName","_ref$weekType","weekType","fade","scheduleDayCard","dayNameHeader","configureNotificationsCallback","useCallback","updatedSchedule","configureNotificationsForSchedule","setClasses","dayNameEnRef","d","mapUkrWorkDayToEnWorkDay","saveEditedClasses","classesWithoutPlaceholders","isSampleClass","thisDay","biweeklyClassesOfOtherWeek","_toConsumableArray","dumpSchedule","addPlaceholders","extendedContainer","GetPlaceholder","ListComponent","DraggableFlatList","FlatList","Darken","fadedDayContainerView","keyExtractor","onDragEnd","ListEmptyComponent","noClassesText","scrollEnabled","nestedScrollEnabled","ItemSeparatorComponent","renderItem","drag","isActive","scheduleClassComponent","noTeacherText","editableScheduleClassWrapper","SwipeableItem","renderUnderlayLeft","filteredClasses","filteredClassesWithPlaceholders","onDeleteButtonPressed","snapPointsLeft","snapPointsRight","activationThreshold","SCHEDULE_CLASS_FORM","scheduleClass","currentlyViewedWeek","onFormDataUpdated","values","updatedClasses","t","trim","r","OptionPickerModal","_ref$hasSearchBar","hasSearchBar","_ref$headerText","_ref$isOpen","isOpen","_ref$displaySeparator","displaySeparators","initialOptions","initialSelectedOption","closeModalCallback","closeModal","onSelected","optionIcon","_ref$isOptionSelectab","isOptionSelectable","options","searchQuery","setSearchQuery","filteredOptions","option","selectedOption","setSelectedOption","Modal","animationType","transparent","modal","visible","overlay","horizontalFlex","searchBarContainer","TextInput","searchBar","onChangeText","placeholder","ScrollView","Pressable","checkIcon","closeButton","closeButtonText","left","right","page","pageTitle","imageContainer","overflow","previewImage","centeredDescriptionText","pageDescriptionText","documentHeight","swiperWidth","InroductoryCarouselScreen","onClose","currentPage","setCurrentPage","swiperRef","setIsVisible","_useState5","_useState6","schedulePickerModalVisible","setSchedulePickerModalVisible","_useState7","_useState8","schedulePickerData","setSchedulePickerData","f","slideTo","paginationCircles","lastPageIndex","i","circle","circleActive","Swiper","initialSlide","onSwiper","swiper","onSlideChange","activeIndex","SwiperSlide","src","pagerNavigation","accessibilityLabel","selected","saveToStorage","newCurrentPage","backButton","setStatusBarHidden","carouselContainer","viewPager","pageBody","maxHeight","halfImageContainer","forwardButton","ScheduleHeader","onWeekTypeChanged","navigation_","setWeekType","weekTypeInUkrainian","weekTextContainer","selectedContainer","weekTypeText","selectedText","baseStyles","backroundImage","sideMenuIcon","currentlyViewedDay","ScheduleScreen","closeDrawer","todayIndex","isFirstTimeLaunch","setIsFirstTimeLaunch","scheduleRef","scheduleFileRef","settingsServiceRef","scrollViewContainerRef","scheduleLoaded","setScheduleLoaded","scheduleName","setScheduleName","_useState9","_useState10","dataSourceCords","setDataSourceCords","scheduleNameStateRef","onSettingsUpdated","_$cloneDeep","newSchedule","getScheduleFromScheduleLoader","notifService","_onMount","scheduleLoaderInstance","firstScheduleFile","on","onMount","removeListener","LONG","useFocusEffect","currentScheduleFile","_$cloneDeep2","IntroductoryCarousel","Provider","rootContainer","contentContainerStyle","ref","paddingLeft","isEmpty","getCurrentWeekClasses","shouldDisplayEmptyDay","getNominatorClasses","getDenominatorClasses","cardContainer","onLayout","event","layout","nativeEvent","y","scrolledToToday","scrollTo","x","animated","showSeparator","animating","modalToggle","modalClose","modalContent","placeholderView","scheduleDaySelector","ReglamentScreen","reglamentContainer","ReglamentClass","classData","getReglamentClass","currentTimeInterval","wasCurrent","reglamentClassContainer","reglamentClassIndex","timeDataCard","timePointText","timePointDate","head","borderRightWidth","headText","TeachersScreen","filteredTeachers","userSelect","teacherCard","selectable","Кваліфікаця","Linking","openURL","StackHeader","_ref$useSafeAreaView","useSafeAreaView","_ref$hasBackground","hasBackground","_ref$captionStyles","captionStyles","ViewComponent","headerTitle","goBack","CustomSwitch","onValueChange","_ref$initVal","initVal","_ref$disabled","disabled","isEnabled","setIsEnabled","Switch","switch","trackColor","false","true","thumbColor","ios_backgroundColor","newValue","previousState","BlueCircle","RadioButtonGroup","onOptionSelected","_ref$selectedOptionIn","selectedOptionIndex","selectedIndex","setIndex","CheckBox","checked","checkedIcon","uncheckedIcon","optionTitle","containerStyle","checkboxContainer","AutoSubmitFormData","_useFormikContext","useFormikContext","initialValues","submitFormCallback","isSubmitting","submitForm","FormTextInput","formField","fieldCaption","captionText","cursorColor","textInputText","underline","noteText","ScheduleClassForm","_scheduleClass$teache","useRoute","params","dayUkrIndex","findIndex","dayUkr","weekTypeUkr","initialFormikValues","Formik","onSubmit","handleChange","handleBlur","headerTextPrimary","headerTextSecondary","autoCapitalize","code_name","o","autocompleteContainer","ScheduleEditorScreen","Stack","createStackNavigator","EditorStack","Navigator","screenOptions","Screen","component","FacultiesTestScreen","renderFacultyCard","nameAbbreviation","nameFull","address","phone","mail","facultyCard","ContactsStackRoutes","corpsModalItems","corps","icon","rectorateModalItems","isPhone","isLink","preparationDepartmentModalItems","internationalAffairsAndInformationDepartmentModalItems","admissionsCommitteeModalItems","accountingModalItems","contractEducationDepartmentModalItems","studentUnionModalItems","studentCouncilModalItems","FontAwesome","linkName","socialMediaModalItems","Category","titleIcon","subcategories","category","categoryTitle","itemOnPress","subcategoryButtonContainer","EntypoIcon","constructModalItem","optionText","constructContentPresenterModal","onCloseModal","ContactsScreen","corpsModalIsOpen","setCorpsModalIsOpen","rectorateModalIsOpen","setRectorateModalIsOpen","admissionCommitteeModalIsOpen","setAdmissionCommitteeModalIsOpen","_React$useState7","_React$useState8","preparationDepartmentModalIsOpen","setPreparationDepartmentModalIsOpen","_React$useState9","_React$useState10","internationalAffairsAndInformationDepartmentModalIsOpen","setInternationalAffairsAndInformationDepartmentModalIsOpen","_React$useState11","_React$useState12","accountingModalIsOpen","setAccountingModalIsOpen","_React$useState13","_React$useState14","contractEducationModalIsOpen","setContractEducationModalIsOpen","_React$useState15","_React$useState16","studentUnionModalIsOpen","setStudentUnionModalIsOpen","_React$useState17","_React$useState18","studentCouncilModalIsOpen","setStudentCouncilModalIsOpen","_React$useState19","_React$useState20","socialMediaModalIsOpen","setSocialMediaModalIsOpen","subcategoryTitle","Octicons","navigateToSubcategoryButton","ContactsStack","CONTACTS_MENU","FACULTIES","NewsCard","dateObj","maxLength","isBodyExpanded","setIsBodyExpanded","newsArticleCard","moreButton","NewsScreen","setNews","fetchedNews","newsLoaderService","getExampleNews","Card","_ref$shadows","shadows","cardContentStyle","noShadow","cardContent","NotificationTestsScreen","ready","setReady","permission","setPermission","setScheduledNotifications","delayForExampleNotificationViaDate","setDelayForExampleNotificationViaDate","notification","setNotification","localNotificationsServiceRef","notificationListener","responseListener","requestConfigurePermissions","response","registeredNotifications","getAllScheduledNotificationsAsync","permissions","status","request","Button","sendExampleNotification","Input","keyboardType","defaultValue","scheduleExampleNotificationViaDate","scheduleRepeatableExampleNotification","scheduleRepeatableDailyExampleNotification","Expander","collapsed","setCollapsed","Collapsible","ScheduledNotificationsScreen","showRegularClasses","setShowRegularClasses","showBiweeklyClasses","setShowBiweeklyClasses","filterQuery","setFilterQuery","scheduledNotifications","filteredScheduledNotifications","n","type","toUTCString","sortedScheduledNotifications","minHeight","horizontal","onBlur","cancelScheduledNotificationAsync","ContentViewModal","modalChildren","FlatButton","button","FileSystemScreen","fileContentModalVisible","setFileContentModalVisible","selectedFileContent","setSelectedFileContent","currentDir","setCurrentDir","allFiles","setAllFiles","firstFieldText","setFirstFieldText","secondFieldText","setSecondFieldText","contentfulSchedule","setContentfulSchedule","contentfulScheduleAsAsset","setContentfulScheduleAsAsset","contentfulScheduleAsDownloadedAsset","setContentfulScheduleAsDownloadedAsset","_React$useState21","_React$useState22","allContentfulAssets","setAllContentfulAssets","saveToFile","path","initFields","_initFields","lines","getEntry","getAsset","asset","res","uri","assetNames","deleteAsync","isDirectory","ScheduleEditor","setSampleDay","currentRouteName","getId","firstScheduleFilename","isSlot","setData","random","dataElem","draggable","updatedClass","reorderable","TestEditorStack","ContactsModalTestScreen","ContactsTestStack","DeviceInfoScreen","aspectRatio","pixelRatio","PixelRatio","get","dpi","Tab","createBottomTabNavigator","TestTabs","headerShown","tabBarStyle","initialRouteName","tabBarIcon","_ref5","_ref6","_ref7","Settings","_settingsServiceRef$c2","selectedSchedule","settingsValues","setSettingsValues","schedulePickerModalDisabled","setSchedulePickerModalDisabled","emptyDayDisplayModalVisible","setEmptyDayDisplayModalVisible","_useState11","_useState12","displayTeacherModeModalVisible","setDisplayTeacherModeModalVisible","_useState13","_useState14","notifyBeforehandModalVisible","setNotifyBeforehandModalVisible","_useState15","_useState16","toggleNotifs","_toggleNotifs","enable","scheduleNotifService","constructCategoryHeader","categoryName","categoryIcon","categoryHeader","settingsSectionName","constructSettingsRow","settingDescription","changeSettingComponent","settingRow","settingName","_settingsServiceRef$c","loadingIndicatorOverlay","notificationsSection","FontAwesomeIcon","settingsSectionIcon","settingsCategory","nv","settingValueContainer","settingValue","selectedInt","openAndroidSystemSettingsForNotifications","scrollViewDirect","scrollViewContentContainer","pageBackground","centeredTextAndIcon","borderTopWidth","AboutScreen","resizeMode","fontStyle","tileText","tile","teamSectionHeader","tilesContainer","teamMemberTile","teamMemberImageWrapper","teamMemberImage","teamMemberDescription","teamMemberName","regularLetterSpacing","teamMemberDetails","contactsEmail","copyrightContainer","appVersionContainer","fallbackRender","error","resetErrorBoundary","stack","SplashScreen","landscapeWebStyles","root","minWidth","maxWidth","nativeStyles","registerRootComponent","appIsReady","setAppIsReady","_useFonts","useFonts","fontsLoaded","markdown","ErrorBoundary","NavigationContainer","Header","drawerContent","SettingsScreen","webpackContext","req","id","webpackContextResolve","__webpack_require__","code","module","exports","__webpack_module_cache__","moduleId","cachedModule","loaded","__webpack_modules__","m","deferred","O","result","chunkIds","fn","notFulfilled","Infinity","fulfilled","j","every","splice","getter","__esModule","leafPrototypes","getProto","getPrototypeOf","obj","mode","ns","def","getOwnPropertyNames","definition","defineProperty","enumerable","g","globalThis","Function","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}