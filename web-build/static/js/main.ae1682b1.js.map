{"version":3,"file":"static/js/main.ae1682b1.js","mappings":"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","sources":["routes/globalDrawer.ts","constants/Constants.ts","constants/Keys.ts","utilities/utilities.ts","styles/global.ts","routes/DrawerRoutes.ts","constants/RouteIcons.tsx","components/Header.tsx","services/NewsLoaderService.ts","components/DrawerMenu.tsx","utilities/getWeekType.ts","utilities/getStrict.ts","constants/Days.ts","services/EditedScheduleStorageService.ts","services/ScheduleLoaderService.ts","models/ScheduleModel.ts","models/TeacherTableModel.ts","constants/Events.ts","services/SettingsService.ts","contexts/settingsContext.ts","shared/AppText.tsx","components/ScheduleComponents/ScheduleText.tsx","components/ScheduleComponents/ScheduleClass.tsx","shared/Separator.tsx","components/ScheduleEditorComponents/ScheduleClassUnderlay.tsx","services/LocalNotificationsService.ts","services/ClassNotificationBuilder.ts","services/ScheduleNotificationsService.ts","routes/EditorStackRoutes.ts","constants/Descriptions.ts","components/ScheduleComponents/ScheduleDay.tsx","components/OptionPickerModal.tsx","screens/IntroductoryCarousel/Pages.tsx","screens/IntroductoryCarousel/IntroductoryCarousel.tsx","components/ScheduleComponents/ScheduleHeader.tsx","screens/ScheduleScreen.tsx","screens/ReglamentScreen.tsx","screens/TeachersScreen.tsx","components/StackHeader.tsx","shared/Switch.tsx","shared/RadioButtonGroup.tsx","screens/TestTabsScreens/scheduleEditorStack/ScheduleClassForm.tsx","screens/ScheduleEditorScreen.tsx","routes/EditorStack.tsx","screens/TestTabsScreens/FacultiesTestScreen.tsx","routes/ContactsStackRoutes.ts","constants/Contacts.tsx","screens/ContactsScreen.tsx","routes/ContactsStack.tsx","screens/NewsScreen.tsx","shared/card.tsx","screens/TestTabsScreens/NotificationTests.tsx","shared/Expander.tsx","screens/TestTabsScreens/ScheduledNotificationsScreen.tsx","components/ContentViewModal.tsx","shared/Button.tsx","screens/TestTabsScreens/FileSystemScreen.tsx","screens/TestTabsScreens/ScheduleEditor.tsx","routes/testEditorStack.tsx","screens/TestTabsScreens/ContactsModalsTestScreen.tsx","routes/ContactsTestStack.tsx","routes/testTabs.tsx","screens/SettingsScreen.tsx","screens/AboutScreen.tsx","App.tsx","index.js","node_modules/moment/locale|sync|/^/.*$","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { createDrawerNavigator } from \"@react-navigation/drawer\"\r\n\r\nexport const Drawer = createDrawerNavigator()\r\n","export type REGLAMENT_DATA_ELEM_TYPE = [number, string, string, string]\r\nexport type REGLAMENT_DATA_TYPE = REGLAMENT_DATA_ELEM_TYPE[]\r\n\r\nexport const REGLAMENT_DATA: REGLAMENT_DATA_TYPE = [\r\n  [1, \"8:30\", \"10:05\", \"9:15 – 9:20\"],\r\n  [2, \"10:15\", \"11:50\", \"11:00 – 11:05\"],\r\n  [3, \"12:20\", \"13:55\", \"13:05 – 13:10\"],\r\n  [4, \"14:05\", \"15:40\", \"14:50 – 14:55\"],\r\n  [5, \"15:50\", \"17:25\", \"16:35 – 16:40\"],\r\n  [6, \"17:35\", \"19:10\", \"18:20 – 18:25\"],\r\n]\r\n\r\nexport const suffixesForNumbers = {\r\n  1: \"-ша\",\r\n  2: \"-га\",\r\n  3: \"-тя\",\r\n  4: \"-та\",\r\n  5: \"-та\",\r\n  6: \"-та\",\r\n}\r\n\r\nexport const SEMESTER_MONTHS = 6\r\n\r\nexport const NOTIFICATIONS_CHANNEL_ID = \"interactive-schedule-notifications\"\r\n","import { CONTENTFUL_SPACE, CONTENTFUL_CONTENT_DELIVERY_ACCESS_TOKEN } from \"@env\"\r\n\r\nexport const ContentfulSpace = CONTENTFUL_SPACE\r\nexport const ContentfulContentDeliveryAccessToken = CONTENTFUL_CONTENT_DELIVERY_ACCESS_TOKEN\r\n\r\n// async-storage key udner which the app settings are stored. Can be whatever and is not confidential\r\nexport const STORAGE_KEY = \"@noid_schedule_app_settings103\"\r\n","import moment from \"moment\"\r\nimport { REGLAMENT_DATA_ELEM_TYPE, REGLAMENT_DATA } from \"../constants/Constants\"\r\n\r\nimport contentful from \"contentful/dist/contentful.browser.min.js\"\r\nimport { createClient } from \"contentful/dist/contentful.browser.min.js\"\r\n// import { ContentType, createClient as createClientProper } from \"contentful\"\r\n\r\nimport { ContentfulClientApi } from \"contentful\"\r\nimport { ContentfulContentDeliveryAccessToken, ContentfulSpace } from \"../constants/Keys\"\r\nimport { Platform } from \"react-native\"\r\nimport * as FileSystem from \"expo-file-system\"\r\nimport constants, { ExecutionEnvironment } from \"expo-constants\"\r\n\r\nexport const GetTimeDifference = (earlier: Date, later: Date) => {\r\n  let momentA = moment(earlier)\r\n  let momentB = moment(later)\r\n  let hourDifference = momentB.diff(momentA, \"hours\") as number\r\n  let minuteDifference = momentB.diff(momentA, \"minutes\") - hourDifference * 60\r\n  let secondDifference = momentB.diff(momentA, \"seconds\") - hourDifference * 60 * 60 - minuteDifference * 60\r\n\r\n  return {\r\n    hours: hourDifference,\r\n    minutes: minuteDifference,\r\n    seconds: secondDifference,\r\n  }\r\n}\r\n\r\nexport function createEvenlySpacedTimeSequence(sequenceSize: number, spacingInSeconds: number, start: Date): Date[] {\r\n  const sequence = []\r\n  let next = start\r\n\r\n  let index = 0\r\n  while (index < sequenceSize) {\r\n    sequence.push(next)\r\n    next = new Date(next.getTime() + spacingInSeconds * 1000)\r\n\r\n    index += 1\r\n  }\r\n\r\n  return sequence\r\n}\r\n\r\nexport function setDayOnDate(date: Date, day: number): Date {\r\n  const currentDay = date.getDay()\r\n  const distance = day - currentDay\r\n  date.setDate(date.getDate() + distance)\r\n\r\n  return date\r\n}\r\n\r\nfunction liesInRange(value: Date, start: Date, end: Date) {\r\n  return value <= end && value >= start\r\n}\r\n\r\n// get time slot of a timepoint\r\nexport function determineInterval(timepoint = new Date()): false | REGLAMENT_DATA_ELEM_TYPE {\r\n  let interval: false | REGLAMENT_DATA_ELEM_TYPE = false\r\n\r\n  REGLAMENT_DATA.forEach((class_) => {\r\n    let hourAndMinuteStart = class_[1]\r\n    let hourStart = hourAndMinuteStart.split(\":\")[0]\r\n    let minuteStart = hourAndMinuteStart.split(\":\")[1]\r\n\r\n    let hourAndMinuteEnd = class_[2]\r\n    let hourEnd = hourAndMinuteEnd.split(\":\")[0]\r\n    let minuteEnd = hourAndMinuteEnd.split(\":\")[1]\r\n\r\n    let now = new Date()\r\n    // TODO: annotate\r\n    let earlier = new Date(now.getFullYear(), now.getMonth(), now.getDate(), parseInt(hourStart), parseInt(minuteStart))\r\n    let later = new Date(now.getFullYear(), now.getMonth(), now.getDate(), parseInt(hourEnd), parseInt(minuteEnd))\r\n\r\n    if (liesInRange(timepoint, earlier, later)) {\r\n      interval = class_\r\n    }\r\n  })\r\n\r\n  return interval\r\n}\r\n\r\nconsole.log(\"[utilities] current interval is \", determineInterval())\r\n\r\nexport function getContentfulClient() {\r\n  console.log(\"contentful module: \", contentful)\r\n  console.log(\"create contentful client: \", createClient)\r\n\r\n  const client: ContentfulClientApi<undefiend> = createClient({\r\n    space: ContentfulSpace,\r\n    environment: \"master\", // defaults to 'master' if not set\r\n    accessToken: ContentfulContentDeliveryAccessToken,\r\n  })\r\n\r\n  return client\r\n}\r\n\r\nexport function ensureExtension(filename: string, extension: string) {\r\n  if (filename.endsWith(extension)) return filename\r\n\r\n  return filename + extension\r\n}\r\n\r\nexport function ensureNoExtension(filename: string, extension: string) {\r\n  if (!filename.endsWith(extension)) return filename\r\n\r\n  return filename.slice(0, -extension.length)\r\n}\r\n\r\nexport const isMail = (text: string) => {\r\n  return text.includes(\"@\") && !text.includes(\"http\")\r\n}\r\n\r\nexport function isRunningInExpoGo() {\r\n  const isRunningInExpo = constants.executionEnvironment == ExecutionEnvironment.StoreClient\r\n  return isRunningInExpo\r\n}\r\n\r\nexport function isRunningInBrowser() {\r\n  // const isRunningInBrowser = constants.executionEnvironment == ExecutionEnvironment.Bare\r\n\r\n  // debugger\r\n\r\n  const isRunningInBrowser = Platform.OS === \"web\"\r\n  return isRunningInBrowser\r\n}\r\n\r\nexport function isHorizontalOrientation() {\r\n  if (isRunningInBrowser()) {\r\n    return window.innerWidth > window.innerHeight\r\n  }\r\n\r\n  return (\r\n    constants.platform.ios.interfaceOrientation === \"landscape\" ||\r\n    constants.platform.android.interfaceOrientation === \"landscape\"\r\n  )\r\n}\r\n\r\nexport function isLandscapeWeb() {\r\n  return isRunningInBrowser() && isHorizontalOrientation()\r\n}\r\n\r\nexport const loadJSON = async (pathToJSONFile: string) => {\r\n  const fileName = pathToJSONFile // Replace with the name of your JSON file\r\n  const filePath =\r\n    Platform.OS === \"android\" ? FileSystem.documentDirectory + fileName : FileSystem.documentDirectory + \"/\" + fileName\r\n\r\n  try {\r\n    const fileContents = await FileSystem.readAsStringAsync(filePath)\r\n\r\n    const data = JSON.parse(fileContents)\r\n    return data\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n","import { StyleSheet } from \"react-native\"\r\nimport { isLandscapeWeb, isRunningInBrowser } from \"../utilities/utilities\"\r\n\r\nexport const previewImages = {\r\n  schedule: require(\"../assets/images/previews/schedule-preview.png\"),\r\n  scheduleCropped: require(\"../assets/images/previews/schedule-view-cropped-preview-3.png\"),\r\n  reglamentPreview: require(\"../assets/images/previews/reglament-preview.png\"),\r\n  settingsPreview: require(\"../assets/images/previews/settings-preview.png\"),\r\n  editorPreview: require(\"../assets/images/previews/editor-preview.png\"),\r\n}\r\n\r\nexport const previewImagesFull = {\r\n  schedule: require(\"../assets/images/previews/previews-full/schedule-view-highlight.png\"),\r\n  reglamentPreview: require(\"../assets/images/previews/previews-full/reglament.png\"),\r\n  editorPreview: require(\"../assets/images/previews/previews-full/editor-view-preview.png\"),\r\n  settingsPreview: require(\"../assets/images/previews/previews-full/settings.png\"),\r\n}\r\n\r\nexport const images = {\r\n  uad_logo_text: require(\"../assets/images/uad_logo_text.svg\"),\r\n  uad_logo_text_not_vector: require(\"../assets/images/uad_logo_text_not_vector.png\"),\r\n  uad_logo_text_not_vector_hires: require(\"../assets/images/uad_logo_text_not_vector_hires.png\"),\r\n}\r\n\r\nexport const teamMemberImages = {\r\n  senchyk_andrii: require(\"../assets/images/team/senchyk_andrii.png\"),\r\n  zakharova_zarina: require(\"../assets/images/team/zakharova_zarina.png\"),\r\n  shepita_julia: require(\"../assets/images/team/shepita_julia.png\"),\r\n  ivanov_mykhailo: require(\"../assets/images/team/ivanov_mykhailo.png\"),\r\n}\r\n\r\nexport const editorImages = {\r\n  lightbulb: require(\"../assets/images/editor/lightbulb-nontrasparent-fixed.png\"),\r\n}\r\n\r\nexport const drawerMenuImages = {\r\n  uad_logo_white_outline: require(\"../assets/images/uad-logo-white-outline.png\"),\r\n}\r\n\r\nexport const imageIcons = {\r\n  museum: require(\"../assets/image_icons/museum.png\"),\r\n  tiktok: require(\"../assets/image_icons/tiktok.png\"),\r\n}\r\n\r\nexport const palette = {\r\n  background: \"#E6E6E6\",\r\n  backgroundLight: \"#F5F5F5\",\r\n  textOnBackground: \"#5A5A5A\",\r\n  navigationBackground: \"#1C5D8F\",\r\n  text: \"#525252\",\r\n  numbers: \"#888888\",\r\n  grayedOut: \"#888888\",\r\n  grayishBlue: \"#4A6172\",\r\n  ongoingClass: \"rgb(227, 239, 249)\",\r\n}\r\n\r\nexport const globalStyles = StyleSheet.create({\r\n  container: {\r\n    padding: 20,\r\n  },\r\n\r\n  scrollView: {\r\n    marginBottom: 80, // to make sure last item is visible.\r\n    // there is other way to do that: via flex\r\n  },\r\n\r\n  screen: {\r\n    flex: 1,\r\n    // backgroundColor: \"#E6E6E6\",\r\n    backgroundColor: palette.backgroundLight,\r\n    padding: 0, // I don't know what's a sensible value for this. Will figure out later\r\n  },\r\n\r\n  centered: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  text: {\r\n    fontFamily: \"cinzel-regular\",\r\n    fontSize: 18,\r\n  },\r\n\r\n  paragraph: {\r\n    marginVertical: 8,\r\n    lineHeight: 20,\r\n  },\r\n\r\n  sectionHeader: {\r\n    marginLeft: 24,\r\n  },\r\n\r\n  input: {\r\n    borderWidth: 1,\r\n    borderColor: \"#ddd\",\r\n    padding: 10,\r\n    fontSize: 18,\r\n    borderRadius: 6,\r\n    marginBottom: 10,\r\n  },\r\n\r\n  errorText: {\r\n    color: \"crimson\",\r\n    fontWeight: \"bold\",\r\n    marginBottom: 10,\r\n    marginTop: 6,\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  navIcon: {\r\n    color: \"white\",\r\n    paddingHorizontal: 16,\r\n    paddingRight: 10,\r\n  },\r\n\r\n  separator: {\r\n    height: 1, // haha\r\n    width: \"100%\",\r\n    backgroundColor: \"#E6E6E6\",\r\n  },\r\n\r\n  noDisplay: {\r\n    display: \"none\",\r\n    margin: 0,\r\n    padding: 0,\r\n    width: 0,\r\n    height: 0,\r\n    zIndex: -1,\r\n  },\r\n\r\n  invisible: {\r\n    opacity: 0,\r\n  },\r\n\r\n  row: {\r\n    flexDirection: \"row\",\r\n  },\r\n\r\n  grayIcon: {\r\n    color: \"rgba(136,136,136,1)\",\r\n    fontSize: 26,\r\n  },\r\n\r\n  card: {\r\n    borderRadius: 6,\r\n    backgroundColor: \"white\",\r\n\r\n    paddingVertical: 2,\r\n    paddingHorizontal: 5,\r\n\r\n    elevation: 1,\r\n    shadowOffset: { width: 1, height: 1 },\r\n    shadowColor: \"#333\",\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 2,\r\n  },\r\n\r\n  link: {\r\n    color: palette.navigationBackground,\r\n  },\r\n\r\n  underlinedLink: {\r\n    color: palette.navigationBackground,\r\n    textDecorationLine: \"underline\",\r\n  },\r\n\r\n  captionWithIcon: {\r\n    marginLeft: -3,\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  navigationButton: {\r\n    borderColor: palette.navigationBackground,\r\n    borderWidth: 1,\r\n\r\n    // paddingHorizontal: 15,\r\n    paddingVertical: 5,\r\n\r\n    borderRadius: 10,\r\n\r\n    width: 75,\r\n\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  modalContentContainer: {\r\n    position: \"absolute\",\r\n    top: \"10%\",\r\n\r\n    margin: 30,\r\n    marginHorizontal: isLandscapeWeb() ? \"35%\" : \"2%\", // 27 + 8 for sidebar\r\n    padding: 20,\r\n    borderRadius: 10,\r\n    backgroundColor: \"white\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: isLandscapeWeb() ? \"45%\" : \"95%\",\r\n  },\r\n\r\n  searchBar: {\r\n    fontSize: 12,\r\n    flex: 1,\r\n    fontFamily: \"montserrat-500\",\r\n    paddingVertical: 2,\r\n  },\r\n\r\n  horizontalCenteredFlex: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n})\r\n","export enum DrawerRoutes {\r\n  VIEWER = \"Мій Розклад\",\r\n  REGLAMENT = \"Регламент\",\r\n  TEACHERS = \"Викладачі\",\r\n  CONTACTS = \"Контакти\",\r\n  NEWS = \"Новини\",\r\n  QnA = \"Q&A\",\r\n\r\n  TESTS = \"Тести\",\r\n  EDITOR = \"Редактор\",\r\n  SETTINGS = \"Налаштування\",\r\n  ABOUT = \"Про Застосунок\",\r\n}\r\n","import { Ionicons, FontAwesome5, FontAwesome } from \"@expo/vector-icons\"\r\nimport { DrawerRoutes } from \"../routes/DrawerRoutes\"\r\n\r\nconst RouteIcons = {\r\n  [DrawerRoutes.VIEWER]: <Ionicons name=\"calendar\" color={\"white\"} size={18} />,\r\n  [DrawerRoutes.REGLAMENT]: <Ionicons name=\"time-sharp\" color={\"white\"} size={18} />,\r\n  [DrawerRoutes.TEACHERS]: <FontAwesome5 name=\"user-graduate\" color={\"white\"} size={18} />,\r\n  [DrawerRoutes.CONTACTS]: <Ionicons name=\"call\" color={\"white\"} size={18} />,\r\n  [DrawerRoutes.NEWS]: <Ionicons name=\"chatbox-ellipses\" color={\"white\"} size={18} />,\r\n  [DrawerRoutes.QnA]: <FontAwesome name=\"comments\" color={\"white\"} size={18} />,\r\n\r\n  [DrawerRoutes.TESTS]: <Ionicons name=\"flask\" color={\"white\"} size={18} />,\r\n  [DrawerRoutes.EDITOR]: <Ionicons name=\"options\" color={\"white\"} size={18} />,\r\n  [DrawerRoutes.SETTINGS]: <FontAwesome5 name=\"cog\" color={\"white\"} size={18} />,\r\n  [DrawerRoutes.ABOUT]: <Ionicons name=\"information-circle\" color={\"white\"} size={18} />,\r\n}\r\n\r\nexport default RouteIcons\r\n","import React from \"react\"\r\nimport { StyleSheet, Text, View } from \"react-native\"\r\nimport { FontAwesome5, Ionicons, MaterialIcons } from \"@expo/vector-icons\"\r\nimport { SafeAreaView } from \"react-native-safe-area-context\"\r\nimport { globalStyles } from \"../styles/global\"\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport { isHorizontalOrientation, isLandscapeWeb } from \"../utilities/utilities\"\r\nimport RouteIcons from \"../constants/RouteIcons\"\r\n\r\nexport function getIcon(navigation, headerText: string) {\r\n  const RouteIconConstructor = RouteIcons[headerText].type\r\n  const RouteIcon = <RouteIconConstructor {...RouteIcons[headerText].props} style={globalStyles.navIcon} />\r\n\r\n  const iconOnPress = () => navigation.openDrawer()\r\n \r\n  const icon = isLandscapeWeb() ? (\r\n    RouteIcon\r\n  ) : (\r\n    <MaterialIcons onPress={iconOnPress} name=\"menu\" size={24} style={globalStyles.navIcon} />\r\n  )\r\n\r\n  return icon\r\n}\r\n\r\nfunction BaseHeader({ title, navigation }) {\r\n  // extract current screen name from navigation state\r\n  const headerText = title\r\n\r\n  const icon = getIcon(navigation, headerText)\r\n\r\n  return (\r\n    <View style={styles.headerContentContainer}>\r\n      <TouchableOpacity>{icon}</TouchableOpacity>\r\n\r\n      <Text style={styles.headerText}>{headerText}</Text>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default function GlobalHeader({\r\n  title,\r\n  navigation,\r\n  headerContent: headerContentElement,\r\n}: {\r\n  title: string\r\n  navigation: any\r\n  headerContent?: React.ReactNode\r\n}) {\r\n  return (\r\n    <SafeAreaView style={styles.header}>\r\n      {headerContentElement ? headerContentElement : <BaseHeader title={title} navigation={navigation} />}\r\n    </SafeAreaView>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  header: {\r\n    paddingVertical: 15,\r\n    width: \"100%\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#1C5D8F\",\r\n  },\r\n\r\n  headerText: {\r\n    fontSize: 20,\r\n    color: \"white\",\r\n    fontFamily: \"century-gothic\",\r\n  },\r\n\r\n  headerContentContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n  },\r\n})\r\n","// This is a singleton service that loads news from contenful and provides it to the rest of the application\r\n\r\nimport { getContentfulClient } from \"../utilities/utilities\"\r\n\r\nexport type NewsArticle = {\r\n  title: string\r\n  body: string\r\n  createdAt: string\r\n}\r\n\r\nexport default class NewsLoaderService {\r\n  protected static instance: NewsLoaderService\r\n\r\n  protected _newsCached: NewsArticle[] = []\r\n\r\n  static async GetInstance(): Promise<NewsLoaderService> {\r\n    if (!this.instance) {\r\n      this.instance = new this()\r\n      await this.instance.init()\r\n\r\n      console.log(`[${this.name}] news loader service instance constructed successfully`)\r\n    }\r\n\r\n    return this.instance\r\n  }\r\n\r\n  protected constructor() {}\r\n\r\n  protected async init() {}\r\n\r\n  async getNewsFromContentful(): Promise<NewsArticle[]> {\r\n    // retrieve schedules from contentful\r\n    console.log(`[News Loader] retrieving news from contentful`)\r\n\r\n    if (this._newsCached.length > 0) {\r\n      console.log(`[News Loader] returning cached news`)\r\n      return this._newsCached\r\n    }\r\n\r\n    const entries = await this.fetchContentfulEntries()\r\n\r\n    let news = entries.items.map((entry) => {\r\n      const {\r\n        title,\r\n        body,\r\n      }: {\r\n        title: string\r\n        body: string\r\n      } = entry.fields\r\n      const createdAt = entry.sys.createdAt\r\n      return {\r\n        title,\r\n        body,\r\n        createdAt,\r\n      }\r\n    })\r\n\r\n    // sort news by date\r\n    news = news.sort((a, b) => {\r\n      return new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()\r\n    })\r\n\r\n    console.log(`[News Loader] entries: ${JSON.stringify(news)}`)\r\n\r\n    this._newsCached = news\r\n    return news\r\n  }\r\n\r\n  async fetchContentfulEntries() {\r\n    const client = getContentfulClient()\r\n\r\n    const content_type = \"newsArticle\"\r\n    const entries = await client.getEntries({\r\n      content_type,\r\n    })\r\n\r\n    return entries\r\n  }\r\n\r\n  getExampleNews(): NewsArticle[] {\r\n    return [\r\n      {\r\n        title: \"Новина 1\",\r\n        body: \"Текст новини 1\",\r\n        createdAt: \"2021-06-01T00:00:00.000Z\",\r\n      },\r\n      {\r\n        title: \"Новина 2\",\r\n        body: \"Текст новини 2\",\r\n        createdAt: \"2022-06-02T00:00:00.000Z\",\r\n      },\r\n      {\r\n        title: \"Новина 3\",\r\n        body: \"Текст новини 3\",\r\n        createdAt: \"2023-06-03T00:00:00.000Z\",\r\n      },\r\n    ]\r\n  }\r\n\r\n  // TODO: move to utilities\r\n  async getNewestArticleDate(): Promise<Date> {\r\n    let news = await this.getNewsFromContentful()\r\n    return new Date(news[0].createdAt)\r\n  }\r\n}\r\n","import React, { useRef } from \"react\"\r\nimport { ActivityIndicator, Text, View, StyleSheet, Image } from \"react-native\"\r\nimport { useNavigation, useNavigationState } from \"@react-navigation/native\"\r\nimport { drawerMenuImages, globalStyles, palette } from \"../styles/global\"\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport { DrawerRoutes } from \"../routes/DrawerRoutes\"\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\"\r\nimport NewsLoaderService from \"../services/NewsLoaderService\"\r\nimport { isRunningInExpoGo } from \"../utilities/utilities\"\r\nimport _ from \"lodash\"\r\nimport RouteIcons from \"../constants/RouteIcons\"\r\n\r\n// let allIcons = Object.keys(Ionicons.getRawGlyphMap())\r\n// console.log(allIcons)\r\n\r\nlet shouldDisplayYellowCircle = true\r\nNewsLoaderService.GetInstance().then(async (instance) => {\r\n  let newestArticleDate = await instance.getNewestArticleDate()\r\n  let lastSeenArticle = await AsyncStorage.getItem(\"newsChecked\")\r\n  let lastSeenArticleDate = lastSeenArticle ? new Date(lastSeenArticle) : null\r\n\r\n  console.log(\"newestArticleDate\", newestArticleDate)\r\n  console.log(\"lastSeenArticleDate\", lastSeenArticleDate)\r\n\r\n  if (!lastSeenArticleDate || newestArticleDate.getTime() > lastSeenArticleDate.getTime()) {\r\n    shouldDisplayYellowCircle = true\r\n  } else {\r\n    shouldDisplayYellowCircle = false\r\n  }\r\n\r\n  console.log(\"shouldDisplayYellowCircle: \", shouldDisplayYellowCircle)\r\n})\r\n\r\nfunction YellowCircle({ filled = true }: { filled?: boolean }) {\r\n  return (\r\n    <View\r\n      style={{\r\n        marginLeft: 10,\r\n        marginTop: 5,\r\n\r\n        alignSelf: \"flex-start\",\r\n\r\n        width: 5,\r\n        height: 5,\r\n        borderRadius: 10,\r\n        backgroundColor: filled ? \"#FFE600\" : \"transparent\",\r\n        borderWidth: 1,\r\n        borderColor: !filled ? palette.grayedOut : \"transparent\",\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nexport default function DrawerMenu() {\r\n  const routeNameToIconRef = useRef(RouteIcons)\r\n\r\n  const navigation = useNavigation()\r\n  console.log(\"navigation\", navigation)\r\n\r\n  const handleNavigationButtonPress = (screenName: string) => {\r\n    console.log(\"handlePageLinkPress\", screenName)\r\n    navigation.navigate(screenName)\r\n  }\r\n\r\n  // Get all the routes from the navigation state\r\n  let routesContainer = useNavigationState((state) => state)\r\n  //   console.log(\"routes\", routesContainer)\r\n\r\n  if (routesContainer && routesContainer.routes) {\r\n    const isRunningInExpoGo_ = isRunningInExpoGo()\r\n\r\n    let routes = routesContainer.routes\r\n\r\n    let breakpoint = routes.length - 4\r\n    let topRoutes = routes.slice(0, breakpoint)\r\n    let bottomRoutes = routes.slice(breakpoint, routes.length)\r\n\r\n    if (!isRunningInExpoGo_) {\r\n      _.remove(bottomRoutes, (route) => route.name == DrawerRoutes.TESTS)\r\n    }\r\n\r\n    let currentRouteIndex = routesContainer.index\r\n    let currentRoute = routes[currentRouteIndex]\r\n\r\n    // NavigationRoute type isn't exported, thus I have to use typeof here\r\n    const RouteButton = ({ route, index }: { route: typeof currentRoute; index: number }) => {\r\n      const isCurrentRoute = route.name == currentRoute.name\r\n      const isNewsRoute = route.name == DrawerRoutes.NEWS\r\n\r\n      const yellowCircle =\r\n        shouldDisplayYellowCircle && isNewsRoute ? <YellowCircle /> : <View style={globalStyles.noDisplay} />\r\n\r\n      return (\r\n        <TouchableOpacity\r\n          key={index}\r\n          onPress={() => {\r\n            if (isNewsRoute) {\r\n              shouldDisplayYellowCircle = false\r\n              AsyncStorage.setItem(\"newsChecked\", new Date().toString())\r\n            }\r\n\r\n            handleNavigationButtonPress(route.name)\r\n          }}\r\n        >\r\n          <View\r\n            style={{\r\n              ...styles.pageLinkContainer,\r\n              ...(isCurrentRoute ? styles.activePageLink : {}),\r\n            }}\r\n          >\r\n            {routeNameToIconRef.current[route.name]}\r\n            <Text style={styles.pageLink}>{route.name}</Text>\r\n            {yellowCircle}\r\n          </View>\r\n        </TouchableOpacity>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <View style={styles.drawerContainer}>\r\n        <View>\r\n          <View style={styles.drawerContainerHeader}>\r\n            <Image\r\n              style={{ width: 35, height: 40, marginRight: 15 }}\r\n              source={drawerMenuImages.uad_logo_white_outline}\r\n            />\r\n            <Text style={{ fontSize: 24, fontFamily: \"century-gothic\", color: \"white\" }}>Розклад</Text>\r\n          </View>\r\n          {topRoutes.map((route, index: number) => {\r\n            return <RouteButton key={index} route={route} index={index} />\r\n          })}\r\n        </View>\r\n\r\n        <View style={styles.drawerContainerBottom}>\r\n          {bottomRoutes.map((route, index: number) => {\r\n            return <RouteButton key={index + topRoutes.length} route={route} index={index + topRoutes.length} />\r\n          })}\r\n        </View>\r\n      </View>\r\n    )\r\n  } else {\r\n    return (\r\n      <View style={{ ...styles.drawerContainer, ...globalStyles.centered }}>\r\n        <ActivityIndicator size={\"large\"} color={palette.navigationBackground} />\r\n      </View>\r\n    )\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  pageLinkContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 20,\r\n  },\r\n  pageLink: {\r\n    fontSize: 18,\r\n    marginLeft: 10,\r\n    color: \"white\",\r\n    fontFamily: \"century-gothic\",\r\n  },\r\n\r\n  drawerContainer: {\r\n    flex: 1,\r\n    justifyContent: \"space-between\",\r\n\r\n    backgroundColor: \"#1C5D8F\",\r\n    paddingTop: 35,\r\n    paddingBottom: 25,\r\n  },\r\n\r\n  drawerContainerBottom: {},\r\n\r\n  activePageLink: {\r\n    backgroundColor: \"lightblue\",\r\n  },\r\n\r\n  drawerContainerHeader: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n\r\n    marginBottom: 25,\r\n    paddingBottom: 15,\r\n\r\n    paddingHorizontal: 20,\r\n\r\n    borderBottomColor: \"rgba(0,0,0,0.1)\",\r\n    borderBottomWidth: 1,\r\n  },\r\n})\r\n","import { GetTimeDifference } from \"./utilities\"\r\n\r\nexport enum WeekType {\r\n  Nominator,\r\n  Denominator,\r\n}\r\n\r\n// month/day/year\r\n// const SEMESTER_START = new Date(\"10/3/2022\") // such string notation doesn't work in react native\r\nconst SEMESTER_START = new Date(2022, 9, 3) // month is 0-based\r\nconst SEMESTER_START_TYPE = WeekType.Denominator\r\n\r\nexport default function GetWeekType(timepoint = new Date()): WeekType {\r\n  // let timepoint = new Date()\r\n  let timeDifferenceInHours = GetTimeDifference(SEMESTER_START, timepoint).hours\r\n  let timeDifferenceInDays = timeDifferenceInHours / 24\r\n  let timeDifferenceInWeeks = Math.trunc(timeDifferenceInDays / 7)\r\n\r\n  if (timeDifferenceInWeeks % 2 == 0) {\r\n    if (SEMESTER_START_TYPE === WeekType.Denominator) {\r\n      return WeekType.Denominator\r\n    }\r\n    return WeekType.Nominator\r\n  } else {\r\n    if (SEMESTER_START_TYPE === WeekType.Denominator) {\r\n      return WeekType.Nominator\r\n    }\r\n    return WeekType.Denominator\r\n  }\r\n}\r\n","// checks whether index is not out of bounds and throws an error if it is\r\nexport default function getStrict(array: Array<any>, index: number) {\r\n  if (index >= array.length || index < 0) {\r\n    throw new Error(`[Array Indexing] Index out of bounds: ${index} (length: ${array.length})`)\r\n  }\r\n  return array[index]\r\n}\r\n","export const daysInShortenedForm = [\"Пн\", \"Вт\", \"Ср\", \"Чт\", \"Пт\"]\r\nexport const localizedDays = [\"Неділя\", \"Понеділок\", \"Вівторок\", \"Середа\", \"Четвер\", \"П'ятниця\", \"Субота\"]\r\n\r\nexport const workDays = [\"Понеділок\", \"Вівторок\", \"Середа\", \"Четвер\", \"П'ятниця\"]\r\nexport const workDaysEn = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"]\r\nexport const workDaysEnLower = workDaysEn.map((day) => day.toLowerCase())\r\n\r\nexport function mapEnWorkDayToUkrWorkDay(day: string): string {\r\n  let index = workDaysEnLower.indexOf(day.toLowerCase())\r\n  return workDays[index]\r\n}\r\n\r\nexport function mapUkrWorkDayToEnWorkDay(day: string): string {\r\n  day = day.toLowerCase()\r\n  let workDaysLower = workDays.map((d) => d.toLowerCase())\r\n\r\n  let index = workDaysLower.indexOf(day)\r\n  return workDaysEn[index]\r\n}\r\n","// web only.\r\n// service for saving edited schedules to local storage\r\n\r\n// TODO: resolve require cycle: EditedScheduleStorageService.ts -> services\\ScheduleLoaderService.ts -> EditedScheduleStorageService.ts\r\n\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\"\r\n\r\nimport ScheduleModel, { ScheduleDay, ScheduleDaysJson } from \"../models/ScheduleModel\"\r\nimport { workDaysEnLower } from \"../constants/Days\"\r\nimport ScheduleLoaderService, { ScheduleFileMetadata } from \"./ScheduleLoaderService\"\r\nimport _ from \"lodash\"\r\nimport { ensureExtension } from \"../utilities/utilities\"\r\n\r\ntype ScheduleWithMetadata = {\r\n  scheduleDays: ScheduleDaysJson\r\n  metadata: ScheduleFileMetadata\r\n}\r\n\r\ninterface IEditedScheduleStorageService {\r\n  createVersionForEdits: (schedule: ScheduleModel) => Promise<ScheduleModel>\r\n  saveEditedSchedule: (schedule: ScheduleModel) => Promise<void>\r\n  loadEditedSchedule: (scheduleFileName: string) => Promise<ScheduleWithMetadata | null>\r\n\r\n  isOutdated: (scheduleFileName: string) => Promise<boolean>\r\n  removeEditedSchedule: (scheduleName: string) => Promise<void>\r\n}\r\n\r\n// singleton service\r\nexport default class EditedSchedulesStorageService implements IEditedScheduleStorageService {\r\n  private static instance: EditedSchedulesStorageService\r\n\r\n  static async GetInstance(): Promise<EditedSchedulesStorageService> {\r\n    if (!EditedSchedulesStorageService.instance) {\r\n      EditedSchedulesStorageService.instance = new EditedSchedulesStorageService()\r\n\r\n      await EditedSchedulesStorageService.instance.init()\r\n\r\n      console.log(\"EditedScheduleStorageService instance constructed successfully\")\r\n    }\r\n\r\n    return EditedSchedulesStorageService.instance\r\n  }\r\n\r\n  async init() {\r\n    let scheduleLoader = await ScheduleLoaderService.GetInstance()\r\n    // invalidate outdated edited schedules\r\n    const results = scheduleLoader.scheduleFiles.map(async (scheduleFile) => {\r\n      if (await this.isOutdated(scheduleFile.filename)) {\r\n        await this.removeEditedSchedule(scheduleFile.filename)\r\n      }\r\n    })\r\n\r\n    await Promise.all(results)\r\n  }\r\n\r\n  // copies regular schedule to local storage\r\n  async createVersionForEdits(schedule: ScheduleModel) {\r\n    // I wonder if this is enough\r\n    await this.saveEditedSchedule(schedule)\r\n    return schedule\r\n  }\r\n\r\n  // saves schedule with its metadata to local storage\r\n  async saveEditedSchedule(schedule: ScheduleModel): Promise<void> {\r\n    const scheduleLoader = await ScheduleLoaderService.GetInstance()\r\n    const scheduleMetadata = scheduleLoader.getScheduleFileMetadata(\r\n      scheduleLoader.getScheduleFileByFileName(ensureExtension(schedule.name, \".json\"))\r\n    )\r\n\r\n    let jsonToDump: ScheduleWithMetadata = {\r\n      metadata: scheduleMetadata,\r\n      scheduleDays: {},\r\n    }\r\n\r\n    workDaysEnLower.forEach((day, idx) => {\r\n      jsonToDump[\"scheduleDays\"][day] = schedule.scheduleDays[idx]\r\n    })\r\n\r\n    await AsyncStorage.setItem(ensureExtension(schedule.name, \".json\"), JSON.stringify(jsonToDump))\r\n  }\r\n\r\n  // gets edited schedule from local storage\r\n  async loadEditedSchedule(scheduleFileName: string): Promise<ScheduleWithMetadata | null> {\r\n    const scheduleWithMetadata = await AsyncStorage.getItem(scheduleFileName)\r\n\r\n    if (!scheduleWithMetadata) return null\r\n\r\n    const scheduleWithMetadataJSON: ScheduleWithMetadata = JSON.parse(scheduleWithMetadata)\r\n\r\n    return scheduleWithMetadataJSON\r\n  }\r\n\r\n  async isOutdated(scheduleFileName: string) {\r\n    let scheduleLoader = await ScheduleLoaderService.GetInstance()\r\n    let contentfulScheduleFile = scheduleLoader.getScheduleFileByFileName(scheduleFileName)\r\n\r\n    let editVer = await this.loadEditedSchedule(scheduleFileName)\r\n    if (!editVer) return false\r\n\r\n    debugger\r\n\r\n    let editVerMetadata = editVer.metadata\r\n\r\n    let contentfulVerMetadata = scheduleLoader.getScheduleFileMetadata(contentfulScheduleFile)\r\n\r\n    return !_.isEqual(editVerMetadata, contentfulVerMetadata)\r\n  }\r\n\r\n  removeEditedSchedule(scheduleName: string) {\r\n    return AsyncStorage.removeItem(scheduleName)\r\n  }\r\n\r\n  async hasEditedVersion(scheduleName: string) {\r\n    const editedVersion = await this.loadEditedSchedule(scheduleName)\r\n    return editedVersion != null\r\n  }\r\n}\r\n","import * as FileSystem from \"expo-file-system\"\r\nimport { AssetFile } from \"contentful\"\r\nimport _ from \"lodash\"\r\nimport NetInfo from \"@react-native-community/netinfo\"\r\n\r\nimport ScheduleModel, { ScheduleDay } from \"../models/ScheduleModel\"\r\nimport { workDaysEnLower } from \"../constants/Days\"\r\nimport { ensureExtension, getContentfulClient, isRunningInBrowser } from \"../utilities/utilities\"\r\nimport ExampleScheduleKN from \"../assets/example_schedules/КН-example.json\"\r\nimport ExampleScheduleIST from \"../assets/example_schedules/ІСТ-example.json\"\r\nimport ExampleScheduleTE from \"../assets/example_schedules/ТЕ-example.json\"\r\nimport EditedSchedulesStorageService from \"./EditedScheduleStorageService\"\r\n\r\n// This is a singleton service that loads schedules from local storage / contentful and provides it to the rest of the application\r\n// if no schedules are available (no schedules folder) it should retrieve them from contentful and store them locally\r\n// if schedules are indeed available, we gotta check whether they are up to date or not\r\n// for that we will have to rely on some additional field. Perhaps revision or perhaps creactedAt.\r\n// or perhaps both\r\n\r\nexport type ScheduleFileMetadata = {\r\n  filename: string\r\n  revision: number\r\n  createdAt: string\r\n  updatedAt: string\r\n}\r\n\r\nexport interface ScheduleFile extends ScheduleFileMetadata {\r\n  json_parsed: string\r\n}\r\n\r\nexport default class ScheduleLoaderService {\r\n  protected static instance: ScheduleLoaderService\r\n\r\n  scheduleFiles: ScheduleFile[] = []\r\n\r\n  pathToScheduleFolder = `${FileSystem.documentDirectory}schedules/`\r\n\r\n  static async GetInstance(): Promise<ScheduleLoaderService> {\r\n    if (!this.instance) {\r\n      this.instance = new this()\r\n      await this.instance.init()\r\n\r\n      // log loaded schedule files\r\n      console.log(`[${this.name}] schedule loader service instance constructed successfully`)\r\n      console.log(`[${this.name}] schedule loader files:`)\r\n      this.instance.scheduleFiles.forEach((file) => console.log(`[${this.name}] file: ${file.filename}`))\r\n    }\r\n\r\n    return this.instance\r\n  }\r\n\r\n  protected constructor() {}\r\n\r\n  protected async init() {\r\n\r\n    if (isRunningInBrowser()) {\r\n      await this.getSchedulesFromContentful()\r\n      // replace contentful schedules with their user edited versions\r\n      await this.replaceContentfulSchedulesWithEditedVersions()\r\n    } else {\r\n      // check whether schedules are available locally\r\n      const schedulesAvailableLocally = (await FileSystem.getInfoAsync(this.pathToScheduleFolder)).exists\r\n\r\n      // TODO: refactor try catches into one hoisted try catch\r\n      if (schedulesAvailableLocally) {\r\n        await this.getSchedulesFromFileSystem()\r\n\r\n        // check for updates\r\n        try {\r\n          await this.checkForUpdatesAsync()\r\n        } catch (e) {\r\n          this.getExampleSchedules()\r\n        }\r\n      } else {\r\n        // create schedules folder\r\n        await FileSystem.makeDirectoryAsync(this.pathToScheduleFolder, { intermediates: true })\r\n\r\n        try {\r\n          await this.getSchedulesFromContentful()\r\n        } catch (e) {\r\n          this.getExampleSchedules()\r\n        }\r\n      }\r\n    }\r\n\r\n    this.scheduleFiles = _.sortBy(this.scheduleFiles, (sf) => sf.filename)\r\n  }\r\n  async replaceContentfulSchedulesWithEditedVersions() {\r\n    const editedSchedulesStorage = await EditedSchedulesStorageService.GetInstance()\r\n\r\n    let editedCounterpartsPromises = this.scheduleFiles.map(async (sf) => {\r\n      // patch contentful schedules with edited versions\r\n      const editedSchedule = await editedSchedulesStorage.loadEditedSchedule(sf.filename)\r\n      if (editedSchedule) {\r\n        sf.json_parsed = editedSchedule.scheduleDays\r\n      }\r\n\r\n      return sf\r\n    })\r\n\r\n    let editedCounterparts = await Promise.all(editedCounterpartsPromises)\r\n\r\n    this.scheduleFiles = editedCounterparts\r\n  }\r\n\r\n  async getSchedulesFromFileSystem() {\r\n    console.log(`[Schedule Loader] schedules are available locally. loading...`)\r\n    let allScheduleFileNames = await FileSystem.readDirectoryAsync(this.pathToScheduleFolder)\r\n    // sort the filenames alphabetically\r\n    allScheduleFileNames.sort()\r\n\r\n    console.log(`[Schedule Loader] allScheduleFileNames: ${allScheduleFileNames}`)\r\n    const scheduleFiles: ScheduleFile[] = await Promise.all(\r\n      allScheduleFileNames.map(async (filename) => {\r\n        let file = await FileSystem.readAsStringAsync(`${this.pathToScheduleFolder}${filename}`)\r\n        let json = JSON.parse(file)\r\n        let { revision, createdAt, updatedAt, json_parsed } = json\r\n        return {\r\n          filename,\r\n          revision,\r\n          createdAt,\r\n          updatedAt,\r\n          json_parsed,\r\n        }\r\n      })\r\n    )\r\n\r\n    this.scheduleFiles = scheduleFiles\r\n    return scheduleFiles\r\n  }\r\n\r\n  // downloads schedules and sets them to .scheduleFiles\r\n  // also saves them to schedules folder (android only)\r\n  async getSchedulesFromContentful() {\r\n    // retrieve schedules from contentful\r\n    console.log(`[Schedule Loader] retrieving schedules from contentful`)\r\n\r\n    const client = getContentfulClient()\r\n    const assets = await client.getAssets({\r\n      limit: 1000,\r\n    })\r\n    console.log(`[Schedule Loader] retrieved ${assets.items.length} schedule assets from contentful`)\r\n\r\n    // iterate over assets and download them\r\n\r\n    const scheduleFiles: ScheduleFile[] = await Promise.all(\r\n      assets.items.map(async (a) => {\r\n        const file: AssetFile = a.fields.file\r\n\r\n        const protocol = \"https:\"\r\n        const linkToFile = protocol + file.url\r\n\r\n        // get file located at url and temporarily store it in .json file as I don't know how to download it in memory\r\n        const linkToDestFile = `${this.pathToScheduleFolder}${file.fileName}`\r\n\r\n        var scheduleClassesJson: string\r\n\r\n        if (!isRunningInBrowser()) {\r\n          await FileSystem.downloadAsync(linkToFile, linkToDestFile)\r\n          scheduleClassesJson = await FileSystem.readAsStringAsync(linkToDestFile)\r\n        } else {\r\n          let res = await fetch(linkToFile)\r\n\r\n          const blob = await res.blob()\r\n          const data = await blob.text()\r\n\r\n          scheduleClassesJson = data\r\n        }\r\n\r\n        let scheduleFile: ScheduleFile = {\r\n          filename: file.fileName,\r\n          revision: a.sys.revision,\r\n          createdAt: a.sys.createdAt,\r\n          updatedAt: a.sys.updatedAt,\r\n          json_parsed: JSON.parse(scheduleClassesJson),\r\n        }\r\n\r\n        if (!isRunningInBrowser()) {\r\n          // save schedule classes json together with metadata to schedules folder\r\n          await FileSystem.writeAsStringAsync(linkToDestFile, JSON.stringify(scheduleFile))\r\n        }\r\n\r\n        return scheduleFile\r\n      })\r\n    )\r\n\r\n    this.scheduleFiles = scheduleFiles\r\n  }\r\n\r\n  getExampleSchedules() {\r\n    console.log(`[Schedule Loader] retrieving example schedules`)\r\n\r\n    const scheduleFiles: ScheduleFile[] = [\r\n      {\r\n        filename: \"КН-example.json\",\r\n        revision: 0,\r\n        createdAt: \"\",\r\n        updatedAt: \"\",\r\n        json_parsed: ExampleScheduleKN,\r\n      },\r\n      {\r\n        filename: \"ІСТ-example.json\",\r\n        revision: 0,\r\n        createdAt: \"\",\r\n        updatedAt: \"\",\r\n        json_parsed: ExampleScheduleIST,\r\n      },\r\n\r\n      {\r\n        filename: \"ТЕ-example.json\",\r\n        revision: 0,\r\n        createdAt: \"\",\r\n        updatedAt: \"\",\r\n        json_parsed: ExampleScheduleTE,\r\n      },\r\n    ]\r\n\r\n    this.scheduleFiles = scheduleFiles\r\n\r\n    return scheduleFiles\r\n  }\r\n\r\n  getScheduleFileByFileName(fileName: string): ScheduleFile | undefined {\r\n    return this.scheduleFiles.find((sf) => sf.filename === fileName)\r\n  }\r\n\r\n  // checks for updates and updates schedules if they are outdated\r\n  async checkForUpdatesAsync() {\r\n    let netInfo = await NetInfo.fetch()\r\n\r\n    if (!netInfo.isConnected || !netInfo.isInternetReachable) {\r\n      console.log(`[Schedule Loader] no internet connection. skipping update check`)\r\n      return\r\n    }\r\n\r\n    const client = getContentfulClient()\r\n\r\n    const assets = await client.getAssets({\r\n      limit: 1000,\r\n    })\r\n    console.log(`[Schedule Loader] retrieved ${assets.items.length} schedule assets from contentful`)\r\n\r\n    // iterate over assets and download their metadata\r\n    // TODO: dry up the duplicate\r\n\r\n    const scheduleFileMetadatas: (ScheduleFileMetadata & { linkToFile: string })[] = await Promise.all(\r\n      assets.items.map(async (itm) => {\r\n        const file: AssetFile = itm.fields.file\r\n\r\n        const protocol = \"https:\"\r\n        const linkToFile = protocol + file.url\r\n\r\n        let scheduleFileMetadata: ScheduleFileMetadata & { linkToFile: string } = {\r\n          filename: file.fileName,\r\n          revision: itm.sys.revision,\r\n          createdAt: itm.sys.createdAt,\r\n          updatedAt: itm.sys.updatedAt,\r\n          linkToFile,\r\n        }\r\n\r\n        return scheduleFileMetadata\r\n      })\r\n    )\r\n\r\n    // update whatever schedules are outdated\r\n    const updatedScheduleFiles: ScheduleFile[] = await Promise.all(\r\n      scheduleFileMetadatas.map(async (sfm) => {\r\n        let oldSchedule = this.getScheduleFileByFileName(sfm.filename)\r\n        if (!oldSchedule) {\r\n          // schedule is new, download it\r\n          const linkToDestFile = `${this.pathToScheduleFolder}${sfm.filename}`\r\n          await FileSystem.downloadAsync(sfm.linkToFile, linkToDestFile)\r\n\r\n          let scheduleFile: ScheduleFile = {\r\n            filename: sfm.filename,\r\n            revision: sfm.revision,\r\n            createdAt: sfm.createdAt,\r\n            updatedAt: sfm.updatedAt,\r\n            json_parsed: JSON.parse(await FileSystem.readAsStringAsync(linkToDestFile)),\r\n          }\r\n\r\n          // write newly downloaded schedule to schedules folder\r\n          await FileSystem.writeAsStringAsync(linkToDestFile, JSON.stringify(scheduleFile))\r\n\r\n          return scheduleFile\r\n        } else {\r\n          // schedule exists, check if it's outdated\r\n          const isOutdated =\r\n            oldSchedule.revision < sfm.revision ||\r\n            new Date(oldSchedule.updatedAt) < new Date(sfm.updatedAt) ||\r\n            new Date(oldSchedule.createdAt) < new Date(sfm.createdAt)\r\n\r\n          //   console.log(`old schedule created at (date constructed from string): ${new Date(oldSchedule.createdAt)}`) // works\r\n          console.log(`[Schedule Loader] schedule ${sfm.filename} is outdated: ${isOutdated}`)\r\n          if (isOutdated) {\r\n            // schedule is outdated, download it\r\n            const linkToDestFile = `${this.pathToScheduleFolder}${sfm.filename}`\r\n            await FileSystem.downloadAsync(sfm.linkToFile, linkToDestFile)\r\n\r\n            let scheduleFile: ScheduleFile = {\r\n              filename: sfm.filename,\r\n              revision: sfm.revision,\r\n              createdAt: sfm.createdAt,\r\n              updatedAt: sfm.updatedAt,\r\n              json_parsed: JSON.parse(await FileSystem.readAsStringAsync(linkToDestFile)),\r\n            }\r\n\r\n            // write newly downloaded schedule to schedules folder (important)\r\n            await FileSystem.writeAsStringAsync(linkToDestFile, JSON.stringify(scheduleFile))\r\n\r\n            return scheduleFile\r\n          } else {\r\n            // schedule is up to date, do nothing\r\n            return oldSchedule\r\n          }\r\n        }\r\n      })\r\n    )\r\n\r\n    this.scheduleFiles = updatedScheduleFiles\r\n  }\r\n\r\n  getScheduleFileMetadata(scheduleFile: ScheduleFile): ScheduleFileMetadata | undefined {\r\n    if (!scheduleFile) {\r\n      return undefined\r\n    }\r\n\r\n    return {\r\n      filename: scheduleFile.filename,\r\n      revision: scheduleFile.revision,\r\n      createdAt: scheduleFile.createdAt,\r\n      updatedAt: scheduleFile.updatedAt,\r\n    }\r\n  }\r\n\r\n  // persists schedule model into file\r\n  async dumpSchedule(schedule: ScheduleModel) {\r\n    // get corresponding schedule file\r\n    let scheduleFile = this.getScheduleFileByFileName(ensureExtension(schedule.name, \".json\"))\r\n\r\n    let jsonToDump: { [key: string]: ScheduleDay } = {}\r\n\r\n    workDaysEnLower.forEach((day, idx) => {\r\n      jsonToDump[day] = schedule.scheduleDays[idx]\r\n    })\r\n\r\n    // replace .json_parsed with schedule contents\r\n    scheduleFile!.json_parsed = jsonToDump\r\n\r\n    if (isRunningInBrowser()) {\r\n      const editedScheduleStorage = await EditedSchedulesStorageService.GetInstance()\r\n      await editedScheduleStorage.saveEditedSchedule(schedule)\r\n\r\n      return Promise.resolve()\r\n    }\r\n\r\n    console.log(`[Schedule Loader] dumping schedule ${scheduleFile?.filename} to file`)\r\n    // write to file\r\n    return FileSystem.writeAsStringAsync(\r\n      `${this.pathToScheduleFolder}${scheduleFile!.filename}`,\r\n      JSON.stringify(scheduleFile)\r\n    )\r\n  }\r\n}\r\n","import GetWeekType from \"../utilities/getWeekType\"\r\nimport { determineInterval, ensureNoExtension } from \"../utilities/utilities\"\r\nimport getStrict from \"../utilities/getStrict\"\r\nimport { workDaysEnLower } from \"../constants/Days\"\r\nimport { REGLAMENT_DATA } from \"../constants/Constants\"\r\nimport ScheduleLoaderService from \"../services/ScheduleLoaderService\"\r\nimport EditedSchedulesStorageService from \"../services/EditedScheduleStorageService\"\r\n\r\n// TODO: separate other models into own files\r\n\r\nexport type ScheduleDaysJson = { [key: string]: ScheduleDay }\r\n\r\nexport default class ScheduleModel {\r\n  name: string\r\n  specialtyName: string\r\n  year: number\r\n\r\n  // TODO: move to constants\r\n  dayNames = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"].map((day) =>\r\n    day.toLowerCase()\r\n  )\r\n  weekendDays = [\"saturday\", \"sunday\"]\r\n  scheduleDays = new Array<ScheduleDay>()\r\n\r\n  constructor(name: string, specialtyName: string, year: number) {\r\n    this.name = name\r\n    this.specialtyName = specialtyName\r\n    this.year = year\r\n  }\r\n\r\n  setSchedule(data: ScheduleDaysJson) {\r\n    // console.log(\"[Schedule Model] processing raw schedule data \", data)\r\n\r\n    console.log(`[Schedule Model] setting schedule from the object:`)\r\n    console.log(data)\r\n\r\n    this.dayNames.forEach((day) => {\r\n      if (this.weekendDays.includes(day)) return\r\n\r\n      let dayClasses: IScheduleClass[] = data[day].classes\r\n      let scheduleDay = new ScheduleDay(day, dayClasses)\r\n      this.scheduleDays.push(scheduleDay)\r\n    })\r\n\r\n    console.log(\"[Schedule Model] loaded schedule from imported object\")\r\n  }\r\n\r\n  loadScheduleFromJSONFile() {}\r\n  loadScheduleFromImportedObject(objectName: string) {\r\n    throw new Error(\"Method not supported.\")\r\n  }\r\n\r\n  async getScheduleFromScheduleLoader(scheduleFileName: string) {\r\n    let scheduleLoader = await ScheduleLoaderService.GetInstance()\r\n    let scheduleFile = scheduleLoader.scheduleFiles.find((file) => file.filename.startsWith(scheduleFileName))\r\n\r\n    if (!scheduleFile) {\r\n      console.log(`[Schedule Model] schedule file ${scheduleFileName} not found`)\r\n      // TODO: move out of the model and to UI\r\n      // ToastAndroid.show(\"Не вдалось завантажити розклад\", ToastAndroid.SHORT)\r\n\r\n      return\r\n    }\r\n\r\n    this.name = ensureNoExtension(scheduleFile.filename, \".json\")\r\n\r\n    console.log(`[Schedule Model] loading schedule from Schedule Loader: ${this.name}`)\r\n\r\n    let data: ScheduleDaysJson = scheduleFile.json_parsed\r\n\r\n    this.setSchedule(data)\r\n  }\r\n\r\n  async getScheduleFromEditedSchedulesStorage(scheduleFileName: string) {\r\n    let editedScheduleService = await EditedSchedulesStorageService.GetInstance()\r\n    let schedule = await editedScheduleService.loadEditedSchedule(scheduleFileName)\r\n\r\n    if (!schedule) {\r\n      console.log(`[Schedule Model] schedule file ${scheduleFileName} not found`)\r\n      return\r\n    }\r\n\r\n    this.name = ensureNoExtension(schedule.metadata.filename, \".json\")\r\n    this.setSchedule(schedule.scheduleDays)\r\n  }\r\n\r\n  getCurrentClass(): ScheduleClass | null {\r\n    const dayIndex = new Date().getDay()\r\n    const isWeekEnd = dayIndex == 0 || dayIndex == 6\r\n\r\n    if (isWeekEnd) return null\r\n\r\n    const todayClasses = this.scheduleDays[dayIndex - 1].classes\r\n    if (todayClasses.length == 0) return null\r\n\r\n    let currentClass = null\r\n\r\n    todayClasses.forEach((class_) => {\r\n      if (class_.isCurrent()) {\r\n        currentClass = class_\r\n      }\r\n    })\r\n\r\n    return currentClass\r\n  }\r\n}\r\n\r\nexport class ScheduleDay {\r\n  classes: ScheduleClass[]\r\n  name: string\r\n\r\n  constructor(name: string, classes: IScheduleClass[]) {\r\n    this.classes = classes.map((class_) => new ScheduleClass(class_, name))\r\n    this.name = name\r\n  }\r\n\r\n  getCurrentWeekClasses(): ScheduleClass[] {\r\n    let currentWeekType = GetWeekType() + 1\r\n    let currentWeekClasses = this.classes.filter((class_) => !class_.isBiweekly || class_.week == currentWeekType)\r\n    return currentWeekClasses\r\n  }\r\n\r\n  // пари по чисельнику\r\n  getNominatorClasses(): ScheduleClass[] {\r\n    let nominatorClasses = this.classes.filter((class_) => !class_.isBiweekly || class_.week == 1)\r\n    return nominatorClasses\r\n  }\r\n\r\n  // пари по знаменнику\r\n  getDenominatorClasses(): ScheduleClass[] {\r\n    let denominatorClasses = this.classes.filter((class_) => !class_.isBiweekly || class_.week == 2)\r\n    return denominatorClasses\r\n  }\r\n\r\n  getMatchingClassOfOtherWeek(class_: ScheduleClass) {\r\n    if (!class_.isBiweekly) return null\r\n\r\n    let otherWeek = class_.week == 1 ? 2 : 1\r\n    let index = class_.index\r\n\r\n    let matchingClass = this.classes.find((class_) => class_.index == index && class_.week == otherWeek)\r\n\r\n    return matchingClass\r\n  }\r\n}\r\n\r\nexport enum CLASS_TYPE {\r\n  LECTURE = \"Лекція\",\r\n  PRACTICE = \"Практична\",\r\n  LAB = \"Лабораторна\",\r\n}\r\n\r\nexport const CLASS_TYPE_SHORT = {\r\n  [CLASS_TYPE.LECTURE]: \"Лек\",\r\n  [CLASS_TYPE.PRACTICE]: \"Прак\",\r\n  [CLASS_TYPE.LAB]: \"Лаб\",\r\n}\r\n\r\nexport type ScheduleClassProps = {\r\n  index: number\r\n  isBiweekly: boolean\r\n  week: 1 | 2\r\n  name: string\r\n  teacher: string | string[]\r\n  room: string | string[]\r\n  isSharedClass: boolean\r\n\r\n  classType: CLASS_TYPE\r\n}\r\n\r\nexport interface IScheduleClass extends ScheduleClassProps {\r\n  getUniqueStringSignature(): string\r\n}\r\n\r\nexport class ScheduleClass implements IScheduleClass {\r\n  index: number\r\n  isBiweekly: boolean\r\n  week: 1 | 2 // 1 or 2, 1 - чисельник, 2 - знаменник\r\n  name: string\r\n  teacher: string | string[]\r\n  room: string | string[]\r\n  isSharedClass: boolean\r\n\r\n  day: string\r\n  weekName: string = \"\"\r\n\r\n  classType: CLASS_TYPE\r\n\r\n  constructor(data: ScheduleClassProps, day: string) {\r\n    this.index = data.index\r\n    this.isBiweekly = data.isBiweekly ?? false\r\n    this.name = data.name\r\n\r\n    // here you make assumptions as you parse the data (that separator character is pipe).\r\n    // Perhaps that's not the right place for such things\r\n    let teacherSeparator = \"|\"\r\n    if (typeof data.teacher == \"string\" && data.teacher.includes(teacherSeparator)) {\r\n      this.teacher = data.teacher.split(teacherSeparator)\r\n    } else {\r\n      this.teacher = data.teacher\r\n    }\r\n\r\n    let roomSeparator = \"|\"\r\n    if (typeof data.room == \"string\" && data.room.includes(roomSeparator)) {\r\n      this.room = data.room.split(roomSeparator)\r\n    } else {\r\n      this.room = data.room\r\n    }\r\n\r\n    this.isSharedClass = data.isSharedClass\r\n    this.day = day\r\n\r\n    this.classType = data.classType ?? CLASS_TYPE.LECTURE\r\n\r\n    this.setWeek(data.week)\r\n  }\r\n\r\n  static sampleName = \"Редагувати\"\r\n  static sampleTeacher = \"Викладач не зазначений\"\r\n  static sampleRoom = \"...\"\r\n\r\n  static GetPlaceholder(day: string, index: number, week: 1 | 2) {\r\n    return new ScheduleClass(\r\n      {\r\n        index,\r\n        isBiweekly: true,\r\n        week,\r\n        name: this.sampleName,\r\n        teacher: this.sampleTeacher,\r\n        room: this.sampleRoom,\r\n        isSharedClass: false,\r\n      },\r\n      day\r\n    )\r\n  }\r\n\r\n  setWeek(week: 1 | 2) {\r\n    this.week = week\r\n    this.weekName = this.isBiweekly ? (this.week === 1 ? \"Чисельник\" : \"Знаменник\") : \"\"\r\n  }\r\n\r\n  getUniqueStringSignature(): string {\r\n    return `[${this.day} * ${this.index}] ${this.name} * ${this.teacher} * ${this.room} <${this.weekName}>})`\r\n  }\r\n\r\n  isCurrent() {\r\n    // debugger\r\n\r\n    // return this.index == 3\r\n\r\n    let isInCurrentDay = this.day == workDaysEnLower[new Date().getDay() - 1]\r\n\r\n    if (!isInCurrentDay) return false\r\n\r\n    let isInCurrentTimeSlot = determineInterval() == getStrict(REGLAMENT_DATA, this.index - 1)\r\n    let isMatchingWeekType = GetWeekType() + 1 == this.week\r\n    let isOngoingClass = isInCurrentTimeSlot && (!this.isBiweekly || isMatchingWeekType)\r\n\r\n    return isOngoingClass\r\n  }\r\n\r\n  isSampleClass() {\r\n    // TODO: find better way to compare lists\r\n\r\n    let isSample =\r\n      this.name == ScheduleClass.sampleName &&\r\n      this.room == ScheduleClass.sampleRoom &&\r\n      this.teacher.toString() == [ScheduleClass.sampleTeacher].toString()\r\n\r\n    return isSample\r\n  }\r\n}\r\n","import teachersJson from \"../assets/teachers.json\"\r\n\r\nimport Fuse from \"fuse.js\"\r\n\r\n// TODO: make teacher model\r\n\r\ntype Teacher = {\r\n  \"ПІБ викладача\": string\r\n  Кваліфікаця: string\r\n  \"E-mail\": string\r\n  \"Кафедра Абревіатура\": string\r\n  \"Кафедра Повна назва\": string\r\n  \"Кафедра Посилання\": string\r\n  \"№\": number\r\n}\r\n\r\nexport default class TeacherTableModel {\r\n  teachers = teachersJson\r\n  teachersFuse = new Fuse(this.teachers, {\r\n    keys: [\"ПІБ викладача\"],\r\n    threshold: 0.3,\r\n  })\r\n\r\n  private static instance: TeacherTableModel\r\n\r\n  static GetInstance(): TeacherTableModel {\r\n    if (!TeacherTableModel.instance) {\r\n      TeacherTableModel.instance = new TeacherTableModel()\r\n    }\r\n\r\n    return TeacherTableModel.instance\r\n  }\r\n\r\n  private constructor() {\r\n    console.log(\"teacher table model constructed successfully\")\r\n  }\r\n\r\n  getTeacherBySurname(surname: string): Teacher | string {\r\n    // sanitized surname string: remove periods and spaces\r\n    // surname = surname.split(\" \")[0].replace(\".\", \"\").replace(\" \", \"\")\r\n\r\n    if (typeof surname != \"string\") return \"Викладача не знайдено\"\r\n\r\n    let match = this.teachersFuse.search(surname)\r\n\r\n    if (match.length == 0) return \"Викладача не знайдено\"\r\n\r\n    return match[0].item\r\n  }\r\n\r\n  getFullNameBySurname(surname: string): string {\r\n    let teacher = this.getTeacherBySurname(surname)\r\n    if (teacher == \"Викладача не знайдено\") return surname\r\n\r\n    if (typeof teacher == \"string\") return teacher\r\n    return teacher[\"ПІБ викладача\"]\r\n  }\r\n\r\n  getSurnameAndInitialsBySurname(surname: string): string {\r\n    let teacher = this.getTeacherBySurname(surname)\r\n    if (typeof teacher == \"string\") return surname\r\n\r\n    surname = teacher[\"ПІБ викладача\"].split(\" \")[0]\r\n    let name = teacher[\"ПІБ викладача\"].split(\" \")[1]\r\n    let patronymic = teacher[\"ПІБ викладача\"].split(\" \")[2]\r\n\r\n    return `${surname} ${name[0]}. ${patronymic[0]}.`\r\n  }\r\n}\r\n","export enum Event {\r\n  SETTINGS_UPDATED = \"settings updated\",\r\n}\r\n","import AsyncStorage from \"@react-native-async-storage/async-storage\"\r\nimport EventEmitter from \"events\"\r\nimport ScheduleLoaderService from \"./ScheduleLoaderService\"\r\nimport Constants from \"expo-constants\"\r\nimport * as Notifications from \"expo-notifications\"\r\nimport * as IntentLauncher from \"expo-intent-launcher\"\r\nimport { NOTIFICATIONS_CHANNEL_ID } from \"../constants/Constants\"\r\nimport { STORAGE_KEY } from \"../constants/Keys\"\r\nimport { Event } from \"../constants/Events\"\r\n\r\n// TODO: avoid creating duplicate handlers for \"settings updated\" event\r\n\r\nexport enum DisplayEmptyDaysMode {\r\n  Display = \"Відображати\",\r\n  Darken = \"Затемняти\",\r\n  Hide = \"Приховати\",\r\n}\r\n\r\nexport enum DisplayTeacherMode {\r\n  Full = \"ПІБ\",\r\n  SurnameAndInitials = \"Прізвище та ініціали\",\r\n  Hide = \"Приховати\",\r\n}\r\n\r\n// update place 1 for new setting\r\nexport type ScheduleAppSettings = {\r\n  currentScheduleName: string\r\n  notifyBeforeClass: boolean\r\n  notifyBeforeClassOffsetMinutes: number\r\n  displayRoomNumber: boolean\r\n  displayTeacherName: DisplayTeacherMode\r\n\r\n  displayEmptyRows: boolean // TODO: use enum here\r\n  displayEmptyDays: DisplayEmptyDaysMode\r\n}\r\n\r\ninterface ISettingsService extends ScheduleAppSettings {\r\n  saveToStorage: () => Promise<void>\r\n  readFromStorage: () => Promise<ScheduleAppSettings | null>\r\n}\r\n\r\n// // update place 2 for new setting\r\n// as of now in order to add a new setting you have to modify 3 places\r\n// that doesn't sound great.\r\n// make sure you start with ScheduleAppSettings type\r\n\r\n// loads and saves settings to async storage\r\n// also provides a way to subscribe to settings change event\r\nexport default class SettingsService implements ISettingsService {\r\n  displayEmptyDays: DisplayEmptyDaysMode = DisplayEmptyDaysMode.Display\r\n  currentScheduleName = \"\" // Object.keys(scheduleFilesJSON)[0] // this has to match the name of the file in assets/schedules\r\n  notifyBeforeClass = true\r\n  notifyBeforeClassOffsetMinutes = 0\r\n  displayRoomNumber = true\r\n  displayTeacherName = DisplayTeacherMode.Full\r\n  displayEmptyRows = true\r\n\r\n  private static instance: SettingsService\r\n\r\n  SettingsEventEmmiter = new EventEmitter()\r\n\r\n  static async GetInstance(): Promise<SettingsService> {\r\n    if (!SettingsService.instance) {\r\n      SettingsService.instance = new SettingsService()\r\n      await SettingsService.instance.init()\r\n      console.log(\"settings service instance constructed successfully\")\r\n    }\r\n\r\n    return SettingsService.instance\r\n  }\r\n\r\n  private async init() {\r\n    // get first schedule from ScheduleLoaderService and use it as default\r\n\r\n    let scheduleLoader = await ScheduleLoaderService.GetInstance()\r\n    this.currentScheduleName = scheduleLoader.scheduleFiles[0].filename\r\n\r\n    const fetchedSettings = await this.readFromStorage()\r\n    if (!fetchedSettings) return\r\n\r\n    // gotta make sure that each and every property is set\r\n\r\n    console.log(\"[SettingsService] fetched settings:\")\r\n    console.log(fetchedSettings)\r\n\r\n    console.log(\"settings fetched. Populating properties...\")\r\n    for (const [key, value] of Object.entries(fetchedSettings)) {\r\n      console.log(`[fetched settings] ${key}: ${value}`)\r\n      this[key] = value\r\n    }\r\n\r\n    console.log(`[SettingsService] current schedule name: ${this.currentScheduleName}`)\r\n    if (this.currentScheduleName == \"\" || this.currentScheduleName == \".json\") {\r\n      console.log(\"current schedule name is empty. setting it to default...\")\r\n      this.currentScheduleName = scheduleLoader.scheduleFiles[0].filename\r\n    }\r\n  }\r\n\r\n  // update place 3 for new setting\r\n  constructSettingsObjectFromProperties(): ScheduleAppSettings {\r\n    return {\r\n      currentScheduleName: this.currentScheduleName,\r\n      notifyBeforeClass: this.notifyBeforeClass,\r\n      notifyBeforeClassOffsetMinutes: this.notifyBeforeClassOffsetMinutes,\r\n      displayRoomNumber: this.displayRoomNumber,\r\n      displayEmptyRows: this.displayEmptyRows,\r\n      displayEmptyDays: this.displayEmptyDays,\r\n      displayTeacherName: this.displayTeacherName,\r\n    }\r\n  }\r\n\r\n  // TODO: Refactor\r\n  // \"settings updated\" event should be emmitted every time they're updated, but not necessarily saved to storage\r\n  async saveToStorage() {\r\n    try {\r\n      const settingsObject = this.constructSettingsObjectFromProperties()\r\n      const jsonValue = JSON.stringify(settingsObject)\r\n      await AsyncStorage.setItem(STORAGE_KEY, jsonValue)\r\n\r\n      this.SettingsEventEmmiter.emit(Event.SETTINGS_UPDATED, this)\r\n    } catch (e) {\r\n      // saving error\r\n      console.error(e)\r\n    }\r\n  }\r\n\r\n  async readFromStorage(): Promise<ScheduleAppSettings | null> {\r\n    try {\r\n      console.log(\"trying to read settings from storage... storage key is: \", STORAGE_KEY)\r\n      const jsonValue = await AsyncStorage.getItem(STORAGE_KEY)\r\n      return jsonValue != null ? JSON.parse(jsonValue) : null\r\n    } catch (e) {\r\n      console.log(\"failed to parse whatever was read from settings. returning null...\")\r\n      // error reading value\r\n      console.error(e)\r\n      return null\r\n    }\r\n  }\r\n\r\n  async openAndroidSystemSettingsForNotifications() {\r\n    const pkg = Constants.manifest.android.package\r\n    const channel = await Notifications.getNotificationChannelAsync(NOTIFICATIONS_CHANNEL_ID)\r\n    const allChannels = await Notifications.getNotificationChannelsAsync()\r\n    console.log(\"[Notification Tests] All channels of this app: \")\r\n    console.log(allChannels)\r\n    console.log(\"[Notification Tests] Channel id for main channel: \" + channel?.id)\r\n\r\n    // TODO: fix expo go notification settings not opening when the code is running in expo go\r\n\r\n    IntentLauncher.startActivityAsync(\"android.settings.CHANNEL_NOTIFICATION_SETTINGS\", {\r\n      // data: \"package:\" + pkg,\r\n      extra: {\r\n        \"android.provider.extra.CHANNEL_ID\": pkg == \"host.exp.exponent\" ? \"expo-experience\" : NOTIFICATIONS_CHANNEL_ID,\r\n        \"android.provider.extra.APP_PACKAGE\": pkg,\r\n      },\r\n    })\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport SettingsService from \"../services/SettingsService\"\r\n\r\nexport const SettingsContext = React.createContext<SettingsService | null>(null)\r\n","import React from \"react\"\r\nimport { View, Text, StyleSheet } from \"react-native\"\r\nimport { TextProps } from \"react-native-elements\"\r\nimport { palette } from \"../styles/global\"\r\n\r\n// export default class AppText extends Text {\r\n\r\n//     render(){\r\n//         return <Text style={[styles.appText, this.props.style]}>{this.props.children}</Text>\r\n//     }\r\n\r\n// }\r\n\r\nexport default function AppText(props: TextProps) {\r\n  return (\r\n    <Text android_hyphenationFrequency=\"full\" {...props} style={[styles.appText, props.style]}>\r\n      {props.children}\r\n    </Text>\r\n  )\r\n}\r\n\r\n// AppText.propTypes = {\r\n//   ...Text.propTypes,\r\n//   // add any additional propTypes here\r\n// }\r\n\r\nconst styles = StyleSheet.create({\r\n  appText: {\r\n    fontFamily: \"montserrat-medium\",\r\n    fontSize: 12,\r\n    // letterSpacing: -0.5,\r\n    color: palette.text,\r\n  },\r\n})\r\n","import React from \"react\"\r\nimport { View, Text, StyleSheet } from \"react-native\"\r\nimport { TextProps } from \"react-native-elements\"\r\nimport { palette } from \"../../styles/global\"\r\nimport AppText from \"../../shared/AppText\"\r\n\r\nexport default function ScheduleText(props: TextProps) {\r\n  return (\r\n    //     backgroundColor: \"rgb(227, 239, 249)\",\r\n\r\n    <AppText\r\n      // selectionColor={\"rgb(227, 239, 249)\"}\r\n      // selectable={true}\r\n      android_hyphenationFrequency=\"full\"\r\n      {...props}\r\n      style={[styles.appText, props.style]}\r\n    >\r\n      {props.children}\r\n    </AppText>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  appText: {\r\n    fontFamily: \"montserrat-medium\",\r\n    fontSize: 12,\r\n    letterSpacing: -0.5,\r\n    color: palette.text,\r\n  },\r\n})\r\n","import React, { useContext, useEffect, useState } from \"react\"\r\nimport { View, Text, StyleSheet, useWindowDimensions, ActivityIndicator, ToastAndroid } from \"react-native\"\r\nimport { CLASS_TYPE, CLASS_TYPE_SHORT, ScheduleClass } from \"../../models/ScheduleModel\"\r\nimport { globalStyles, palette } from \"../../styles/global\"\r\nimport getStrict from \"../../utilities/getStrict\"\r\nimport { REGLAMENT_DATA } from \"../../constants/Constants\"\r\nimport _ from \"lodash\"\r\nimport TeacherTableModel from \"../../models/TeacherTableModel\"\r\nimport SettingsService, { DisplayTeacherMode } from \"../../services/SettingsService\"\r\nimport { SettingsContext } from \"../../contexts/settingsContext\"\r\nimport ScheduleText from \"./ScheduleText\"\r\nimport * as Clipboard from \"expo-clipboard\"\r\nimport { isRunningInBrowser } from \"../../utilities/utilities\"\r\n\r\nexport const formatRoomName = (scheduleClassInstance: ScheduleClass, unfoldClassText: boolean) => {\r\n  let room = \"\"\r\n\r\n  if (\r\n    scheduleClassInstance.room == \"\" ||\r\n    scheduleClassInstance.room == null ||\r\n    scheduleClassInstance.room == undefined\r\n  ) {\r\n    // collapse all kinds of missing values into empty string\r\n    room = \"\"\r\n  } else {\r\n    if (typeof scheduleClassInstance.room == \"string\") {\r\n      room = scheduleClassInstance.room\r\n    } else if (scheduleClassInstance.room.length != undefined) {\r\n      // array check\r\n      room = scheduleClassInstance.room.join(\"\\n\")\r\n    }\r\n  }\r\n\r\n  // pad dots with spaces\r\n  room = room.replace(/\\.(?!\\s)/g, \". \")\r\n\r\n  if (!unfoldClassText) {\r\n    room = room.split(\"\\n\")[0]\r\n  }\r\n\r\n  return room\r\n}\r\n\r\nexport const formatTeacherName = (\r\n  scheduleClassInstance: ScheduleClass,\r\n  isEditable: boolean,\r\n  settings: SettingsService | null // can be null if isEditable is true\r\n) => {\r\n  let teacher = \"\"\r\n\r\n  let teacherTable = TeacherTableModel.GetInstance()\r\n  let teacherSurname = scheduleClassInstance.teacher\r\n  if (teacherSurname == null) {\r\n    teacher = \"...\"\r\n  } else if (typeof teacherSurname != \"string\") {\r\n    if (teacherSurname.length == 1) {\r\n      teacher = teacherTable.getFullNameBySurname(teacherSurname[0])\r\n    } else {\r\n      let teachers = teacherSurname.map((sn) => teacherTable.getSurnameAndInitialsBySurname(sn))\r\n      teacher = teachers.join(\", \")\r\n    }\r\n  } else {\r\n    let displayTeacherNameMode = isEditable ? DisplayTeacherMode.Full : settings!.displayTeacherName\r\n\r\n    if (displayTeacherNameMode == DisplayTeacherMode.Full) {\r\n      teacher = teacherTable.getFullNameBySurname(teacherSurname)\r\n    } else if (displayTeacherNameMode == DisplayTeacherMode.SurnameAndInitials) {\r\n      teacher = teacherTable.getSurnameAndInitialsBySurname(teacherSurname)\r\n    }\r\n  }\r\n\r\n  return teacher\r\n}\r\n\r\nexport default function ScheduleClassComponent({\r\n  scheduleClassInstance,\r\n  idx,\r\n  displayRoomNumber,\r\n  isEditable = false,\r\n  highlightAsOngoing = false,\r\n}: {\r\n  scheduleClassInstance: ScheduleClass\r\n  idx: number\r\n  displayRoomNumber: boolean\r\n  isEditable?: boolean\r\n  highlightAsOngoing?: boolean\r\n}) {\r\n  let [state, setState] = React.useState({})\r\n  let isCurrentClassRef = React.useRef(scheduleClassInstance.isCurrent())\r\n\r\n  const [unfoldClassText, setUnfoldClassText] = React.useState(isEditable)\r\n  const [unfoldTeacherText, setUnfoldTeacherText] = React.useState(isEditable)\r\n\r\n  const { height, width } = useWindowDimensions()\r\n  const settings = useContext(SettingsContext)\r\n\r\n  let [isOngoingClass, setIsOngoingClass] = useState(false)\r\n  let className = scheduleClassInstance.name\r\n  let room = formatRoomName(scheduleClassInstance, unfoldClassText)\r\n  let teacher = formatTeacherName(scheduleClassInstance, isEditable, settings) // need to run this on every rerender because teacher name could have changed in settings\r\n\r\n  let shouldDisplayTeacher = isEditable || settings!.displayTeacherName != DisplayTeacherMode.Hide\r\n\r\n  const [isReady, setIsReady] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const rerenderInterval = setInterval(() => {\r\n      // periodically re-render component to update ongoing class\r\n\r\n      let isCurrentClass = scheduleClassInstance.isCurrent()\r\n      let wasCurrent = isCurrentClassRef.current\r\n\r\n      if (isCurrentClass != wasCurrent) {\r\n        isCurrentClassRef.current = isCurrentClass\r\n        setState({})\r\n      }\r\n    }, 15000)\r\n\r\n    async function init() {\r\n      setIsOngoingClass(scheduleClassInstance.isCurrent())\r\n      setIsReady(true)\r\n    }\r\n\r\n    init()\r\n\r\n    return () => clearInterval(rerenderInterval)\r\n  }, [])\r\n\r\n  let reglamentClass = getStrict(REGLAMENT_DATA, scheduleClassInstance.index - 1)\r\n\r\n  let classStart: string = reglamentClass[1]\r\n  if (classStart.length == 4) classStart = \"0\" + classStart\r\n\r\n  const classEnd: string = reglamentClass[2]\r\n\r\n  if (!isReady) {\r\n    return (\r\n      <View style={[{ paddingVertical: 10 }]}>\r\n        <ActivityIndicator size=\"small\" color={palette.navigationBackground} />\r\n      </View>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <View key={idx}>\r\n      <View\r\n        style={{ ...styles.classContainer, ...(isOngoingClass || highlightAsOngoing ? styles.ongoingClass : {}) }}\r\n        testID=\"schedule-class\"\r\n      >\r\n        <View style={styles.startAndEndTimesContainer}>\r\n          <ScheduleText style={[styles.text, styles.classStartText]}>{classStart}</ScheduleText>\r\n          <ScheduleText style={[styles.text, styles.classEndText]}>{classEnd} </ScheduleText>\r\n        </View>\r\n        <View style={styles.classAndTeacherBlock}>\r\n          <ScheduleText\r\n            onPress={() => {\r\n              if (isEditable) return\r\n              setUnfoldClassText(!unfoldClassText)\r\n            }}\r\n            // onLongPress={() => null} // necessary for text to be selectable on long press (otherwise onPress will rerender the component in attempt to expand it)\r\n\r\n            onLongPress={() => {\r\n              if (isEditable) return\r\n              Clipboard.setStringAsync(className).then(() => {\r\n                if (isRunningInBrowser()) return\r\n                ToastAndroid.show(\"Скопійовано: предмет\", ToastAndroid.SHORT)\r\n              })\r\n            }}\r\n            style={[styles.classNameText, teacher == \"...\" ? { flexGrow: 0 } : {}]}\r\n            ellipsizeMode=\"tail\"\r\n            numberOfLines={!unfoldClassText ? 1 : 0}\r\n          >\r\n            {className}\r\n          </ScheduleText>\r\n          <ScheduleText\r\n            onPress={() => {\r\n              if (isEditable) return\r\n\r\n              setUnfoldTeacherText(!unfoldTeacherText)\r\n            }}\r\n            // onLongPress={() => null} // necessary for text to be selectable on long press (otherwise onPress will rerender the component in attempt to expand it)\r\n\r\n            onLongPress={() => {\r\n              if (isEditable) return\r\n              Clipboard.setStringAsync(teacher).then(() => {\r\n                if (isRunningInBrowser()) return\r\n                ToastAndroid.show(\"Скопійовано: викладач\", ToastAndroid.SHORT)\r\n              })\r\n            }}\r\n            style={[styles.teacherNameText, !shouldDisplayTeacher || teacher == \"...\" ? globalStyles.noDisplay : {}]}\r\n            ellipsizeMode=\"tail\"\r\n            numberOfLines={!unfoldTeacherText ? 1 : 0}\r\n            testID=\"teacher-text\"\r\n          >\r\n            {teacher}\r\n          </ScheduleText>\r\n        </View>\r\n        <View style={styles.classTypeAndRoomNumberContainer}>\r\n          <View\r\n            style={\r\n              scheduleClassInstance.classType != CLASS_TYPE.LECTURE && !unfoldClassText\r\n                ? styles.roomNumberContainer\r\n                : globalStyles.noDisplay\r\n            }\r\n          >\r\n            <ScheduleText style={styles.roomNumberText}>\r\n              {CLASS_TYPE_SHORT[scheduleClassInstance.classType]}\r\n            </ScheduleText>\r\n          </View>\r\n\r\n          <View style={displayRoomNumber ? styles.roomNumberContainer : globalStyles.noDisplay}>\r\n            <ScheduleText\r\n              onLongPress={() => {\r\n                if (isEditable) return\r\n\r\n                Clipboard.setStringAsync(room).then(() => {\r\n                  if (isRunningInBrowser()) return\r\n                  ToastAndroid.show(\"Скопійовано: аудиторія\", ToastAndroid.SHORT)\r\n                })\r\n              }}\r\n              style={styles.roomNumberText}\r\n            >\r\n              {room}\r\n            </ScheduleText>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  ongoingClass: {\r\n    // backgroundColor: \"rgba(28, 93, 143, 0.1)\",\r\n    backgroundColor: \"rgb(227, 239, 249)\",\r\n  },\r\n\r\n  classContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginVertical: 5,\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 3,\r\n    borderRadius: 5,\r\n  },\r\n\r\n  startAndEndTimesContainer: {\r\n    alignItems: \"flex-start\",\r\n    width: \"10%\",\r\n    marginRight: \"4%\",\r\n  },\r\n\r\n  separator: {\r\n    ...globalStyles.separator,\r\n\r\n    backgroundColor: \"rgba(217, 217, 217, 0.4)\",\r\n  },\r\n\r\n  text: {\r\n    fontFamily: \"montserrat-regular\",\r\n    color: palette.text,\r\n  },\r\n\r\n  classStartText: {\r\n    fontFamily: \"montserrat-regular\",\r\n    color: palette.text,\r\n    alignSelf: \"center\",\r\n  },\r\n\r\n  classEndText: {\r\n    fontFamily: \"montserrat-regular\",\r\n    color: palette.text,\r\n    alignSelf: \"center\",\r\n  },\r\n\r\n  classNameText: {\r\n    fontFamily: \"montserrat-medium\",\r\n    color: palette.text,\r\n    alignSelf: \"flex-start\",\r\n    textAlign: \"left\",\r\n    flexGrow: 0.5,\r\n  },\r\n\r\n  teacherNameText: {\r\n    fontFamily: \"montserrat-regular\",\r\n    color: palette.grayedOut,\r\n  },\r\n\r\n  roomNumberText: {\r\n    fontFamily: \"montserrat-regular\",\r\n    color: palette.text,\r\n    textAlign: \"right\",\r\n  },\r\n\r\n  classTypeAndRoomNumberContainer: {\r\n    width: \"12%\",\r\n  },\r\n\r\n  roomNumberContainer: {\r\n    // flexGrow: 0.12,\r\n    alignItems: \"flex-end\",\r\n    textAlign: \"right\",\r\n  },\r\n\r\n  classAndTeacherBlock: {\r\n    // width: \"74%\",\r\n    flexBasis: \"74%\",\r\n    flexGrow: 1,\r\n    // flexGrow: 0.74,\r\n    // flexGrow: 1,\r\n    alignItems: \"flex-start\",\r\n    textAlign: \"left\",\r\n  },\r\n})\r\n","import React from \"react\"\r\nimport { View, Text, StyleSheet } from \"react-native\"\r\nimport { globalStyles } from \"../styles/global\"\r\n\r\nexport default function Separator({\r\n  upperElement,\r\n  lowerElement,\r\n  color,\r\n  width = \"100%\",\r\n}: {\r\n  upperElement: any\r\n  lowerElement: any\r\n  color?: string\r\n  width?: string\r\n}) {\r\n  const localStyles = StyleSheet.create({\r\n    separator: {\r\n      ...globalStyles.separator,\r\n      backgroundColor: color || globalStyles.separator.backgroundColor,\r\n      width: width,\r\n      alignSelf: \"center\",\r\n    },\r\n  })\r\n\r\n  if (upperElement && lowerElement) {\r\n    return <View style={localStyles.separator} />\r\n  }\r\n\r\n  return <View style={globalStyles.noDisplay} />\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n})\r\n","import React from \"react\"\r\nimport { useSwipeableItemParams } from \"react-native-swipeable-item\"\r\nimport { TouchableOpacity, View, StyleSheet } from \"react-native\"\r\nimport { Ionicons } from \"@expo/vector-icons\"\r\nimport { globalStyles, palette } from \"../../styles/global\"\r\n\r\n// TODO: hide this component children right when hide animation starts\r\n// TODO: make sure that class start and class end block gets completely hidden when main content is shifted to the side\r\n\r\nexport default function UnderlayRightSide({\r\n  onDeleteButtonPress: onDeleteButtonPress,\r\n}: {\r\n  onDeleteButtonPress: () => void\r\n}) {\r\n  const { close } = useSwipeableItemParams<Item>()\r\n\r\n  return (\r\n    <View style={[globalStyles.row, styles.underlayLeft]}>\r\n      <View>\r\n        <TouchableOpacity\r\n          onPress={(e) => {\r\n            onDeleteButtonPress()\r\n            close()\r\n          }}\r\n        >\r\n          <Ionicons name=\"trash-outline\" size={14} color={palette.grayedOut} />\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  underlayLeft: {\r\n    flex: 1,\r\n    backgroundColor: palette.ongoingClass,\r\n    justifyContent: \"flex-end\",\r\n    alignItems: \"center\",\r\n    marginVertical: 2,\r\n    padding: 10,\r\n    borderRadius: 10,\r\n  },\r\n})\r\n","import * as Notifications from \"expo-notifications\"\r\nimport { Platform } from \"react-native\"\r\nimport { isRunningInBrowser } from \"../utilities/utilities\"\r\n\r\n// expo notifications docs: https://docs.expo.dev/versions/latest/sdk/notifications/\r\n// Expo's Push Notification Tool: https://expo.dev/notifications\r\n\r\ninterface ILocalNotificationsService {\r\n  sendNotification(content: Notifications.NotificationContentInput): Promise<void>\r\n  scheduleNotification(\r\n    content: Notifications.NotificationContentInput,\r\n    trigger: Notifications.NotificationTriggerInput\r\n  ): Promise<void>\r\n  cancelAllScheduledNotificationsAsync(): Promise<void>\r\n  cancelScheduledNotificationAsync(identifier: string): Promise<void>\r\n  getAllScheduledNotificationsAsync(): Promise<Notifications.NotificationRequest[]>\r\n  checkPermissionsAsync(): Promise<Notifications.NotificationPermissionsStatus>\r\n}\r\n\r\n// singleton\r\nexport default class LocalNotificationsService implements ILocalNotificationsService {\r\n  protected static instance: LocalNotificationsService\r\n  exampleNotificationContent: Notifications.NotificationContentInput = {\r\n    title: \"Мультимедійне видавництво\",\r\n    body: \"Миклушка І. З.\",\r\n    subtitle: \"[10:15] Пара починається\",\r\n    data: { someData: \"додаткова інформація тут\" },\r\n  }\r\n  notificationChannelId = \"interactive-schedule-notifications\"\r\n\r\n  static async GetInstance(): Promise<LocalNotificationsService> {\r\n    if (!this.instance) {\r\n      this.instance = new this()\r\n      await this.instance.init()\r\n      console.log(`[${this.name}] local notifications service instance constructed successfully`)\r\n    }\r\n\r\n    return this.instance\r\n  }\r\n\r\n  protected constructor() {}\r\n  cancelScheduledNotificationAsync(identifier: string): Promise<void> {\r\n    return Notifications.cancelScheduledNotificationAsync(identifier)\r\n  }\r\n\r\n  cancelAllScheduledNotificationsAsync(): Promise<void> {\r\n    return Notifications.cancelAllScheduledNotificationsAsync()\r\n  }\r\n  getAllScheduledNotificationsAsync(): Promise<Notifications.NotificationRequest[]> {\r\n    return Notifications.getAllScheduledNotificationsAsync()\r\n  }\r\n  checkPermissionsAsync(): Promise<Notifications.NotificationPermissionsStatus> {\r\n    return Notifications.getPermissionsAsync()\r\n  }\r\n\r\n  protected async init() {\r\n    Notifications.setNotificationHandler({\r\n      handleNotification: async () => ({\r\n        shouldShowAlert: true,\r\n        priority: Notifications.AndroidNotificationPriority.MAX,\r\n        shouldPlaySound: true,\r\n        shouldSetBadge: true,\r\n      }),\r\n    })\r\n    await this.registerNotificationsChannel()\r\n\r\n    if (!isRunningInBrowser()) {\r\n      let permissionsGranted = (await this.checkPermissionsAsync()).granted\r\n      if (!permissionsGranted) await Notifications.requestPermissionsAsync()\r\n\r\n      console.log(`[Local Notifications] permissions granted: ${permissionsGranted}`)\r\n    }\r\n\r\n    console.log(\"local notifications service initialized\")\r\n  }\r\n\r\n  async registerNotificationsChannel() {\r\n    if (Platform.OS === \"android\") {\r\n      // delete default notification channel that expo creates for you\r\n      await Notifications.deleteNotificationChannelAsync(\"default\")\r\n\r\n      Notifications.setNotificationChannelAsync(this.notificationChannelId, {\r\n        name: \"Сповіщення про початок пари\",\r\n        importance: Notifications.AndroidImportance.MAX,\r\n        vibrationPattern: [0, 250, 250, 250],\r\n        lightColor: \"#FF231F7C\",\r\n        lockscreenVisibility: Notifications.AndroidNotificationVisibility.PUBLIC,\r\n      })\r\n    }\r\n  }\r\n\r\n  async sendNotification(content: Notifications.NotificationContentInput) {\r\n    const message: Notifications.NotificationRequestInput = {\r\n      identifier: this.notificationChannelId,\r\n      content: {\r\n        ...content,\r\n        priority: \"high\",\r\n      },\r\n      // I have to set seconds to 1, otherwise the notification is not shown.\r\n      // I don't know whether it's a bug or something else\r\n      trigger: {\r\n        seconds: 1,\r\n        channelId: this.notificationChannelId,\r\n      },\r\n    }\r\n\r\n    Notifications.scheduleNotificationAsync(message).catch((e) => {\r\n      console.error(\"error while sending notification\")\r\n      console.log(\"...this is the notification that was supposed to be sent:\")\r\n      console.log(message)\r\n    })\r\n  }\r\n\r\n  async scheduleNotification(\r\n    content: Notifications.NotificationContentInput,\r\n    trigger: Notifications.NotificationTriggerInput\r\n  ) {\r\n    // TODO: narrow down types\r\n    if (trigger == null || typeof trigger != \"object\") {\r\n      throw new Error(\"trigger is not an object\")\r\n    }\r\n\r\n    // TODO: pass channel id to trigger\r\n\r\n    // random unique identifier will be generated if not specified\r\n    let notificationId = undefined\r\n\r\n    const message: Notifications.NotificationRequestInput = {\r\n      identifier: notificationId,\r\n      content: {\r\n        ...content,\r\n        priority: \"high\",\r\n      },\r\n      trigger: trigger,\r\n    }\r\n\r\n    let nextTriggerDate = await Notifications.getNextTriggerDateAsync(trigger)\r\n    let now = new Date()\r\n\r\n    if (nextTriggerDate == null && trigger.date >= now) {\r\n      throw new Error(\"nextTriggerDate is null for this notification: \" + trigger.date)\r\n    }\r\n\r\n    Notifications.scheduleNotificationAsync(message)\r\n  }\r\n\r\n  // - - - methods for testing - - -\r\n  // TODO: move to separate class\r\n\r\n  async sendExampleNotification() {\r\n    this.sendNotification(this.exampleNotificationContent)\r\n  }\r\n\r\n  async scheduleExampleNotificationViaDate(secondsFromNow = 5) {\r\n    let trigger: Notifications.NotificationTriggerInput = {\r\n      date: new Date(Date.now() + secondsFromNow * 1000),\r\n      channelId: this.notificationChannelId,\r\n    }\r\n\r\n    this.scheduleNotification(this.exampleNotificationContent, trigger)\r\n  }\r\n\r\n  async scheduleRepeatableExampleNotification() {\r\n    let trigger: Notifications.NotificationTriggerInput = {\r\n      seconds: 5,\r\n      repeats: true,\r\n      channelId: this.notificationChannelId,\r\n    }\r\n\r\n    this.scheduleNotification(this.exampleNotificationContent, trigger)\r\n  }\r\n\r\n  async scheduleRepeatableDailyExampleNotification() {\r\n    let trigger: Notifications.DailyTriggerInput = {\r\n      hour: 14,\r\n      minute: 41,\r\n      repeats: true,\r\n      channelId: this.notificationChannelId,\r\n    }\r\n\r\n    this.scheduleNotification(this.exampleNotificationContent, trigger)\r\n  }\r\n}\r\n","import { DateTriggerInput, NotificationContentInput, WeeklyTriggerInput } from \"expo-notifications\"\r\nimport ScheduleModel, { ScheduleClass, ScheduleDay } from \"../models/ScheduleModel\"\r\nimport GetWeekType from \"../utilities/getWeekType\"\r\nimport { createEvenlySpacedTimeSequence, setDayOnDate } from \"../utilities/utilities\"\r\nimport LocalNotificationsService from \"./LocalNotificationsService\"\r\nimport { REGLAMENT_DATA, SEMESTER_MONTHS } from \"../constants/Constants\"\r\nimport TeacherTableModel from \"../models/TeacherTableModel\"\r\n\r\nexport default class ClassNotificationBuilder {\r\n  signature: string\r\n\r\n  hour: number\r\n  minute: number\r\n\r\n  notificationsService: LocalNotificationsService\r\n  schedule: ScheduleModel\r\n  class_: ScheduleClass\r\n\r\n  teachersTable = TeacherTableModel.GetInstance()\r\n\r\n  constructor(\r\n    schedule: ScheduleModel,\r\n    class_: ScheduleClass,\r\n    notificationsService: LocalNotificationsService,\r\n    negativeOffsetInMins: number\r\n  ) {\r\n    this.notificationsService = notificationsService\r\n\r\n    this.schedule = schedule\r\n    this.class_ = class_\r\n\r\n    this.signature = class_.getUniqueStringSignature()\r\n\r\n    // use reglament to determine hour and minute\r\n    let hourAndMinute = REGLAMENT_DATA[class_.index - 1][1]\r\n\r\n    this.hour = parseInt(hourAndMinute.split(\":\")[0])\r\n    this.minute = parseInt(hourAndMinute.split(\":\")[1])\r\n\r\n    this.minute -= negativeOffsetInMins\r\n    if (this.minute < 0) {\r\n      this.minute += 60\r\n      this.hour -= 1\r\n    }\r\n  }\r\n\r\n  constructBiweeklyNotificationsSequence(scheduleDay: ScheduleDay) {\r\n    // we need to generate lots of periodic biweekly notifications. Here a period is two weeks\r\n    // we need approx this number of notifications: n of months in semester * 2. n of months in semester = ~6\r\n\r\n    // construct notification date\r\n    let now = new Date()\r\n\r\n    let monthDay = now.getDate()\r\n    let notificationDate = new Date(now.getFullYear(), now.getMonth(), monthDay, this.hour, this.minute)\r\n    notificationDate = setDayOnDate(notificationDate, this.schedule.dayNames.indexOf(scheduleDay.name))\r\n\r\n    // construct future notification dates\r\n    let twoWeeksInSeconds = 60 * 60 * 24 * 7 * 2\r\n    // add additional week of offset if week types don't match. It's important to add 1 to week type enum returned by GetWeekType() because it's 0-indexed\r\n    let offset = GetWeekType() + 1 == this.class_.week ? 0 : twoWeeksInSeconds / 2\r\n    let offsetInMillis = offset * 1000\r\n    notificationDate = new Date(offsetInMillis + notificationDate.getTime())\r\n\r\n    let notificationDates = createEvenlySpacedTimeSequence(SEMESTER_MONTHS * 2, twoWeeksInSeconds, notificationDate)\r\n\r\n    // construct future notification objects for expo-notifications\r\n    let notificationObjects = notificationDates.map((notifDate) => {\r\n      let trigger: DateTriggerInput = {\r\n        date: notifDate,\r\n        channelId: this.notificationsService.notificationChannelId,\r\n      }\r\n\r\n      // format teacher name\r\n      let teacherName = this.class_.teacher\r\n      if (teacherName) {\r\n        teacherName =\r\n          typeof teacherName == \"string\" ? this.teachersTable.getFullNameBySurname(teacherName) : teacherName.join(\", \")\r\n      } else {\r\n        teacherName = \"\"\r\n      }\r\n\r\n      // pad hour and minute with 0 if they consist of only one digit\r\n      let hourPadded = this.hour < 10 ? \"0\" + this.hour : this.hour\r\n      let minutePadded = this.minute < 10 ? \"0\" + this.minute : this.minute\r\n\r\n      // construct notification object that will be passed to expo-notifications\r\n      let content: NotificationContentInput = {\r\n        title: this.class_.name,\r\n        body: teacherName,\r\n        subtitle: `[${hourPadded}:${minutePadded}] Пара починається`,\r\n      }\r\n\r\n      return { content: content, trigger: trigger }\r\n    })\r\n\r\n    return notificationObjects\r\n  }\r\n\r\n  constructWeeklyNotification(scheduleDay: ScheduleDay) {\r\n    // construct trigger object that will be passed to expo-notifications\r\n    let trigger: WeeklyTriggerInput = {\r\n      weekday: this.schedule.dayNames.indexOf(scheduleDay.name) + 1, // why do we add + 1 here? because weekday is 1-indexed, but dayNames is 0-indexed\r\n      hour: this.hour,\r\n      minute: this.minute,\r\n\r\n      repeats: true,\r\n      channelId: this.notificationsService.notificationChannelId,\r\n    }\r\n\r\n    // format teacher name\r\n    let teacherName = this.class_.teacher\r\n    if (teacherName) {\r\n      teacherName =\r\n        typeof teacherName == \"string\" ? this.teachersTable.getFullNameBySurname(teacherName) : teacherName.join(\", \")\r\n    } else {\r\n      teacherName = \"\"\r\n    }\r\n\r\n    // pad hour and minute with 0 if they consist of only one digit\r\n    let hourPadded = this.hour < 10 ? \"0\" + this.hour : this.hour\r\n    let minutePadded = this.minute < 10 ? \"0\" + this.minute : this.minute\r\n\r\n    // construct notification object that will be passed to expo-notifications\r\n    const weeklyNotif = {\r\n      content: {\r\n        title: this.class_.name,\r\n        body: teacherName,\r\n        subtitle: `[${hourPadded}:${minutePadded}] Пара починається`,\r\n      },\r\n      trigger: trigger,\r\n    }\r\n\r\n    return weeklyNotif\r\n  }\r\n}\r\n","import { DateTriggerInput, NotificationContentInput } from \"expo-notifications\"\r\nimport ScheduleModel from \"../models/ScheduleModel\"\r\nimport LocalNotificationsService from \"./LocalNotificationsService\"\r\nimport SettingsService from \"./SettingsService\"\r\nimport ClassNotificationBuilder from \"./ClassNotificationBuilder\"\r\nimport { isRunningInBrowser } from \"../utilities/utilities\"\r\n\r\n// TODO: Read about override keyword in TypeScript\r\n\r\n// singleton service. Main function is constructing and registering notifications for entire schedule\r\nexport default class ScheduleNotificationsService extends LocalNotificationsService {\r\n  onConfigureNotificationsForScheduleStart: null | (() => void) = null\r\n  onConfigureNotificationsForScheduleEnd: null | (() => void) = null\r\n\r\n  protected static instance: ScheduleNotificationsService\r\n\r\n  static async GetInstance(): Promise<ScheduleNotificationsService> {\r\n    if (!this.instance) {\r\n      this.instance = new ScheduleNotificationsService()\r\n      await this.instance.init()\r\n      console.log(`[${this.name}] service instance constructed successfully`)\r\n    }\r\n\r\n    return this.instance\r\n  }\r\n\r\n  async configureNotificationsForSchedule(schedule: ScheduleModel) {\r\n    console.log(`[configure notifications] configuring notifications for schedule ${schedule.name}`)\r\n    this.onConfigureNotificationsForScheduleStart?.call(this)\r\n\r\n    // get notifications service and settings service\r\n    const notificationsService = await LocalNotificationsService.GetInstance()\r\n    const settingsService = await SettingsService.GetInstance()\r\n\r\n    // check whether notifications are enabled\r\n    if (!isRunningInBrowser() && settingsService.notifyBeforeClass) {\r\n      // if notifications are enabled, then schedule notifications for each class\r\n      // make sure to not register duplicate notifications by either checking for duplicates or deleting all notifications before setting any\r\n      await notificationsService.cancelAllScheduledNotificationsAsync()\r\n\r\n      const configureDays = schedule.scheduleDays.map(async (day) => {\r\n        const configureDayClasses = day.classes.map(async (class_) => {\r\n          let notifBuilder = new ClassNotificationBuilder(\r\n            schedule,\r\n            class_,\r\n            notificationsService,\r\n            settingsService.notifyBeforeClassOffsetMinutes\r\n          )\r\n\r\n          if (class_.isBiweekly) {\r\n            let notifications = notifBuilder.constructBiweeklyNotificationsSequence(day)\r\n\r\n            await Promise.all(\r\n              notifications.map((notif) => {\r\n                return notificationsService.scheduleNotification(notif.content, notif.trigger)\r\n              })\r\n            )\r\n          } else {\r\n            let weeklyNotif = notifBuilder.constructWeeklyNotification(day)\r\n\r\n            return await notificationsService.scheduleNotification(weeklyNotif.content, weeklyNotif.trigger)\r\n          }\r\n        })\r\n\r\n        await Promise.all(configureDayClasses)\r\n      })\r\n\r\n      await Promise.all(configureDays)\r\n    }\r\n\r\n    this.onConfigureNotificationsForScheduleEnd?.call(this)\r\n  }\r\n}\r\n","export enum EditorStackRoutes {\r\n  EDITOR = \"Editor\",\r\n  SCHEDULE_CLASS_FORM = \"ScheduleClassForm\",\r\n}\r\n","export const NoClassesText = [\r\n  \"Пар немає\",\r\n  \"Чудовий день (бо пар нема)\",\r\n  \"Просили передати, що пар не буде\",\r\n  \"Пар не буде, сьогодні чілимо\",\r\n  \"Академ. вихідний\",\r\n]\r\n","import React, { useCallback, useContext, useEffect, useRef, useState } from \"react\"\r\nimport { Text, View, StyleSheet, ActivityIndicator } from \"react-native\"\r\nimport { globalStyles, palette } from \"../../styles/global\"\r\nimport ScheduleModel, { ScheduleClass, ScheduleClassProps, ScheduleDay } from \"../../models/ScheduleModel\"\r\nimport _ from \"lodash\"\r\nimport ScheduleClassComponent from \"./ScheduleClass\"\r\nimport Separator from \"../../shared/Separator\"\r\nimport GetWeekType from \"../../utilities/getWeekType\"\r\nimport { FlatList, TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport { useNavigation } from \"@react-navigation/native\"\r\nimport SwipeableItem, { useSwipeableItemParams } from \"react-native-swipeable-item\"\r\nimport UnderlayRightSide from \"../ScheduleEditorComponents/ScheduleClassUnderlay\"\r\nimport DraggableFlatList from \"react-native-draggable-flatlist\"\r\nimport AppText from \"../../shared/AppText\"\r\nimport { mapUkrWorkDayToEnWorkDay } from \"../../constants/Days\"\r\nimport ScheduleLoaderService from \"../../services/ScheduleLoaderService\"\r\nimport ScheduleNotificationsService from \"../../services/ScheduleNotificationsService\"\r\nimport SettingsService, { DisplayEmptyDaysMode } from \"../../services/SettingsService\"\r\nimport { EditorStackRoutes } from \"../../routes/EditorStackRoutes\"\r\nimport { SettingsContext } from \"../../contexts/settingsContext\"\r\nimport { NoClassesText } from \"../../constants/Descriptions\"\r\n\r\n// TODO: accelerate disengage time once an item gets dropped into new slot\r\n\r\nexport default function ScheduleDayComponent({\r\n  classesCollection,\r\n  scheduleObject,\r\n  dayName,\r\n  scheduleDay,\r\n  displayRoomNumber,\r\n  weekType = GetWeekType(),\r\n  fade,\r\n  isEditable = false,\r\n}: {\r\n  classesCollection: ScheduleClass[]\r\n  scheduleObject: ScheduleModel\r\n  dayName: string\r\n  scheduleDay: ScheduleDay\r\n  displayRoomNumber: boolean\r\n  weekType?: number\r\n  fade: boolean\r\n  isEditable?: boolean\r\n}): JSX.Element {\r\n  if (scheduleDay == undefined) {\r\n    return (\r\n      <View style={styles.scheduleDayCard}>\r\n        <Text style={globalStyles.dayNameHeader}>{dayName}</Text>\r\n        <View>\r\n          <View style={globalStyles.centered}>\r\n            <ActivityIndicator size=\"large\" color={palette.navigationBackground} />\r\n          </View>\r\n        </View>\r\n      </View>\r\n    )\r\n  }\r\n\r\n  const settings = useContext(SettingsContext)\r\n\r\n  const configureNotificationsCallback = useCallback(\r\n    _.debounce(async (updatedSchedule) => {\r\n      let scheduleNotificationService = await ScheduleNotificationsService.GetInstance()\r\n      scheduleNotificationService.configureNotificationsForSchedule(updatedSchedule)\r\n    }, 3000),\r\n    []\r\n  )\r\n\r\n  let navigation = useNavigation()\r\n\r\n  let [classes, setClasses] = useState<ScheduleClass[]>([])\r\n  let dayNameEnRef = useRef(mapUkrWorkDayToEnWorkDay(dayName).toLowerCase())\r\n\r\n  function saveEditedClasses(classes: ScheduleClass[]) {\r\n    console.log(\"saving edited classes\")\r\n    let updatedSchedule = scheduleObject\r\n    let classesWithoutPlaceholders = classes.filter((class_) => !class_.isSampleClass())\r\n\r\n    let thisDay = updatedSchedule.scheduleDays.find((day) => day.name == dayNameEnRef.current)\r\n    // construct new classes array with classes of other week preserved\r\n\r\n    let biweeklyClassesOfOtherWeek = thisDay!.classes.filter(\r\n      (class_) => class_.isBiweekly && class_.week != weekType + 1\r\n    )\r\n\r\n    thisDay!.classes = [...classesWithoutPlaceholders, ...biweeklyClassesOfOtherWeek]\r\n\r\n    ScheduleLoaderService.GetInstance().then((instance) => {\r\n      instance.dumpSchedule(updatedSchedule)\r\n    })\r\n\r\n    SettingsService.GetInstance().then((instance) => {\r\n      if (instance.notifyBeforeClass) {\r\n        configureNotificationsCallback(updatedSchedule)\r\n      }\r\n    })\r\n  }\r\n\r\n  // any time new updated classes collection prop is passed, add placeholders to it and update state\r\n  // it also initializes classes state on first render\r\n  useEffect(() => {\r\n    setClasses(addPlaceholders(classesCollection))\r\n  }, [classesCollection])\r\n\r\n  useEffect(() => {\r\n    console.log(\"mounting schedule day component\")\r\n  }, [])\r\n\r\n  function addPlaceholders(classes: ScheduleClass[]) {\r\n    if (!isEditable) {\r\n      return classes\r\n    }\r\n\r\n    let extendedContainer: ScheduleClass[] = [undefined, undefined, undefined, undefined, undefined, undefined]\r\n    extendedContainer = extendedContainer.map((_, idx) => {\r\n      let class_ = classes.find((class_) => class_.index == idx + 1)\r\n      const shouldCreatePlaceholderClass = class_ == undefined\r\n\r\n      if (shouldCreatePlaceholderClass) {\r\n        return ScheduleClass.GetPlaceholder(dayNameEnRef.current, idx + 1, weekType + 1)\r\n      } else {\r\n        return class_\r\n      }\r\n    })\r\n\r\n    return extendedContainer\r\n  }\r\n\r\n  // flat list doesn't suppress scroll events while nested inside ScrollView and is preferrable if component is not editable\r\n  const ListComponent = isEditable ? DraggableFlatList : FlatList\r\n\r\n  return (\r\n    <View key={dayName + weekType}>\r\n      <Text style={styles.dayNameHeader}>{dayName}</Text>\r\n      <View\r\n        style={[\r\n          styles.scheduleDayCard,\r\n          classes.length == 0 && settings?.displayEmptyDays == DisplayEmptyDaysMode.Darken\r\n            ? styles.fadedDayContainerView\r\n            : {},\r\n        ]}\r\n      >\r\n        <ListComponent\r\n          data={classes}\r\n          keyExtractor={(item) => item.index + \"\" + item.week}\r\n          onDragEnd={({ data }) => {\r\n            // reindex\r\n            data = data.map((class_, idx) => {\r\n              class_.index = idx + 1\r\n              return class_\r\n            })\r\n\r\n            // TODO: Refactor into one function\r\n            setClasses(data)\r\n            saveEditedClasses(data)\r\n          }}\r\n          ListEmptyComponent={() => {\r\n            return <AppText style={styles.noClassesText} testID=\"noClassesText\" >{_.sample(NoClassesText)}</AppText>\r\n          }}\r\n          scrollEnabled={false}\r\n          nestedScrollEnabled={false}\r\n          ItemSeparatorComponent={() => {\r\n            return <Separator width=\"97%\" color=\"rgba(217, 217, 217, 0.4)\" upperElement={true} lowerElement={true} /> // TODO: Refactor\r\n          }}\r\n          renderItem={({ item, drag, isActive }) => {\r\n            let class_ = item\r\n            let idx = item.index - 1\r\n\r\n            // normal class component\r\n            let scheduleClassComponent = (\r\n              <ScheduleClassComponent\r\n                displayRoomNumber={displayRoomNumber}\r\n                idx={idx}\r\n                key={idx + \"\" + class_.week}\r\n                scheduleClassInstance={class_}\r\n                isEditable={isEditable}\r\n                noTeacherText=\"Викладач\"\r\n                highlightAsOngoing={isActive}\r\n              />\r\n            )\r\n\r\n            const onDeleteButtonPressed = () => {\r\n              let filteredClasses = classes.filter((class_) => class_.index != idx + 1)\r\n              let filteredClassesWithPlaceholders = addPlaceholders(filteredClasses)\r\n              setClasses(filteredClassesWithPlaceholders)\r\n              saveEditedClasses(filteredClassesWithPlaceholders)\r\n            }\r\n\r\n            // editable class component\r\n            let editableScheduleClassWrapper = (\r\n              <SwipeableItem\r\n                key={idx + \"\" + class_.week}\r\n                // item={item}\r\n                renderUnderlayLeft={() => (\r\n                  <UnderlayRightSide\r\n                    onDeleteButtonPress={() => {\r\n                      onDeleteButtonPressed()\r\n                    }}\r\n                  />\r\n                )}\r\n                // renderUnderlayRight={() => <UnderlayLeft />}\r\n                snapPointsLeft={[50]} // snap points for right side underlay\r\n                snapPointsRight={[0]} // disable left side underlay\r\n                activationThreshold={10}\r\n              >\r\n                <TouchableOpacity\r\n                  onPress={(e) => {\r\n                    navigation.push(EditorStackRoutes.SCHEDULE_CLASS_FORM, {\r\n                      scheduleClass: class_,\r\n                      currentlyViewedWeek: weekType,\r\n                      onFormDataUpdated: (values: ScheduleClassProps) => {\r\n                        let updatedClasses = classes.map((class_) => {\r\n                          if (class_.index == idx + 1) {\r\n                            // process the values\r\n                            let teacher = values.teacher.split(\",\").map((t: string) => t.trim())\r\n                            let room = values.room.split(\",\").map((r: string) => r.trim())\r\n                            let isBiweekly =\r\n                              typeof values.isBiweekly == \"string\" ? JSON.parse(values.isBiweekly) : values.isBiweekly\r\n\r\n                            let wasBiweekly = class_.isBiweekly\r\n\r\n                            // if class wasn't biweekly and now it is, update week to currently viewed week\r\n                            if (!wasBiweekly && isBiweekly) {\r\n                              console.log(\"wasn't biweekly and now it is\")\r\n                              console.log(\"new weekType will be:\", weekType + 1)\r\n                              class_.isBiweekly = isBiweekly\r\n\r\n                              class_.setWeek(weekType + 1)\r\n                            }\r\n\r\n                            return new ScheduleClass(\r\n                              { ...class_, ...values, teacher, room, isBiweekly },\r\n                              dayNameEnRef.current\r\n                            )\r\n                          } else {\r\n                            return class_\r\n                          }\r\n                        })\r\n\r\n                        setClasses(updatedClasses)\r\n                        saveEditedClasses(updatedClasses)\r\n                      },\r\n                    })\r\n                  }}\r\n                  onLongPress={drag}\r\n                >\r\n                  {scheduleClassComponent}\r\n                </TouchableOpacity>\r\n              </SwipeableItem>\r\n            )\r\n\r\n            return <View>{isEditable ? editableScheduleClassWrapper : scheduleClassComponent}</View>\r\n          }}\r\n        />\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  noClassesText: {\r\n    fontSize: 14,\r\n    marginVertical: 10,\r\n    justifyContent: \"center\",\r\n    alignSelf: \"center\",\r\n\r\n    fontFamily: \"montserrat-600\",\r\n\r\n    color: palette.grayedOut,\r\n  },\r\n\r\n  fadedDayContainerView: {\r\n    opacity: 0.5,\r\n  },\r\n\r\n  dayNameHeader: {\r\n    fontFamily: \"montserrat-600\",\r\n    fontSize: 14,\r\n    ...globalStyles.sectionHeader,\r\n    color: palette.text,\r\n  },\r\n\r\n  scheduleDayCard: {\r\n    marginTop: 5,\r\n    marginBottom: 15,\r\n    marginHorizontal: 5,\r\n    borderRadius: 6,\r\n    backgroundColor: \"white\",\r\n\r\n    paddingVertical: 2,\r\n    paddingHorizontal: 5,\r\n\r\n    elevation: 1,\r\n    shadowOffset: { width: 1, height: 1 },\r\n    shadowColor: \"#333\",\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 2,\r\n  },\r\n\r\n  row: {\r\n    flexDirection: \"row\",\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: 15,\r\n  },\r\n})\r\n","import React, { useEffect } from \"react\"\r\nimport { View, Text, StyleSheet, Modal, Pressable, ScrollView, useWindowDimensions } from \"react-native\"\r\nimport { Button, Input } from \"react-native-elements\"\r\nimport { globalStyles, palette } from \"../styles/global\"\r\nimport { TextInput, TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport { Ionicons } from \"@expo/vector-icons\"\r\nimport AppText from \"../shared/AppText\"\r\n\r\n// TODO: fix modal content overflowing when keyboard is shown\r\n// TODO: refactor onClose to something more understandable\r\n\r\nexport default function OptionPickerModal({\r\n  hasSearchBar = true,\r\n  headerText = \"\",\r\n  isOpen = false,\r\n  displaySeparators = true,\r\n  initialOptions,\r\n  initialSelectedOption,\r\n  renderItem,\r\n  closeModal: closeModalCallback,\r\n  onSelected,\r\n  optionIcon,\r\n  isOptionSelectable = true,\r\n}: {\r\n  hasSearchBar?: boolean\r\n  headerText?: string\r\n  isOpen: boolean\r\n  displaySeparators?: boolean\r\n  initialOptions: string[]\r\n  initialSelectedOption: string\r\n  renderItem?: (option: string, idx: number) => JSX.Element\r\n  closeModal: () => void\r\n  onSelected: (option: string) => void\r\n  optionIcon?: JSX.Element\r\n  isOptionSelectable?: boolean\r\n}) {\r\n  const { height, width } = useWindowDimensions()\r\n\r\n  const [options, setOptions] = React.useState<string[]>(initialOptions)\r\n  const [searchQuery, setSearchQuery] = React.useState<string>(\"\")\r\n\r\n  const filteredOptions = hasSearchBar\r\n    ? options.filter((option) => JSON.stringify(option).toLowerCase().includes(searchQuery.toLowerCase()))\r\n    : options\r\n\r\n  const [selectedOption, setSelectedOption] = React.useState<string>(initialSelectedOption)\r\n\r\n  console.log(\"selectedOption in schedule picker modal:\", selectedOption)\r\n\r\n  const closeModal = () => {\r\n    setSearchQuery(\"\")\r\n    closeModalCallback()\r\n    console.log(\"cleared search query and closed schedule picker modal\")\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      console.log(\"unmounting schedule picker modal\")\r\n      setSearchQuery(\"\")\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <Modal animationType=\"fade\" transparent={true} style={styles.modal} visible={isOpen}>\r\n      <View style={styles.overlay} />\r\n      <View style={styles.modalContentContainer}>\r\n        <View style={{ width: \"100%\" }}>\r\n          <Text style={styles.header}>{headerText ?? \"\"}</Text>\r\n          <View style={[styles.horizontalFlex, styles.searchBarContainer, !hasSearchBar ? globalStyles.noDisplay : {}]}>\r\n            <Ionicons name=\"search-outline\" size={14} style={{ marginHorizontal: 5 }} color={palette.grayedOut} />\r\n            <TextInput style={styles.searchBar} onChangeText={setSearchQuery} placeholder=\"Пошук групи\" />\r\n          </View>\r\n        </View>\r\n        <ScrollView style={{ width: \"100%\", height: 0.4 * height }}>\r\n          {filteredOptions.map((option, idx) => (\r\n            <View key={idx}>\r\n              {renderItem ? (\r\n                renderItem(option, idx)\r\n              ) : (\r\n                <Pressable\r\n                  onPress={() => {\r\n                    if (!isOptionSelectable) return\r\n\r\n                    setSelectedOption(option)\r\n                    onSelected(option)\r\n                    closeModal()\r\n                  }}\r\n                >\r\n                  <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n                    <View\r\n                      style={{\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                      }}\r\n                    >\r\n                      {optionIcon}\r\n\r\n                      <AppText style={{ ...styles.option, ...(selectedOption == option ? styles.selectedOption : {}) }}>\r\n                        {option}\r\n                      </AppText>\r\n                    </View>\r\n\r\n                    {selectedOption == option ? (\r\n                      <Ionicons style={styles.checkIcon} name=\"checkmark-outline\" color={\"#1C5D8FCC\"} size={24} />\r\n                    ) : (\r\n                      <View />\r\n                    )}\r\n                  </View>\r\n                </Pressable>\r\n              )}\r\n\r\n              {displaySeparators && idx != options.length - 1 ? <View style={styles.separator}></View> : <View />}\r\n            </View>\r\n          ))}\r\n        </ScrollView>\r\n\r\n        <Pressable onPress={() => closeModal()}>\r\n          <View style={styles.closeButton}>\r\n            <Text style={styles.closeButtonText}>Закрити</Text>\r\n          </View>\r\n        </Pressable>\r\n      </View>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  modal: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"red\", // not gonna work cause it's transparent\r\n  },\r\n\r\n  horizontalFlex: {\r\n    ...globalStyles.horizontalCenteredFlex,\r\n  },\r\n\r\n  searchBarContainer: {\r\n    marginLeft: -4,\r\n    marginVertical: 10,\r\n    backgroundColor: \"#F2F2F2\",\r\n    borderRadius: 7,\r\n    padding: 5,\r\n    paddingVertical: 2,\r\n  },\r\n\r\n  searchBar: {\r\n    ...globalStyles.searchBar,\r\n  },\r\n\r\n  modalContentContainer: {\r\n    ...globalStyles.modalContentContainer,\r\n    // top: \"5%\",\r\n  },\r\n\r\n  overlay: {\r\n    backgroundColor: \"rgba(0, 0, 0, 0.25)\",\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n\r\n  option: {\r\n    fontFamily: \"montserrat-500\",\r\n    color: palette.text,\r\n    width: \"100%\",\r\n    marginVertical: 10,\r\n  },\r\n\r\n  selectedOption: {\r\n    fontFamily: \"montserrat-600\",\r\n  },\r\n\r\n  separator: {\r\n    height: 1, // haha\r\n    width: \"100%\",\r\n    marginVertical: 6,\r\n    backgroundColor: \"#E6E6E6\",\r\n  },\r\n\r\n  header: {\r\n    fontFamily: \"montserrat-bold\",\r\n    fontSize: 20,\r\n    marginBottom: 10,\r\n    color: palette.text,\r\n  },\r\n\r\n  closeButton: {\r\n    backgroundColor: \"#FFFFFF\",\r\n    borderWidth: 1,\r\n    borderColor: \"#E6E6E6\",\r\n    padding: 10,\r\n    paddingHorizontal: 30,\r\n    marginTop: 10,\r\n    // borderRadius: 10,\r\n\r\n    shadowColor: \"rgba(0,0,0,1)\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 1,\r\n    },\r\n    elevation: 0.2,\r\n    shadowOpacity: 0.0,\r\n    shadowRadius: 0,\r\n    borderRadius: 10,\r\n  },\r\n\r\n  closeButtonText: {\r\n    fontFamily: \"montserrat-600\",\r\n    color: palette.grayedOut,\r\n    fontSize: 16,\r\n  },\r\n\r\n  checkIcon: {\r\n    position: \"absolute\",\r\n    right: 0,\r\n  },\r\n})\r\n","import { View, Text, StyleSheet, ImageBackground } from \"react-native\"\r\nimport AppText from \"../../shared/AppText\"\r\nimport { previewImages, palette, globalStyles, previewImagesFull } from \"../../styles/global\"\r\nimport { isRunningInBrowser } from \"../../utilities/utilities\"\r\n\r\nimport * as Device from \"expo-device\"\r\n\r\n// Import Swiper React components\r\nimport { SwiperSlide } from \"swiper/react\"\r\n\r\n// Import Swiper styles\r\nimport \"swiper/css\"\r\n\r\n// TODO: integrate with native carousel (it uses cropped preview images)\r\n// TODO: adapt settings page to web\r\n\r\nexport function getPageOne() {\r\n  const pageOne = (\r\n    <SwiperSlide style={styles.page} key=\"1\">\r\n      <View style={styles.imageContainer}>\r\n        <img style={styles.previewImage} src={previewImagesFull.schedule} />\r\n      </View>\r\n      <AppText style={styles.pageTitle}>Розклад</AppText>\r\n      <View style={styles.pageDescriptionText}>\r\n        <AppText style={styles.centeredDescriptionText}>\r\n          Розклад занять в академії чергується тижнями: чисельник, знаменник.\r\n        </AppText>\r\n        <br />\r\n        <AppText style={styles.centeredDescriptionText}>\r\n          Якщо цього тижня – чисельник, то перемикач <Text style={{ color: palette.navigationBackground }}>Чис</Text>{\" \"}\r\n          буде активним.\r\n        </AppText>\r\n      </View>\r\n    </SwiperSlide>\r\n  )\r\n\r\n  return pageOne\r\n}\r\n\r\nexport function getPageTwo() {\r\n  const pageTwo = (\r\n    <SwiperSlide style={styles.page} key=\"2\">\r\n      <View style={{ ...styles.imageContainer }}>\r\n        <img style={styles.previewImage} src={previewImagesFull.reglamentPreview} />\r\n      </View>\r\n      <AppText style={styles.pageTitle}>Регламент</AppText>\r\n      <View style={styles.pageDescriptionText}>\r\n        <AppText style={styles.centeredDescriptionText}>\r\n          Звичайний регламент... Але з{\" \"}\r\n          <AppText style={{ color: palette.navigationBackground }}>підсвіткою поточної пари </AppText>✨\r\n        </AppText>\r\n      </View>\r\n    </SwiperSlide>\r\n  )\r\n\r\n  return pageTwo\r\n}\r\n\r\nexport function getPageThree() {\r\n  const pageThree = (\r\n    <SwiperSlide style={styles.page} key=\"3\">\r\n      <View style={styles.imageContainer}>\r\n        <img style={styles.previewImage} src={previewImagesFull.editorPreview} />\r\n      </View>\r\n      <AppText style={styles.pageTitle}>Редактор</AppText>\r\n      <View style={styles.pageDescriptionText}>\r\n        <AppText style={styles.centeredDescriptionText}>\r\n          Дозволяє виправити чи змінити розклад за власними побажаннями.\r\n        </AppText>\r\n      </View>\r\n    </SwiperSlide>\r\n  )\r\n\r\n  return pageThree\r\n}\r\n\r\nexport function getPageFour() {\r\n  const pageFour = (\r\n    <SwiperSlide style={styles.page} key=\"4\">\r\n      <View style={styles.imageContainer}>\r\n        <img style={styles.previewImage} src={previewImagesFull.settingsPreview} />\r\n      </View>\r\n      <AppText style={styles.pageTitle}>Налаштування</AppText>\r\n      <View style={styles.pageDescriptionText}>\r\n        <AppText style={styles.centeredDescriptionText}>Вигляд розкладу та сповіщення можна налаштувати тут.</AppText>\r\n      </View>\r\n    </SwiperSlide>\r\n  )\r\n\r\n  return pageFour\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  page: {\r\n    // height: \"80vh\",\r\n    // width: \"100vw\",\r\n    // alignSelf: \"stretch\",\r\n\r\n    // marginHorizontal: \"5%\",\r\n    // marginLeft: \"5%\",\r\n    marginBottom: 20,\r\n    marginHorizontal: 20,\r\n\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n\r\n  pageTitle: {\r\n    fontSize: 24,\r\n    color: palette.navigationBackground,\r\n    textAlign: \"center\",\r\n    marginVertical: isRunningInBrowser() ? 20 : 10,\r\n    marginTop: isRunningInBrowser() ? 40 : 20,\r\n  },\r\n\r\n  imageContainer: {\r\n    borderRadius: 10,\r\n    height: \"55%\",\r\n    // width: \"100%\",\r\n    // flex: 1,\r\n    alignSelf: \"stretch\",\r\n\r\n    overflow: \"hidden\",\r\n    flexDirection: \"row\",\r\n\r\n    // backgroundColor: \"orange\",\r\n  },\r\n\r\n  previewImage: {\r\n    borderRadius: 10,\r\n\r\n    width: \"100%\",\r\n\r\n    objectFit: \"cover\",\r\n    objectPosition: \"top\",\r\n  },\r\n\r\n  centeredDescriptionText: {\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  pageDescriptionText: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n})\r\n","import React, { useEffect, useRef, useState } from \"react\"\r\n\r\nimport { View, Button, StyleSheet, Text, Image, TouchableOpacity, ActivityIndicator } from \"react-native\"\r\nimport { palette, globalStyles, previewImages } from \"../../styles/global\"\r\nimport AppText from \"../../shared/AppText\"\r\n\r\n// Import Swiper React components\r\nimport { Swiper, SwiperSlide, useSwiper } from \"swiper/react\"\r\n\r\n// Import Swiper styles\r\nimport \"swiper/css\"\r\n\r\nimport _ from \"lodash\"\r\nimport { setStatusBarHidden } from \"expo-status-bar\"\r\nimport OptionPickerModal from \"../../components/OptionPickerModal\"\r\nimport { DrawerRoutes } from \"../../routes/DrawerRoutes\"\r\nimport SettingsService from \"../../services/SettingsService\"\r\nimport { ensureExtension, ensureNoExtension, isLandscapeWeb } from \"../../utilities/utilities\"\r\nimport { useNavigation } from \"@react-navigation/native\"\r\nimport ScheduleLoaderService from \"../../services/ScheduleLoaderService\"\r\nimport { getPageFour, getPageOne, getPageThree, getPageTwo } from \"./Pages\"\r\nimport { Swiper as SwiperType } from \"swiper/types\"\r\n\r\n// TODO: move shared logic to a separate file. As of now, lots if it is a copypaste from IntroductoryCarousel.native.tsx\r\n// TODO: fix navigation falling out of viewport on firefox\r\n\r\n// TODO: get replace document height with viewport height\r\nconst documentHeight = window.innerHeight\r\nconst swiperWidth = isLandscapeWeb() ? `${documentHeight / 2}px` : \"95%\"\r\n\r\nexport default function InroductoryCarouselScreen({ onClose }: { onClose?: () => void }) {\r\n  const [currentPage, setCurrentPage] = React.useState(0)\r\n  const swiperRef = useRef<SwiperType>()\r\n\r\n  let [isVisible, setIsVisible] = useState(true)\r\n  let [isReady, setIsReady] = useState(false)\r\n\r\n  let [schedulePickerModalVisible, setSchedulePickerModalVisible] = useState(false)\r\n\r\n  let [schedulePickerData, setSchedulePickerData] = useState<string[]>([])\r\n\r\n  const navigation = useNavigation()\r\n\r\n  const lastPageIndex = 3\r\n\r\n  useEffect(() => {\r\n    async function init() {\r\n      let scheduleLodaderInstance = await ScheduleLoaderService.GetInstance()\r\n\r\n      let schedulePickerData = scheduleLodaderInstance.scheduleFiles.map((f) => ensureNoExtension(f.filename, \".json\"))\r\n      setSchedulePickerData(schedulePickerData)\r\n\r\n      setIsReady(true)\r\n    }\r\n\r\n    init()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (swiperRef.current) {\r\n      swiperRef.current.slideTo(currentPage)\r\n    }\r\n  }, [currentPage])\r\n\r\n  if (!isReady) {\r\n    return (\r\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\r\n        <ActivityIndicator size=\"large\" color={palette.navigationBackground} />\r\n      </View>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <View style={{ ...styles.overlay }}>\r\n      <View style={styles.paginationCircles}>\r\n        {_.times(lastPageIndex + 1, (i) => (\r\n          <View key={i} style={[styles.circle, currentPage == i ? styles.circleActive : {}]} />\r\n        ))}\r\n      </View>\r\n\r\n      <Swiper\r\n        initialSlide={currentPage}\r\n        style={{ display: \"flex\", width: swiperWidth, flex: 1 }}\r\n        onSwiper={(swiper) => (swiperRef.current = swiper)}\r\n        onSlideChange={(swiper) => {\r\n          setCurrentPage(swiper.activeIndex)\r\n        }}\r\n      >\r\n        {getPageOne()}\r\n        {getPageTwo()}\r\n\r\n        {getPageThree()}\r\n        {getPageFour()}\r\n      </Swiper>\r\n      {currentPage == 0 ? (\r\n        <View style={[styles.pagerNavigation, { justifyContent: \"center\" }]}>\r\n          <TouchableOpacity\r\n            style={[styles.navigationButton, { width: 150 }]}\r\n            onPress={() => {\r\n              setSchedulePickerModalVisible(true)\r\n            }}\r\n          >\r\n            <AppText\r\n              accessibilityLabel=\"selectSchedule\"\r\n              style={{ color: palette.navigationBackground, fontFamily: \"montserrat-600\" }}\r\n            >\r\n              Обрати розклад\r\n            </AppText>\r\n          </TouchableOpacity>\r\n          <OptionPickerModal\r\n            headerText=\"Вибери свою групу\"\r\n            isOpen={schedulePickerModalVisible}\r\n            initialOptions={schedulePickerData}\r\n            initialSelectedOption={\"\"}\r\n            closeModal={() => setSchedulePickerModalVisible(false)}\r\n            onSelected={(selected) => {\r\n              SettingsService.GetInstance().then((i) => {\r\n                i.currentScheduleName = ensureExtension(selected, \".json\")\r\n                i.saveToStorage()\r\n\r\n                let newCurrentPage = _.clamp(currentPage + 1, 0, lastPageIndex)\r\n                setCurrentPage(newCurrentPage)\r\n              })\r\n            }}\r\n          />\r\n        </View>\r\n      ) : (\r\n        <View style={styles.pagerNavigation}>\r\n          <TouchableOpacity\r\n            style={[styles.navigationButton, styles.backButton]}\r\n            onPress={() => {\r\n              let newCurrentPage = _.clamp(currentPage - 1, 0, 999)\r\n\r\n              setCurrentPage(newCurrentPage)\r\n            }}\r\n          >\r\n            <AppText\r\n              style={{ color: palette.navigationBackground, fontFamily: \"montserrat-600\", color: palette.grayedOut }}\r\n            >\r\n              Назад\r\n            </AppText>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            style={styles.navigationButton}\r\n            onPress={() => {\r\n              let isCloseButton = currentPage == lastPageIndex\r\n\r\n              if (isCloseButton) {\r\n                setStatusBarHidden(false, \"fade\")\r\n                setIsVisible(false)\r\n                onClose?.()\r\n                navigation.navigate(DrawerRoutes.VIEWER)\r\n              }\r\n\r\n              let newCurrentPage = _.clamp(currentPage + 1, 0, lastPageIndex)\r\n              setCurrentPage(newCurrentPage)\r\n            }}\r\n          >\r\n            <AppText style={{ color: palette.navigationBackground, fontFamily: \"montserrat-600\" }}>\r\n              {currentPage != lastPageIndex ? \"Далі\" : \"Закрити\"}\r\n            </AppText>\r\n          </TouchableOpacity>\r\n        </View>\r\n      )}\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  carouselContainer: {\r\n    backgroundColor: \"#F5F5F5\",\r\n    // backgroundColor: \"red\",\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    flex: 1,\r\n    zIndex: 9999,\r\n\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  container: {\r\n    flex: 1,\r\n    height: \"100%\",\r\n  },\r\n\r\n  viewPager: {\r\n    flex: 1,\r\n    padding: 0,\r\n    marginHorizontal: 30,\r\n  },\r\n  page: {\r\n    // height: \"100%\",\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  paginationCircles: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginVertical: 20,\r\n\r\n    width: \"100%\",\r\n  },\r\n\r\n  circle: {\r\n    width: 5,\r\n    height: 5,\r\n    margin: 5,\r\n    borderRadius: 123,\r\n    backgroundColor: \"#D9D9D9\",\r\n    flexDirection: \"row\",\r\n  },\r\n\r\n  circleActive: {\r\n    backgroundColor: \"#7B7B7B\",\r\n  },\r\n\r\n  pageBody: {\r\n    marginBottom: 20,\r\n    // flex: 1,\r\n    // height: \"100%\",\r\n  },\r\n\r\n  overlay: {\r\n    backgroundColor: \"#F5F5F5\",\r\n    // backgroundColor: \"red\",\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    flex: 1,\r\n    zIndex: 9998,\r\n  },\r\n\r\n  pagerNavigation: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: 20,\r\n    alignSelf: \"center\",\r\n    width: swiperWidth,\r\n  },\r\n\r\n  pageTitle: {\r\n    fontSize: 24,\r\n    color: palette.navigationBackground,\r\n    textAlign: \"center\",\r\n    marginVertical: 10,\r\n    marginTop: 20,\r\n  },\r\n\r\n  imageContainer: {\r\n    borderRadius: 10,\r\n    height: \"65%\",\r\n    maxHeight: \"65%\",\r\n    width: \"90%\",\r\n    // backgroundColor: \"green\",\r\n\r\n    overflow: \"auto\",\r\n\r\n    // borderColor: palette.navigationBackground,\r\n    // borderWidth: 1,\r\n    // borderColor: palette.grayishBlue,\r\n\r\n    // elevation: 0,\r\n    // shadowOffset: { width: 1, height: 1 },\r\n    // shadowColor: palette.navigationBackground,\r\n    // shadowOpacity: 0.3,\r\n    // shadowRadius: 2,\r\n\r\n    alignItems: \"flex-start\",\r\n    justifyContent: \"flex-start\",\r\n    flexDirection: \"row\",\r\n  },\r\n\r\n  previewImage: {\r\n    borderRadius: 10,\r\n    // borderColor: palette.backgroundLight,\r\n\r\n    // backgroundColor: palette.navigationBackground,\r\n\r\n    // height: \"100%\",\r\n    // width: \"100%\",\r\n\r\n    // resizeMode: \"cover\" is the default\r\n    // resizeMode: \"contain\",\r\n\r\n    // alignSelf: \"flex-start\",\r\n    // alignItems: \"flex-start\",\r\n    // justifyContent: \"flex-start\",\r\n\r\n    // flexDirection: \"column\",\r\n  },\r\n\r\n  halfImageContainer: {\r\n    height: \"30%\",\r\n  },\r\n\r\n  navigationButton: {\r\n    ...globalStyles.navigationButton,\r\n  },\r\n\r\n  backButton: {\r\n    borderColor: palette.grayedOut,\r\n  },\r\n\r\n  forwardButton: {\r\n    borderColor: palette.navigationBackground,\r\n    borderWidth: 1,\r\n  },\r\n\r\n  centeredDescriptionText: {\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  pageDescriptionText: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n})\r\n","import React from \"react\"\r\nimport { StyleSheet, Text, View, Image, Pressable, ImageBackground } from \"react-native\"\r\nimport { MaterialIcons } from \"@expo/vector-icons\"\r\nimport { SafeAreaView } from \"react-native-safe-area-context\"\r\nimport { globalStyles, palette } from \"../../styles/global\"\r\nimport GetWeekType, { WeekType } from \"../../utilities/getWeekType\"\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport { useNavigation } from \"@react-navigation/native\"\r\nimport { ExecutionEnvironment, NativeConstants, Constants, PlatformManifest, AndroidManifest } from \"expo-constants\"\r\nimport constants from \"expo-constants\"\r\nimport { getIcon } from \"../Header\"\r\nimport { DrawerRoutes } from \"../../routes/DrawerRoutes\"\r\n\r\nimport { useRoute } from \"@react-navigation/native\"\r\n\r\n// TODO: Dry up. I simply copypasted this code from Header.tsx\r\n// TODO: Display activity indicator during changing week type\r\n\r\nexport default function ScheduleHeader({\r\n  title,\r\n  onWeekTypeChanged,\r\n}: {\r\n  title: string\r\n  onWeekTypeChanged: (weekType: WeekType) => void\r\n}) {\r\n  const navigation_ = useNavigation()\r\n\r\n  const [weekType, setWeekType] = React.useState<WeekType>(GetWeekType())\r\n  const weekTypeInUkrainian = weekType === WeekType.Nominator ? \"Чисельник\" : \"Знаменник\"\r\n  console.log(\"[Schedule Header] weekType: \", weekType)\r\n  console.log(\"[Schedule Header] weekType in Ukrainian: \", weekTypeInUkrainian)\r\n\r\n  // extract current screen name from navigation state\r\n  const headerText = title.split(\".\")[0]\r\n\r\n  const routeName = useRoute().name\r\n  console.log(\"[Schedule Header] routeName: \", routeName)\r\n\r\n  const icon = getIcon(navigation_, routeName)\r\n\r\n  return (\r\n    <SafeAreaView style={scheduleHeaderStyles.header}>\r\n      <View style={scheduleHeaderStyles.headerContentContainer}>\r\n        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n          <TouchableOpacity>{icon}</TouchableOpacity>\r\n\r\n          <Text style={scheduleHeaderStyles.headerText}>{headerText}</Text>\r\n        </View>\r\n        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n          <View style={[{ flexDirection: \"row\", alignItems: \"center\", marginRight: 12 }]}>\r\n            <View\r\n              style={[\r\n                scheduleHeaderStyles.weekTextContainer,\r\n                weekTypeInUkrainian == \"Чисельник\" ? scheduleHeaderStyles.selectedContainer : {},\r\n                { marginRight: 5 },\r\n              ]}\r\n            >\r\n              <Text\r\n                style={[scheduleHeaderStyles.weekTypeText, weekTypeInUkrainian == \"Чисельник\" ? scheduleHeaderStyles.selectedText : {}]}\r\n                onPress={() => {\r\n                  onWeekTypeChanged(0)\r\n                  setWeekType(0)\r\n                }}\r\n              >\r\n                Чис\r\n              </Text>\r\n            </View>\r\n\r\n            <View\r\n              style={[scheduleHeaderStyles.weekTextContainer, weekTypeInUkrainian == \"Знаменник\" ? scheduleHeaderStyles.selectedContainer : {}]}\r\n            >\r\n              <Text\r\n                onPress={() => {\r\n                  // debugger\r\n                  onWeekTypeChanged(1)\r\n                  setWeekType(1)\r\n                }}\r\n                style={[scheduleHeaderStyles.weekTypeText, weekTypeInUkrainian == \"Знаменник\" ? scheduleHeaderStyles.selectedText : {}]}\r\n              >\r\n                Знам\r\n              </Text>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </SafeAreaView>\r\n  )\r\n}\r\nconst baseStyles = StyleSheet.create({\r\n  text: {\r\n    color: \"white\",\r\n    fontFamily: \"century-gothic\",\r\n  },\r\n})\r\n\r\nexport const scheduleHeaderStyles = StyleSheet.create({\r\n  header: {\r\n    paddingVertical: 15,\r\n    width: \"100%\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#1C5D8F\",\r\n  },\r\n\r\n  backroundImage: {\r\n    width: \"100%\",\r\n  },\r\n\r\n  headerText: {\r\n    fontSize: 20,\r\n    color: \"#333\",\r\n    color: \"white\",\r\n    fontFamily: \"century-gothic\",\r\n  },\r\n  sideMenuIcon: {\r\n    color: \"white\",\r\n    marginHorizontal: 16,\r\n    marginRight: 10,\r\n    zIndex: 8888,\r\n  },\r\n\r\n  headerContentContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    width: \"100%\",\r\n  },\r\n\r\n  currentlyViewedDay: {\r\n    fontSize: 14,\r\n    ...baseStyles.text,\r\n    marginLeft: 10,\r\n    marginHorizontal: 16,\r\n  },\r\n\r\n  weekTypeText: {\r\n    fontSize: 16,\r\n    ...baseStyles.text,\r\n  },\r\n\r\n  weekTextContainer: {\r\n    paddingHorizontal: 5,\r\n    paddingVertical: 4,\r\n  },\r\n\r\n  selectedContainer: {\r\n    borderRadius: 5,\r\n    backgroundColor: \"white\",\r\n  },\r\n\r\n  selectedText: {\r\n    color: palette.navigationBackground,\r\n  },\r\n})\r\n","import React from \"react\"\r\n\r\nimport { useCallback, useRef, useState } from \"react\"\r\nimport { View, StyleSheet, ActivityIndicator, ToastAndroid, Image } from \"react-native\"\r\nimport { editorImages, globalStyles, palette } from \"../styles/global\"\r\n\r\nimport ScheduleDayComponent from \"../components/ScheduleComponents/ScheduleDay\"\r\nimport { useEffect } from \"react\"\r\nimport SettingsService, { DisplayEmptyDaysMode } from \"../services/SettingsService\"\r\nimport ScheduleModel from \"../models/ScheduleModel\"\r\n\r\nimport { useErrorBoundary } from \"react-error-boundary\"\r\nimport { ScrollView } from \"react-native-gesture-handler\"\r\nimport _ from \"lodash\"\r\nimport { workDays } from \"../constants/Days\"\r\nimport ScheduleNotificationsService from \"../services/ScheduleNotificationsService\"\r\nimport ScheduleLoaderService, { ScheduleFile } from \"../services/ScheduleLoaderService\"\r\nimport { SettingsContext } from \"../contexts/settingsContext\"\r\nimport { ensureExtension, ensureNoExtension, isRunningInBrowser } from \"../utilities/utilities\"\r\nimport IntroductoryCarousel from \"./IntroductoryCarousel/IntroductoryCarousel\"\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\"\r\nimport GetWeekType, { WeekType } from \"../utilities/getWeekType\"\r\nimport { useFocusEffect, useNavigation } from \"@react-navigation/native\"\r\nimport AppText from \"../shared/AppText\"\r\nimport ScheduleHeader from \"../components/ScheduleComponents/ScheduleHeader\"\r\nimport { Event } from \"../constants/Events\"\r\nimport EditedSchedulesStorageService from \"../services/EditedScheduleStorageService\"\r\n\r\n// TODO: scroll to current day on mount only instead of doing so on every rerender?\r\n\r\nexport default function ScheduleScreen({ isEditable = false }: { isEditable: boolean }) {\r\n  // [web] a workaround to render drawer menu content without explicitly opening it\r\n\r\n  if (isRunningInBrowser()) {\r\n    const navigation = useNavigation()\r\n    navigation.openDrawer()\r\n    navigation.closeDrawer()\r\n  }\r\n\r\n  // const { showBoundary } = useErrorBoundary()\r\n  const todayIndex = _.clamp(new Date().getDay() - 1, 0, 4)\r\n\r\n  // state for unconditional rerendering\r\n  const [state, setState] = useState({})\r\n  const [isFirstTimeLaunch, setIsFirstTimeLaunch] = useState<string | null>(\"false\") // async storage can't store anything other than strings\r\n\r\n  let scheduleRef = useRef<ScheduleModel | null>(null)\r\n  let scheduleFileRef = useRef<ScheduleFile | null>(null)\r\n  let settingsServiceRef = useRef<SettingsService>(null)\r\n\r\n  let scrollViewContainerRef = useRef<ScrollView | null>(null)\r\n\r\n  const [scheduleLoaded, setScheduleLoaded] = useState(false)\r\n  const [scheduleName, setScheduleName] = useState(\"\")\r\n  const [dataSourceCords, setDataSourceCords] = useState<any[]>([])\r\n\r\n  const scheduleNameRef = useRef<string>()\r\n  scheduleNameRef.current = scheduleName\r\n\r\n  const [weekType, setWeekType] = React.useState<WeekType>(GetWeekType())\r\n\r\n  const onSettingsUpdated = useCallback(\r\n    async (settingsService: SettingsService) => {\r\n      // if schedule didn't change then there is nothing to do here\r\n      console.log(\" - - - deciding whether to update schedule or not - - -\")\r\n      let settingsScheduleName = ensureNoExtension(settingsService.currentScheduleName, \".json\")\r\n      let currentScheduleName = ensureNoExtension(scheduleNameRef.current, \".json\")\r\n      console.log(\"settings schedule name: \", settingsScheduleName)\r\n      console.log(\"schedule name: \", currentScheduleName)\r\n\r\n      const shouldUpdateSchedule = settingsScheduleName !== currentScheduleName\r\n      console.log(\" - - -\")\r\n\r\n      if (shouldUpdateSchedule) {\r\n        // construct new schedule object and setState for schedule name\r\n        const newSchedule = new ScheduleModel(\"groupname_groupyear\", \"groupname\", 5)\r\n        await newSchedule.getScheduleFromScheduleLoader(settingsService.currentScheduleName)\r\n\r\n        // configure notifications for schedule, but only if it's not in editor\r\n        if (!isEditable) {\r\n          const notifService = await ScheduleNotificationsService.GetInstance()\r\n          await notifService.configureNotificationsForSchedule(newSchedule)\r\n        }\r\n\r\n        scheduleRef.current = newSchedule\r\n        let scheduleLoaderService = await ScheduleLoaderService.GetInstance()\r\n        let updatedSchedule = scheduleLoaderService.getScheduleFileByFileName(\r\n          ensureExtension(settingsService.currentScheduleName, \".json\")\r\n        )\r\n        // TODO: Refactor XD\r\n        scheduleFileRef.current = _.cloneDeep(updatedSchedule) ?? null\r\n\r\n        setScheduleName(settingsService.currentScheduleName)\r\n      } else {\r\n        // assume that something else changed and we need to rerender to reflect those changes\r\n        // (in editor, everything is always unfolded and there is no need to update)\r\n        if (isEditable) return\r\n        setState({})\r\n      }\r\n    },\r\n    [scheduleName]\r\n  )\r\n\r\n  useEffect(() => {\r\n    async function onMount() {\r\n      let settingsService = await SettingsService.GetInstance()\r\n      settingsServiceRef.current = settingsService\r\n\r\n      console.log(\"[Schedule.tsx] settingsService instance: \", settingsService)\r\n\r\n      let scheduleLoaderInstance = await ScheduleLoaderService.GetInstance()\r\n\r\n      let schedule = new ScheduleModel(\"groupname_groupyear\", \"groupname\", 5)\r\n\r\n      // check whether the schedule that settings service is referencing exists. Otherwise load first available schedule\r\n      let scheduleFile = scheduleLoaderInstance.getScheduleFileByFileName(settingsService.currentScheduleName)\r\n      let firstScheduleFile = scheduleLoaderInstance.scheduleFiles[0]\r\n\r\n      scheduleFileRef.current = _.cloneDeep(scheduleFile ?? firstScheduleFile)\r\n\r\n      const nameOfScheduleToLoad = scheduleFile ? settingsService.currentScheduleName : firstScheduleFile.filename\r\n\r\n      await schedule.getScheduleFromScheduleLoader(nameOfScheduleToLoad)\r\n\r\n      // configure notifications for schedule, but only if it's not in editor\r\n      if (!isEditable) {\r\n        ScheduleNotificationsService.GetInstance().then((i) => {\r\n          console.log(\"will call configureNotificationsForSchedule on schedule: \", schedule.name)\r\n          i.configureNotificationsForSchedule(schedule)\r\n        })\r\n      }\r\n\r\n      console.log(\"[Schedule.tsx] schedule: \", schedule)\r\n\r\n      settingsService.SettingsEventEmmiter.on(Event.SETTINGS_UPDATED, onSettingsUpdated)\r\n      console.log(\"subscribed to settings updated event\")\r\n      console.log(\"n of subscribers: \", settingsService.SettingsEventEmmiter.listenerCount(Event.SETTINGS_UPDATED))\r\n\r\n      scheduleRef.current = schedule\r\n\r\n      const isFirstimeLaunch = await AsyncStorage.getItem(\"isFirstTimeLaunch\")\r\n      setIsFirstTimeLaunch(isFirstimeLaunch)\r\n\r\n      setScheduleName(schedule.name)\r\n      setScheduleLoaded(true)\r\n    }\r\n\r\n    onMount()\r\n\r\n    return () => {\r\n      SettingsService.GetInstance().then((settingsService: SettingsService) => {\r\n        settingsService.SettingsEventEmmiter.removeListener(Event.SETTINGS_UPDATED, onSettingsUpdated)\r\n      })\r\n    }\r\n  }, [])\r\n\r\n  const onWeekTypeChanged = (weekType: number) => {\r\n    console.log(\"week type changed to: \", weekType)\r\n    // display toast message if in editor\r\n    // switching to it takes longer...\r\n    if (isEditable) {\r\n      // TODO: make cross platform version of toast\r\n      if (!isRunningInBrowser()) {\r\n        ToastAndroid.show(\"Завантаження...\", ToastAndroid.LONG)\r\n      }\r\n    }\r\n    setWeekType(weekType)\r\n  }\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      if (isEditable) return\r\n\r\n      // compare current schedule file with the one in loader\r\n      // if they are different, update schedule\r\n\r\n      // return if schedule or schedule file is not loaded yet\r\n      if (!scheduleRef.current || !scheduleFileRef.current) {\r\n        console.log(\"[schedule screen focus] schedule or schedule file is not loaded yet\")\r\n        return\r\n      }\r\n\r\n      let currentScheduleFile = scheduleFileRef.current\r\n      ScheduleLoaderService.GetInstance().then((instance) => {\r\n        let scheduleFile = instance.getScheduleFileByFileName(currentScheduleFile!.filename)\r\n        // debugger\r\n\r\n        // have to compare them this way because the objects themselves have different ids\r\n        if (JSON.stringify(currentScheduleFile.json_parsed) != JSON.stringify(scheduleFile!.json_parsed)) {\r\n          console.log(\"[schedule screen focus] schedule file changed, rerendering...\")\r\n          // setScheduleLoaded(false)\r\n\r\n          // update refs\r\n          scheduleFileRef.current = _.cloneDeep(scheduleFile) ?? null\r\n\r\n          let newSchedule = new ScheduleModel(\"groupname_groupyear\", \"groupname\", 5)\r\n          scheduleRef.current! = newSchedule\r\n          newSchedule.getScheduleFromScheduleLoader(scheduleFile!.filename).then(() => {\r\n            setState({})\r\n          })\r\n        } else {\r\n          console.log(\"[schedule screen focus] schedule file didn't change\")\r\n        }\r\n      })\r\n\r\n      // show toast\r\n      // ToastAndroid.show(\"У переглядачі\", ToastAndroid.SHORT)\r\n\r\n      return () => {\r\n        // ToastAndroid.show(\"Поза переглядачем\", ToastAndroid.SHORT)\r\n      }\r\n    }, [])\r\n  )\r\n\r\n  if (!scheduleLoaded) {\r\n    return (\r\n      <View style={styles.rootContainer}>\r\n        <ScheduleHeader title=\"Розклад\" onWeekTypeChanged={onWeekTypeChanged} />\r\n        <View style={{ justifyContent: \"center\", alignItems: \"center\", flex: 1 }}>\r\n          <ActivityIndicator\r\n            testID=\"scheduleScreenActivityIndicator\"\r\n            size=\"large\"\r\n            animating={true}\r\n            color={palette.navigationBackground}\r\n          />\r\n        </View>\r\n      </View>\r\n    )\r\n  }\r\n\r\n  if (isFirstTimeLaunch != \"false\") {\r\n    return (\r\n      <IntroductoryCarousel\r\n        onClose={() => {\r\n          setIsFirstTimeLaunch(\"false\")\r\n          AsyncStorage.setItem(\"isFirstTimeLaunch\", \"false\")\r\n        }}\r\n      />\r\n    )\r\n  }\r\n\r\n  console.log(\"[Schedule View] will render schedule screen\")\r\n\r\n  return (\r\n    <SettingsContext.Provider value={settingsServiceRef.current}>\r\n      <View style={styles.rootContainer}>\r\n        <ScheduleHeader title={scheduleName} onWeekTypeChanged={onWeekTypeChanged} />\r\n\r\n        <ScrollView\r\n          style={\r\n            {\r\n              // flex: 1\r\n              // ^breaks it on mobile\r\n            }\r\n          }\r\n          contentContainerStyle={{ paddingBottom: 0 }}\r\n          ref={scrollViewContainerRef}\r\n          // nestedScrollEnabled={false}\r\n        >\r\n          {/* explanatory card if in editor */}\r\n\r\n          {isEditable ? (\r\n            <View style={[styles.scheduleDayCard]}>\r\n              <View\r\n                style={[\r\n                  {\r\n                    marginVertical: 5,\r\n                    paddingHorizontal: 10,\r\n                    paddingLeft: 5,\r\n                    paddingVertical: 3,\r\n                  },\r\n                  { flexDirection: \"row\" },\r\n                ]}\r\n              >\r\n                <View\r\n                  style={[\r\n                    {\r\n                      marginRight: 5,\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Image source={editorImages.lightbulb} style={{ height: 50, width: 50 }} />\r\n                </View>\r\n                <View>\r\n                  {/* TODO: bolden the action words */}\r\n                  <AppText style={{ fontFamily: \"century-gothic\", fontSize: 13, letterSpacing: 0.1 }}>\r\n                    Перемістити: затиснути та перетягнути\r\n                  </AppText>\r\n\r\n                  <AppText style={{ fontFamily: \"century-gothic\", fontSize: 13, letterSpacing: 0.1 }}>\r\n                    Видалити: свайп ліворуч\r\n                  </AppText>\r\n\r\n                  <AppText style={{ fontFamily: \"century-gothic\", fontSize: 13, letterSpacing: 0.1 }}>\r\n                    Редагувати: натиснути на пару\r\n                  </AppText>\r\n                </View>\r\n              </View>\r\n            </View>\r\n          ) : null}\r\n          {/* temp slice for performance reasons */}\r\n          {workDays.slice(0, 111).map((day, idx) => {\r\n            const item = day\r\n\r\n            const schedule = scheduleRef.current!\r\n            const scheduleDay = schedule.scheduleDays[idx]\r\n\r\n            const currentlySelectedWeekClasses =\r\n              weekType == 0 ? scheduleDay.getNominatorClasses() : scheduleDay.getDenominatorClasses()\r\n\r\n            const isEmpty = currentlySelectedWeekClasses.length === 0\r\n            const shouldDisplayEmptyDay = settingsServiceRef.current!.displayEmptyDays != DisplayEmptyDaysMode.Hide\r\n\r\n            if (!isEditable && isEmpty && !shouldDisplayEmptyDay) {\r\n              return <View style={globalStyles.noDisplay} key={day + weekType}></View>\r\n            }\r\n\r\n            let classes = weekType == 0 ? scheduleDay.getNominatorClasses() : scheduleDay.getDenominatorClasses()\r\n\r\n            return (\r\n              <View\r\n                style={styles.cardContainer}\r\n                key={day + weekType}\r\n                onLayout={(event) => {\r\n                  const layout = event.nativeEvent.layout\r\n                  dataSourceCords[idx] = layout.y\r\n                  setDataSourceCords(dataSourceCords)\r\n                  // console.log(\"- - - component layout data (start) - - - \")\r\n                  // console.log(dataSourceCords)\r\n                  // console.log(\"height:\", layout.height)\r\n                  // console.log(\"width:\", layout.width)\r\n                  // console.log(\"x:\", layout.x)\r\n                  // console.log(\"y:\", layout.y)\r\n                  // console.log(\"- - - component layout data (end) - - - \")\r\n\r\n                  if (dataSourceCords.length < todayIndex) return\r\n                  if (this.scrolledToToday == true) return\r\n\r\n                  // this should happen only once\r\n                  scrollViewContainerRef.current!.scrollTo({\r\n                    x: 0,\r\n                    y: dataSourceCords[todayIndex],\r\n                    animated: true,\r\n                  })\r\n\r\n                  // TODO: Refactor\r\n                  if (dataSourceCords.length == 5) {\r\n                    this.scrolledToToday = true\r\n                  }\r\n                }}\r\n              >\r\n                <ScheduleDayComponent\r\n                  classesCollection={classes}\r\n                  scheduleObject={scheduleRef.current!}\r\n                  dayName={item}\r\n                  dayIndex={idx}\r\n                  scheduleDay={scheduleRef.current!.scheduleDays[idx]}\r\n                  displayRoomNumber={!isEditable ? settingsServiceRef.current!.displayRoomNumber : true}\r\n                  showSeparator={idx !== workDays.length - 1}\r\n                  weekType={weekType}\r\n                  fade={\r\n                    !isEditable\r\n                      ? isEmpty && settingsServiceRef.current!.displayEmptyDays == DisplayEmptyDaysMode.Darken\r\n                      : false\r\n                  }\r\n                  isEditable={isEditable}\r\n                ></ScheduleDayComponent>\r\n              </View>\r\n            )\r\n          })}\r\n        </ScrollView>\r\n      </View>\r\n    </SettingsContext.Provider>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  rootContainer: {\r\n    // width: \"70%\",\r\n    // alignSelf: \"center\",\r\n\r\n    // paddingBottom: 60,\r\n    ...globalStyles.screen,\r\n\r\n    // flex: 0,\r\n    backgroundColor: \"#F5F5F5\",\r\n  },\r\n  modalToggle: {\r\n    marginBottom: 10,\r\n    borderWidth: 1,\r\n    borderColor: \"lightgray\",\r\n    padding: 10,\r\n    borderRadius: 10,\r\n    alignSelf: \"center\",\r\n  },\r\n\r\n  modalClose: {\r\n    marginTop: 20,\r\n    marginBottom: 0,\r\n  },\r\n\r\n  modalContent: {\r\n    flex: 1,\r\n  },\r\n\r\n  selected: {\r\n    backgroundColor: \"white\",\r\n    color: \"black\",\r\n    padding: 5,\r\n    borderRadius: 10,\r\n    marginBottom: 5,\r\n  },\r\n\r\n  placeholderView: {\r\n    height: 35,\r\n  },\r\n  cardContainer: {\r\n    // height: 350,\r\n    padding: 5,\r\n  },\r\n\r\n  scheduleDaySelector: {\r\n    padding: 5,\r\n    zIndex: 9999,\r\n    position: \"absolute\",\r\n    top: 0,\r\n    right: 0,\r\n    backgroundColor: \"rgba(0,0,0,0.5)\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  scheduleDayCard: {\r\n    marginTop: 10,\r\n    marginBottom: 15,\r\n    marginHorizontal: 10,\r\n    borderRadius: 6,\r\n    backgroundColor: \"white\",\r\n\r\n    paddingVertical: 2,\r\n    paddingHorizontal: 5,\r\n\r\n    elevation: 1,\r\n    shadowOffset: { width: 1, height: 1 },\r\n    shadowColor: \"#333\",\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 2,\r\n  },\r\n})\r\n","import React, { Component, useEffect, useRef, useState } from \"react\"\r\nimport { FlatList, View, StyleSheet, TouchableOpacity, TouchableWithoutFeedback, PixelRatio } from \"react-native\"\r\nimport Card from \"../shared/card\"\r\nimport { Text } from \"react-native-elements\"\r\nimport { globalStyles, palette } from \"../styles/global\"\r\nimport SafeAccessArray from \"../utilities/getStrict\"\r\nimport * as Device from \"expo-device\"\r\n\r\nimport { useWindowDimensions } from \"react-native\"\r\nimport { determineInterval } from \"../utilities/utilities\"\r\nimport { REGLAMENT_DATA } from \"../constants/Constants\"\r\nimport AppText from \"../shared/AppText\"\r\nimport { ScrollView } from \"react-native-gesture-handler\"\r\n\r\nconsole.log(\"Importing modules...\")\r\n\r\nexport const getReglamentClass = (index: number) => {\r\n  // console.log(`Getting class at index ${index}...`)\r\n  // throw if index is out of bounds\r\n  if (index < 0 || index > REGLAMENT_DATA.length - 1) {\r\n    throw new Error(\"Index out of bounds\")\r\n  }\r\n\r\n  return REGLAMENT_DATA[index]\r\n}\r\n\r\nconst tableData = {\r\n  tableHead: [\"#\", \"Початок\", \"Кінець\", \"Перерва\"],\r\n  tableData: REGLAMENT_DATA,\r\n}\r\n\r\nconsole.log(\"Creating tableData...\")\r\n\r\n// TODO: try to make own table component with flexbox (additional motivation here is to have builds not fail due to react-native-table-component)\r\n// or follow this article: https://rn-master.com/sortable-react-native-table-example/\r\n\r\nexport default function ReglamentScreen() {\r\n  console.log(\"Rendering ReglamentScreen...\")\r\n  return (\r\n    <View style={[styles.reglamentContainer, { paddingTop: 20 }]}>\r\n      <ScrollView>\r\n        {REGLAMENT_DATA.map((item, index) => {\r\n          return <ReglamentClass index={index} key={index} />\r\n        })}\r\n      </ScrollView>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst ReglamentClass = ({ index }: { index: number }) => {\r\n  const classData = getReglamentClass(index)\r\n\r\n  let currentTimeInterval = determineInterval()\r\n  let isCurrentClassRef = useRef(currentTimeInterval == classData)\r\n\r\n  let [state, setState] = useState({})\r\n  // rerender component if it's not current class anymore or became current class\r\n\r\n  useEffect(() => {\r\n    console.log(`Rendering ReglamentClass at index ${index} for the first time...`)\r\n\r\n    const interval = setInterval(() => {\r\n      let wasCurrent = isCurrentClassRef.current\r\n      let isCurrent = determineInterval() == classData\r\n      if (wasCurrent != isCurrent) {\r\n        isCurrentClassRef.current = isCurrent\r\n        setState({})\r\n      }\r\n    }, 15000)\r\n\r\n    return () => {\r\n      clearInterval(interval)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <View style={styles.reglamentClassContainer}>\r\n      <AppText style={styles.reglamentClassIndex}>{index + 1} пара</AppText>\r\n      <View\r\n        style={[styles.timeDataCard, isCurrentClassRef.current ? styles.currentClass : {}]}\r\n        testID={isCurrentClassRef.current ? \"currentClass\" + index : \"class\"}\r\n      >\r\n        <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\r\n          <View style={{ alignItems: \"flex-start\" }}>\r\n            <AppText style={styles.timePointText}>ПОЧАТОК</AppText>\r\n            <AppText style={styles.timePointDate}>{classData[1]}</AppText>\r\n          </View>\r\n\r\n          <View style={{ alignItems: \"center\", justifyContent: \"space-between\" }}>\r\n            <AppText style={styles.timePointText}>ПЕРЕРВА</AppText>\r\n            <AppText style={[styles.timePointDate, { fontSize: 13 }]}>{classData[3]}</AppText>\r\n          </View>\r\n          <View style={{ alignItems: \"flex-end\" }}>\r\n            <AppText style={styles.timePointText}>КІНЕЦЬ</AppText>\r\n            <AppText style={styles.timePointDate}>{classData[2]}</AppText>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst ReglamentTable = () => {\r\n  console.log(\"Rendering Reglament Component...\")\r\n  const [data, setData] = useState(tableData)\r\n\r\n  let currentTimeInterval = determineInterval()\r\n  let currentLesson = currentTimeInterval ? currentTimeInterval[0] : -1\r\n\r\n  const tableRef = React.useRef(null)\r\n\r\n  const { height, width } = useWindowDimensions()\r\n  const w = width\r\n  let pixelRatio = PixelRatio.get()\r\n  console.log(`Pixel ratio for this device (resolution: w: ${width}, h: ${height}) is ${pixelRatio} `)\r\n\r\n  let cellWidths = [0.09 * w, 0.25 * w, 0.2 * w, 0.39 * w]\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View ref={tableRef} style={{ borderWidth: 0, borderColor: \"teal\" }}>\r\n        <View style={{ ...styles.row, ...styles.head }}>\r\n          {data.tableHead.map((cellText, index) => {\r\n            return (\r\n              <AppText style={{ ...styles.text, ...styles.headerText, width: cellWidths[index], textAlign: \"center\" }}>\r\n                {cellText}\r\n              </AppText>\r\n            )\r\n          })}\r\n        </View>\r\n\r\n        {data.tableData.map((row, index) => {\r\n          if (row[0] === currentLesson) {\r\n            return (\r\n              <View style={styles.row}>\r\n                {row.map((cellText, index) => {\r\n                  return (\r\n                    <AppText\r\n                      style={{\r\n                        ...styles.text,\r\n                        width: cellWidths[index],\r\n                        backgroundColor: \"orange\",\r\n                        textAlign: \"center\",\r\n                      }}\r\n                    >\r\n                      {cellText}\r\n                    </AppText>\r\n                  )\r\n                })}\r\n              </View>\r\n            )\r\n          } else {\r\n            return (\r\n              <View style={styles.row}>\r\n                {row.map((cellText, index) => {\r\n                  return <Text style={{ ...styles.text, width: cellWidths[index] }}>{cellText}</Text>\r\n                })}\r\n              </View>\r\n            )\r\n          }\r\n        })}\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\n// TODO: Remove unused styles\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    width: \"100%\",\r\n    overflow: \"scroll\",\r\n    padding: 10,\r\n    paddingTop: 30,\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  reglamentClassIndex: {\r\n    fontSize: 14,\r\n    fontFamily: \"montserrat-600\",\r\n    color: palette.text,\r\n\r\n    marginLeft: 10,\r\n    marginBottom: 7,\r\n  },\r\n\r\n  reglamentContainer: {\r\n    ...globalStyles.screen,\r\n    flex: 1,\r\n\r\n    backgroundColor: palette.backgroundLight,\r\n    // backgroundColor: \"red\",\r\n  },\r\n\r\n  timePointText: {\r\n    color: palette.grayishBlue,\r\n    fontFamily: \"montserrat-bold\",\r\n  },\r\n\r\n  timePointDate: {\r\n    marginTop: 3,\r\n    fontSize: 14,\r\n    color: palette.text,\r\n  },\r\n\r\n  timeDataCard: {\r\n    borderRadius: 7,\r\n    backgroundColor: \"white\",\r\n    margin: 0,\r\n    padding: 10,\r\n\r\n    elevation: 1,\r\n    shadowOffset: { width: 1, height: 1 },\r\n    shadowColor: \"#333\",\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 2,\r\n  },\r\n\r\n  currentClass: {\r\n    // backgroundColor: \"rgb(227, 239, 249)\",\r\n    backgroundColor: \"#CCDFF1\",\r\n  },\r\n\r\n  reglamentClassContainer: {\r\n    marginHorizontal: 8,\r\n    marginBottom: 18,\r\n  },\r\n\r\n  head: {},\r\n  text: { margin: 0, textAlign: \"center\", borderBottomWidth: 1, borderRightWidth: 1, padding: 12 },\r\n  headerText: { fontWeight: \"bold\", fontSize: 14 },\r\n  headText: { margin: 6, fontWeight: \"bold\" },\r\n  row: {\r\n    flexDirection: \"row\",\r\n    // backgroundColor: \"red\",\r\n    backgroundColor: \"#f1f8ff\",\r\n  },\r\n})\r\n","import { Ionicons } from \"@expo/vector-icons\"\r\nimport React, { useRef } from \"react\"\r\nimport { View, StyleSheet, TextInput, Linking } from \"react-native\"\r\nimport { globalStyles, palette } from \"../styles/global\"\r\nimport useEffect from \"react\"\r\n\r\nimport teachersJson from \"../assets/teachers.json\"\r\nimport { FlatList } from \"react-native-gesture-handler\"\r\nimport Card from \"../shared/card\"\r\nimport TeacherTableModel from \"../models/TeacherTableModel\"\r\nimport AppText from \"../shared/AppText\"\r\n\r\n// TODO: fix scroll view intercepting select event on text\r\n\r\nexport default function TeachersScreen() {\r\n  const [searchQuery, setSearchQuery] = React.useState<string>(\"\")\r\n\r\n  const teachersTable = useRef(TeacherTableModel.GetInstance())\r\n\r\n  const [teachers, setTeachers] = React.useState<typeof teachersJson>(teachersTable.current.teachers)\r\n\r\n  const filteredTeachers = teachers.filter((teacher) => {\r\n    const teacherJson = JSON.stringify(teacher)\r\n    return teacherJson.toLowerCase().includes(searchQuery.toLowerCase())\r\n  })\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={{ ...globalStyles.horizontalCenteredFlex, ...styles.searchBarContainer }}>\r\n        <Ionicons name=\"search-outline\" size={14} style={{ marginHorizontal: 5 }} color={palette.grayedOut} />\r\n        <TextInput style={styles.searchBar} onChangeText={setSearchQuery} placeholder=\"Знайти викладача\" />\r\n      </View>\r\n      <View></View>\r\n      <FlatList\r\n        data={filteredTeachers}\r\n        userSelect=\"text\"\r\n        keyExtractor={(item) => item[\"ПІБ викладача\"]}\r\n        renderItem={({ item, index }) => {\r\n          const teacher = item\r\n          return (\r\n            <View key={index} style={styles.teacherCard}>\r\n              <AppText\r\n                style={{\r\n                  fontFamily: \"montserrat-bold\",\r\n                  ...styles.teacherDataText,\r\n                  fontSize: styles.teacherDataText.fontSize + 2,\r\n                }}\r\n                selectable\r\n              >\r\n                {teacher[\"ПІБ викладача\"]}\r\n              </AppText>\r\n              <AppText style={[styles.teacherDataText]} selectable>\r\n                {teacher.Кваліфікаця}\r\n              </AppText>\r\n              <AppText\r\n                style={[globalStyles.link, styles.teacherDataText]}\r\n                selectable\r\n                onPress={() => {\r\n                  console.log(\"pressed\")\r\n                  Linking.openURL(teacher[\"Кафедра Посилання\"])\r\n                }}\r\n              >\r\n                {`Кафедра ${teacher[\"Кафедра Абревіатура\"]} (${teacher[\"Кафедра Повна назва\"]})`}\r\n              </AppText>\r\n\r\n              {!teacher[\"E-mail\"].endsWith(\".ru\") ? (\r\n                <AppText\r\n                  style={[globalStyles.underlinedLink, styles.teacherDataText, { marginBottom: 0 }]}\r\n                  selectable\r\n                  onPress={() => {\r\n                    console.log(\"pressed\")\r\n                    // open email\r\n                    Linking.openURL(\"mailto:\" + teacher[\"E-mail\"])\r\n                  }}\r\n                >\r\n                  {teacher[\"E-mail\"]}\r\n                </AppText>\r\n              ) : (\r\n                <View />\r\n              )}\r\n            </View>\r\n          )\r\n        }}\r\n      />\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: palette.backgroundLight,\r\n  },\r\n\r\n  horizontalFlex: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  searchBarContainer: {\r\n    marginVertical: 10,\r\n    backgroundColor: palette.background,\r\n    borderRadius: 7,\r\n    padding: 5,\r\n    paddingVertical: 4,\r\n\r\n    marginHorizontal: 10,\r\n  },\r\n\r\n  searchBar: {\r\n    ...globalStyles.searchBar,\r\n    fontSize: 14,\r\n  },\r\n\r\n  teacherCard: {\r\n    marginVertical: 5,\r\n    marginHorizontal: 10,\r\n    padding: 14,\r\n    paddingVertical: 12,\r\n    borderRadius: 7,\r\n    backgroundColor: \"white\",\r\n\r\n    elevation: 1,\r\n    shadowOffset: { width: 1, height: 1 },\r\n    shadowColor: \"#333\",\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 2,\r\n  },\r\n\r\n  teacherDataText: {\r\n    fontSize: 14,\r\n    marginBottom: 6,\r\n  },\r\n})\r\n","import React from \"react\"\r\nimport { StyleSheet, Text, View, Image, Pressable, ImageBackground } from \"react-native\"\r\nimport { Ionicons, MaterialIcons } from \"@expo/vector-icons\"\r\nimport { SafeAreaView } from \"react-native-safe-area-context\"\r\nimport { globalStyles, palette } from \"../styles/global\"\r\nimport { useNavigation } from \"@react-navigation/native\"\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\"\r\n\r\nexport default function StackHeader({\r\n  title,\r\n  useSafeAreaView = true,\r\n  hasBackground = true,\r\n  captionStyles = undefined,\r\n}: {\r\n  title: string\r\n  useSafeAreaView?: boolean\r\n  hasBackground?: boolean\r\n  captionStyles?: any\r\n}) {\r\n  const navigation = useNavigation()\r\n\r\n  //   const openMenu = () => {\r\n  //     console.log(\"opening drawer\")\r\n  //     // navigation.openDrawer()\r\n  //   }\r\n\r\n  const ViewComponent = useSafeAreaView ? SafeAreaView : View\r\n\r\n  // extract current screen name from navigation state\r\n  const headerText = title\r\n  return (\r\n    <ViewComponent style={[styles.header, !hasBackground ? { backgroundColor: \"transparent\" } : {}]}>\r\n      <View style={styles.headerTitle}>\r\n        <TouchableOpacity>\r\n          <Ionicons\r\n            onPress={() => navigation.goBack()}\r\n            name=\"chevron-back-outline\"\r\n            size={24}\r\n            style={[globalStyles.navIcon, captionStyles]}\r\n          />\r\n        </TouchableOpacity>\r\n\r\n        <Text style={[styles.headerText, captionStyles]}>{headerText}</Text>\r\n      </View>\r\n    </ViewComponent>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  header: {\r\n    paddingVertical: 15,\r\n    width: \"100%\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: palette.navigationBackground,\r\n  },\r\n\r\n  headerText: {\r\n    fontSize: 20,\r\n    color: \"white\",\r\n    fontFamily: \"century-gothic\",\r\n  },\r\n\r\n  headerTitle: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n  },\r\n})\r\n","import React, { useState } from \"react\"\r\nimport { View, Switch, StyleSheet } from \"react-native\"\r\nimport { palette } from \"../styles/global\"\r\nimport { isRunningInBrowser } from \"../utilities/utilities\"\r\nimport { SwitchProps } from \"react-native-elements\"\r\n\r\n// TODO: find better colors for toggled state\r\n\r\nexport default function CustomSwitch({\r\n  onValueChange,\r\n  initVal = false,\r\n  disabled = false,\r\n  ...otherProps\r\n}: {\r\n  initVal?: boolean\r\n  disabled?: boolean\r\n  onValueChange?: (newValue: boolean) => void\r\n  otherProps: SwitchProps\r\n}): JSX.Element {\r\n  const [isEnabled, setIsEnabled] = useState(initVal)\r\n  const toggleSwitch = () => setIsEnabled((previousState) => !previousState)\r\n\r\n  // disabled = true\r\n\r\n  return (\r\n    <Switch\r\n      style={styles.switch}\r\n      trackColor={{ false: \"#767577\", true: palette.navigationBackground }}\r\n      // thumbColor={\"#eeeeee\"}\r\n      thumbColor=\"#eeeeee\"\r\n      activeThumbColor=\"#eeeeee\" // this prop is added and used by  react-native-web\r\n      onValueChange={(newValue) => {\r\n        if (disabled) return\r\n        toggleSwitch()\r\n        onValueChange && onValueChange(newValue)\r\n      }}\r\n      value={isEnabled}\r\n      {...otherProps}\r\n    />\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  switch: {\r\n    // react-native-web sets min width to half of height\r\n    height: isRunningInBrowser() ? 20 : 24,\r\n    width: isRunningInBrowser() ? 40 : 44,\r\n  },\r\n})\r\n","import React from \"react\"\r\nimport { CheckBox } from \"react-native-elements\"\r\nimport { View, StyleSheet } from \"react-native\"\r\nimport AppText from \"./AppText\"\r\nimport { palette } from \"../styles/global\"\r\n\r\nfunction BlueCircle(filled = true) {\r\n  return (\r\n    <View\r\n      style={{\r\n        width: 15,\r\n        height: 15,\r\n        borderRadius: 10,\r\n        backgroundColor: filled ? palette.navigationBackground : \"transparent\",\r\n        borderWidth: 1,\r\n        borderColor: !filled ? palette.grayedOut : \"transparent\",\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\ntype Option = {\r\n  title: string\r\n  code_name: string\r\n}\r\n\r\nexport function RadioButtonGroup({\r\n  options,\r\n  onOptionSelected,\r\n  selectedOptionIndex = 0,\r\n}: {\r\n  options: Option[]\r\n  onOptionSelected: (option: Option) => void\r\n  selectedOptionIndex?: number\r\n}) {\r\n  const [selectedIndex, setIndex] = React.useState(selectedOptionIndex)\r\n\r\n  return (\r\n    <View style={{ flexGrow: 0, marginLeft: 20 }}>\r\n      {options.map((option, index) => (\r\n        <CheckBox\r\n          checked={selectedIndex === index}\r\n          onPress={() => setIndex(index) || onOptionSelected(option)}\r\n          checkedIcon={BlueCircle()}\r\n          uncheckedIcon={BlueCircle(false)}\r\n          title={<AppText style={styles.optionTitle}>{option.title}</AppText>}\r\n          containerStyle={styles.checkboxContainer}\r\n        />\r\n      ))}\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  optionTitle: {\r\n    marginLeft: 10,\r\n    fontSize: 14,\r\n  },\r\n\r\n  checkboxContainer: {\r\n    backgroundColor: \"transparent\",\r\n    borderWidth: 0,\r\n    flexGrow: 0,\r\n    marginVertical: 7,\r\n    marginLeft: 0,\r\n    padding: 0,\r\n  },\r\n})\r\n","import { useRoute } from \"@react-navigation/native\"\r\nimport React, { useCallback } from \"react\"\r\nimport AppText from \"../../../shared/AppText\"\r\nimport { View, StyleSheet, TextInput, Platform, TextInputProps } from \"react-native\"\r\nimport { palette } from \"../../../styles/global\"\r\nimport CustomSwitch from \"../../../shared/Switch\"\r\nimport { CLASS_TYPE, ScheduleClass, ScheduleClassProps } from \"../../../models/ScheduleModel\"\r\nimport { Formik, useFormikContext } from \"formik\"\r\nimport { REGLAMENT_DATA } from \"../../../constants/Constants\"\r\nimport getStrict from \"../../../utilities/getStrict\"\r\nimport { formatRoomName } from \"../../../components/ScheduleComponents/ScheduleClass\"\r\nimport _ from \"lodash\"\r\nimport { workDays, workDaysEnLower } from \"../../../constants/Days\"\r\nimport { WeekType } from \"../../../utilities/getWeekType\"\r\nimport { RadioButtonGroup } from \"../../../shared/RadioButtonGroup\"\r\n\r\n// autocomplete library: https://www.npmjs.com/package/react-native-autocomplete-input\r\n// another one: https://www.npmjs.com/package/react-native-autocomplete-dropdown\r\n\r\n// TODO: do not display all suggestions at once, but only those that match the query (unless query is empty, then display nothing)\r\n\r\ntype ScheduleClassEditables = Omit<ScheduleClassProps, \"index\" | \"isSharedClass\" | \"day\" | \"weekName\" | \"week\">\r\n\r\nconst AutoSubmitFormData = () => {\r\n  // Grab values and submitForm from context\r\n\r\n  let {\r\n    values,\r\n    initialValues,\r\n  }: {\r\n    values: ScheduleClassEditables\r\n    initialValues: ScheduleClassEditables\r\n  } = useFormikContext()\r\n\r\n  const { isSubmitting } = useFormikContext()\r\n\r\n  let submitFormCallback = useCallback(_.debounce(useFormikContext().submitForm, 1000), [])\r\n\r\n  // submitForm = _.debounce(submitForm, 1000)\r\n\r\n  React.useEffect(() => {\r\n    // values.teacher = [values.teacher]\r\n\r\n    // do not submit form if values haven't changed\r\n    if (values == initialValues) {\r\n      console.log(\"values haven't changed, won't submit\")\r\n      return\r\n    }\r\n\r\n    // Submit the form imperatively\r\n    // if (!isSubmitting) submitFormCallback()\r\n    // else console.log(\"already submitting, won't submit again\")\r\n    submitFormCallback()\r\n  }, [values])\r\n  return null\r\n}\r\n\r\n// a decorator around TextInput that adds a bottom border and styles the text\r\nconst FormTextInput = (props: TextInputProps & { captionText: string; noteText: string | undefined }) => {\r\n  return (\r\n    <View style={[styles.formField]}>\r\n      <AppText style={[styles.fieldCaption]}>{props.captionText}</AppText>\r\n\r\n      <View>\r\n        <TextInput cursorColor={palette.navigationBackground} style={styles.textInputText} {...props} />\r\n        <View style={[styles.underline]} />\r\n        {props.noteText ? (\r\n          <AppText style={[styles.fieldCaption, { fontSize: 12, fontFamily: \"montserrat-medium\" }]}>\r\n            {props.noteText}\r\n          </AppText>\r\n        ) : null}\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default function ScheduleClassForm() {\r\n  // const navigation = useNavigation()\r\n  // const options = navigation\r\n\r\n  const route = useRoute()\r\n  const data = route.params\r\n  const {\r\n    scheduleClass,\r\n    currentlyViewedWeek,\r\n    onFormDataUpdated,\r\n  }: {\r\n    scheduleClass: ScheduleClass\r\n    currentlyViewedWeek: WeekType\r\n    onFormDataUpdated: (data: ScheduleClassProps) => void\r\n  } = data\r\n\r\n  let kbAvoidingViewBehavior: \"padding\" | \"height\" | \"position\" = Platform.OS === \"ios\" ? \"padding\" : \"height\"\r\n  kbAvoidingViewBehavior = \"position\" // position seems to work better than height\r\n\r\n  let reglamentClass = getStrict(REGLAMENT_DATA, scheduleClass.index - 1)\r\n\r\n  let classStart: string = reglamentClass[1]\r\n  if (classStart.length == 4) classStart = \"0\" + classStart\r\n\r\n  const classEnd: string = reglamentClass[2]\r\n\r\n  const teacher = scheduleClass.teacher ?? \"\"\r\n\r\n  const dayUkrIndex = workDaysEnLower.findIndex((d) => scheduleClass.day == d)\r\n  console.log(\"|\" + scheduleClass.day + \"|\")\r\n  const dayUkr = workDays[dayUkrIndex]\r\n\r\n  const weekTypeUkr = currentlyViewedWeek == 0 ? \"Чисельник\" : \"Знаменник\"\r\n\r\n  const classType = scheduleClass.classType\r\n\r\n  const scheduleClassEditables = _.pick(scheduleClass, [\"isBiweekly\", \"name\", \"teacher\", \"room\", \"classType\"])\r\n\r\n  const initialFormikValues: ScheduleClassEditables = {\r\n    ...scheduleClassEditables,\r\n    teacher: typeof teacher !== \"string\" ? teacher.join(\", \") : teacher,\r\n    room: formatRoomName(scheduleClass, true),\r\n  }\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialFormikValues}\r\n      onSubmit={(values) => {\r\n        console.log(\"Submitting Formik form...\")\r\n        console.log(values)\r\n        onFormDataUpdated(values)\r\n      }}\r\n    >\r\n      {({ values, handleChange, handleBlur, submitForm }) => {\r\n        return (\r\n          <View>\r\n            <View\r\n              style={[\r\n                styles.row,\r\n                {\r\n                  justifyContent: \"space-between\",\r\n                },\r\n              ]}\r\n            >\r\n              <View>\r\n                <AppText style={[styles.headerTextPrimary]}>Пара №{scheduleClass.index}</AppText>\r\n                <AppText style={[styles.headerTextSecondary]}>\r\n                  {classStart} – {classEnd}\r\n                </AppText>\r\n              </View>\r\n\r\n              <View>\r\n                <AppText\r\n                  style={[\r\n                    {\r\n                      textAlign: \"right\",\r\n                    },\r\n                    styles.headerTextPrimary,\r\n                  ]}\r\n                >\r\n                  {weekTypeUkr}\r\n                </AppText>\r\n                <AppText\r\n                  style={[\r\n                    {\r\n                      textAlign: \"right\",\r\n                    },\r\n                    styles.headerTextSecondary,\r\n                  ]}\r\n                >\r\n                  {dayUkr}\r\n                </AppText>\r\n              </View>\r\n            </View>\r\n            <FormTextInput captionText=\"Предмет\" value={values.name} onChangeText={handleChange(\"name\")} />\r\n\r\n            <FormTextInput\r\n              autoCapitalize=\"words\"\r\n              captionText=\"Викладач\"\r\n              value={values.teacher}\r\n              noteText=\"*якщо декілька – прізвища через кому\"\r\n              onChangeText={handleChange(\"teacher\")}\r\n            />\r\n\r\n            <FormTextInput\r\n              captionText=\"Аудиторія\"\r\n              value={values.room}\r\n              noteText=\"*якщо декілька – через кому\"\r\n              onChangeText={handleChange(\"room\")}\r\n            />\r\n            {/* \r\n            <View style={[styles.row]}>\r\n              <AppText>Посилання: </AppText>\r\n              <TextInput placeholder=\"https://us04web.zoom.us/j/75735448331?pwd=4X7q7Wu5jf43QTje5BuhChQnUcL6I1.1\" />\r\n            </View> */}\r\n            <RadioButtonGroup\r\n              options={[\r\n                {\r\n                  title: CLASS_TYPE.LECTURE,\r\n                  code_name: CLASS_TYPE.LECTURE,\r\n                },\r\n                {\r\n                  title: CLASS_TYPE.LAB,\r\n                  code_name: CLASS_TYPE.LAB,\r\n                },\r\n                {\r\n                  title: CLASS_TYPE.PRACTICE,\r\n                  code_name: CLASS_TYPE.PRACTICE,\r\n                },\r\n              ]}\r\n              onOptionSelected={(o) => handleChange(\"classType\")(o.code_name)}\r\n              selectedOptionIndex={\r\n                values.classType == CLASS_TYPE.LECTURE ? 0 : values.classType == CLASS_TYPE.LAB ? 1 : 2\r\n              }\r\n            />\r\n\r\n            <View\r\n              style={[\r\n                styles.row,\r\n                {\r\n                  justifyContent: \"space-between\",\r\n                  paddingHorizontal: 20,\r\n                  paddingRight: 10,\r\n                },\r\n              ]}\r\n            >\r\n              <AppText\r\n                style={[\r\n                  {\r\n                    fontSize: 14,\r\n                    fontFamily: \"montserrat-medium\",\r\n                  },\r\n                ]}\r\n              >\r\n                Щотижнева пара\r\n              </AppText>\r\n              {/* <TextInput placeholder=\"Лекція\" /> */}\r\n\r\n              <CustomSwitch initVal={!values.isBiweekly} onValueChange={(e) => handleChange(\"isBiweekly\")(!e + \"\")} />\r\n            </View>\r\n\r\n            {/* <KeyboardAvoidingView behavior={kbAvoidingViewBehavior} style={[styles.row]}>\r\n        <AppText>KeyboardAvoidingView -1</AppText>\r\n        <Button title={\"Button\"} />\r\n      </KeyboardAvoidingView> */}\r\n            <AutoSubmitFormData />\r\n          </View>\r\n        )\r\n      }}\r\n    </Formik>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  row: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 20,\r\n  },\r\n\r\n  formField: {\r\n    marginVertical: 10,\r\n    paddingHorizontal: 20,\r\n  },\r\n\r\n  autocompleteContainer: {\r\n    flex: 1,\r\n    left: 0,\r\n    position: \"absolute\",\r\n    right: 0,\r\n    top: 0,\r\n    zIndex: 1,\r\n  },\r\n\r\n  underline: {\r\n    height: 1,\r\n    backgroundColor: \"#C6C4C4\",\r\n    width: \"100%\",\r\n\r\n    marginVertical: 1,\r\n  },\r\n\r\n  fieldCaption: {\r\n    fontFamily: \"montserrat-semibold\",\r\n    color: palette.grayedOut,\r\n  },\r\n\r\n  textInputText: {\r\n    fontSize: 14,\r\n    fontFamily: \"montserrat-semibold\",\r\n    color: palette.text,\r\n  },\r\n\r\n  headerTextPrimary: {\r\n    fontSize: 14,\r\n    fontFamily: \"montserrat-medium\",\r\n  },\r\n\r\n  headerTextSecondary: {\r\n    fontSize: 14,\r\n    fontFamily: \"montserrat-medium\",\r\n    color: palette.grayedOut,\r\n  },\r\n})\r\n","import React from \"react\"\r\nimport ScheduleScreen from \"./ScheduleScreen\"\r\n\r\nexport default function ScheduleEditorScreen() {\r\n  return <ScheduleScreen isEditable={true} />\r\n}\r\n","import { createStackNavigator } from \"@react-navigation/stack\"\r\nimport * as React from \"react\"\r\nimport ScheduleEditor from \"../screens/TestTabsScreens/ScheduleEditor\"\r\nimport { View } from \"react-native\"\r\nimport StackHeader from \"../components/StackHeader\"\r\nimport ScheduleClassForm from \"../screens/TestTabsScreens/scheduleEditorStack/ScheduleClassForm\"\r\nimport ScheduleEditorScreen from \"../screens/ScheduleEditorScreen\"\r\n\r\nconst Stack = createStackNavigator()\r\n\r\nexport enum EditorStackRoutes {\r\n  EDITOR = \"Редактор\",\r\n  SCHEDULE_CLASS_FORM = \"ScheduleClassForm\",\r\n}\r\n\r\nexport default function EditorStack() {\r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={\r\n        {\r\n          // headerShown: false,\r\n        }\r\n      }\r\n    >\r\n      <Stack.Screen\r\n        name={EditorStackRoutes.EDITOR}\r\n        component={ScheduleEditorScreen}\r\n        options={{\r\n          header: () => <View />,\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name={EditorStackRoutes.SCHEDULE_CLASS_FORM}\r\n        component={ScheduleClassForm}\r\n        options={{\r\n          header: (props) => <StackHeader title={\"Пара\"} />,\r\n        }}\r\n      />\r\n    </Stack.Navigator>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { View, Text, StyleSheet, Linking } from \"react-native\"\r\nimport { globalStyles, palette } from \"../../styles/global\"\r\nimport AppText from \"../../shared/AppText\"\r\nimport { Ionicons } from \"@expo/vector-icons\"\r\nimport { ScrollView, TouchableOpacity } from \"react-native-gesture-handler\"\r\n\r\nexport default function FacultiesTestScreen() {\r\n  // TODO: perhaps, copy name and full name to clipboard on press\r\n\r\n  const renderFacultyCard = (\r\n    nameAbbreviation: string,\r\n    nameFull: string,\r\n    address: string,\r\n    phone: string,\r\n    mail: string\r\n  ) => {\r\n    return (\r\n      <View style={styles.facultyCard}>\r\n        <AppText\r\n          style={{\r\n            fontSize: 18,\r\n            fontFamily: \"montserrat-bold\",\r\n          }}\r\n        >\r\n          {nameAbbreviation}\r\n        </AppText>\r\n        <AppText style={[]}>{nameFull}</AppText>\r\n        <View style={[globalStyles.captionWithIcon, { marginVertical: 2 }]}>\r\n          <Ionicons name=\"location\" color={palette.grayedOut} size={16} />\r\n          <AppText style={{ marginLeft: 5, fontSize: 14, fontFamily: \"montserrat-semibold\" }}>{address}</AppText>\r\n        </View>\r\n        <TouchableOpacity\r\n          onPress={() => Linking.openURL(`tel:${phone}`)}\r\n          style={[globalStyles.captionWithIcon, { marginVertical: 2 }]}\r\n        >\r\n          <Ionicons name=\"call\" color={palette.grayedOut} size={16} />\r\n          <AppText style={{ marginLeft: 5, fontSize: 14, fontFamily: \"montserrat-semibold\" }}>{phone}</AppText>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity\r\n          onPress={() => Linking.openURL(`mailto:${mail}`)}\r\n          style={[globalStyles.captionWithIcon, { marginVertical: 2 }]}\r\n        >\r\n          <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />\r\n          <AppText\r\n            style={[{ marginLeft: 5, fontSize: 14, fontFamily: \"montserrat-semibold\" }, globalStyles.underlinedLink]}\r\n          >\r\n            {mail}\r\n          </AppText>\r\n        </TouchableOpacity>\r\n      </View>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      {renderFacultyCard(\r\n        \"ФВПІТ\",\r\n        \"Факультет видавничо-поліграфічних, інформаційних технологій\",\r\n        \"вул. Під Голоском, 19, ауд. 234\",\r\n        \"(032) 242 23 77\",\r\n        \"fvpit@uad.lviv.ua\"\r\n      )}\r\n\r\n      {renderFacultyCard(\r\n        \"ФКПІ\",\r\n        \"Факультет комп'ютерно-поліграфічної інженерії\",\r\n        \"вул. Під Голоском, 19, ауд. 219\",\r\n        \"(032) 242 23 76\",\r\n        \"fpu@uad.lviv.ua\"\r\n      )}\r\n\r\n      {renderFacultyCard(\r\n        \"ФМКП\",\r\n        \"Факультет медіакомунікацій та підприємництва\",\r\n        \"вул. Під Голоском, 19, ауд. 313\",\r\n        \"(032) 242 23 75\",\r\n        \"feoks@uad.lviv.ua\"\r\n      )}\r\n    </ScrollView>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 20,\r\n    paddingTop: 0,\r\n  },\r\n\r\n  facultyCard: {\r\n    ...globalStyles.card,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 12,\r\n\r\n    marginVertical: 5,\r\n  },\r\n})\r\n","export enum ContactsStackRoutes {\r\n  CONTACTS_MENU = \"Контакти (Меню)\",\r\n  FACULTIES = \"Факультети\",\r\n}\r\n","import { FontAwesome, Ionicons } from \"@expo/vector-icons\"\r\nimport React from \"react\"\r\nimport { Image } from \"react-native-elements\"\r\nimport { imageIcons, palette } from \"../styles/global\"\r\nimport AppText from \"../shared/AppText\"\r\nimport { View } from \"react-native\"\r\n\r\nexport type ModalItem = {\r\n  icon: JSX.Element\r\n  text: string\r\n  isPhone?: boolean\r\n  isLink?: boolean\r\n  linkName?: string\r\n}\r\n\r\nlet academyCorps = [\r\n  \"вул. Під Голоском, 19\",\r\n  \"вул. Підвальна, 17\",\r\n  \"вул. Личаківська, 3\",\r\n  \"вул. Коцюбинського, 21\",\r\n  \"вул. Винниченка, 12\",\r\n]\r\n\r\n// Корпуси академії\r\nexport const corpsModalItems = academyCorps.map((corps) => {\r\n  return {\r\n    text: corps,\r\n    icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n  }\r\n})\r\n\r\n// Ректорат\r\nexport const rectorateModalItems: ModalItem[] = [\r\n  {\r\n    icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n    text: \"вул. Під Голоском, 19, ауд. 234\",\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n    text: \"(032) 242 23 77\",\r\n    isPhone: true,\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n    text: \"uad@uad.edu.ua\",\r\n    isLink: true,\r\n  },\r\n]\r\n\r\n// Підготовче відділення\r\nexport const preparationDepartmentModalItems: ModalItem[] = [\r\n  {\r\n    icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n    text: \"вул. Під Голоском, 19, ауд. 218\",\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n    text: \"(032) 242 23 78\",\r\n    isPhone: true,\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n    text: \"pv@uad.edu.ua\",\r\n    isLink: true,\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"globe\" color={palette.grayedOut} size={16} />,\r\n    text: \"http://www.uad-pv.pp.ua/\",\r\n    isLink: true,\r\n  },\r\n]\r\n\r\n// Відділ міжнародних звʼязків та інформаційного забезпечення\r\nexport const internationalAffairsAndInformationDepartmentModalItems: ModalItem[] = [\r\n  {\r\n    icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n    text: \"вул. Під Голоском, 19\",\r\n  },\r\n\r\n  {\r\n    icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n    text: \"(032) 259 94 21\",\r\n    isPhone: true,\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n    text: \"ird@uad.lviv.ua\",\r\n    isLink: true,\r\n  },\r\n]\r\n\r\n// Приймальна комісія\r\nexport const admissionsCommitteeModalItems: ModalItem[] = [\r\n  {\r\n    icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n    text: \"вул. Під Голоском, 19, каб. 417, 200\",\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n    text: \"(067) 149 14 00\",\r\n    isPhone: true,\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n    text: \"pk@uad.edu.ua\",\r\n    isLink: true,\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n    text: \"pk.uad.lviv@gmail.com\",\r\n    isLink: true,\r\n  },\r\n]\r\n\r\n// Бухгалтерія\r\nexport const accountingModalItems: ModalItem[] = [\r\n  {\r\n    icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n    text: \"вул. Під Голоском, 19, ауд. 213\",\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n    text: \"(032) 242 23 46\",\r\n    isPhone: true,\r\n  },\r\n]\r\n\r\n// Відділ платної форми навчання\r\nexport const contractEducationDepartmentModalItems: ModalItem[] = [\r\n  {\r\n    icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n    text: \"вул. Під Голоском, 19, ауд. 234а\",\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n    text: \"(032) 242 23 80\",\r\n    isPhone: true,\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n    text: \"vpn_uad@ukr.net\",\r\n    isLink: true,\r\n  },\r\n]\r\n\r\n// Профком студентів\r\nexport const studentUnionModalItems: ModalItem[] = [\r\n  {\r\n    icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n    text: \"вул. Під Голоском, 19, ауд. 311\",\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n    text: \"(032) 242 23 79\",\r\n    isPhone: true,\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n    text: \"(067) 67 23 173\",\r\n    isPhone: true,\r\n  },\r\n]\r\n\r\n// Студентська рада\r\nexport const studentCouncilModalItems: ModalItem[] = [\r\n  {\r\n    icon: <FontAwesome name=\"instagram\" color={palette.grayedOut} size={16} />,\r\n    text: \"https://www.instagram.com/uad_lviv/\",\r\n    isLink: true,\r\n    linkName: \"uad_lviv\",\r\n  },\r\n]\r\n\r\n// Соц. мережі академії\r\nexport const socialMediaModalItems: ModalItem[] = [\r\n  {\r\n    icon: (\r\n      <View style={{ marginLeft: 2 }}>\r\n        <FontAwesome name=\"instagram\" color={palette.grayedOut} size={16} />\r\n      </View>\r\n    ),\r\n\r\n    text: \"https://www.instagram.com/uad_lviv/\",\r\n    isLink: true,\r\n    linkName: \"@uad_lviv\",\r\n  },\r\n  {\r\n    icon: <FontAwesome name=\"telegram\" color={palette.grayedOut} size={16} />,\r\n    text: \"https://t.me/uad_live\",\r\n    isLink: true,\r\n    linkName: \"@uad_live\",\r\n  },\r\n  {\r\n    icon: <FontAwesome name=\"youtube-play\" color={palette.grayedOut} size={16} />,\r\n    text: \"https://www.youtube.com/user/UADtelevision\",\r\n    isLink: true,\r\n    linkName: \"UADtelevision\",\r\n  },\r\n  {\r\n    icon: <FontAwesome name=\"facebook-official\" color={palette.grayedOut} size={16} />,\r\n    text: \"https://www.facebook.com/uadlv\",\r\n    isLink: true,\r\n  },\r\n  {\r\n    icon: (\r\n      <Image\r\n        source={imageIcons.tiktok}\r\n        // color={palette.grayedOut}\r\n        style={{\r\n          width: 16,\r\n          height: 18,\r\n        }}\r\n      />\r\n    ),\r\n    text: \"https://www.tiktok.com/@uad.lviv\",\r\n    isLink: true,\r\n    linkName: \"@uad.lviv\",\r\n  },\r\n]\r\n","import React from \"react\"\r\nimport { View, Text, StyleSheet, FlatList, Linking, Pressable } from \"react-native\"\r\nimport Separator from \"../shared/Separator\"\r\nimport EntypoIcon from \"react-native-vector-icons/Entypo\"\r\nimport { Ionicons, Octicons } from \"@expo/vector-icons\"\r\nimport { globalStyles, imageIcons, palette } from \"../styles/global\"\r\nimport AppText from \"../shared/AppText\"\r\nimport { ScrollView, TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport { Image } from \"react-native-elements\"\r\nimport OptionPickerModal from \"../components/OptionPickerModal\"\r\nimport {\r\n  ModalItem,\r\n  accountingModalItems,\r\n  admissionsCommitteeModalItems,\r\n  contractEducationDepartmentModalItems,\r\n  corpsModalItems,\r\n  internationalAffairsAndInformationDepartmentModalItems,\r\n  preparationDepartmentModalItems,\r\n  rectorateModalItems,\r\n  socialMediaModalItems,\r\n  studentCouncilModalItems,\r\n  studentUnionModalItems,\r\n} from \"../constants/Contacts\"\r\nimport { isMail, isRunningInBrowser } from \"../utilities/utilities\"\r\nimport { useNavigation } from \"@react-navigation/native\"\r\n\r\nfunction Category({\r\n  title,\r\n  titleIcon,\r\n  subcategories,\r\n  onPress,\r\n  children,\r\n}: {\r\n  title: string\r\n  titleIcon: JSX.Element\r\n  subcategories: string[]\r\n  onPress: () => void\r\n  children?: JSX.Element\r\n}) {\r\n  return (\r\n    <View style={styles.category}>\r\n      <View style={styles.categoryTitle}>\r\n        {titleIcon}\r\n        <AppText style={[{ fontSize: 14, fontFamily: \"montserrat-600\", marginLeft: 5 }]}>{title}</AppText>\r\n      </View>\r\n      <FlatList\r\n        data={children}\r\n        style={[globalStyles.card, { paddingHorizontal: 10, paddingVertical: 10 }]}\r\n        keyExtractor={(item, index) => index.toString()}\r\n        ItemSeparatorComponent={() => {\r\n          return <Separator color=\"rgba(217, 217, 217, 0.4)\" upperElement={true} lowerElement={true} /> // TODO: Refactor\r\n        }}\r\n        renderItem={({ item }) => {\r\n          const itemOnPress = item.props.onPress\r\n          const ItemType = item.type\r\n\r\n          const itemWithoutOnPress = <ItemType {...item.props} onPress={() => null} />\r\n\r\n          return (\r\n            <TouchableOpacity\r\n              onPress={(e) => {\r\n                itemOnPress() // hoist the onPress handler to parent for larger hitbox\r\n              }}\r\n              style={styles.subcategoryButtonContainer}\r\n            >\r\n              <AppText style={[{ fontSize: 15 }]}>{itemWithoutOnPress}</AppText>\r\n              <EntypoIcon name=\"chevron-small-right\" style={globalStyles.grayIcon}></EntypoIcon>\r\n            </TouchableOpacity>\r\n          )\r\n        }}\r\n      />\r\n    </View>\r\n  )\r\n}\r\n\r\nconst constructModalItem = (item: ModalItem, idx) => {\r\n  return (\r\n    <View\r\n      style={{\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        marginVertical: 6,\r\n      }}\r\n    >\r\n      {item.icon}\r\n      <AppText\r\n        onPress={() => {\r\n          if (item.isLink) {\r\n            if (isMail(item.text)) Linking.openURL(`mailto:${item.text}`)\r\n            else Linking.openURL(item.text)\r\n          } else if (item.isPhone) Linking.openURL(`tel:${item.text}`)\r\n        }}\r\n        style={[styles.optionText, item.isLink ? globalStyles.underlinedLink : {}]}\r\n      >\r\n        {item.linkName ? item.linkName : item.text}\r\n      </AppText>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst constructContentPresenterModal = (\r\n  headerText: string,\r\n  isOpen: boolean,\r\n  onCloseModal: () => void,\r\n  initialOptions: ModalItem[],\r\n  displaySeparators = false\r\n) => {\r\n  return (\r\n    <OptionPickerModal\r\n      headerText={headerText}\r\n      isOpen={isOpen}\r\n      hasSearchBar={false}\r\n      displaySeparators={displaySeparators}\r\n      closeModal={onCloseModal}\r\n      initialOptions={initialOptions}\r\n      renderItem={constructModalItem}\r\n      isOptionSelectable={false}\r\n    />\r\n  )\r\n}\r\n\r\nexport default function ContactsScreen() {\r\n  const navigation = useNavigation()\r\n\r\n  let [corpsModalIsOpen, setCorpsModalIsOpen] = React.useState(false)\r\n\r\n  let [rectorateModalIsOpen, setRectorateModalIsOpen] = React.useState(false)\r\n  let [admissionCommitteeModalIsOpen, setAdmissionCommitteeModalIsOpen] = React.useState(false)\r\n  let [preparationDepartmentModalIsOpen, setPreparationDepartmentModalIsOpen] = React.useState(false)\r\n  let [\r\n    internationalAffairsAndInformationDepartmentModalIsOpen,\r\n    setInternationalAffairsAndInformationDepartmentModalIsOpen,\r\n  ] = React.useState(false)\r\n\r\n  let [accountingModalIsOpen, setAccountingModalIsOpen] = React.useState(false)\r\n  let [contractEducationModalIsOpen, setContractEducationModalIsOpen] = React.useState(false)\r\n  let [studentUnionModalIsOpen, setStudentUnionModalIsOpen] = React.useState(false)\r\n  let [studentCouncilModalIsOpen, setStudentCouncilModalIsOpen] = React.useState(false)\r\n  let [socialMediaModalIsOpen, setSocialMediaModalIsOpen] = React.useState(false)\r\n\r\n  const structureAndSubdivisionsSubcategories = [\r\n    \"Ректорат\",\r\n    \"Приймальна комісія\",\r\n    \"Підготовче відділення\",\r\n    \"Відділ міжнародних зв'язків та інф. забезпечення\",\r\n    \"Бухгалтерія\",\r\n    \"Відділ платної форми навчання\",\r\n    \"Профком студентів\",\r\n  ]\r\n\r\n  const studentCommunitiesSubcategories = [\"Студентська рада\", \"Соц. мережі академії\"]\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <Category\r\n        title=\"Корпуси та факультети\"\r\n        titleIcon={\r\n          <Image\r\n            style={{\r\n              width: 14,\r\n              height: 14,\r\n              opacity: 0.5,\r\n            }}\r\n            source={imageIcons.museum}\r\n          />\r\n        }\r\n      >\r\n        <Pressable onPress={() => setCorpsModalIsOpen(true)}>\r\n          <AppText style={styles.subcategoryTitle}>Корпуси академії</AppText>\r\n\r\n          {constructContentPresenterModal(\r\n            \"Корпуси академії\",\r\n            corpsModalIsOpen,\r\n            () => setCorpsModalIsOpen(false),\r\n            corpsModalItems\r\n          )}\r\n        </Pressable>\r\n\r\n        <AppText\r\n          onPress={(e) => {\r\n            console.log(\"executing on press handler as child\")\r\n\r\n            navigation.push(\"Факультети\")\r\n            // e.stopPropagation()\r\n            // e.preventDefault()\r\n\r\n            return true\r\n          }}\r\n          style={styles.subcategoryTitle}\r\n        >\r\n          Факультети академії\r\n        </AppText>\r\n      </Category>\r\n\r\n      <Category\r\n        title=\"Структура і підрозділи\"\r\n        titleIcon={<Ionicons name=\"git-merge-outline\" size={16} color={palette.text} />}\r\n        subcategories={structureAndSubdivisionsSubcategories}\r\n      >\r\n        <Pressable onPress={() => setRectorateModalIsOpen(true)}>\r\n          {constructContentPresenterModal(\r\n            \"Ректорат\",\r\n            rectorateModalIsOpen,\r\n            () => setRectorateModalIsOpen(false),\r\n            rectorateModalItems\r\n          )}\r\n          <AppText style={styles.subcategoryTitle}>Ректорат</AppText>\r\n        </Pressable>\r\n\r\n        <Pressable onPress={() => setAdmissionCommitteeModalIsOpen(true)}>\r\n          {constructContentPresenterModal(\r\n            \"Приймальна комісія\",\r\n            admissionCommitteeModalIsOpen,\r\n            () => setAdmissionCommitteeModalIsOpen(false),\r\n            admissionsCommitteeModalItems\r\n          )}\r\n          <AppText style={styles.subcategoryTitle}>Приймальна комісія</AppText>\r\n        </Pressable>\r\n\r\n        <Pressable onPress={() => setPreparationDepartmentModalIsOpen(true)}>\r\n          {constructContentPresenterModal(\r\n            \"Підготовче відділення\",\r\n            preparationDepartmentModalIsOpen,\r\n            () => setPreparationDepartmentModalIsOpen(false),\r\n            preparationDepartmentModalItems\r\n          )}\r\n          <AppText style={styles.subcategoryTitle}>Підготовче відділення</AppText>\r\n        </Pressable>\r\n\r\n        <Pressable onPress={() => setInternationalAffairsAndInformationDepartmentModalIsOpen(true)}>\r\n          {constructContentPresenterModal(\r\n            \"Відділ міжнародних звʼязків та інф. забезпечення\",\r\n            internationalAffairsAndInformationDepartmentModalIsOpen,\r\n            () => setInternationalAffairsAndInformationDepartmentModalIsOpen(false),\r\n            internationalAffairsAndInformationDepartmentModalItems\r\n          )}\r\n          <AppText style={[styles.subcategoryTitle]}>Відділ міжнародних звʼязків{\"\\n\"}та інф. забезпечення</AppText>\r\n        </Pressable>\r\n\r\n        <Pressable onPress={() => setAccountingModalIsOpen(true)}>\r\n          {constructContentPresenterModal(\r\n            \"Бухгалтерія\",\r\n            accountingModalIsOpen,\r\n            () => setAccountingModalIsOpen(false),\r\n            accountingModalItems\r\n          )}\r\n          <AppText style={styles.subcategoryTitle}>Бухгалтерія</AppText>\r\n        </Pressable>\r\n\r\n        <Pressable onPress={() => setContractEducationModalIsOpen(true)}>\r\n          {constructContentPresenterModal(\r\n            \"Відділ платної форми навчання\",\r\n            contractEducationModalIsOpen,\r\n            () => setContractEducationModalIsOpen(false),\r\n            contractEducationDepartmentModalItems\r\n          )}\r\n          <AppText style={styles.subcategoryTitle}>Відділ платної форми навчання</AppText>\r\n        </Pressable>\r\n\r\n        <Pressable onPress={() => setStudentUnionModalIsOpen(true)}>\r\n          {constructContentPresenterModal(\r\n            \"Профком студентів\",\r\n            studentUnionModalIsOpen,\r\n            () => setStudentUnionModalIsOpen(false),\r\n            studentUnionModalItems\r\n          )}\r\n          <AppText style={styles.subcategoryTitle}>Профком студентів</AppText>\r\n        </Pressable>\r\n      </Category>\r\n\r\n      <Category\r\n        title=\"Студентські спільноти\"\r\n        titleIcon={<Octicons name=\"accessibility\" size={16} color={palette.text} />}\r\n        onPress={() => {}}\r\n      >\r\n        <Pressable onPress={() => setStudentCouncilModalIsOpen(true)}>\r\n          {constructContentPresenterModal(\r\n            \"Студентська рада\",\r\n            studentCouncilModalIsOpen,\r\n            () => setStudentCouncilModalIsOpen(false),\r\n            studentCouncilModalItems\r\n          )}\r\n          <AppText style={styles.subcategoryTitle}>Студентська рада</AppText>\r\n        </Pressable>\r\n\r\n        <Pressable onPress={() => setSocialMediaModalIsOpen(true)}>\r\n          {constructContentPresenterModal(\r\n            \"Соц. мережі академії\",\r\n            socialMediaModalIsOpen,\r\n            () => setSocialMediaModalIsOpen(false),\r\n            socialMediaModalItems\r\n          )}\r\n          <AppText style={styles.subcategoryTitle}>Соц. мережі академії</AppText>\r\n        </Pressable>\r\n      </Category>\r\n    </ScrollView>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 10,\r\n    paddingBottom: 20,\r\n  },\r\n\r\n  category: {\r\n    marginVertical: 10,\r\n  },\r\n\r\n  navigateToSubcategoryButton: {},\r\n\r\n  subcategoryButtonContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    marginVertical: 8,\r\n  },\r\n\r\n  categoryTitle: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginLeft: 14,\r\n    marginBottom: 5,\r\n  },\r\n\r\n  subcategoryTitle: {\r\n    fontSize: 15,\r\n  },\r\n\r\n  optionText: {\r\n    marginLeft: 10,\r\n    fontSize: 16,\r\n  },\r\n})\r\n","import * as React from \"react\"\r\n\r\nimport { createStackNavigator } from \"@react-navigation/stack\"\r\nimport FacultiesTestScreen from \"../screens/TestTabsScreens/FacultiesTestScreen\"\r\nimport ContactsModalTestScreen from \"../screens/TestTabsScreens/ContactsModalsTestScreen\"\r\nimport { View } from \"react-native\"\r\nimport { ContactsStackRoutes } from \"./ContactsStackRoutes\"\r\nimport StackHeader from \"../components/StackHeader\"\r\nimport ContactsScreen from \"../screens/ContactsScreen\"\r\nimport { palette } from \"../styles/global\"\r\n\r\nconst Stack = createStackNavigator()\r\n\r\nexport default function ContactsStack() {\r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={\r\n        {\r\n          // headerShown: false,\r\n        }\r\n      }\r\n    >\r\n      <Stack.Screen\r\n        name={ContactsStackRoutes.CONTACTS_MENU}\r\n        component={ContactsScreen}\r\n        options={{\r\n          header: () => <View />,\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name={ContactsStackRoutes.FACULTIES}\r\n        component={FacultiesTestScreen}\r\n        options={{\r\n          header: (props) => (\r\n            <StackHeader\r\n              title={\"Факультети академії\"}\r\n              useSafeAreaView={false}\r\n              hasBackground={false}\r\n              captionStyles={{ color: palette.text, fontFamily: \"montserrat-bold\", fontSize: 20 }}\r\n            />\r\n          ),\r\n        }}\r\n      />\r\n    </Stack.Navigator>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { View, StyleSheet } from \"react-native\"\r\nimport AppText from \"../shared/AppText\"\r\nimport { globalStyles, palette } from \"../styles/global\"\r\nimport { FlatList, TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport _ from \"lodash\"\r\nimport NewsLoaderService, { NewsArticle } from \"../services/NewsLoaderService\"\r\n\r\n// TODO: move to utils\r\nfunction truncateText(text: string, maxLength: number) {\r\n  if (text.length > maxLength) {\r\n    return text.slice(0, maxLength) + \"...\"\r\n  } else {\r\n    return text\r\n  }\r\n}\r\n\r\nfunction NewsCard({ date, title, body }: { date: string; title: string; body: string }) {\r\n  // convert date into day/month/year format\r\n  let dateObj = new Date(date)\r\n  let day = dateObj.getDate()\r\n  let month = dateObj.getMonth() + 1\r\n  let year = dateObj.getFullYear()\r\n  date = `${day}.${month}.${year}`\r\n\r\n  let [isBodyExpanded, setIsBodyExpanded] = useState(false)\r\n\r\n  return (\r\n    <View style={{ marginBottom: 15 }}>\r\n      <AppText style={{ alignSelf: \"center\" }}>{date}</AppText>\r\n      <View style={styles.newsArticleCard}>\r\n        <AppText style={{ fontFamily: \"montserrat-bold\", fontSize: 14 }}>{title}</AppText>\r\n        <AppText style={{ marginVertical: 15, fontFamily: \"montserrat-regular\" }}>\r\n          {isBodyExpanded ? body : truncateText(body, 280)}\r\n        </AppText>\r\n        <TouchableOpacity onPress={() => setIsBodyExpanded(!isBodyExpanded)} style={styles.moreButton}>\r\n          <AppText style={{ fontFamily: \"montserrat-semibold\", color: palette.navigationBackground }}>\r\n            {!isBodyExpanded ? \"Детальніше\" : \"Згорнути\"}\r\n          </AppText>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default function NewsScreen() {\r\n  let [news, setNews] = useState<NewsArticle[]>([\r\n    //     {\r\n    //       //   createdAt: \"14.04.2023\",\r\n    //       createdAt: new Date().toDateString(),\r\n    //       title: \"Новий випуск журналу “Студентський MOOD”\",\r\n    //       body: `Привітики друзі! Прийшла весна і вже починає радувати нас сонечком та зеленню 🌷\r\n    // Сьогодні ж замість сонця - наш \"Студентський MOOD\"!\r\n    // Підготували вам тексти про відпочинок, війну та інше)\r\n    // Читайте, піклуйтеся про себе і близьких, і хай весна принесе всім нам лише хороші новини! 🌱`.repeat(2),\r\n    //     },\r\n  ])\r\n\r\n  useEffect(() => {\r\n    async function onMount() {\r\n      const newsLoaderService = await NewsLoaderService.GetInstance()\r\n      let fetchedNews\r\n      try {\r\n        fetchedNews = await newsLoaderService.getNewsFromContentful()\r\n      } catch (e) {\r\n        fetchedNews = newsLoaderService.getExampleNews()\r\n      }\r\n\r\n      setNews([...news, ...fetchedNews])\r\n    }\r\n\r\n    onMount()\r\n  }, [])\r\n\r\n  return (\r\n    <FlatList\r\n      data={news}\r\n      renderItem={({ item }) => <NewsCard date={item.createdAt} title={item.title} body={item.body} />}\r\n      style={styles.container}\r\n    />\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 10,\r\n  },\r\n\r\n  newsArticleCard: {\r\n    ...globalStyles.card,\r\n    paddingVertical: 15,\r\n    paddingHorizontal: 15,\r\n\r\n    marginVertical: 5,\r\n  },\r\n\r\n  moreButton: {\r\n    ...globalStyles.navigationButton,\r\n    width: \"100%\",\r\n    paddingVertical: 7,\r\n  },\r\n})\r\n","import React from \"react\"\r\nimport { View, StyleSheet } from \"react-native\"\r\n\r\nexport default function Card({\r\n  children,\r\n  shadows = true,\r\n  cardContentStyle = {},\r\n}: {\r\n  children: any\r\n  shadows?: boolean\r\n  cardContentStyle?: StyleSheet\r\n}) {\r\n  return (\r\n    <View style={{ ...styles.card, ...(!shadows ? styles.noShadow : {}) }}>\r\n      <View style={styles.cardContent}>{children}</View>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  card: {\r\n    // height: \"95%\",\r\n    // width: \"98%\",\r\n    borderRadius: 6,\r\n    elevation: 3,\r\n    backgroundColor: \"#fff\",\r\n    shadowOffset: { width: 1, height: 1 },\r\n    shadowColor: \"#333\",\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 2,\r\n    marginHorizontal: 4,\r\n    marginVertical: 6,\r\n    overflow: \"scroll\",\r\n  },\r\n\r\n  noShadow: {\r\n    elevation: 0,\r\n    shadowOpacity: 0,\r\n  },\r\n\r\n  cardContent: {\r\n    marginHorizontal: 5,\r\n    marginVertical: 20,\r\n  },\r\n})\r\n","import { useState, useEffect, useRef } from \"react\"\r\nimport { Text, View, Button } from \"react-native\"\r\nimport * as Notifications from \"expo-notifications\"\r\nimport React from \"react\"\r\nimport LocalNotificationsService from \"../../services/LocalNotificationsService\"\r\nimport { ScrollView } from \"react-native-gesture-handler\"\r\nimport Card from \"../../shared/card\"\r\nimport { Input } from \"react-native-elements\"\r\nimport Constants from \"expo-constants\"\r\nimport * as IntentLauncher from \"expo-intent-launcher\"\r\n\r\n// TODO: handle daylight savings. Perhaps ask user to reload notifications, that could be easier\r\n// this makes sense: if the user is interested in the app, they will cooperate\r\n\r\n// TODO: Test biweekly notifications\r\n\r\n// TODO: Fix package name not being resolved correctly first time the app is launched\r\n// a temp fix would be to always open notification channel settings for actual app\r\n\r\n// TODO: Configure notificatitions to appear on the lock screen\r\n\r\nexport default function NotificationTestsScreen() {\r\n  const [ready, setReady] = useState(false)\r\n\r\n  const [permission, setPermission] = useState<Notifications.PermissionStatus | null>(null)\r\n  const [scheduledNotifications, setScheduledNotifications] = useState<Notifications.NotificationRequest[]>([])\r\n  const [delayForExampleNotificationViaDate, setDelayForExampleNotificationViaDate] = useState(\"5\")\r\n\r\n  const [notification, setNotification] = useState<Notifications.Notification | null>(null)\r\n\r\n  const localNotificationsServiceRef = useRef<LocalNotificationsService | null>(null)\r\n\r\n  const notificationListener = useRef<Notifications.Subscription>()\r\n  const responseListener = useRef<Notifications.Subscription>()\r\n\r\n  // data: \"package:\" + pkg,\r\n  // \"interactive-schedule-notifications\"\r\n\r\n  const requestConfigurePermissions = async () => {\r\n    // navigate to notification channel settings\r\n    // const pkg = Constants.manifest.releaseChannel ? Constants.manifest.android.package : \"host.exp.exponent\"\r\n\r\n    // IntentLauncher.startActivityAsync(\"android.settings.APP_NOTIFICATION_SETTINGS\", {\r\n    //   // data: \"package:\" + pkg,\r\n    //   extra: {\r\n    //     // \"android.provider.extra.CHANNEL_ID\": \"Default\",\r\n    //     \"android.provider.extra.APP_PACKAGE\": pkg,\r\n    //   },\r\n    // })\r\n\r\n    // const pkg = Constants.manifest.releaseChannel ? Constants.manifest.android.package : \"host.exp.exponent\"\r\n    const pkg = Constants.manifest.android.package\r\n    const allChannels = await Notifications.getNotificationChannelsAsync()\r\n    const channel = await Notifications.getNotificationChannelAsync(\"interactive-schedule-notifications\")\r\n    console.log(\"[Notification Tests] All channels of this app: \")\r\n    console.log(allChannels)\r\n    console.log(\"[Notification Tests] Channel id for main channel: \" + channel?.id)\r\n\r\n    IntentLauncher.startActivityAsync(\"android.settings.CHANNEL_NOTIFICATION_SETTINGS\", {\r\n      // data: \"package:\" + pkg,\r\n      extra: {\r\n        \"android.provider.extra.CHANNEL_ID\":\r\n          pkg == \"host.exp.exponent\" ? \"expo-experience\" : \"interactive-schedule-notifications\",\r\n        \"android.provider.extra.APP_PACKAGE\": pkg,\r\n      },\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    notificationListener.current = Notifications.addNotificationReceivedListener((notification) => {\r\n      setNotification(notification)\r\n      console.log(\"notification has beed shown\")\r\n    })\r\n\r\n    responseListener.current = Notifications.addNotificationResponseReceivedListener((response) => {\r\n      console.log(\"user responded to notification:\" + JSON.stringify(response))\r\n    })\r\n\r\n    const init = async () => {\r\n      let notifications = await LocalNotificationsService.GetInstance()\r\n      localNotificationsServiceRef.current = notifications\r\n\r\n      let registeredNotifications = await notifications.getAllScheduledNotificationsAsync()\r\n      let permissions = await notifications.checkPermissionsAsync()\r\n\r\n      setScheduledNotifications(registeredNotifications)\r\n      setPermission(permissions.status)\r\n\r\n      setReady(true)\r\n    }\r\n\r\n    init()\r\n\r\n    return () => {\r\n      Notifications.removeNotificationSubscription(notificationListener.current!)\r\n      Notifications.removeNotificationSubscription(responseListener.current!)\r\n    }\r\n  }, [])\r\n\r\n  if (!ready) {\r\n    return (\r\n      <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\r\n        <Text>Завантаження...</Text>\r\n      </View>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ScrollView contentContainerStyle={{ alignItems: \"center\" }}>\r\n      <Card style={{ backgroundColor: \"magenta\" }}>\r\n        <Text>Сповіщення дозволені: {permission}</Text>\r\n      </Card>\r\n\r\n      <View style={{ alignItems: \"center\", justifyContent: \"center\" }}>\r\n        <Text>Title: {notification && notification.request.content.title} </Text>\r\n        <Text>Body: {notification && notification.request.content.body}</Text>\r\n        <Text>Data: {notification && JSON.stringify(notification.request.content.data)}</Text>\r\n      </View>\r\n\r\n      <View>\r\n        <Text\r\n          style={{\r\n            alignSelf: \"center\",\r\n            marginBottom: 10,\r\n          }}\r\n        >\r\n          Сповіщення:\r\n        </Text>\r\n\r\n        <Button\r\n          title=\"Надіслати локальне сповіщення (приходить зі затримкою в ~3-5 секунд)\"\r\n          onPress={async () => {\r\n            localNotificationsServiceRef.current!.sendExampleNotification()\r\n          }}\r\n        />\r\n      </View>\r\n\r\n      <View style={{ marginVertical: 10 }}>\r\n        <View style={{ flexDirection: \"row\", width: \"50%\", alignItems: \"center\" }}>\r\n          <Text>Через секунд:</Text>\r\n          <Input\r\n            keyboardType=\"number-pad\"\r\n            defaultValue={delayForExampleNotificationViaDate}\r\n            onChangeText={(newValue) => setDelayForExampleNotificationViaDate(newValue)}\r\n          />\r\n        </View>\r\n\r\n        <Button\r\n          title={`Прислати сповіщення через ${delayForExampleNotificationViaDate} секунд`}\r\n          color={\"green\"}\r\n          onPress={async () => {\r\n            localNotificationsServiceRef.current!.scheduleExampleNotificationViaDate(\r\n              parseInt(delayForExampleNotificationViaDate)\r\n            )\r\n          }}\r\n        />\r\n      </View>\r\n\r\n      <View style={{ marginVertical: 10 }}>\r\n        <Text>Має показувати сповіщення кожні 5 секунд, навіть якщо додаток повністю закритий</Text>\r\n        <View style={{ marginVertical: 10 }}>\r\n          <Button\r\n            title=\"Присилати сповіщення кожнi 5 секунд\"\r\n            color={\"green\"}\r\n            onPress={async () => {\r\n              localNotificationsServiceRef.current!.scheduleRepeatableExampleNotification()\r\n            }}\r\n          />\r\n        </View>\r\n\r\n        <View style={{ marginVertical: 10 }}>\r\n          <Button\r\n            title=\"Присилати сповіщення кожного дня о 12:00\"\r\n            color={\"green\"}\r\n            onPress={async () => {\r\n              localNotificationsServiceRef.current!.scheduleRepeatableDailyExampleNotification()\r\n            }}\r\n          />\r\n        </View>\r\n\r\n        <View style={{ marginVertical: 10 }}>\r\n          <Button\r\n            title=\"Попросити дозволу на сповіщення\"\r\n            color={\"green\"}\r\n            onPress={async () => {\r\n              localNotificationsServiceRef.current!.checkPermissionsAsync\r\n            }}\r\n          />\r\n        </View>\r\n\r\n        <Button\r\n          title=\"Зупинити періодичні сповіщення\"\r\n          color={\"red\"}\r\n          onPress={async () => {\r\n            localNotificationsServiceRef.current!.cancelAllScheduledNotificationsAsync()\r\n          }}\r\n        />\r\n\r\n        <View>\r\n          <Text>Наступне Сповіщення</Text>\r\n          <Button\r\n            title=\"Попросити налаштувати сповіщення\"\r\n            onPress={() => {\r\n              requestConfigurePermissions()\r\n            }}\r\n          />\r\n        </View>\r\n      </View>\r\n    </ScrollView>\r\n  )\r\n}\r\n","import * as React from \"react\"\r\nimport {\r\n  PixelRatio,\r\n  Pressable,\r\n  Text,\r\n  TouchableOpacity,\r\n  TouchableOpacityBase,\r\n  View,\r\n  useWindowDimensions,\r\n} from \"react-native\"\r\nimport { NavigationContainer } from \"@react-navigation/native\"\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\"\r\nimport { Ionicons } from \"@expo/vector-icons\"\r\nimport NotificationTestsScreen from \"../screens/TestTabsScreens/NotificationTests\"\r\nimport Collapsible from \"react-native-collapsible\"\r\nimport { TouchableHighlight } from \"react-native-gesture-handler\"\r\nimport AppText from \"./AppText\"\r\n\r\nexport default function Expander({ header, children }: { header: string; children: React.ReactNode }) {\r\n  let [collapsed, setCollapsed] = React.useState(true)\r\n  //   console.log(\"[Expander] expander recieved these children:\")\r\n  //   console.log(children)\r\n\r\n  return (\r\n    <View>\r\n      <TouchableOpacity onPress={() => setCollapsed(!collapsed)}>\r\n        <AppText>\r\n          {header} <Ionicons name={collapsed ? \"arrow-down\" : \"arrow-up\"} />\r\n        </AppText>\r\n      </TouchableOpacity>\r\n\r\n      <Collapsible collapsed={collapsed}>{children}</Collapsible>\r\n    </View>\r\n  )\r\n}\r\n","import { useState, useEffect, useRef } from \"react\"\r\nimport { Text, View, Button, ToastAndroid } from \"react-native\"\r\n\r\nimport LocalNotificationsService from \"../../services/LocalNotificationsService\"\r\nimport * as Notifications from \"expo-notifications\"\r\nimport { FlatList, ScrollView } from \"react-native-gesture-handler\"\r\nimport React from \"react\"\r\nimport Card from \"../../shared/card\"\r\nimport Expander from \"../../shared/Expander\"\r\nimport { CheckBox, Input, SearchBar } from \"react-native-elements\"\r\nimport _ from \"lodash\"\r\n\r\n// TODO: Consider this warning:\r\n// VirtualizedList: You have a large list that is slow to update - make sure your renderItem function renders components that follow React performance best practices\r\n// like PureComponent, shouldComponentUpdate, etc. {\"contentLength\": 7060, \"dt\": 598, \"prevDt\": 859}\r\n\r\nexport default function ScheduledNotificationsScreen() {\r\n  const [ready, setReady] = useState(false)\r\n\r\n  let [showRegularClasses, setShowRegularClasses] = useState(false)\r\n  let [showBiweeklyClasses, setShowBiweeklyClasses] = useState(true)\r\n  let [filterQuery, setFilterQuery] = useState(\"\")\r\n\r\n  // fetch all scheduled nootifications\r\n  const localNotificationsServiceRef = useRef<LocalNotificationsService | null>(null)\r\n  let [scheduledNotifications, setScheduledNotifications] = useState<Notifications.NotificationRequest[]>([])\r\n\r\n  const scheduledNotificationsWithParsedTimestamp = _.cloneDeep(scheduledNotifications).map((n) => {\r\n    if (n.trigger.type === \"date\") {\r\n      n.trigger.value = new Date(n.trigger.value).toUTCString()\r\n      // n.trigger.timeZoneOffset = new Date(n.trigger.value).getTimezoneOffset()\r\n    }\r\n\r\n    return n\r\n  })\r\n  const filteredScheduledNotifications = scheduledNotificationsWithParsedTimestamp.filter((n) => {\r\n    if (n.trigger.type === \"weekly\" && !showRegularClasses) return false\r\n    if (n.trigger.type === \"date\" && !showBiweeklyClasses) return false\r\n\r\n    if (JSON.stringify(n).includes(filterQuery)) {\r\n      return true\r\n    }\r\n    return false\r\n  })\r\n\r\n  const sortedScheduledNotifications = _.sortBy(filteredScheduledNotifications, (n) => {\r\n    if (n.trigger.type === \"weekly\") {\r\n      return n.trigger.weekday * 24 * 60 + n.trigger.hour * 60 + n.trigger.minute\r\n    } else if (n.trigger.type === \"date\") {\r\n      return new Date(n.trigger.value) - 0\r\n    }\r\n  })\r\n\r\n  // display them\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      let notifications = await LocalNotificationsService.GetInstance()\r\n      localNotificationsServiceRef.current = notifications\r\n\r\n      let registeredNotifications = await notifications.getAllScheduledNotificationsAsync()\r\n\r\n      setScheduledNotifications(registeredNotifications)\r\n      setReady(true)\r\n    }\r\n\r\n    init()\r\n  }, [])\r\n\r\n  return (\r\n    <View style={{ alignItems: \"center\", marginTop: 40 }}>\r\n      <Text>Всього запланованих сповіщень: {scheduledNotifications.length}</Text>\r\n      <Button\r\n        title=\"Fetch All Scheduled Notifications\"\r\n        onPress={async () => {\r\n          // show toast\r\n          // AndroidToast.show(\"Fetching all scheduled notifications...\", AndroidToast.SHORT)\r\n\r\n          ToastAndroid.show(\"Fetching all scheduled notifications...\", ToastAndroid.SHORT)\r\n          let notifications = await localNotificationsServiceRef.current!.getAllScheduledNotificationsAsync()\r\n\r\n          setScheduledNotifications(notifications)\r\n          ToastAndroid.show(\"Fetched and set state...\", ToastAndroid.SHORT)\r\n        }}\r\n      />\r\n      <Text>Список запланованих сповіщень: </Text>\r\n      <ScrollView style={{ minHeight: 55 }} horizontal contentContainerStyle={{ flexDirection: \"row\" }}>\r\n        <CheckBox\r\n          checked={showRegularClasses}\r\n          onPress={() => setShowRegularClasses(!showRegularClasses)}\r\n          title={\"Щотижневі пари\"}\r\n        />\r\n        <CheckBox\r\n          checked={showBiweeklyClasses}\r\n          onPress={() => setShowBiweeklyClasses(!showBiweeklyClasses)}\r\n          title={\"Щодвотижневі пари (Ті, що по чисельнику/знаменнику\"}\r\n        />\r\n      </ScrollView>\r\n\r\n      <View style={{ width: \"70%\" }}>\r\n        <Input\r\n          ref={(search) => (this.search = search)}\r\n          onChangeText={(text) => setFilterQuery(text)}\r\n          placeholder=\"Filter By Text\"\r\n          onBlur={() => null}\r\n        />\r\n      </View>\r\n\r\n      <FlatList\r\n        data={sortedScheduledNotifications}\r\n        keyExtractor={(item) => item.identifier}\r\n        ListEmptyComponent={() => (\r\n          <View>\r\n            <Text>Сповіщень не знайдено</Text>\r\n          </View>\r\n        )}\r\n        renderItem={({ item, index }) => {\r\n          const notification = item\r\n\r\n          return (\r\n            <Card\r\n              key={index}\r\n              style={{\r\n                backgroundColor: \"red\",\r\n              }}\r\n            >\r\n              <Text style={{ alignSelf: \"center\" }}>Notification #{index + 1}</Text>\r\n              <Text>\r\n                Notification title: <Text style={{ fontWeight: \"bold\" }}>{notification.content.title}</Text>{\" \"}\r\n              </Text>\r\n              <Text>Notification trigger type: {notification.trigger.type}</Text>\r\n              <Expander header=\"Notification Details\">\r\n                <View>\r\n                  <Text>Details:</Text>\r\n                  <Text>Notification id: {notification.identifier} </Text>\r\n\r\n                  <Text> {JSON.stringify(notification.trigger)} </Text>\r\n                </View>\r\n              </Expander>\r\n\r\n              <View style={{ marginVertical: 10, alignItems: \"flex-end\" }}>\r\n                <Button\r\n                  onPress={() =>\r\n                    localNotificationsServiceRef.current!.cancelScheduledNotificationAsync(notification.identifier)\r\n                  }\r\n                  title=\"Cancel\"\r\n                  color={\"red\"}\r\n                />\r\n              </View>\r\n            </Card>\r\n          )\r\n        }}\r\n      />\r\n    </View>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { View, Text, StyleSheet } from \"react-native\"\r\nimport AppText from \"../shared/AppText\"\r\nimport { Modal } from \"react-native\"\r\nimport { Pressable } from \"react-native\"\r\nimport { ScrollView } from \"react-native-gesture-handler\"\r\nimport { globalStyles } from \"../styles/global\"\r\n\r\n// TODO: Add types to props\r\n\r\nexport default function ContentViewModal(props) {\r\n  return (\r\n    <Modal animationType=\"fade\" transparent={true} style={styles.modal} visible={props.visible}>\r\n      <Pressable onPress={() => props.closeModal()} style={styles.overlay}></Pressable>\r\n\r\n      <View style={styles.modalContentContainer}>\r\n        <ScrollView style={styles.modalChildren}>{props.children}</ScrollView>\r\n      </View>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  modal: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"red\", // not gonna work cause it's transparent\r\n  },\r\n\r\n  overlay: {\r\n    backgroundColor: \"rgba(0, 0, 0, 0.25)\",\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n\r\n  modalContentContainer: {\r\n    ...globalStyles.modalContentContainer,\r\n  },\r\n\r\n  modalChildren: {\r\n    height: \"100%\",\r\n  },\r\n})\r\n","import React from \"react\"\r\n\r\nimport { View } from \"react-native\"\r\nimport { Pressable, Text } from \"react-native\"\r\nimport { StyleSheet } from \"react-native\"\r\nimport { TouchableHighlight, TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport AppText from \"./AppText\"\r\nimport { palette } from \"../styles/global\"\r\n\r\nexport default function FlatButton({ onPress, text, color }) {\r\n  return (\r\n    <TouchableOpacity style={{ alignItems: \"flex-start\" }} onPress={onPress}>\r\n      <View style={styles.button}>\r\n        <AppText style={styles.closeButtonText}>{text}</AppText>\r\n      </View>\r\n    </TouchableOpacity>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  closeButtonText: {\r\n    fontFamily: \"montserrat-600\",\r\n    color: palette.grayedOut,\r\n    fontSize: 16,\r\n  },\r\n\r\n  button: {\r\n    alignItems: \"flex-start\",\r\n    backgroundColor: \"#FFFFFF\",\r\n    borderWidth: 1,\r\n    borderColor: \"#E6E6E6\",\r\n    padding: 10,\r\n    paddingHorizontal: 30,\r\n    marginTop: 10,\r\n    // borderRadius: 10,\r\n\r\n    shadowColor: \"rgba(0,0,0,1)\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 1,\r\n    },\r\n    elevation: 0.2,\r\n    shadowOpacity: 0.0,\r\n    shadowRadius: 0,\r\n    borderRadius: 10,\r\n  },\r\n})\r\n","import { useEffect } from \"react\"\r\nimport React from \"react\"\r\n\r\nimport { View, Text, StyleSheet, NativeSyntheticEvent, TextInputFocusEventData, Pressable } from \"react-native\"\r\nimport AppText from \"../../shared/AppText\"\r\n\r\nimport * as FileSystem from \"expo-file-system\"\r\nimport { Button } from \"@rneui/themed\"\r\nimport { Input } from \"react-native-elements\"\r\nimport ContentViewModal from \"../../components/ContentViewModal\"\r\nimport { ScrollView, TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport { createClient } from \"contentful/dist/contentful.browser.min.js\"\r\nimport { AssetFile, ContentfulClientApi } from \"contentful\"\r\nimport Expander from \"../../shared/Expander\"\r\nimport ScheduleLoaderService from \"../../services/ScheduleLoaderService\"\r\nimport FlatButton from \"../../shared/Button\"\r\n\r\nconst pathToSchedules = `assets/schedules/`\r\n// const istSchedule = FileSystem.readAsStringAsync(pathToSchedules + \"IST-51M.json\")\r\n// const bundledAssetsInfo = FileSystem.getInfoAsync(\"\")\r\n\r\nexport default function FileSystemScreen() {\r\n  const [bundledAssetsInfo, setBundledAssetsInfo] = React.useState([])\r\n\r\n  const [fileContentModalVisible, setFileContentModalVisible] = React.useState(false)\r\n  const [selectedFileContent, setSelectedFileContent] = React.useState(\"selected file content\")\r\n\r\n  const [currentDir, setCurrentDir] = React.useState<string>(FileSystem.documentDirectory)\r\n  const [allFiles, setAllFiles] = React.useState<string[]>([])\r\n\r\n  const [firstFieldText, setFirstFieldText] = React.useState(\"\")\r\n  const [secondFieldText, setSecondFieldText] = React.useState(\"\")\r\n\r\n  const [contentfulSchedule, setContentfulSchedule] = React.useState(\"\")\r\n  const [contentfulScheduleAsAsset, setContentfulScheduleAsAsset] = React.useState(\"\")\r\n  const [contentfulScheduleAsDownloadedAsset, setContentfulScheduleAsDownloadedAsset] = React.useState(\"\")\r\n  const [allContentfulAssets, setAllContentfulAssets] = React.useState(\"\")\r\n\r\n  const saveToFile = async () => {\r\n    const text = firstFieldText + \"\\n\" + secondFieldText\r\n\r\n    const path = FileSystem.documentDirectory + \"test.txt\"\r\n    const content = text\r\n\r\n    await FileSystem.writeAsStringAsync(path, content)\r\n\r\n    const info = await FileSystem.getInfoAsync(path)\r\n    console.log(\"save successful. file info:\")\r\n    console.log(info)\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function init() {\r\n      // const info = await FileSystem.readDirectoryAsync(FileSystem.bundleDirectory)\r\n      // console.log(\"bundled assets info:\")\r\n      // console.log(info)\r\n\r\n      let allFiles = await FileSystem.readDirectoryAsync(currentDir)\r\n\r\n      console.log(\"all files:\")\r\n      console.log(allFiles)\r\n      setAllFiles(allFiles)\r\n\r\n      const client: ContentfulClientApi<undefiend> = createClient({\r\n        space: \"ude6y2h1h61l\",\r\n        environment: \"master\", // defaults to 'master' if not set\r\n        accessToken: \"hQc8OI2VQrAnLLSWSpflQyByQUZ_t5ct1Ed8axAu7M0\",\r\n      })\r\n\r\n      client\r\n        .getEntry(\"4DlBdNKIvYPma8B18WwQsJ\")\r\n        .then((entry) => {\r\n          console.log(entry)\r\n          setContentfulSchedule(JSON.stringify(entry, null, 4))\r\n        })\r\n        .catch((e) => {\r\n          console.error(\"fetching contentful schedule failed:\")\r\n          console.error(e)\r\n        })\r\n\r\n      client\r\n        .getAsset(\"2wFiyBYGXQbdRvtnSAS8Xm\")\r\n        .then((asset) => {\r\n          console.log(asset)\r\n          setContentfulScheduleAsAsset(JSON.stringify(asset, null, 4))\r\n          const file: AssetFile = asset.fields.file\r\n\r\n          const protocol = \"https:\"\r\n          const linkToFile = file.url\r\n          FileSystem.downloadAsync(protocol + linkToFile, FileSystem.documentDirectory + file.fileName, {}).then(\r\n            (res) => {\r\n              console.log(\"downloaded file:\")\r\n              console.log(res)\r\n\r\n              FileSystem.readAsStringAsync(res.uri).then((content) => {\r\n                setContentfulScheduleAsDownloadedAsset(content)\r\n              })\r\n            }\r\n          )\r\n        })\r\n        .catch((e) => {\r\n          console.error(\"fetching contentful schedule as asset failed:\")\r\n          console.error(e)\r\n\r\n          setContentfulScheduleAsAsset(\"failed to download the asset\")\r\n          setContentfulScheduleAsDownloadedAsset(\"failed to download the asset\")\r\n        })\r\n\r\n      client.getAssets().then((assets) => {\r\n        console.log(assets)\r\n\r\n        let assetNames: string[] = []\r\n\r\n        if (assets.items.length !== 0) {\r\n          assetNames = assets.items.map((a) => a.fields.file.fileName)\r\n        }\r\n\r\n        setAllContentfulAssets(JSON.stringify(assetNames, null, 4))\r\n      })\r\n\r\n      await initFields()\r\n\r\n      // for testing purposes:\r\n      let scheudleLoaderInstance = ScheduleLoaderService.GetInstance()\r\n    }\r\n\r\n    init()\r\n  }, [])\r\n\r\n  async function initFields() {\r\n    // read from test.txt\r\n    const path = FileSystem.documentDirectory + \"test.txt\"\r\n\r\n    let content: string\r\n\r\n    try {\r\n      content = await FileSystem.readAsStringAsync(path)\r\n    } catch (e) {\r\n      content = \"a\\nb\"\r\n    }\r\n    const lines = content.split(\"\\n\")\r\n\r\n    setFirstFieldText(lines[0])\r\n    setSecondFieldText(lines[1])\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View>\r\n        <Input onChangeText={(text) => setFirstFieldText(text)} value={firstFieldText} />\r\n        <Input onChangeText={(text) => setSecondFieldText(text)} value={secondFieldText} />\r\n      </View>\r\n      <View style={{ flexDirection: \"row\" }}>\r\n        <Button color={\"success\"} title={\"Зберегти\"} onPress={() => saveToFile()} />\r\n        <Button color={\"error\"} title={\"Скасувати\"} onPress={() => initFields()} />\r\n      </View>\r\n      <View>\r\n        <FlatButton\r\n          text={\"Усі Файли\"}\r\n          onPress={() => {\r\n            setCurrentDir(FileSystem.documentDirectory)\r\n            FileSystem.readDirectoryAsync(FileSystem.documentDirectory).then((content) => {\r\n              setAllFiles(content)\r\n            })\r\n          }}\r\n        />\r\n        <ScrollView>\r\n          {allFiles.map((f, idx) => (\r\n            <TouchableOpacity\r\n              key={idx}\r\n              onLongPress={() => {\r\n                FileSystem.deleteAsync(currentDir + f).then(() => {\r\n                  setAllFiles(allFiles.filter((file) => file !== f))\r\n                })\r\n              }}\r\n              onPress={async () => {\r\n                let isFolder = (await FileSystem.getInfoAsync(FileSystem.documentDirectory + f)).isDirectory\r\n\r\n                if (isFolder) {\r\n                  setCurrentDir(FileSystem.documentDirectory + f + \"/\")\r\n                  FileSystem.readDirectoryAsync(FileSystem.documentDirectory + f).then((content) => {\r\n                    setAllFiles(content)\r\n                  })\r\n                } else {\r\n                  FileSystem.readAsStringAsync(currentDir + f).then((content) => {\r\n                    setSelectedFileContent(content)\r\n                    setFileContentModalVisible(true)\r\n                  })\r\n                }\r\n              }}\r\n            >\r\n              <AppText>{f}</AppText>\r\n            </TouchableOpacity>\r\n          ))}\r\n        </ScrollView>\r\n      </View>\r\n      <View>\r\n        <AppText style={{ color: \"red\" }}>Файли, що йдуть разом з додатком (не працює):</AppText>\r\n        <View></View>\r\n      </View>\r\n      <View>\r\n        <Expander header=\"Contentful Entry тест\">\r\n          <ScrollView style={{ height: 500 }}>\r\n            <AppText>{contentfulSchedule}</AppText>\r\n          </ScrollView>\r\n        </Expander>\r\n      </View>\r\n      <View>\r\n        <Expander header=\"Contentful Asset Test\">\r\n          <ScrollView style={{ height: 200 }}>\r\n            <AppText>{contentfulScheduleAsAsset}</AppText>\r\n          </ScrollView>\r\n        </Expander>\r\n      </View>\r\n      <View>\r\n        <Expander header=\"Contentful Asset As Downloaded File Test\">\r\n          <ScrollView style={{ height: 200 }}>\r\n            <AppText>{contentfulScheduleAsDownloadedAsset}</AppText>\r\n          </ScrollView>\r\n        </Expander>\r\n      </View>\r\n      <View>\r\n        <Expander header=\"All Contentful Assets\">\r\n          <ScrollView style={{ height: 200 }}>\r\n            <AppText>{allContentfulAssets}</AppText>\r\n          </ScrollView>\r\n        </Expander>\r\n      </View>\r\n\r\n      <ContentViewModal visible={fileContentModalVisible} closeModal={() => setFileContentModalVisible(false)}>\r\n        <AppText>{selectedFileContent}</AppText>\r\n      </ContentViewModal>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n})\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { View, Text, StyleSheet } from \"react-native\"\r\nimport { Button } from \"react-native-elements\"\r\nimport { SafeAreaView } from \"react-native-safe-area-context\"\r\nimport ScheduleLoaderService from \"../../services/ScheduleLoaderService\"\r\nimport ScheduleModel, { ScheduleDay } from \"../../models/ScheduleModel\"\r\nimport SettingsService from \"../../services/SettingsService\"\r\nimport { FlatList, TouchableOpacity } from \"react-native-gesture-handler\"\r\n\r\nimport { useSwipeableItemParams } from \"react-native-swipeable-item\"\r\nimport { globalStyles } from \"../../styles/global\"\r\nimport { useNavigation } from \"@react-navigation/native\"\r\nimport _ from \"lodash\"\r\nimport { EditorStackRoutes } from \"../../routes/EditorStackRoutes\"\r\n\r\nimport \"setimmediate\"\r\n\r\n// TODO: use this library to implement swipeable items\r\n// https://github.com/computerjazz/react-native-swipeable-item\r\n\r\nexport default function ScheduleEditor() {\r\n  let [isReady, setIsReady] = useState(false)\r\n  let [sampleScheduleDay, setSampleDay] = useState<ScheduleDay>()\r\n\r\n  let settingsServiceRef = React.useRef<SettingsService | null>(null)\r\n\r\n  let navigation = useNavigation()\r\n  const currentRouteName = navigation.getId()\r\n\r\n  useEffect(() => {\r\n    async function init() {\r\n      let scheduleLoaderInstance = await ScheduleLoaderService.GetInstance()\r\n      let schedule = new ScheduleModel(\"groupname_groupyear\", \"groupname\", 5)\r\n\r\n      // TODO: Fix warning about undefined\r\n\r\n      let firstScheduleFile = scheduleLoaderInstance.scheduleFiles[0]\r\n      let firstScheduleFilename = firstScheduleFile.filename\r\n      console.log(\"first schedule filename:\", firstScheduleFilename)\r\n\r\n      await schedule.getScheduleFromScheduleLoader(firstScheduleFilename)\r\n\r\n      let settingsService = await SettingsService.GetInstance()\r\n      settingsServiceRef.current = settingsService\r\n\r\n      setSampleDay(schedule.scheduleDays[0])\r\n      setIsReady(true)\r\n    }\r\n\r\n    init()\r\n  }, [])\r\n\r\n  let [data, setData] = useState([\r\n    { key: \"1\", title: \"Item 1\", isSlot: true },\r\n    { key: \"2\", title: \"Item 2\", isSlot: true },\r\n    { key: \"3\", title: \"Item 3\", isSlot: false },\r\n    // { key: \"4\", title: \"Item 4\", isSlot: false },\r\n    // { key: \"5\", title: \"Item 5\", isSlot: false },\r\n    // { key: \"6\", title: \"Item 6\", isSlot: false },\r\n    // { key: \"7\", title: \"Item 7\", isSlot: true },\r\n    // { key: \"8\", title: \"Item 8\", isSlot: false },\r\n    // { key: \"9\", title: \"Item 9\", isSlot: false },\r\n    // { key: \"10\", title: \"Item 10\", isSlot: false },\r\n  ])\r\n\r\n  if (!isReady) {\r\n    return (\r\n      <View>\r\n        <Text>Loading...</Text>\r\n      </View>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <View>\r\n        <Text>Редактор</Text>\r\n        <Text> ({currentRouteName})</Text>\r\n        <View style={[{ flexDirection: \"row\", justifyContent: \"space-around\" }]}>\r\n          <Button title=\"Save\" />\r\n          <Button title=\"Cancel\" />\r\n          <Button title=\"Reset\" />\r\n        </View>\r\n        <FlatList\r\n          scrollEnabled={true}\r\n          nestedScrollEnabled={false}\r\n          data={[data, data, data, data]}\r\n          keyExtractor={(item) => Math.random().toString()}\r\n          renderItem={({ item }) => {\r\n            let dataElem = item\r\n            return (\r\n              <FlatList\r\n                // scrollEnabled={false}\r\n                // nestedScrollEnabled={true}\r\n                // prop\r\n                data={dataElem}\r\n                key={Math.random().toString()}\r\n                keyExtractor={(item) => _.random(0, 100000, false).toString()}\r\n                onDragEnd={({ data }) => console.log(\"[drag end] data:\", data)}\r\n                renderItem={({ item: draggable, drag, isActive }) => {\r\n                  return (\r\n                    <TouchableOpacity\r\n                      style={[\r\n                        { backgroundColor: isActive ? \"orange\" : \"red\" },\r\n                        { margin: 10 },\r\n                        draggable.isSlot ? { backgroundColor: \"gray\" } : {},\r\n                      ]}\r\n                      onLongPress={drag}\r\n                      onPress={() => {\r\n                        navigation.push(EditorStackRoutes.SCHEDULE_CLASS_FORM, {\r\n                          scheduleClass: draggable,\r\n                          onFormDataUpdated: (updatedClass) => {\r\n                            console.log(\"updated class:\", updatedClass)\r\n\r\n                            let isNewEntry = updatedClass.title != \"\"\r\n                            let isSlot = !isNewEntry\r\n\r\n                            setData(\r\n                              dataElem.map((class_) =>\r\n                                class_.key === draggable.key ? { ...class_, ...updatedClass, isSlot } : class_\r\n                              )\r\n                            )\r\n                          },\r\n                        })\r\n                      }}\r\n                    >\r\n                      {/* <SwipeableItem\r\n                        key={draggable.key}\r\n                        // item={item}\r\n                        renderUnderlayLeft={() => <UnderlayRightSide />}\r\n                        // renderUnderlayRight={() => <UnderlayLeft />}\r\n                        snapPointsLeft={[!draggable.isSlot ? 50 : 0]} // snap points for right side underlay\r\n                        snapPointsRight={[0]} // disable left side underlay\r\n                        activationThreshold={10}\r\n                      > */}\r\n                      <View style={[styles.reorderable]}>\r\n                        <Text>{draggable.title}</Text>\r\n                      </View>\r\n                      {/* </SwipeableItem> */}\r\n                    </TouchableOpacity>\r\n                  )\r\n                }}\r\n              />\r\n            )\r\n          }}\r\n          style={{ padding: 20 }}\r\n        ></FlatList>\r\n      </View>\r\n    </SafeAreaView>\r\n  )\r\n}\r\n\r\nconst UnderlayRightSide = () => {\r\n  const { close } = useSwipeableItemParams<Item>()\r\n  function openClassEditScreen(): void {}\r\n\r\n  return (\r\n    <View\r\n      style={[\r\n        styles.row,\r\n        styles.underlayLeft,\r\n        {\r\n          // alignSelf: \"center\",\r\n        },\r\n      ]}\r\n    >\r\n      <View>\r\n        <TouchableOpacity onPress={() => close()}>\r\n          <Text style={styles.text}>Del</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n\r\n  reorderable: {\r\n    height: 20,\r\n    width: \"95%\",\r\n    ...globalStyles.centered,\r\n    marginVertical: 5,\r\n  },\r\n\r\n  row: {\r\n    flexDirection: \"row\",\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: 15,\r\n  },\r\n\r\n  underlayLeft: {\r\n    flex: 1,\r\n    backgroundColor: \"lime\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n\r\n  text: {\r\n    fontWeight: \"bold\",\r\n    color: \"white\",\r\n    fontSize: 32,\r\n  },\r\n})\r\n","import { createStackNavigator } from \"@react-navigation/stack\"\r\nimport * as React from \"react\"\r\nimport ScheduleEditor from \"../screens/TestTabsScreens/ScheduleEditor\"\r\nimport { View } from \"react-native\"\r\nimport StackHeader from \"../components/StackHeader\"\r\nimport ScheduleClassForm from \"../screens/TestTabsScreens/scheduleEditorStack/ScheduleClassForm\"\r\nimport { EditorStackRoutes } from \"./EditorStackRoutes\"\r\n\r\nconst Stack = createStackNavigator()\r\n\r\nexport default function TestEditorStack() {\r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={\r\n        {\r\n          // headerShown: false,\r\n        }\r\n      }\r\n    >\r\n      <Stack.Screen\r\n        name={EditorStackRoutes.EDITOR}\r\n        component={ScheduleEditor}\r\n        options={{\r\n          header: () => <View />,\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name={EditorStackRoutes.SCHEDULE_CLASS_FORM}\r\n        component={ScheduleClassForm}\r\n        options={{\r\n          header: (props) => <StackHeader title={\"Пара\"} />,\r\n        }}\r\n      />\r\n    </Stack.Navigator>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { View, Text, StyleSheet, Button, Linking } from \"react-native\"\r\nimport OptionPickerModal from \"../../components/OptionPickerModal\"\r\nimport { globalStyles, imageIcons, palette } from \"../../styles/global\"\r\nimport { FontAwesome, Ionicons, MaterialIcons } from \"@expo/vector-icons\"\r\nimport { SafeAreaView } from \"react-native-safe-area-context\"\r\nimport AppText from \"../../shared/AppText\"\r\nimport { useNavigation } from \"@react-navigation/native\"\r\nimport { ContactsStackRoutes } from \"../../routes/ContactsStackRoutes\"\r\nimport { Image } from \"react-native-elements\"\r\nimport { isMail } from \"../../utilities/utilities\"\r\n\r\ntype ModalItem = {\r\n  icon: JSX.Element\r\n  text: string\r\n  isPhone?: boolean\r\n  isLink?: boolean\r\n  linkName?: string\r\n}\r\n\r\nexport default function ContactsModalTestScreen() {\r\n  let navigation = useNavigation()\r\n\r\n  let [corpsModalIsOpen, setCorpsModalIsOpen] = React.useState(false)\r\n  let [rectorateModalIsOpen, setRectorateModalIsOpen] = React.useState(false)\r\n  let [preparationDepartmentModalIsOpen, setPreparationDepartmentModalIsOpen] = React.useState(false)\r\n  let [\r\n    internationalAffairsAndInformationDepartmentModalIsOpen,\r\n    setInternationalAffairsAndInformationDepartmentModalIsOpen,\r\n  ] = React.useState(false)\r\n  let [admissionCommitteeModalIsOpen, setAdmissionCommitteeModalIsOpen] = React.useState(false)\r\n  let [studentCouncilModalIsOpen, setStudentCouncilModalIsOpen] = React.useState(false)\r\n  let [socialMediaModalIsOpen, setSocialMediaModalIsOpen] = React.useState(false)\r\n\r\n  let academyCorps = [\r\n    \"вул. Під Голоском, 19\",\r\n    \"вул. Підвальна, 17\",\r\n    \"вул. Личаківська, 3\",\r\n    \"вул. Коцюбинського, 21\",\r\n    \"вул. Винниченка, 12\",\r\n  ]\r\n\r\n  // Корпуси академії\r\n  let corpsModalItems = academyCorps.map((corps) => {\r\n    return {\r\n      text: corps,\r\n      icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n    }\r\n  })\r\n\r\n  // Ректорат\r\n  let rectorateModalItems: ModalItem[] = [\r\n    {\r\n      icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n      text: \"вул. Під Голоском, 19, ауд. 234\",\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n      text: \"(032) 242 23 77\",\r\n      isPhone: true,\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n      text: \"uad@uad.edu.ua\",\r\n      isLink: true,\r\n    },\r\n  ]\r\n\r\n  // Підготовче відділення\r\n  let preparationDepartmentModalItems: ModalItem[] = [\r\n    {\r\n      icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n      text: \"вул. Під Голоском, 19, ауд. 218\",\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n      text: \"(032) 242 23 78\",\r\n      isPhone: true,\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n      text: \"pv@uad.edu.ua\",\r\n      isLink: true,\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"globe\" color={palette.grayedOut} size={16} />,\r\n      text: \"http://www.uad-pv.pp.ua/\",\r\n      isLink: true,\r\n    },\r\n  ]\r\n\r\n  // Відділ міжнародних звʼязків та інформаційного забезпечення\r\n  let internationalAffairsAndInformationDepartmentModalItems: ModalItem[] = [\r\n    {\r\n      icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n      text: \"вул. Під Голоском, 19\",\r\n    },\r\n\r\n    {\r\n      icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n      text: \"(032) 259 94 21\",\r\n      isPhone: true,\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n      text: \"ird@uad.lviv.ua\",\r\n      isLink: true,\r\n    },\r\n  ]\r\n\r\n  // Приймальна комісія\r\n  let admissionsCommitteeModalItems: ModalItem[] = [\r\n    {\r\n      icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n      text: \"вул. Під Голоском, 19, каб. 417, 200\",\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n      text: \"(067) 149 14 00\",\r\n      isPhone: true,\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n      text: \"pk@uad.edu.ua\",\r\n      isLink: true,\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n      text: \"pk.uad.lviv@gmail.com\",\r\n      isLink: true,\r\n    },\r\n  ]\r\n\r\n  // Бухгалтерія\r\n  let accountingModalItems: ModalItem[] = [\r\n    {\r\n      icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n      text: \"вул. Під Голоском, 19, ауд. 213\",\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n      text: \"(032) 242 23 46\",\r\n      isPhone: true,\r\n    },\r\n  ]\r\n\r\n  // Відділ платної форми навчання\r\n  let contractEducationDepartmentModalItems: ModalItem[] = [\r\n    {\r\n      icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n      text: \"вул. Під Голоском, 19, ауд. 234а\",\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n      text: \"(032) 242 23 80\",\r\n      isPhone: true,\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n      text: \"vpn_uad@ukr.net\",\r\n      isLink: true,\r\n    },\r\n  ]\r\n\r\n  // Профком студентів\r\n  let studentUnionModalItems: ModalItem[] = [\r\n    {\r\n      icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n      text: \"вул. Під Голоском, 19, ауд. 311\",\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n      text: \"(032) 242 23 79\",\r\n      isPhone: true,\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n      text: \"(067) 67 23 173\",\r\n      isPhone: true,\r\n    },\r\n  ]\r\n\r\n  // Студентська рада\r\n  let studentCouncilModalItems: ModalItem[] = [\r\n    {\r\n      icon: <FontAwesome name=\"instagram\" color={palette.grayedOut} size={16} />,\r\n      text: \"https://www.instagram.com/uad_lviv/\",\r\n      isLink: true,\r\n      linkName: \"uad_lviv\",\r\n    },\r\n  ]\r\n\r\n  // Соц. мережі академії\r\n  let socialMediaModalItems: ModalItem[] = [\r\n    {\r\n      icon: <FontAwesome name=\"instagram\" color={palette.grayedOut} size={16} />,\r\n      text: \"https://www.instagram.com/uad_lviv/\",\r\n      isLink: true,\r\n      linkName: \"@uad_lviv\",\r\n    },\r\n    {\r\n      icon: <FontAwesome name=\"telegram\" color={palette.grayedOut} size={16} />,\r\n      text: \"https://t.me/uad_live\",\r\n      isLink: true,\r\n      linkName: \"@uad_live\",\r\n    },\r\n    {\r\n      icon: <FontAwesome name=\"youtube-play\" color={palette.grayedOut} size={16} />,\r\n      text: \"https://www.youtube.com/user/UADtelevision\",\r\n      isLink: true,\r\n      linkName: \"UADtelevision\",\r\n    },\r\n    {\r\n      icon: <FontAwesome name=\"facebook-official\" color={palette.grayedOut} size={16} />,\r\n      text: \"https://www.facebook.com/uadlv\",\r\n      isLink: true,\r\n    },\r\n    {\r\n      icon: (\r\n        <Image\r\n          source={imageIcons.tiktok}\r\n          // color={palette.grayedOut}\r\n          style={{\r\n            width: 16,\r\n            height: 18,\r\n          }}\r\n        />\r\n      ),\r\n      text: \"https://www.tiktok.com/@uad.lviv\",\r\n      isLink: true,\r\n      linkName: \"@uad.lviv\",\r\n    },\r\n  ]\r\n\r\n  const constructModalItem = (item: ModalItem, idx) => {\r\n    return (\r\n      <View\r\n        style={{\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          marginVertical: 6,\r\n        }}\r\n      >\r\n        {item.icon}\r\n        <AppText\r\n          onPress={() => {\r\n            if (item.isLink) {\r\n              if (isMail(item.text)) Linking.openURL(`mailto:${item.text}`)\r\n              else Linking.openURL(item.text)\r\n            } else if (item.isPhone) Linking.openURL(`tel:${item.text}`)\r\n          }}\r\n          style={[styles.optionText, item.isLink ? globalStyles.underlinedLink : {}]}\r\n        >\r\n          {item.linkName ? item.linkName : item.text}\r\n        </AppText>\r\n      </View>\r\n    )\r\n  }\r\n\r\n  const constructContentPresenterModal = (\r\n    headerText: string,\r\n    isOpen: boolean,\r\n    onCloseModal: () => void,\r\n    initialOptions: typeof rectorateModalItems,\r\n    displaySeparators = false\r\n  ) => {\r\n    return (\r\n      <OptionPickerModal\r\n        headerText={headerText}\r\n        isOpen={isOpen}\r\n        hasSearchBar={false}\r\n        displaySeparators={displaySeparators}\r\n        closeModal={onCloseModal}\r\n        initialOptions={initialOptions}\r\n        renderItem={constructModalItem}\r\n        isOptionSelectable={false}\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <View>\r\n        <Button title=\"Корпуси академії\" onPress={() => setCorpsModalIsOpen(true)} />\r\n        {constructContentPresenterModal(\r\n          \"Корпуси академії\",\r\n          corpsModalIsOpen,\r\n          () => setCorpsModalIsOpen(false),\r\n          corpsModalItems,\r\n          true\r\n        )}\r\n      </View>\r\n      <View>\r\n        <Button title=\"Ректорат\" onPress={() => setRectorateModalIsOpen(true)} />\r\n        {constructContentPresenterModal(\r\n          \"Ректорат\",\r\n          rectorateModalIsOpen,\r\n          () => setRectorateModalIsOpen(false),\r\n          rectorateModalItems\r\n        )}\r\n      </View>\r\n\r\n      <View>\r\n        <Button title=\"Підготовче відділення\" onPress={() => setPreparationDepartmentModalIsOpen(true)} />\r\n        {constructContentPresenterModal(\r\n          \"Підготовче відділення\",\r\n          preparationDepartmentModalIsOpen,\r\n          () => setPreparationDepartmentModalIsOpen(false),\r\n          preparationDepartmentModalItems\r\n        )}\r\n      </View>\r\n      <View>\r\n        {/* push Faculties Screen on top of stack */}\r\n        <Button title=\"Факультети академії\" onPress={() => navigation.push(ContactsStackRoutes.FACULTIES)} />\r\n      </View>\r\n\r\n      <View>\r\n        <Button\r\n          title=\"Відділ міжнародних звʼязків та інформаційного забезпечення\"\r\n          onPress={() => setInternationalAffairsAndInformationDepartmentModalIsOpen(true)}\r\n        />\r\n        {constructContentPresenterModal(\r\n          \"Відділ міжнародних звʼязків та інформаційного забезпечення\",\r\n          internationalAffairsAndInformationDepartmentModalIsOpen,\r\n          () => setInternationalAffairsAndInformationDepartmentModalIsOpen(false),\r\n          internationalAffairsAndInformationDepartmentModalItems\r\n        )}\r\n      </View>\r\n      <View>\r\n        <Button title=\"Приймальна комісія\" onPress={() => setAdmissionCommitteeModalIsOpen(true)} />\r\n        {constructContentPresenterModal(\r\n          \"Приймальна комісія\",\r\n          admissionCommitteeModalIsOpen,\r\n          () => setAdmissionCommitteeModalIsOpen(false),\r\n          admissionsCommitteeModalItems\r\n        )}\r\n      </View>\r\n\r\n      <View>\r\n        <Button title=\"Студентська рада\" onPress={() => setStudentCouncilModalIsOpen(true)} />\r\n        {constructContentPresenterModal(\r\n          \"Студентська рада\",\r\n          studentCouncilModalIsOpen,\r\n          () => setStudentCouncilModalIsOpen(false),\r\n          studentCouncilModalItems\r\n        )}\r\n      </View>\r\n\r\n      <View>\r\n        <Button title=\"Соц. мережі академії\" onPress={() => setSocialMediaModalIsOpen(true)} />\r\n        {constructContentPresenterModal(\r\n          \"Соц. мережі академії\",\r\n          socialMediaModalIsOpen,\r\n          () => setSocialMediaModalIsOpen(false),\r\n          socialMediaModalItems\r\n        )}\r\n      </View>\r\n    </SafeAreaView>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    margin: 20,\r\n    justifyContent: \"space-around\",\r\n  },\r\n  optionText: {\r\n    marginLeft: 10,\r\n    fontSize: 16,\r\n  },\r\n})\r\n","import * as React from \"react\"\r\n\r\nimport { createStackNavigator } from \"@react-navigation/stack\"\r\nimport FacultiesTestScreen from \"../screens/TestTabsScreens/FacultiesTestScreen\"\r\nimport ContactsModalTestScreen from \"../screens/TestTabsScreens/ContactsModalsTestScreen\"\r\nimport { View } from \"react-native\"\r\nimport { ContactsStackRoutes } from \"./ContactsStackRoutes\"\r\nimport StackHeader from \"../components/StackHeader\"\r\n\r\nconst Stack = createStackNavigator()\r\n\r\nexport default function ContactsTestStack() {\r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={\r\n        {\r\n          // headerShown: false,\r\n        }\r\n      }\r\n    >\r\n      <Stack.Screen\r\n        name={ContactsStackRoutes.CONTACTS_MENU}\r\n        component={ContactsModalTestScreen}\r\n        options={{\r\n          header: () => <View />,\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name={ContactsStackRoutes.FACULTIES}\r\n        component={FacultiesTestScreen}\r\n        options={{\r\n          header: (props) => <StackHeader title={\"Факультети академії\"} />,\r\n        }}\r\n      />\r\n    </Stack.Navigator>\r\n  )\r\n}\r\n","import * as React from \"react\"\r\nimport { PixelRatio, Text, View, useWindowDimensions } from \"react-native\"\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\"\r\nimport { Ionicons } from \"@expo/vector-icons\"\r\nimport NotificationTestsScreen from \"../screens/TestTabsScreens/NotificationTests\"\r\nimport ScheduledNotificationsScreen from \"../screens/TestTabsScreens/ScheduledNotificationsScreen\"\r\nimport InroductoryCarouselScreen from \"../screens/IntroductoryCarousel/IntroductoryCarousel\"\r\nimport FileSystemScreen from \"../screens/TestTabsScreens/FileSystemScreen\"\r\nimport TestEditorStack from \"./testEditorStack\"\r\nimport ContactsTestStack from \"./ContactsTestStack\"\r\n\r\nfunction DeviceInfoScreen() {\r\n  const { height, width } = useWindowDimensions()\r\n  const aspectRatio = height / width\r\n  let pixelRatio = PixelRatio.get()\r\n  let dpi = 160 * pixelRatio\r\n\r\n  return (\r\n    <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\r\n      <Text>Інформація про пристрій</Text>\r\n      <Text>Ширина вікна: {width}</Text>\r\n      <Text>Висота вікна: {height}</Text>\r\n      <Text>Pixel ratio: {pixelRatio}</Text>\r\n      <Text>Aspect ratio: {aspectRatio}</Text>\r\n      <Text>DPI: {dpi}</Text>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst Tab = createBottomTabNavigator()\r\n\r\nexport default function TestTabs() {\r\n  return (\r\n    <Tab.Navigator\r\n      screenOptions={{\r\n        headerShown: false,\r\n        tabBarStyle: {\r\n          // display: \"none\",\r\n        },\r\n      }}\r\n      initialRouteName=\"Модальні вікна\"\r\n    >\r\n      <Tab.Screen\r\n        name=\"Заплановані Сповіщення\"\r\n        component={ScheduledNotificationsScreen}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => <Ionicons name=\"notifications-circle\" color={color} size={size} />,\r\n        }}\r\n      />\r\n\r\n      <Tab.Screen\r\n        name=\"Сповіщення\"\r\n        component={NotificationTestsScreen}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => <Ionicons name=\"notifications\" color={color} size={size} />,\r\n        }}\r\n      />\r\n\r\n      <Tab.Screen\r\n        name=\"Вступне Вікно\"\r\n        component={InroductoryCarouselScreen}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => <Ionicons name=\"enter\" color={color} size={size} />,\r\n        }}\r\n      />\r\n\r\n      <Tab.Screen\r\n        name=\"Файлова Система\"\r\n        component={FileSystemScreen}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => <Ionicons name=\"folder\" color={color} size={size} />,\r\n        }}\r\n      />\r\n\r\n      <Tab.Screen\r\n        name=\"Редактор\"\r\n        component={TestEditorStack}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => <Ionicons name=\"options\" color={color} size={size} />,\r\n        }}\r\n      />\r\n\r\n      <Tab.Screen\r\n        name=\"Модальні вікна\"\r\n        component={ContactsTestStack}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => <Ionicons name=\"md-file-tray-stacked\" color={color} size={size} />,\r\n        }}\r\n      />\r\n\r\n      <Tab.Screen\r\n        name=\"Інше\"\r\n        component={DeviceInfoScreen}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => <Ionicons name=\"ellipsis-horizontal\" color={color} size={size} />,\r\n        }}\r\n      />\r\n    </Tab.Navigator>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { StyleSheet, View, Text, ActivityIndicator } from \"react-native\"\r\nimport FontAwesomeIcon from \"react-native-vector-icons/FontAwesome\"\r\nimport EntypoIcon from \"react-native-vector-icons/Entypo\"\r\nimport { ScrollView } from \"react-native\"\r\nimport CustomSwitch from \"../shared/Switch\"\r\nimport SettingsService, { DisplayEmptyDaysMode, DisplayTeacherMode } from \"../services/SettingsService\"\r\nimport { globalStyles, palette } from \"../styles/global\"\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport OptionPickerModal from \"../components/OptionPickerModal\"\r\nimport ScheduleNotificationsService from \"../services/ScheduleNotificationsService\"\r\nimport ScheduleModel from \"../models/ScheduleModel\"\r\nimport ScheduleLoaderService from \"../services/ScheduleLoaderService\"\r\nimport { ensureExtension, ensureNoExtension, isRunningInBrowser } from \"../utilities/utilities\"\r\nimport AppText from \"../shared/AppText\"\r\nimport { Ionicons } from \"@expo/vector-icons\"\r\n\r\n// TODO: Fix settings page visually spazzing out on mount\r\n// it's not the switches\r\n// it's not the effect that saves updated settings to disk\r\n// it's not notification events updating state\r\n// it's not other setters\r\n// this is something that only happens when the main content is rendered\r\n// removing activity indicator as alternative layout breaks settings service integration and makes schedule picker fail to load options\r\n// hell. Let's start with simply refactoring the layout into components\r\n\r\nexport default function Settings() {\r\n  let [schedulePickerData, setSchedulePickerData] = useState<string[]>([])\r\n\r\n  const settingsServiceRef = React.useRef<SettingsService | null>(null)\r\n\r\n  // Note: Update place 0\r\n  let [settingsValues, setSettingsValues] = useState({\r\n    selectedSchedule: \"\",\r\n    displayRoomNumber: false,\r\n    notifyBeforeClass: false,\r\n    displayEmptyDays: \"...\",\r\n    displayTeacherName: \"...\",\r\n    notifyBeforeClassOffsetMinutes: 0,\r\n  })\r\n\r\n  let [schedulePickerModalVisible, setSchedulePickerModalVisible] = useState(false)\r\n  let [schedulePickerModalDisabled, setSchedulePickerModalDisabled] = useState(false)\r\n\r\n  let [emptyDayDisplayModalVisible, setEmptyDayDisplayModalVisible] = useState(false)\r\n\r\n  let [displayTeacherModeModalVisible, setDisplayTeacherModeModalVisible] = useState(false)\r\n  let [notifyBeforehandModalVisible, setNotifyBeforehandModalVisible] = useState(false)\r\n\r\n  const [isReady, setIsReady] = useState(false)\r\n\r\n  useEffect(() => {\r\n    async function onMount() {\r\n      const settingsService = await SettingsService.GetInstance()\r\n      settingsServiceRef.current = settingsService\r\n\r\n      // Note: Update place 1\r\n\r\n      let {\r\n        currentScheduleName,\r\n        displayRoomNumber,\r\n        notifyBeforeClass,\r\n        displayEmptyDays,\r\n        displayTeacherName,\r\n        notifyBeforeClassOffsetMinutes,\r\n      } = settingsServiceRef.current\r\n\r\n      setSettingsValues({\r\n        selectedSchedule: ensureNoExtension(currentScheduleName, \".json\"),\r\n        displayRoomNumber,\r\n        notifyBeforeClass,\r\n        displayEmptyDays,\r\n        displayTeacherName,\r\n        notifyBeforeClassOffsetMinutes,\r\n      })\r\n\r\n      console.log(\"[settings screen init] settingsService.currentSchedule:\", settingsService.currentScheduleName)\r\n\r\n      // disable schedule picker modal when notifications are being configured\r\n      const notifService = await ScheduleNotificationsService.GetInstance()\r\n\r\n      notifService.onConfigureNotificationsForScheduleStart = () => {\r\n        setSchedulePickerModalDisabled(true)\r\n        // ToastAndroid.show(\"Configuring notifications...\", ToastAndroid.SHORT)\r\n      }\r\n      notifService.onConfigureNotificationsForScheduleEnd = () => {\r\n        setSchedulePickerModalDisabled(false)\r\n\r\n        // ToastAndroid.show(\"Notifications have been configured\", ToastAndroid.SHORT)\r\n      }\r\n\r\n      let scheduleLodaderInstance = await ScheduleLoaderService.GetInstance()\r\n\r\n      let schedulePickerData = scheduleLodaderInstance.scheduleFiles.map((f) => ensureNoExtension(f.filename, \".json\"))\r\n      setSchedulePickerData(schedulePickerData)\r\n\r\n      setIsReady(true)\r\n    }\r\n    onMount()\r\n  }, [])\r\n\r\n  // write settings to disk on each update to make sure they aren't lost\r\n  useEffect(() => {\r\n    if (!isReady) return\r\n\r\n    // Note: Update place 2\r\n    let {\r\n      selectedSchedule,\r\n      displayRoomNumber,\r\n      notifyBeforeClass,\r\n      displayEmptyDays,\r\n      displayTeacherName,\r\n      notifyBeforeClassOffsetMinutes,\r\n    } = settingsValues\r\n\r\n    // TODO: Refactor this\r\n    let settingsService = settingsServiceRef.current!\r\n    settingsService.currentScheduleName = ensureExtension(selectedSchedule, \".json\")\r\n    settingsService.displayRoomNumber = displayRoomNumber\r\n    settingsService.notifyBeforeClass = notifyBeforeClass\r\n    settingsService.displayEmptyDays = displayEmptyDays as DisplayEmptyDaysMode\r\n    settingsService.displayTeacherName = displayTeacherName as DisplayTeacherMode\r\n    settingsService.notifyBeforeClassOffsetMinutes = notifyBeforeClassOffsetMinutes\r\n\r\n    settingsService.saveToStorage()\r\n  }, [settingsValues])\r\n  async function toggleNotifs(enable: boolean) {\r\n    let scheduleNotifService = await ScheduleNotificationsService.GetInstance()\r\n    if (enable) {\r\n      // TODO: Refactor. Find a way to reference currently selected schedule in ScheduleScreen\r\n      let schedule = new ScheduleModel(\"foo\", \"bar\", 99)\r\n      schedule.getScheduleFromScheduleLoader(settingsServiceRef.current!.currentScheduleName)\r\n      scheduleNotifService.configureNotificationsForSchedule(schedule)\r\n    } else {\r\n      await scheduleNotifService.cancelAllScheduledNotificationsAsync()\r\n    }\r\n  }\r\n\r\n  function constructCategoryHeader(categoryName: string, categoryIcon: JSX.Element) {\r\n    return (\r\n      <View style={styles.categoryHeader}>\r\n        {categoryIcon}\r\n        <AppText style={styles.settingsSectionName}>{categoryName}</AppText>\r\n      </View>\r\n    )\r\n  }\r\n\r\n  function constructSettingsRow(settingDescription: string, changeSettingComponent: JSX.Element) {\r\n    return (\r\n      <View style={styles.settingRow}>\r\n        <AppText style={styles.settingName}>{settingDescription}</AppText>\r\n        {changeSettingComponent}\r\n      </View>\r\n    )\r\n  }\r\n\r\n  if (!isReady) {\r\n    return (\r\n      <View\r\n        style={[\r\n          { flex: 1, justifyContent: \"center\", alignItems: \"center\" },\r\n          styles.loadingIndicatorOverlay,\r\n          isReady ? globalStyles.noDisplay : {},\r\n        ]}\r\n      >\r\n        <ActivityIndicator size=\"large\" color={palette.navigationBackground} />\r\n      </View>\r\n    )\r\n  }\r\n\r\n  // setTimeout(() => {\r\n  //   setIsReady(true)\r\n  // }, 500)\r\n\r\n  let notificationsSection = !isRunningInBrowser() ? (\r\n    <View>\r\n      {constructCategoryHeader(\r\n        \"Сповіщення\",\r\n        <FontAwesomeIcon name=\"bell-o\" style={styles.settingsSectionIcon}></FontAwesomeIcon>\r\n      )}\r\n\r\n      <View style={styles.settingsCategory}>\r\n        {constructSettingsRow(\r\n          \"Нагадувати про початок пари\",\r\n          <CustomSwitch\r\n            onValueChange={(nv) => {\r\n              setSettingsValues({\r\n                ...settingsValues,\r\n                notifyBeforeClass: nv,\r\n              })\r\n\r\n              toggleNotifs(nv)\r\n            }}\r\n            initVal={settingsValues.notifyBeforeClass}\r\n            disabled={false}\r\n          />\r\n        )}\r\n        <View style={styles.separator}></View>\r\n\r\n        {constructSettingsRow(\r\n          \"Сповіщати заздалегідь\",\r\n          <View>\r\n            <TouchableOpacity onPress={() => setNotifyBeforehandModalVisible(true)}>\r\n              <View style={styles.settingValueContainer}>\r\n                <AppText style={styles.settingValue}>{settingsValues.notifyBeforeClassOffsetMinutes + \" хв.\"}</AppText>\r\n                <EntypoIcon name=\"chevron-small-right\" style={styles.grayIcon}></EntypoIcon>\r\n              </View>\r\n            </TouchableOpacity>\r\n\r\n            <OptionPickerModal\r\n              hasSearchBar={false}\r\n              isOpen={notifyBeforehandModalVisible}\r\n              initialOptions={[0, 5, 10, 15, 20].map((n) => n + \" хв.\")}\r\n              initialSelectedOption={settingsValues.notifyBeforeClassOffsetMinutes + \" хв.\"}\r\n              closeModal={() => setNotifyBeforehandModalVisible(false)}\r\n              onSelected={(selected) => {\r\n                let selectedInt = parseInt(selected)\r\n                setSettingsValues({\r\n                  ...settingsValues,\r\n                  notifyBeforeClassOffsetMinutes: selectedInt,\r\n                })\r\n\r\n                toggleNotifs(settingsValues.notifyBeforeClass)\r\n              }}\r\n            />\r\n          </View>\r\n        )}\r\n\r\n        <View style={styles.separator}></View>\r\n\r\n        {constructSettingsRow(\r\n          \"Звук, місце появи сповіщення та ін.\",\r\n          <View style={[styles.settingValueContainer, { marginRight: 3 }]}>\r\n            {/* TODO: Unhardcode margin right */}\r\n\r\n            <TouchableOpacity onPress={settingsServiceRef.current?.openAndroidSystemSettingsForNotifications}>\r\n              <Ionicons name=\"open\" size={14} color={palette.navigationBackground} />\r\n            </TouchableOpacity>\r\n          </View>\r\n        )}\r\n      </View>\r\n    </View>\r\n  ) : null\r\n\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <ScrollView style={styles.scrollViewDirect} contentContainerStyle={styles.scrollViewContentContainer}>\r\n        <View style={styles.pageBackground}>\r\n          {notificationsSection}\r\n\r\n          {constructCategoryHeader(\r\n            \"Розклад\",\r\n            <FontAwesomeIcon name=\"calendar-o\" style={styles.settingsSectionIcon}></FontAwesomeIcon>\r\n          )}\r\n          <View style={styles.settingsCategory}>\r\n            <View>\r\n              <View>\r\n                <View style={styles.settingRow}>\r\n                  <AppText style={styles.settingName}>Мій розклад</AppText>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => {\r\n                      console.log(\"selected schedule before toggling modal:\", settingsValues.selectedSchedule)\r\n                      setSchedulePickerModalVisible(true)\r\n                    }}\r\n                    disabled={schedulePickerModalDisabled}\r\n                    style={styles.centeredTextAndIcon}\r\n                  >\r\n                    {/* TODO: Remove hardcoded margins. Those were set to make activity indicator and actual content to have same size */}\r\n\r\n                    {schedulePickerModalDisabled ? (\r\n                      <ActivityIndicator\r\n                        style={{ marginRight: 10, marginVertical: 3.5 }}\r\n                        size=\"small\"\r\n                        color={palette.navigationBackground}\r\n                      />\r\n                    ) : (\r\n                      <View\r\n                        style={{\r\n                          flexDirection: \"row\",\r\n                          alignItems: \"center\",\r\n                        }}\r\n                      >\r\n                        <AppText style={styles.settingValue}>\r\n                          {ensureNoExtension(settingsValues.selectedSchedule, \".json\")}\r\n                        </AppText>\r\n                        <EntypoIcon name=\"chevron-small-right\" style={styles.grayIcon}></EntypoIcon>\r\n                      </View>\r\n                    )}\r\n\r\n                    {/* TODO: remove the temp fix. The issue is that I don't know why updated prop doesn't rerender the modal */}\r\n                    {settingsValues.selectedSchedule != \"\" ? (\r\n                      <OptionPickerModal\r\n                        headerText=\"Вибери свою групу\"\r\n                        isOpen={schedulePickerModalVisible}\r\n                        initialOptions={schedulePickerData}\r\n                        initialSelectedOption={settingsValues.selectedSchedule}\r\n                        closeModal={() => setSchedulePickerModalVisible(false)}\r\n                        onSelected={(selected) => {\r\n                          setSettingsValues({\r\n                            ...settingsValues,\r\n                            selectedSchedule: ensureExtension(selected, \".json\"),\r\n                          })\r\n                        }}\r\n                      />\r\n                    ) : (\r\n                      <View style={globalStyles.noDisplay} />\r\n                    )}\r\n                  </TouchableOpacity>\r\n                </View>\r\n\r\n                <View style={styles.separator} />\r\n\r\n                {constructSettingsRow(\r\n                  \"Відображати номер аудиторії\",\r\n                  <CustomSwitch\r\n                    initVal={settingsValues.displayRoomNumber}\r\n                    onValueChange={(nv) => {\r\n                      setSettingsValues({\r\n                        ...settingsValues,\r\n                        displayRoomNumber: nv,\r\n                      })\r\n                    }}\r\n                  />\r\n                )}\r\n\r\n                <View style={styles.separator} />\r\n\r\n                {constructSettingsRow(\r\n                  \"Відображати викладача\",\r\n                  <View>\r\n                    <TouchableOpacity\r\n                      onPress={() => setDisplayTeacherModeModalVisible(true)}\r\n                      style={styles.centeredTextAndIcon}\r\n                    >\r\n                      <AppText style={styles.settingValue}>{settingsValues.displayTeacherName}</AppText>\r\n                      <EntypoIcon name=\"chevron-small-right\" style={styles.grayIcon}></EntypoIcon>\r\n                    </TouchableOpacity>\r\n                    <OptionPickerModal\r\n                      hasSearchBar={false}\r\n                      isOpen={displayTeacherModeModalVisible}\r\n                      initialOptions={[\r\n                        DisplayTeacherMode.Full,\r\n                        DisplayTeacherMode.SurnameAndInitials,\r\n                        DisplayTeacherMode.Hide,\r\n                      ]}\r\n                      initialSelectedOption={settingsValues.displayTeacherName}\r\n                      closeModal={() => setDisplayTeacherModeModalVisible(false)}\r\n                      onSelected={(selected) => {\r\n                        setSettingsValues({\r\n                          ...settingsValues,\r\n                          displayTeacherName: selected,\r\n                        })\r\n                      }}\r\n                    />\r\n                  </View>\r\n                )}\r\n\r\n                <View style={styles.separator}></View>\r\n\r\n                {constructSettingsRow(\r\n                  \"Порожні дні\",\r\n                  <View>\r\n                    <TouchableOpacity\r\n                      onPress={() => setEmptyDayDisplayModalVisible(true)}\r\n                      style={styles.centeredTextAndIcon}\r\n                    >\r\n                      <AppText style={styles.settingValue}>{settingsValues.displayEmptyDays}</AppText>\r\n                      <EntypoIcon name=\"chevron-small-right\" style={styles.grayIcon}></EntypoIcon>\r\n                    </TouchableOpacity>\r\n                    <OptionPickerModal\r\n                      hasSearchBar={false}\r\n                      isOpen={emptyDayDisplayModalVisible}\r\n                      initialOptions={[\r\n                        DisplayEmptyDaysMode.Display,\r\n                        DisplayEmptyDaysMode.Darken,\r\n                        DisplayEmptyDaysMode.Hide,\r\n                      ]}\r\n                      initialSelectedOption={settingsValues.displayEmptyDays}\r\n                      closeModal={() => setEmptyDayDisplayModalVisible(false)}\r\n                      onSelected={(selected) => {\r\n                        setSettingsValues({\r\n                          ...settingsValues,\r\n                          displayEmptyDays: selected,\r\n                        })\r\n                      }}\r\n                    />\r\n                  </View>\r\n                )}\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </ScrollView>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport const styles = StyleSheet.create({\r\n  scrollViewContentContainer: {\r\n    // backgroundColor: \"green\",\r\n  },\r\n\r\n  loadingIndicatorOverlay: {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    backgroundColor: palette.background,\r\n\r\n    zIndex: 9999,\r\n  },\r\n\r\n  scrollViewDirect: {\r\n    ...globalStyles.screen,\r\n    paddingBottom: 24,\r\n  },\r\n\r\n  pageBackground: {\r\n    // minHeight: \"100%\",\r\n  },\r\n\r\n  settingValueContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  categoryHeader: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginTop: 24,\r\n    marginLeft: 24,\r\n  },\r\n  settingsSectionName: {\r\n    fontFamily: \"raleway-600\",\r\n    color: \"rgba(90,90,90,1)\",\r\n    fontSize: 14,\r\n\r\n    marginLeft: 6,\r\n  },\r\n\r\n  settingsCategory: {\r\n    padding: 10,\r\n    paddingBottom: 5,\r\n    margin: 11,\r\n\r\n    backgroundColor: \"rgba(255,255,255,1)\",\r\n    borderRadius: 9,\r\n  },\r\n\r\n  separator: {\r\n    width: \"100%\",\r\n    height: 1,\r\n    borderWidth: 0,\r\n    borderTopWidth: 1,\r\n    borderColor: \"rgba(242,242,242,1)\",\r\n  },\r\n\r\n  centeredTextAndIcon: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  settingName: {\r\n    fontFamily: \"raleway-500\",\r\n    color: \"rgba(82,82,82,1)\",\r\n    fontSize: 15,\r\n  },\r\n  settingValue: {\r\n    fontFamily: \"montserrat-medium\",\r\n    color: \"rgba(136,136,136,1)\",\r\n    height: 17,\r\n    textAlign: \"right\",\r\n    fontSize: 12,\r\n  },\r\n  grayIcon: {\r\n    ...globalStyles.grayIcon,\r\n  },\r\n\r\n  settingsSectionIcon: {\r\n    color: \"rgba(90,90,90,1)\",\r\n    fontSize: 15,\r\n  },\r\n  settingRow: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n\r\n    marginVertical: 10,\r\n  },\r\n})\r\n","import React from \"react\"\r\nimport { View, Image, StyleSheet, TouchableOpacity, Linking } from \"react-native\"\r\nimport { globalStyles, images, palette, teamMemberImages } from \"../styles/global\"\r\nimport { FontAwesome5, Ionicons } from \"@expo/vector-icons\"\r\nimport AppText from \"../shared/AppText\"\r\nimport { ScrollView } from \"react-native-gesture-handler\"\r\nimport { useNavigation } from \"@react-navigation/native\"\r\nimport { DrawerRoutes } from \"../routes/DrawerRoutes\"\r\n\r\nexport default function AboutScreen() {\r\n  const appVersion = \"1.0.2\"\r\n  const navigation = useNavigation()\r\n\r\n  return (\r\n    <ScrollView style={globalStyles.screen}>\r\n      <View style={styles.card}>\r\n        <View style={[styles.row]}>\r\n          <AppText style={{ color: \"#333333\", letterSpacing: 0 }}>Перший в історії УАД</AppText>\r\n          {/* <SvgUri source={images.uad_logo_text} width=\"200\" height={\"200\"} /> */}\r\n          <Image\r\n            style={{\r\n              width: 73,\r\n              height: 34,\r\n              resizeMode: \"contain\",\r\n\r\n              // backgroundColor: \"red\",\r\n            }}\r\n            source={images.uad_logo_text_not_vector_hires}\r\n          />\r\n        </View>\r\n        <View style={[styles.row, { alignItems: \"flex-end\", marginTop: 45 }]}>\r\n          <AppText style={styles.header}>Інтерактивний {\"\\n\"}розклад</AppText>\r\n          <AppText\r\n            style={{\r\n              color: palette.textOnBackground,\r\n              fontStyle: \"italic\",\r\n              fontSize: 10,\r\n              letterSpacing: 0,\r\n            }}\r\n          >\r\n            і не тільки\r\n          </AppText>\r\n        </View>\r\n      </View>\r\n      <View style={[globalStyles.centered]}>\r\n        <View\r\n          style={[\r\n            styles.card,\r\n            globalStyles.centered,\r\n\r\n            {\r\n              flexDirection: \"row\",\r\n              // justifyContent: \"space-between\",\r\n              width: 110 * 2 + 20,\r\n            },\r\n          ]}\r\n        >\r\n          <TouchableOpacity\r\n            style={[\r\n              {\r\n                width: 110,\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            onPress={() => {\r\n              navigation.navigate(DrawerRoutes.VIEWER)\r\n            }}\r\n          >\r\n            <Ionicons name=\"calendar\" color={palette.textOnBackground} size={48} />\r\n            <AppText style={styles.tileText}>Розклад</AppText>\r\n          </TouchableOpacity>\r\n\r\n          <View\r\n            style={[\r\n              {\r\n                justifyContent: \"center\",\r\n                alignSelf: \"center\",\r\n              },\r\n            ]}\r\n          >\r\n            <Ionicons name=\"add-sharp\" color={palette.textOnBackground} size={32} />\r\n          </View>\r\n\r\n          <TouchableOpacity\r\n            style={[\r\n              {\r\n                alignItems: \"center\",\r\n                width: 110,\r\n              },\r\n            ]}\r\n            onPress={() => {\r\n              navigation.navigate(DrawerRoutes.EDITOR)\r\n            }}\r\n          >\r\n            <Ionicons name=\"options\" color={palette.textOnBackground} size={48} />\r\n            <AppText style={styles.tileText}>Редактор</AppText>\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            style={[styles.card, styles.tile]}\r\n            onPress={() => {\r\n              navigation.navigate(DrawerRoutes.REGLAMENT)\r\n            }}\r\n          >\r\n            <Ionicons name=\"time-sharp\" color={palette.textOnBackground} size={48} />\r\n            <AppText style={styles.tileText}>Регламент</AppText>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity\r\n            style={[styles.card, styles.tile]}\r\n            onPress={() => {\r\n              navigation.navigate(DrawerRoutes.TEACHERS)\r\n            }}\r\n          >\r\n            <FontAwesome5 name=\"user-graduate\" color={palette.textOnBackground} size={48} />\r\n            <AppText style={styles.tileText}>Викладачі</AppText>\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            style={[styles.card, styles.tile]}\r\n            onPress={() => {\r\n              navigation.navigate(DrawerRoutes.CONTACTS)\r\n            }}\r\n          >\r\n            <Ionicons name=\"call\" color={palette.textOnBackground} size={48} />\r\n            <AppText style={styles.tileText}>Контакти</AppText>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity\r\n            style={[styles.card, styles.tile]}\r\n            onPress={() => {\r\n              navigation.navigate(DrawerRoutes.NEWS)\r\n            }}\r\n          >\r\n            <Ionicons name=\"chatbox-ellipses\" color={palette.textOnBackground} size={48} />\r\n            <AppText style={styles.tileText}>Новини</AppText>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n\r\n      <View style={[styles.card]}>\r\n        <AppText style={[styles.teamSectionHeader]}>Команда проекту</AppText>\r\n        <View style={[styles.tilesContainer]}>\r\n          <View style={[styles.row]}>\r\n            <View style={[styles.teamMemberTile]}>\r\n              {/* image container */}\r\n              <View style={styles.teamMemberImageWrapper}>\r\n                <Image style={styles.teamMemberImage} source={teamMemberImages.senchyk_andrii} />\r\n              </View>\r\n              {/* team member description */}\r\n              <View style={styles.teamMemberDescription}>\r\n                <AppText style={[styles.teamMemberName, styles.regularLetterSpacing]}>Сенчик Андрій</AppText>\r\n                <AppText style={[styles.teamMemberDetails]}>Програмування{\"\\n\"}</AppText>\r\n              </View>\r\n            </View>\r\n\r\n            <View style={[styles.teamMemberTile]}>\r\n              {/* image container */}\r\n              <View style={styles.teamMemberImageWrapper}>\r\n                <Image style={styles.teamMemberImage} source={teamMemberImages.zakharova_zarina} />\r\n              </View>\r\n              {/* team member description */}\r\n              <View style={styles.teamMemberDescription}>\r\n                <AppText style={[styles.teamMemberName, styles.regularLetterSpacing]}>Захарова Заріна</AppText>\r\n                <AppText style={[styles.teamMemberDetails]}>\r\n                  Керування проектом{\"\\n\"}\r\n                  Дизайн\r\n                </AppText>\r\n              </View>\r\n            </View>\r\n          </View>\r\n          <View\r\n            style={[\r\n              styles.row,\r\n              {\r\n                marginTop: 40,\r\n              },\r\n            ]}\r\n          >\r\n            <View style={[styles.teamMemberTile]}>\r\n              {/* image container */}\r\n              <View style={styles.teamMemberImageWrapper}>\r\n                <Image style={styles.teamMemberImage} source={teamMemberImages.shepita_julia} />\r\n              </View>\r\n              {/* team member description */}\r\n              <View style={styles.teamMemberDescription}>\r\n                <AppText style={[styles.teamMemberName, styles.regularLetterSpacing]}>Шепіта Юлія</AppText>\r\n                <AppText style={[styles.teamMemberDetails]}>Робота з контентом</AppText>\r\n              </View>\r\n            </View>\r\n\r\n            <View style={[styles.teamMemberTile]}>\r\n              {/* image container */}\r\n              <View style={styles.teamMemberImageWrapper}>\r\n                <Image style={styles.teamMemberImage} source={teamMemberImages.ivanov_mykhailo} />\r\n              </View>\r\n              {/* team member description */}\r\n              <View style={styles.teamMemberDescription}>\r\n                <AppText style={[styles.teamMemberName, styles.regularLetterSpacing]}>Іванов Михайло</AppText>\r\n                <AppText style={[styles.teamMemberDetails]}>Тестування</AppText>\r\n              </View>\r\n            </View>\r\n          </View>\r\n          <View>\r\n            <AppText\r\n              style={{\r\n                fontFamily: \"montserrat-600\",\r\n                fontSize: 16,\r\n                marginVertical: 10,\r\n                marginTop: 25,\r\n                alignSelf: \"center\",\r\n              }}\r\n            >\r\n              Бета-тестувальники\r\n            </AppText>\r\n\r\n            <AppText style={styles.testerName}>Іваськів Роман</AppText>\r\n            <AppText style={styles.testerName}>Беницький Степан</AppText>\r\n            <AppText style={styles.testerName}>Астафурова Наталя</AppText>\r\n            <AppText style={styles.testerName}>Цюпа Вікторія</AppText>\r\n            <AppText style={styles.testerName}>Ступак Марко</AppText>\r\n          </View>\r\n        </View>\r\n      </View>\r\n\r\n      <View style={[styles.card]}>\r\n        <AppText style={[styles.teamSectionHeader, { marginBottom: 10 }]}>Зворотній зв'язок</AppText>\r\n        <AppText style={[{ fontSize: 13, fontFamily: \"montserrat-600\", marginBottom: 5 }]}>\r\n          Виникли запитання або ідеї як покращити наш застосунок? Напиши нам!\r\n        </AppText>\r\n        <View style={[globalStyles.centered, { flexDirection: \"row\" }]}>\r\n          <Ionicons name=\"mail\" color={palette.navigationBackground} size={19} style={{ marginRight: 5 }} />\r\n          <AppText\r\n            onPress={() => {\r\n              Linking.openURL(\"mailto:schedule.uad@gmail.com\")\r\n            }}\r\n            style={styles.contactsEmail}\r\n          >\r\n            schedule.uad@gmail.com\r\n          </AppText>\r\n        </View>\r\n      </View>\r\n\r\n      <View style={[styles.card]}>\r\n        <AppText style={[styles.teamSectionHeader, { marginBottom: 10 }]}>Розвиток проекту</AppText>\r\n        <AppText style={[{ fontSize: 13, fontFamily: \"montserrat-600\", marginBottom: 5 }]}>\r\n          Якщо у тебе є досвід роботи з React Native та бажаєш розвивати проект, залишаємо посилання на код застосунку:\r\n        </AppText>\r\n        <View style={[globalStyles.centered, { flexDirection: \"row\", alignItems: \"center\" }]}>\r\n          <Ionicons name=\"logo-github\" color={palette.navigationBackground} size={22} style={{ marginRight: 5 }} />\r\n          <AppText\r\n            onPress={() => {\r\n              Linking.openURL(\"https://github.com/Seagullie/InteractiveScheduleUAD\")\r\n            }}\r\n            style={[styles.contactsEmail, { textDecorationLine: \"none\", marginBottom: 0 }]}\r\n          >\r\n            Репозиторій на GitHub\r\n          </AppText>\r\n        </View>\r\n      </View>\r\n\r\n      <View style={[styles.copyrightContainer]}>\r\n        <AppText style={[{ textAlign: \"center\", fontFamily: \"century-gothic\" }]}>\r\n          Авторські права 2023 © Українська Академія Друкарства. Усі права захищені\r\n        </AppText>\r\n      </View>\r\n\r\n      <View style={[styles.appVersionContainer]}>\r\n        <AppText style={[{ fontFamily: \"century-gothic\", color: \"#5A5A5A\" }]}>{appVersion} </AppText>\r\n      </View>\r\n    </ScrollView>\r\n  )\r\n}\r\n\r\nconst teamMemberImageWidth = 110\r\n\r\nconst styles = StyleSheet.create({\r\n  header: {\r\n    fontSize: 26,\r\n    color: palette.navigationBackground,\r\n    fontFamily: \"century-gothic\",\r\n  },\r\n\r\n  row: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n\r\n  tile: {\r\n    borderRadius: 18,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    alignSelf: \"flex-start\",\r\n\r\n    width: 110,\r\n\r\n    padding: 15,\r\n  },\r\n\r\n  tilesContainer: {\r\n    // width: \"100%\",\r\n  },\r\n\r\n  teamMemberTile: {\r\n    width: \"50%\",\r\n    ...globalStyles.centered,\r\n  },\r\n\r\n  teamSectionHeader: {\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    letterSpacing: 0,\r\n    marginBottom: 20,\r\n  },\r\n\r\n  teamMemberName: {\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n    color: palette.navigationBackground,\r\n  },\r\n\r\n  teamMemberDetails: {\r\n    letterSpacing: 0,\r\n    fontFamily: \"raleway-600\",\r\n    textAlign: \"center\",\r\n    letterSpacing: 0,\r\n  },\r\n\r\n  regularLetterSpacing: {\r\n    letterSpacing: 0,\r\n  },\r\n\r\n  teamMemberDescription: {\r\n    marginTop: 15,\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  teamMemberImage: {\r\n    width: teamMemberImageWidth,\r\n    height: teamMemberImageWidth,\r\n    borderRadius: 999,\r\n    resizeMode: \"contain\",\r\n  },\r\n\r\n  teamMemberImageWrapper: {\r\n    backgroundColor: \"gray\",\r\n\r\n    borderRadius: 999,\r\n\r\n    elevation: 3,\r\n    shadowOffset: { width: 1, height: 1 },\r\n    shadowColor: \"#333\",\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 2,\r\n  },\r\n\r\n  tileText: {\r\n    fontFamily: \"century-gothic\",\r\n    fontSize: 14,\r\n  },\r\n\r\n  testerName: {\r\n    fontFamily: \"montserrat-500\",\r\n    fontSize: 13,\r\n    color: palette.navigationBackground,\r\n    alignSelf: \"center\",\r\n  },\r\n\r\n  card: {\r\n    // marginVertical: 5,\r\n    // marginHorizontal: 10,\r\n    padding: 15,\r\n    margin: 10,\r\n    // paddingVertical: 12,\r\n    borderRadius: 10,\r\n    backgroundColor: \"white\",\r\n\r\n    elevation: 1,\r\n    shadowOffset: { width: 1, height: 1 },\r\n    shadowColor: \"#333\",\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 2,\r\n  },\r\n\r\n  contactsEmail: {\r\n    color: palette.navigationBackground,\r\n    fontSize: 16,\r\n    fontFamily: \"century-gothic\",\r\n    textAlign: \"center\",\r\n    textDecorationLine: \"underline\",\r\n    marginBottom: 3,\r\n  },\r\n\r\n  copyrightContainer: {\r\n    marginTop: 5,\r\n\r\n    backgroundColor: palette.background,\r\n    paddingHorizontal: 50,\r\n    paddingVertical: 7,\r\n  },\r\n\r\n  appVersionContainer: {\r\n    backgroundColor: \"white\",\r\n    alignItems: \"flex-end\",\r\n    paddingVertical: 2,\r\n    paddingRight: 5,\r\n  },\r\n})\r\n","import * as SplashScreen from \"expo-splash-screen\"\n// Keep the splash screen visible while we fetch resources\nSplashScreen.preventAutoHideAsync()\n\nimport \"react-native-gesture-handler\"\nimport { Text, View, StyleSheet } from \"react-native\"\nimport React, { useEffect, useState } from \"react\"\n\nimport { NavigationContainer } from \"@react-navigation/native\"\n\nimport { useFonts } from \"expo-font\"\nimport * as Font from \"expo-font\"\n\nimport { Drawer } from \"./routes/globalDrawer\"\nimport Header from \"./components/Header\"\n\nimport { ErrorBoundary } from \"react-error-boundary\"\nimport { ScrollView } from \"react-native-gesture-handler\"\nimport DrawerMenu from \"./components/DrawerMenu\"\nimport { DrawerRoutes } from \"./routes/DrawerRoutes\"\n\n// screens\n\nimport ScheduleScreen from \"./screens/ScheduleScreen\"\nimport ReglamentScreen from \"./screens/ReglamentScreen\"\nimport TeachersScreen from \"./screens/TeachersScreen\"\nimport EditorStack from \"./routes/EditorStack\"\nimport ContactsStack from \"./routes/ContactsStack\"\nimport NewsScreen from \"./screens/NewsScreen\"\nimport TestTabs from \"./routes/testTabs\"\nimport SettingsScreen from \"./screens/SettingsScreen\"\nimport AboutScreen from \"./screens/AboutScreen\"\nimport { isLandscapeWeb, isRunningInBrowser } from \"./utilities/utilities\"\nimport { Entypo, FontAwesome, Ionicons, Octicons } from \"@expo/vector-icons\"\nimport QnAScreen from \"./screens/QnAScreen\"\n;(\"use client\")\n\nfunction fallbackRender({ error, resetErrorBoundary }) {\n  // Call resetErrorBoundary() to reset the error boundary and retry the render.\n\n  return (\n    <ScrollView>\n      <Text>Something went wrong:</Text>\n      <Text style={{ color: \"red\" }}>{JSON.stringify(error.message)}</Text>\n      <Text style={{ color: \"red\" }}>{JSON.stringify(error.stack)}</Text>\n    </ScrollView>\n  )\n}\n\nexport default function App() {\n  try {\n    const [appIsReady, setAppIsReady] = useState(false)\n\n    // TODO: use enums for font names\n    const [fontsLoaded] = useFonts({\n      \"lato-regular\": require(\"./assets/fonts/Lato-Regular.ttf\"),\n      \"lato-bold\": require(\"./assets/fonts/Lato-Bold.ttf\"),\n      \"cinzel-regular\": require(\"./assets/fonts/CinzelDecorative-Regular.ttf\"),\n\n      \"montserrat-regular\": require(\"./assets/fonts/Montserrat-Regular.ttf\"),\n      \"montserrat-medium\": require(\"./assets/fonts/Montserrat-Medium.ttf\"),\n      \"montserrat-semibold\": require(\"./assets/fonts/Montserrat-SemiBold.ttf\"),\n\n      \"raleway-regular\": require(\"./assets/fonts/Raleway-Regular.ttf\"),\n      \"raleway-medium\": require(\"./assets/fonts/Raleway-Medium.ttf\"),\n\n      \"montserrat-500\": require(\"./assets/fonts/Montserrat-Medium.ttf\"),\n      \"montserrat-600\": require(\"./assets/fonts/Montserrat-SemiBold.ttf\"),\n\n      \"montserrat-bold\": require(\"./assets/fonts/Montserrat-Bold.ttf\"),\n      \"raleway-500\": require(\"./assets/fonts/Raleway-Regular.ttf\"),\n      \"raleway-600\": require(\"./assets/fonts/Raleway-Medium.ttf\"),\n\n      \"century-gothic\": require(\"./assets/fonts/CenturyGothic.ttf\"),\n      \"century-gothic-bold\": require(\"./assets/fonts/GOTHICB.ttf\"),\n      \"century-gothic-italic\": require(\"./assets/fonts/GOTHICI.ttf\"),\n    })\n\n    // preload icons to prevent text flicker effect on navigating to another page\n    if (isRunningInBrowser()) {\n      Font.loadAsync(FontAwesome.font)\n      Font.loadAsync(Entypo.font)\n      Font.loadAsync(Ionicons.font)\n      Font.loadAsync(Octicons.font)\n    }\n\n    useEffect(() => {\n      if (fontsLoaded) {\n        SplashScreen.hideAsync().then(() => setAppIsReady(true))\n      }\n    }, [fontsLoaded])\n\n    if (!appIsReady) {\n      return null\n    }\n\n    const markdown = (\n      <ErrorBoundary fallbackRender={fallbackRender}>\n        {/* <View style={style.root}></View> */}\n\n        <NavigationContainer>\n          <View style={styles.root}>\n            <Drawer.Navigator\n              screenOptions={{\n                header: (props) => <Header navigation={props.navigation} title={props.route.name} />,\n              }}\n              drawerContent={(props) => <DrawerMenu {...props} />}\n            >\n              <Drawer.Screen\n                name={DrawerRoutes.VIEWER}\n                component={ScheduleScreen}\n                options={{\n                  header: (props) => <View />,\n                }}\n              />\n\n              <Drawer.Screen name={DrawerRoutes.REGLAMENT} component={ReglamentScreen} />\n\n              <Drawer.Screen name={DrawerRoutes.TEACHERS} component={TeachersScreen} />\n\n              <Drawer.Screen name={DrawerRoutes.CONTACTS} component={ContactsStack} />\n\n              <Drawer.Screen name={DrawerRoutes.NEWS} component={NewsScreen} />\n\n              {/* <Drawer.Screen name={DrawerRoutes.QnA} component={QnAScreen} /> */}\n\n              <Drawer.Screen\n                name={DrawerRoutes.EDITOR}\n                options={{\n                  header: (props) => <View />,\n                }}\n                component={EditorStack}\n              />\n\n              <Drawer.Screen\n                name={DrawerRoutes.TESTS}\n                component={TestTabs}\n                options={{\n                  header: (props) => <View />,\n                }}\n              />\n\n              <Drawer.Screen name={DrawerRoutes.SETTINGS} component={SettingsScreen} />\n\n              <Drawer.Screen name={DrawerRoutes.ABOUT} component={AboutScreen} />\n            </Drawer.Navigator>\n          </View>\n        </NavigationContainer>\n      </ErrorBoundary>\n    )\n\n    return markdown\n  } catch (e) {\n    console.log(e)\n    return (\n      <ScrollView>\n        <Text>\n          Something went wrong. Something went wrong. Something went wrong. Something went wrong. Something went wrong.\n          Something went wrong.\n        </Text>\n        <Text>\n          Something went wrong. Something went wrong. Something went wrong. Something went wrong. Something went wrong.\n          Something went wrong.\n        </Text>\n        <Text>\n          Something went wrong. Something went wrong. Something went wrong. Something went wrong. Something went wrong.\n          Something went wrong.\n        </Text>\n        <Text>\n          {JSON.stringify(e.message, null, 4)}\n          {JSON.stringify(e.stack, null, 4)}\n        </Text>\n      </ScrollView>\n    )\n  }\n}\n\nconst drawerMenuWidthPx = 320\n\nconst landscapeWebStyles = StyleSheet.create({\n  root: {\n    width: \"50%\",\n    minWidth: \"50%\",\n    maxWidth: \"50%\",\n\n    maxHeight: \"100%\",\n\n    flexGrow: 1,\n    marginLeft: \"33%\", // free space divided by two and + drawerMenuWidthPx in % * 0.5\n    // TODO: unhardcode the percentage\n  },\n})\n\nconst nativeStyles = StyleSheet.create({\n  root: {\n    width: \"100%\",\n    flex: 1,\n  },\n})\n\nconst styles = isLandscapeWeb() ? landscapeWebStyles : nativeStyles\n","import { registerRootComponent } from \"expo\"\n\nimport App from \"./App\"\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App)\n","var map = {\n\t\"./af\": 94506,\n\t\"./af.js\": 94506,\n\t\"./ar\": 59687,\n\t\"./ar-dz\": 62887,\n\t\"./ar-dz.js\": 62887,\n\t\"./ar-kw\": 66307,\n\t\"./ar-kw.js\": 66307,\n\t\"./ar-ly\": 51664,\n\t\"./ar-ly.js\": 51664,\n\t\"./ar-ma\": 89926,\n\t\"./ar-ma.js\": 89926,\n\t\"./ar-sa\": 85207,\n\t\"./ar-sa.js\": 85207,\n\t\"./ar-tn\": 52912,\n\t\"./ar-tn.js\": 52912,\n\t\"./ar.js\": 59687,\n\t\"./az\": 5011,\n\t\"./az.js\": 5011,\n\t\"./be\": 25997,\n\t\"./be.js\": 25997,\n\t\"./bg\": 4427,\n\t\"./bg.js\": 4427,\n\t\"./bm\": 85385,\n\t\"./bm.js\": 85385,\n\t\"./bn\": 67703,\n\t\"./bn-bd\": 57002,\n\t\"./bn-bd.js\": 57002,\n\t\"./bn.js\": 67703,\n\t\"./bo\": 39841,\n\t\"./bo.js\": 39841,\n\t\"./br\": 45642,\n\t\"./br.js\": 45642,\n\t\"./bs\": 69038,\n\t\"./bs.js\": 69038,\n\t\"./ca\": 53512,\n\t\"./ca.js\": 53512,\n\t\"./cs\": 39497,\n\t\"./cs.js\": 39497,\n\t\"./cv\": 6479,\n\t\"./cv.js\": 6479,\n\t\"./cy\": 89318,\n\t\"./cy.js\": 89318,\n\t\"./da\": 97229,\n\t\"./da.js\": 97229,\n\t\"./de\": 63460,\n\t\"./de-at\": 51044,\n\t\"./de-at.js\": 51044,\n\t\"./de-ch\": 26445,\n\t\"./de-ch.js\": 26445,\n\t\"./de.js\": 63460,\n\t\"./dv\": 32096,\n\t\"./dv.js\": 32096,\n\t\"./el\": 16048,\n\t\"./el.js\": 16048,\n\t\"./en-au\": 74301,\n\t\"./en-au.js\": 74301,\n\t\"./en-ca\": 66855,\n\t\"./en-ca.js\": 66855,\n\t\"./en-gb\": 761,\n\t\"./en-gb.js\": 761,\n\t\"./en-ie\": 46127,\n\t\"./en-ie.js\": 46127,\n\t\"./en-il\": 49157,\n\t\"./en-il.js\": 49157,\n\t\"./en-in\": 37199,\n\t\"./en-in.js\": 37199,\n\t\"./en-nz\": 31511,\n\t\"./en-nz.js\": 31511,\n\t\"./en-sg\": 47309,\n\t\"./en-sg.js\": 47309,\n\t\"./eo\": 92160,\n\t\"./eo.js\": 92160,\n\t\"./es\": 68582,\n\t\"./es-do\": 71885,\n\t\"./es-do.js\": 71885,\n\t\"./es-mx\": 2553,\n\t\"./es-mx.js\": 2553,\n\t\"./es-us\": 16962,\n\t\"./es-us.js\": 16962,\n\t\"./es.js\": 68582,\n\t\"./et\": 98890,\n\t\"./et.js\": 98890,\n\t\"./eu\": 37704,\n\t\"./eu.js\": 37704,\n\t\"./fa\": 22562,\n\t\"./fa.js\": 22562,\n\t\"./fi\": 70877,\n\t\"./fi.js\": 70877,\n\t\"./fil\": 34246,\n\t\"./fil.js\": 34246,\n\t\"./fo\": 78341,\n\t\"./fo.js\": 78341,\n\t\"./fr\": 19867,\n\t\"./fr-ca\": 82347,\n\t\"./fr-ca.js\": 82347,\n\t\"./fr-ch\": 17683,\n\t\"./fr-ch.js\": 17683,\n\t\"./fr.js\": 19867,\n\t\"./fy\": 21982,\n\t\"./fy.js\": 21982,\n\t\"./ga\": 13905,\n\t\"./ga.js\": 13905,\n\t\"./gd\": 13443,\n\t\"./gd.js\": 13443,\n\t\"./gl\": 66905,\n\t\"./gl.js\": 66905,\n\t\"./gom-deva\": 91324,\n\t\"./gom-deva.js\": 91324,\n\t\"./gom-latn\": 41890,\n\t\"./gom-latn.js\": 41890,\n\t\"./gu\": 37134,\n\t\"./gu.js\": 37134,\n\t\"./he\": 96835,\n\t\"./he.js\": 96835,\n\t\"./hi\": 81394,\n\t\"./hi.js\": 81394,\n\t\"./hr\": 13564,\n\t\"./hr.js\": 13564,\n\t\"./hu\": 46269,\n\t\"./hu.js\": 46269,\n\t\"./hy-am\": 57269,\n\t\"./hy-am.js\": 57269,\n\t\"./id\": 44254,\n\t\"./id.js\": 44254,\n\t\"./is\": 8699,\n\t\"./is.js\": 8699,\n\t\"./it\": 28301,\n\t\"./it-ch\": 92887,\n\t\"./it-ch.js\": 92887,\n\t\"./it.js\": 28301,\n\t\"./ja\": 64642,\n\t\"./ja.js\": 64642,\n\t\"./jv\": 62168,\n\t\"./jv.js\": 62168,\n\t\"./ka\": 94501,\n\t\"./ka.js\": 94501,\n\t\"./kk\": 49537,\n\t\"./kk.js\": 49537,\n\t\"./km\": 45808,\n\t\"./km.js\": 45808,\n\t\"./kn\": 34881,\n\t\"./kn.js\": 34881,\n\t\"./ko\": 62951,\n\t\"./ko.js\": 62951,\n\t\"./ku\": 92452,\n\t\"./ku.js\": 92452,\n\t\"./ky\": 1853,\n\t\"./ky.js\": 1853,\n\t\"./lb\": 77639,\n\t\"./lb.js\": 77639,\n\t\"./lo\": 34502,\n\t\"./lo.js\": 34502,\n\t\"./lt\": 60874,\n\t\"./lt.js\": 60874,\n\t\"./lv\": 18237,\n\t\"./lv.js\": 18237,\n\t\"./me\": 87878,\n\t\"./me.js\": 87878,\n\t\"./mi\": 64234,\n\t\"./mi.js\": 64234,\n\t\"./mk\": 17535,\n\t\"./mk.js\": 17535,\n\t\"./ml\": 43896,\n\t\"./ml.js\": 43896,\n\t\"./mn\": 63046,\n\t\"./mn.js\": 63046,\n\t\"./mr\": 80927,\n\t\"./mr.js\": 80927,\n\t\"./ms\": 37224,\n\t\"./ms-my\": 66332,\n\t\"./ms-my.js\": 66332,\n\t\"./ms.js\": 37224,\n\t\"./mt\": 24866,\n\t\"./mt.js\": 24866,\n\t\"./my\": 24206,\n\t\"./my.js\": 24206,\n\t\"./nb\": 66723,\n\t\"./nb.js\": 66723,\n\t\"./ne\": 45097,\n\t\"./ne.js\": 45097,\n\t\"./nl\": 37529,\n\t\"./nl-be\": 1355,\n\t\"./nl-be.js\": 1355,\n\t\"./nl.js\": 37529,\n\t\"./nn\": 30296,\n\t\"./nn.js\": 30296,\n\t\"./oc-lnc\": 4802,\n\t\"./oc-lnc.js\": 4802,\n\t\"./pa-in\": 77057,\n\t\"./pa-in.js\": 77057,\n\t\"./pl\": 69850,\n\t\"./pl.js\": 69850,\n\t\"./pt\": 15552,\n\t\"./pt-br\": 83726,\n\t\"./pt-br.js\": 83726,\n\t\"./pt.js\": 15552,\n\t\"./ro\": 1717,\n\t\"./ro.js\": 1717,\n\t\"./ru\": 79117,\n\t\"./ru.js\": 79117,\n\t\"./sd\": 61742,\n\t\"./sd.js\": 61742,\n\t\"./se\": 92049,\n\t\"./se.js\": 92049,\n\t\"./si\": 83329,\n\t\"./si.js\": 83329,\n\t\"./sk\": 27619,\n\t\"./sk.js\": 27619,\n\t\"./sl\": 76707,\n\t\"./sl.js\": 76707,\n\t\"./sq\": 84281,\n\t\"./sq.js\": 84281,\n\t\"./sr\": 60436,\n\t\"./sr-cyrl\": 13408,\n\t\"./sr-cyrl.js\": 13408,\n\t\"./sr.js\": 60436,\n\t\"./ss\": 27500,\n\t\"./ss.js\": 27500,\n\t\"./sv\": 6950,\n\t\"./sv.js\": 6950,\n\t\"./sw\": 54222,\n\t\"./sw.js\": 54222,\n\t\"./ta\": 73746,\n\t\"./ta.js\": 73746,\n\t\"./te\": 1130,\n\t\"./te.js\": 1130,\n\t\"./tet\": 34740,\n\t\"./tet.js\": 34740,\n\t\"./tg\": 13378,\n\t\"./tg.js\": 13378,\n\t\"./th\": 20628,\n\t\"./th.js\": 20628,\n\t\"./tk\": 92622,\n\t\"./tk.js\": 92622,\n\t\"./tl-ph\": 30100,\n\t\"./tl-ph.js\": 30100,\n\t\"./tlh\": 22871,\n\t\"./tlh.js\": 22871,\n\t\"./tr\": 33600,\n\t\"./tr.js\": 33600,\n\t\"./tzl\": 18985,\n\t\"./tzl.js\": 18985,\n\t\"./tzm\": 3627,\n\t\"./tzm-latn\": 51145,\n\t\"./tzm-latn.js\": 51145,\n\t\"./tzm.js\": 3627,\n\t\"./ug-cn\": 4790,\n\t\"./ug-cn.js\": 4790,\n\t\"./uk\": 97712,\n\t\"./uk.js\": 97712,\n\t\"./ur\": 99529,\n\t\"./ur.js\": 99529,\n\t\"./uz\": 99141,\n\t\"./uz-latn\": 61737,\n\t\"./uz-latn.js\": 61737,\n\t\"./uz.js\": 99141,\n\t\"./vi\": 98205,\n\t\"./vi.js\": 98205,\n\t\"./x-pseudo\": 20697,\n\t\"./x-pseudo.js\": 20697,\n\t\"./yo\": 37826,\n\t\"./yo.js\": 37826,\n\t\"./zh-cn\": 83994,\n\t\"./zh-cn.js\": 83994,\n\t\"./zh-hk\": 36892,\n\t\"./zh-hk.js\": 36892,\n\t\"./zh-mo\": 43884,\n\t\"./zh-mo.js\": 43884,\n\t\"./zh-tw\": 85136,\n\t\"./zh-tw.js\": 85136\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [59], () => (__webpack_require__(83384)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["Drawer","createDrawerNavigator","REGLAMENT_DATA","NOTIFICATIONS_CHANNEL_ID","STORAGE_KEY","GetTimeDifference","earlier","later","momentA","moment","momentB","hourDifference","diff","minuteDifference","hours","minutes","seconds","determineInterval","timepoint","arguments","length","undefined","Date","interval","forEach","class_","value","start","hourAndMinuteStart","hourStart","split","minuteStart","hourAndMinuteEnd","hourEnd","minuteEnd","now","getFullYear","getMonth","getDate","parseInt","getContentfulClient","createClient","space","environment","accessToken","ensureExtension","filename","extension","endsWith","ensureNoExtension","slice","isMail","text","includes","isRunningInBrowser","Platform","OS","isLandscapeWeb","window","innerWidth","innerHeight","constants","platform","ios","interfaceOrientation","android","_ref","_asyncToGenerator","pathToJSONFile","fileName","filePath","FileSystem","documentDirectory","fileContents","readAsStringAsync","JSON","parse","e","require","previewImagesFull","schedule","reglamentPreview","editorPreview","settingsPreview","images","uad_logo_text","uad_logo_text_not_vector","uad_logo_text_not_vector_hires","teamMemberImages","senchyk_andrii","zakharova_zarina","shepita_julia","ivanov_mykhailo","editorImages","lightbulb","drawerMenuImages","uad_logo_white_outline","imageIcons","museum","tiktok","palette","background","backgroundLight","textOnBackground","navigationBackground","numbers","grayedOut","grayishBlue","ongoingClass","globalStyles","StyleSheet","create","container","padding","scrollView","marginBottom","screen","flex","backgroundColor","centered","justifyContent","alignItems","fontFamily","fontSize","paragraph","marginVertical","lineHeight","sectionHeader","marginLeft","input","borderWidth","borderColor","borderRadius","errorText","color","fontWeight","marginTop","textAlign","navIcon","paddingHorizontal","paddingRight","separator","height","width","noDisplay","display","margin","zIndex","invisible","opacity","row","flexDirection","grayIcon","card","paddingVertical","elevation","shadowOffset","shadowColor","shadowOpacity","shadowRadius","link","underlinedLink","textDecorationLine","captionWithIcon","navigationButton","modalContentContainer","position","top","marginHorizontal","searchBar","horizontalCenteredFlex","DrawerRoutes","_RouteIcons","_defineProperty","VIEWER","_jsx","Ionicons","name","size","REGLAMENT","TEACHERS","FontAwesome5","CONTACTS","NEWS","QnA","FontAwesome","TESTS","EDITOR","SETTINGS","ABOUT","getIcon","navigation","headerText","RouteIconConstructor","RouteIcons","type","RouteIcon","_objectSpread","props","style","MaterialIcons","onPress","openDrawer","BaseHeader","title","icon","_jsxs","View","styles","headerContentContainer","children","TouchableOpacity","Text","GlobalHeader","_ref2","headerContentElement","headerContent","SafeAreaView","header","NewsLoaderService","_classCallCheck","_newsCached","_createClass","key","_init","apply","_getNewsFromContentful","this","news","fetchContentfulEntries","items","map","entry","_entry$fields","fields","body","createdAt","sys","sort","a","b","getTime","_fetchContentfulEntries","client","getEntries","content_type","_getNewestArticleDate","getNewsFromContentful","_GetInstance","instance","init","shouldDisplayYellowCircle","YellowCircle","_ref2$filled","filled","alignSelf","DrawerMenu","routeNameToIconRef","useRef","useNavigation","routesContainer","useNavigationState","state","routes","isRunningInExpoGo_","executionEnvironment","ExecutionEnvironment","StoreClient","breakpoint","topRoutes","bottomRoutes","_","route","currentRoute","index","RouteButton","_ref3","isCurrentRoute","isNewsRoute","yellowCircle","screenName","AsyncStorage","setItem","toString","navigate","pageLinkContainer","activePageLink","current","pageLink","drawerContainer","drawerContainerHeader","Image","marginRight","source","drawerContainerBottom","ActivityIndicator","GetInstance","then","newestArticleDate","getNewestArticleDate","lastSeenArticle","getItem","lastSeenArticleDate","_x","paddingTop","paddingBottom","borderBottomColor","borderBottomWidth","WeekType","SEMESTER_START","SEMESTER_START_TYPE","Denominator","GetWeekType","timeDifferenceInDays","Math","trunc","Nominator","getStrict","array","Error","workDays","workDaysEn","workDaysEnLower","day","toLowerCase","EditedSchedulesStorageService","_this","results","ScheduleLoaderService","scheduleFiles","scheduleFile","isOutdated","removeEditedSchedule","Promise","all","_createVersionForEdits","saveEditedSchedule","_x2","_saveEditedSchedule","scheduleLoader","jsonToDump","metadata","getScheduleFileMetadata","getScheduleFileByFileName","scheduleDays","idx","stringify","_x3","_loadEditedSchedule","scheduleFileName","scheduleWithMetadata","_x4","_isOutdated","contentfulScheduleFile","editVer","loadEditedSchedule","editVerMetadata","contentfulVerMetadata","_x5","scheduleName","removeItem","_hasEditedVersion","_x6","pathToScheduleFolder","getSchedulesFromContentful","replaceContentfulSchedulesWithEditedVersions","getInfoAsync","exists","getSchedulesFromFileSystem","checkForUpdatesAsync","getExampleSchedules","makeDirectoryAsync","intermediates","sf","_replaceContentfulSchedulesWithEditedVersions","editedSchedulesStorage","editedCounterpartsPromises","editedSchedule","json_parsed","editedCounterparts","_getSchedulesFromFileSystem","allScheduleFileNames","readDirectoryAsync","file","json","revision","updatedAt","_getSchedulesFromContentful","_this2","assets","getAssets","limit","scheduleClassesJson","linkToFile","url","linkToDestFile","res","fetch","blob","downloadAsync","writeAsStringAsync","ExampleScheduleKN","ExampleScheduleIST","ExampleScheduleTE","find","_checkForUpdatesAsync","_this3","netInfo","NetInfo","isConnected","isInternetReachable","scheduleFileMetadatas","_ref4","itm","updatedScheduleFiles","_ref5","sfm","oldSchedule","_dumpSchedule","editedScheduleStorage","resolve","ScheduleModel","specialtyName","year","dayNames","weekendDays","Array","data","dayClasses","classes","scheduleDay","ScheduleDay","push","objectName","_getScheduleFromScheduleLoader","startsWith","setSchedule","_getScheduleFromEditedSchedulesStorage","editedScheduleService","dayIndex","getDay","todayClasses","currentClass","isCurrent","ScheduleClass","currentWeekType","filter","isBiweekly","week","otherWeek","matchingClass","CLASS_TYPE","CLASS_TYPE_SHORT","_CLASS_TYPE_SHORT","LECTURE","PRACTICE","LAB","_data$isBiweekly","_data$classType","weekName","teacher","room","isSharedClass","classType","setWeek","isInCurrentTimeSlot","isMatchingWeekType","sampleName","sampleRoom","sampleTeacher","TeacherTableModel","teachers","teachersJson","teachersFuse","Fuse","keys","threshold","surname","match","search","item","getTeacherBySurname","patronymic","Event","DisplayEmptyDaysMode","DisplayTeacherMode","SettingsService","displayEmptyDays","Display","currentScheduleName","notifyBeforeClass","notifyBeforeClassOffsetMinutes","displayRoomNumber","displayTeacherName","Full","displayEmptyRows","SettingsEventEmmiter","EventEmitter","fetchedSettings","readFromStorage","Object","entries","_slicedToArray","_saveToStorage","settingsObject","constructSettingsObjectFromProperties","jsonValue","emit","SETTINGS_UPDATED","_readFromStorage","_openAndroidSystemSettingsForNotifications","pkg","Constants","manifest","package","Notifications","IntentLauncher","startActivityAsync","extra","SettingsContext","React","AppText","android_hyphenationFrequency","appText","ScheduleText","letterSpacing","formatRoomName","scheduleClassInstance","unfoldClassText","join","replace","formatTeacherName","isEditable","settings","teacherTable","teacherSurname","getFullNameBySurname","sn","getSurnameAndInitialsBySurname","displayTeacherNameMode","SurnameAndInitials","ScheduleClassComponent","_ref$isEditable","_ref$highlightAsOngoi","highlightAsOngoing","_React$useState","_React$useState2","setState","isCurrentClassRef","_React$useState3","_React$useState4","setUnfoldClassText","_React$useState5","_React$useState6","unfoldTeacherText","setUnfoldTeacherText","_useWindowDimensions","useWindowDimensions","useContext","_useState","useState","_useState2","isOngoingClass","setIsOngoingClass","className","shouldDisplayTeacher","Hide","_useState3","_useState4","isReady","setIsReady","useEffect","rerenderInterval","setInterval","isCurrentClass","clearInterval","reglamentClass","classStart","classEnd","classContainer","testID","startAndEndTimesContainer","classStartText","classEndText","classAndTeacherBlock","onLongPress","Clipboard","setStringAsync","ToastAndroid","show","SHORT","classNameText","flexGrow","ellipsizeMode","numberOfLines","teacherNameText","classTypeAndRoomNumberContainer","roomNumberContainer","roomNumberText","flexBasis","Separator","upperElement","lowerElement","_ref$width","localStyles","UnderlayRightSide","onDeleteButtonPress","close","useSwipeableItemParams","underlayLeft","LocalNotificationsService","exampleNotificationContent","subtitle","someData","notificationChannelId","identifier","handleNotification","_handleNotification","shouldShowAlert","priority","MAX","shouldPlaySound","shouldSetBadge","registerNotificationsChannel","checkPermissionsAsync","granted","_registerNotificationsChannel","importance","vibrationPattern","lightColor","lockscreenVisibility","PUBLIC","_sendNotification","content","message","trigger","channelId","catch","_scheduleNotification","nextTriggerDate","date","_sendExampleNotification","sendNotification","_scheduleExampleNotificationViaDate","secondsFromNow","scheduleNotification","_scheduleRepeatableExampleNotification","repeats","_scheduleRepeatableDailyExampleNotification","hour","minute","ClassNotificationBuilder","notificationsService","negativeOffsetInMins","teachersTable","signature","getUniqueStringSignature","hourAndMinute","monthDay","notificationDate","distance","setDate","setDayOnDate","indexOf","twoWeeksInSeconds","offset","sequenceSize","spacingInSeconds","sequence","next","createEvenlySpacedTimeSequence","SEMESTER_MONTHS","notifDate","teacherName","hourPadded","minutePadded","weekday","ScheduleNotificationsService","_LocalNotificationsSe","_inherits","_super","_createSuper","_len","args","_key","call","concat","onConfigureNotificationsForScheduleStart","onConfigureNotificationsForScheduleEnd","_configureNotificationsForSchedule","_this$onConfigureNoti","_this$onConfigureNoti2","settingsService","cancelAllScheduledNotificationsAsync","configureDays","configureDayClasses","notifBuilder","weeklyNotif","constructWeeklyNotification","notifications","constructBiweeklyNotificationsSequence","notif","EditorStackRoutes","NoClassesText","ScheduleDayComponent","classesCollection","scheduleObject","dayName","_ref$weekType","weekType","fade","scheduleDayCard","dayNameHeader","configureNotificationsCallback","useCallback","updatedSchedule","configureNotificationsForSchedule","setClasses","dayNameEnRef","d","mapUkrWorkDayToEnWorkDay","saveEditedClasses","classesWithoutPlaceholders","isSampleClass","thisDay","biweeklyClassesOfOtherWeek","_toConsumableArray","dumpSchedule","addPlaceholders","extendedContainer","GetPlaceholder","ListComponent","DraggableFlatList","FlatList","Darken","fadedDayContainerView","keyExtractor","onDragEnd","ListEmptyComponent","noClassesText","scrollEnabled","nestedScrollEnabled","ItemSeparatorComponent","renderItem","drag","isActive","scheduleClassComponent","noTeacherText","editableScheduleClassWrapper","SwipeableItem","renderUnderlayLeft","filteredClasses","filteredClassesWithPlaceholders","onDeleteButtonPressed","snapPointsLeft","snapPointsRight","activationThreshold","SCHEDULE_CLASS_FORM","scheduleClass","currentlyViewedWeek","onFormDataUpdated","values","updatedClasses","t","trim","r","OptionPickerModal","_ref$hasSearchBar","hasSearchBar","_ref$headerText","_ref$isOpen","isOpen","_ref$displaySeparator","displaySeparators","initialOptions","initialSelectedOption","closeModalCallback","closeModal","onSelected","optionIcon","_ref$isOptionSelectab","isOptionSelectable","options","searchQuery","setSearchQuery","filteredOptions","option","selectedOption","setSelectedOption","Modal","animationType","transparent","modal","visible","overlay","horizontalFlex","searchBarContainer","TextInput","onChangeText","placeholder","ScrollView","Pressable","checkIcon","closeButton","closeButtonText","left","right","page","pageTitle","imageContainer","overflow","previewImage","objectFit","objectPosition","centeredDescriptionText","pageDescriptionText","documentHeight","swiperWidth","InroductoryCarouselScreen","onClose","currentPage","setCurrentPage","swiperRef","setIsVisible","_useState5","_useState6","schedulePickerModalVisible","setSchedulePickerModalVisible","_useState7","_useState8","schedulePickerData","setSchedulePickerData","f","slideTo","paginationCircles","lastPageIndex","i","circle","circleActive","Swiper","initialSlide","onSwiper","swiper","onSlideChange","activeIndex","SwiperSlide","src","pagerNavigation","accessibilityLabel","selected","saveToStorage","newCurrentPage","backButton","setStatusBarHidden","carouselContainer","viewPager","pageBody","maxHeight","halfImageContainer","forwardButton","ScheduleHeader","onWeekTypeChanged","navigation_","setWeekType","weekTypeInUkrainian","useRoute","scheduleHeaderStyles","weekTextContainer","selectedContainer","weekTypeText","selectedText","baseStyles","backroundImage","sideMenuIcon","currentlyViewedDay","ScheduleScreen","closeDrawer","todayIndex","isFirstTimeLaunch","setIsFirstTimeLaunch","scheduleRef","scheduleFileRef","settingsServiceRef","scrollViewContainerRef","scheduleLoaded","setScheduleLoaded","setScheduleName","_useState9","_useState10","dataSourceCords","setDataSourceCords","scheduleNameRef","onSettingsUpdated","_$cloneDeep","newSchedule","getScheduleFromScheduleLoader","notifService","_onMount","scheduleLoaderInstance","firstScheduleFile","nameOfScheduleToLoad","on","isFirstimeLaunch","onMount","removeListener","LONG","useFocusEffect","currentScheduleFile","_$cloneDeep2","IntroductoryCarousel","Provider","rootContainer","contentContainerStyle","ref","paddingLeft","isEmpty","getNominatorClasses","getDenominatorClasses","shouldDisplayEmptyDay","cardContainer","onLayout","event","layout","nativeEvent","y","scrolledToToday","scrollTo","x","animated","showSeparator","animating","modalToggle","modalClose","modalContent","placeholderView","scheduleDaySelector","ReglamentScreen","reglamentContainer","ReglamentClass","classData","getReglamentClass","currentTimeInterval","wasCurrent","reglamentClassContainer","reglamentClassIndex","timeDataCard","timePointText","timePointDate","head","borderRightWidth","headText","TeachersScreen","filteredTeachers","userSelect","teacherCard","teacherDataText","selectable","Кваліфікаця","Linking","openURL","StackHeader","_ref$useSafeAreaView","useSafeAreaView","_ref$hasBackground","hasBackground","_ref$captionStyles","captionStyles","ViewComponent","headerTitle","goBack","CustomSwitch","onValueChange","_ref$initVal","initVal","_ref$disabled","disabled","otherProps","_objectWithoutProperties","_excluded","isEnabled","setIsEnabled","Switch","switch","trackColor","false","true","thumbColor","activeThumbColor","newValue","previousState","BlueCircle","RadioButtonGroup","onOptionSelected","_ref$selectedOptionIn","selectedOptionIndex","selectedIndex","setIndex","CheckBox","checked","checkedIcon","uncheckedIcon","optionTitle","containerStyle","checkboxContainer","AutoSubmitFormData","_useFormikContext","useFormikContext","initialValues","submitFormCallback","isSubmitting","submitForm","FormTextInput","formField","fieldCaption","captionText","cursorColor","textInputText","underline","noteText","ScheduleClassForm","_scheduleClass$teache","params","dayUkrIndex","findIndex","dayUkr","weekTypeUkr","initialFormikValues","Formik","onSubmit","handleChange","handleBlur","headerTextPrimary","headerTextSecondary","autoCapitalize","code_name","o","autocompleteContainer","ScheduleEditorScreen","Stack","createStackNavigator","EditorStack","Navigator","screenOptions","Screen","component","FacultiesTestScreen","renderFacultyCard","nameAbbreviation","nameFull","address","phone","mail","facultyCard","ContactsStackRoutes","corpsModalItems","corps","rectorateModalItems","isPhone","isLink","preparationDepartmentModalItems","internationalAffairsAndInformationDepartmentModalItems","admissionsCommitteeModalItems","accountingModalItems","contractEducationDepartmentModalItems","studentUnionModalItems","studentCouncilModalItems","linkName","socialMediaModalItems","Category","titleIcon","subcategories","category","categoryTitle","itemOnPress","ItemType","itemWithoutOnPress","subcategoryButtonContainer","EntypoIcon","constructModalItem","optionText","constructContentPresenterModal","onCloseModal","ContactsScreen","corpsModalIsOpen","setCorpsModalIsOpen","rectorateModalIsOpen","setRectorateModalIsOpen","admissionCommitteeModalIsOpen","setAdmissionCommitteeModalIsOpen","_React$useState7","_React$useState8","preparationDepartmentModalIsOpen","setPreparationDepartmentModalIsOpen","_React$useState9","_React$useState10","internationalAffairsAndInformationDepartmentModalIsOpen","setInternationalAffairsAndInformationDepartmentModalIsOpen","_React$useState11","_React$useState12","accountingModalIsOpen","setAccountingModalIsOpen","_React$useState13","_React$useState14","contractEducationModalIsOpen","setContractEducationModalIsOpen","_React$useState15","_React$useState16","studentUnionModalIsOpen","setStudentUnionModalIsOpen","_React$useState17","_React$useState18","studentCouncilModalIsOpen","setStudentCouncilModalIsOpen","_React$useState19","_React$useState20","socialMediaModalIsOpen","setSocialMediaModalIsOpen","subcategoryTitle","Octicons","navigateToSubcategoryButton","ContactsStack","CONTACTS_MENU","FACULTIES","NewsCard","dateObj","maxLength","isBodyExpanded","setIsBodyExpanded","newsArticleCard","moreButton","NewsScreen","setNews","fetchedNews","newsLoaderService","getExampleNews","Card","_ref$shadows","shadows","cardContentStyle","noShadow","cardContent","NotificationTestsScreen","ready","setReady","permission","setPermission","setScheduledNotifications","delayForExampleNotificationViaDate","setDelayForExampleNotificationViaDate","notification","setNotification","localNotificationsServiceRef","notificationListener","responseListener","requestConfigurePermissions","response","registeredNotifications","getAllScheduledNotificationsAsync","permissions","status","request","Button","sendExampleNotification","Input","keyboardType","defaultValue","scheduleExampleNotificationViaDate","scheduleRepeatableExampleNotification","scheduleRepeatableDailyExampleNotification","Expander","collapsed","setCollapsed","Collapsible","ScheduledNotificationsScreen","showRegularClasses","setShowRegularClasses","showBiweeklyClasses","setShowBiweeklyClasses","filterQuery","setFilterQuery","scheduledNotifications","filteredScheduledNotifications","n","toUTCString","sortedScheduledNotifications","minHeight","horizontal","onBlur","cancelScheduledNotificationAsync","ContentViewModal","modalChildren","FlatButton","button","FileSystemScreen","fileContentModalVisible","setFileContentModalVisible","selectedFileContent","setSelectedFileContent","currentDir","setCurrentDir","allFiles","setAllFiles","firstFieldText","setFirstFieldText","secondFieldText","setSecondFieldText","contentfulSchedule","setContentfulSchedule","contentfulScheduleAsAsset","setContentfulScheduleAsAsset","contentfulScheduleAsDownloadedAsset","setContentfulScheduleAsDownloadedAsset","_React$useState21","_React$useState22","allContentfulAssets","setAllContentfulAssets","saveToFile","path","initFields","_initFields","lines","getEntry","getAsset","asset","uri","assetNames","deleteAsync","isDirectory","ScheduleEditor","setSampleDay","currentRouteName","getId","firstScheduleFilename","isSlot","setData","random","dataElem","draggable","updatedClass","reorderable","TestEditorStack","ContactsModalTestScreen","ContactsTestStack","DeviceInfoScreen","aspectRatio","pixelRatio","PixelRatio","get","dpi","Tab","createBottomTabNavigator","TestTabs","headerShown","tabBarStyle","initialRouteName","tabBarIcon","_ref6","_ref7","Settings","_settingsServiceRef$c2","selectedSchedule","settingsValues","setSettingsValues","schedulePickerModalDisabled","setSchedulePickerModalDisabled","emptyDayDisplayModalVisible","setEmptyDayDisplayModalVisible","_useState11","_useState12","displayTeacherModeModalVisible","setDisplayTeacherModeModalVisible","_useState13","_useState14","notifyBeforehandModalVisible","setNotifyBeforehandModalVisible","_useState15","_useState16","toggleNotifs","_toggleNotifs","enable","scheduleNotifService","constructCategoryHeader","categoryName","categoryIcon","categoryHeader","settingsSectionName","constructSettingsRow","settingDescription","changeSettingComponent","settingRow","settingName","_settingsServiceRef$c","loadingIndicatorOverlay","notificationsSection","FontAwesomeIcon","settingsSectionIcon","settingsCategory","nv","settingValueContainer","settingValue","selectedInt","openAndroidSystemSettingsForNotifications","scrollViewDirect","scrollViewContentContainer","pageBackground","centeredTextAndIcon","borderTopWidth","AboutScreen","resizeMode","fontStyle","tileText","tile","teamSectionHeader","tilesContainer","teamMemberTile","teamMemberImageWrapper","teamMemberImage","teamMemberDescription","teamMemberName","regularLetterSpacing","teamMemberDetails","testerName","contactsEmail","copyrightContainer","appVersionContainer","fallbackRender","error","resetErrorBoundary","stack","SplashScreen","landscapeWebStyles","root","minWidth","maxWidth","nativeStyles","registerRootComponent","appIsReady","setAppIsReady","_useFonts","useFonts","fontsLoaded","Font","loadAsync","font","Entypo","markdown","ErrorBoundary","NavigationContainer","Header","drawerContent","SettingsScreen","webpackContext","req","id","webpackContextResolve","__webpack_require__","code","module","exports","__webpack_module_cache__","moduleId","cachedModule","loaded","__webpack_modules__","m","deferred","O","result","chunkIds","fn","notFulfilled","Infinity","fulfilled","j","every","splice","getter","__esModule","leafPrototypes","getProto","getPrototypeOf","obj","mode","ns","def","getOwnPropertyNames","definition","defineProperty","enumerable","g","globalThis","Function","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}