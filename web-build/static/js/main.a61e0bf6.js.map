{"version":3,"file":"static/js/main.a61e0bf6.js","mappings":"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","sources":["routes/globalDrawer.ts","constants/Constants.ts","constants/Keys.ts","utilities/utilities.ts","constants/Fonts.ts","styles/global.ts","routes/DrawerRoutes.ts","constants/RouteIcons.tsx","components/Header.tsx","constants/Images.ts","constants/ExampleData.ts","services/NewsLoaderService.ts","components/YellowCircle.tsx","components/DrawerMenu.tsx","utilities/getWeekType.ts","utilities/getStrict.ts","constants/Days.ts","models/ScheduleClass.ts","models/TeacherModel.ts","services/SettingsService/Types.ts","contexts/settingsContext.ts","components/shared/AppText.tsx","components/ScheduleComponents/ScheduleText.tsx","contexts/weekTypeContext.ts","components/ScheduleComponents/ScheduleClass.tsx","components/shared/Separator.tsx","components/ScheduleEditorComponents/ScheduleClassUnderlay.tsx","services/EditedScheduleStorageService/EditedScheduleStorageService.ts","services/ScheduleLoaderService/ScheduleLoaderService.ts","services/ScheduleLoaderService/ScheduleLoaderServiceBase.ts","services/LocalNotificationsService/LocalNotificationsService.ts","constants/Events.ts","services/SettingsService/SettingsService.ts","services/ClassNotificationBuilder.ts","services/ScheduleNotificationsService.ts","routes/EditorStackRoutes.ts","constants/Descriptions.ts","components/ScheduleComponents/ScheduleDay.tsx","models/ScheduleDay.ts","models/ScheduleModel.ts","components/OptionPickerModal.tsx","screens/IntroductoryCarousel/Pages.tsx","screens/IntroductoryCarousel/IntroductoryCarousel.tsx","components/ScheduleComponents/ScheduleHeader.tsx","components/ScheduleEditorComponents/EditActionsExplanatoryCard.tsx","components/ScheduleComponents/DateOverviewCard.tsx","screens/ScheduleScreen.tsx","screens/ReglamentScreen.tsx","screens/TeachersScreen.tsx","components/StackHeader.tsx","components/shared/Switch.tsx","components/shared/RadioButtonGroup.tsx","screens/TestTabsScreens/scheduleEditorStack/ScheduleClassForm.tsx","screens/ScheduleEditorScreen.tsx","routes/EditorStack.tsx","screens/TestTabsScreens/FacultiesTestScreen.tsx","routes/ContactsStackRoutes.ts","constants/Contacts.tsx","screens/ContactsScreen.tsx","routes/ContactsStack.tsx","screens/NewsScreen.tsx","components/shared/card.tsx","screens/TestTabsScreens/NotificationTests.tsx","components/shared/Expander.tsx","screens/TestTabsScreens/ScheduledNotificationsScreen.tsx","components/ContentViewModal.tsx","components/shared/Button.tsx","screens/TestTabsScreens/FileSystemScreen.tsx","screens/TestTabsScreens/ScheduleEditor.tsx","routes/testEditorStack.tsx","screens/TestTabsScreens/ContactsModalsTestScreen.tsx","routes/ContactsTestStack.tsx","routes/testTabs.tsx","screens/SettingsScreen.tsx","screens/AboutScreen.tsx","components/Table.tsx","components/UnfoldableCard.tsx","screens/QnAScreen.tsx","services/AnalyticsService/AnalyticsService.ts","App.tsx","index.js","node_modules/moment/locale|sync|/^/.*$","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { createDrawerNavigator } from \"@react-navigation/drawer\"\r\n\r\nexport const Drawer = createDrawerNavigator()\r\n","export type REGLAMENT_DATA_ELEM_TYPE = [number, string, string, string]\r\nexport type REGLAMENT_DATA_TYPE = REGLAMENT_DATA_ELEM_TYPE[]\r\n\r\n// export const REGLAMENT_DATA_OLD: REGLAMENT_DATA_TYPE = [\r\n//   [1, \"8:30\", \"10:05\", \"9:15 – 9:20\"],\r\n//   [2, \"10:15\", \"11:50\", \"11:00 – 11:05\"],\r\n//   [3, \"12:20\", \"13:55\", \"13:05 – 13:10\"],\r\n//   [4, \"14:05\", \"15:40\", \"14:50 – 14:55\"],\r\n//   [5, \"15:50\", \"17:25\", \"16:35 – 16:40\"],\r\n//   [6, \"17:35\", \"19:10\", \"18:20 – 18:25\"],\r\n// ]\r\n\r\nexport const REGLAMENT_DATA: REGLAMENT_DATA_TYPE = [\r\n  [1, \"8:30\", \"9:50\", \"🤔\"],\r\n  [2, \"10:05\", \"11:25\", \"🤔\"],\r\n  [3, \"11:40\", \"13:00\", \"🤔\"],\r\n  [4, \"13:15\", \"14:35\", \"🤔\"],\r\n  [5, \"14:50\", \"16:10\", \"🤔\"],\r\n  [6, \"16:25\", \"17:45\", \"🤔\"],\r\n  [7, \"18:00\", \"19:20\", \"🤔\"],\r\n  [8, \"19:30\", \"20:50\", \"🤔\"],\r\n]\r\n\r\nexport const suffixesForNumbers = {\r\n  1: \"-ша\",\r\n  2: \"-га\",\r\n  3: \"-тя\",\r\n  4: \"-та\",\r\n  5: \"-та\",\r\n  6: \"-та\",\r\n}\r\n\r\nexport const SEMESTER_MONTHS = 6\r\n\r\nexport const NOTIFICATIONS_CHANNEL_ID = \"interactive-schedule-notifications\"\r\n","import { CONTENTFUL_SPACE, CONTENTFUL_CONTENT_DELIVERY_ACCESS_TOKEN, APTABASE_APP_KEY } from \"@env\"\r\nimport Aptabase from \"@aptabase/react-native\"\r\n\r\nexport const ContentfulSpace = CONTENTFUL_SPACE\r\nexport const ContentfulContentDeliveryAccessToken = CONTENTFUL_CONTENT_DELIVERY_ACCESS_TOKEN\r\n\r\n// async-storage key udner which the app settings are stored. Can be whatever and is not confidential\r\nexport const STORAGE_KEY = \"@noid_schedule_app_settings103\"\r\n\r\nexport const AptabaseAppKey = APTABASE_APP_KEY\r\n","import moment from \"moment\"\r\nimport { REGLAMENT_DATA_ELEM_TYPE, REGLAMENT_DATA } from \"../constants/Constants\"\r\n\r\nimport contentful from \"contentful/dist/contentful.browser.min.js\"\r\nimport { createClient } from \"contentful/dist/contentful.browser.min.js\"\r\n// import { ContentType, createClient as createClientProper } from \"contentful\"\r\n\r\nimport { ContentfulClientApi } from \"contentful\"\r\nimport { ContentfulContentDeliveryAccessToken, ContentfulSpace } from \"../constants/Keys\"\r\nimport { Platform } from \"react-native\"\r\nimport * as FileSystem from \"expo-file-system\"\r\nimport constants, { ExecutionEnvironment } from \"expo-constants\"\r\n\r\nexport const GetTimeDifference = (earlier: Date, later: Date) => {\r\n  let momentA = moment(earlier)\r\n  let momentB = moment(later)\r\n  let hourDifference = momentB.diff(momentA, \"hours\") as number\r\n  let minuteDifference = momentB.diff(momentA, \"minutes\") - hourDifference * 60\r\n  let secondDifference = momentB.diff(momentA, \"seconds\") - hourDifference * 60 * 60 - minuteDifference * 60\r\n\r\n  return {\r\n    hours: hourDifference,\r\n    minutes: minuteDifference,\r\n    seconds: secondDifference,\r\n  }\r\n}\r\n\r\nexport function createEvenlySpacedTimeSequence(sequenceSize: number, spacingInSeconds: number, start: Date): Date[] {\r\n  const sequence = []\r\n  let next = start\r\n\r\n  let index = 0\r\n  while (index < sequenceSize) {\r\n    sequence.push(next)\r\n    next = new Date(next.getTime() + spacingInSeconds * 1000)\r\n\r\n    index += 1\r\n  }\r\n\r\n  return sequence\r\n}\r\n\r\nexport function setDayOnDate(date: Date, day: number): Date {\r\n  const currentDay = date.getDay()\r\n  const distance = day - currentDay\r\n  date.setDate(date.getDate() + distance)\r\n\r\n  return date\r\n}\r\n\r\nfunction isInRange(value: Date, start: Date, end: Date) {\r\n  return value <= end && value >= start\r\n}\r\n\r\n// get time slot of a timepoint\r\nexport function determineInterval(timepoint = new Date()): false | REGLAMENT_DATA_ELEM_TYPE {\r\n  let interval: false | REGLAMENT_DATA_ELEM_TYPE = false\r\n\r\n  REGLAMENT_DATA.forEach((class_) => {\r\n    let hourAndMinuteStart = class_[1]\r\n    let hourStart = hourAndMinuteStart.split(\":\")[0]\r\n    let minuteStart = hourAndMinuteStart.split(\":\")[1]\r\n\r\n    let hourAndMinuteEnd = class_[2]\r\n    let hourEnd = hourAndMinuteEnd.split(\":\")[0]\r\n    let minuteEnd = hourAndMinuteEnd.split(\":\")[1]\r\n\r\n    let now = new Date()\r\n    // TODO: annotate\r\n    let earlier = new Date(now.getFullYear(), now.getMonth(), now.getDate(), parseInt(hourStart), parseInt(minuteStart))\r\n    let later = new Date(now.getFullYear(), now.getMonth(), now.getDate(), parseInt(hourEnd), parseInt(minuteEnd))\r\n\r\n    if (isInRange(timepoint, earlier, later)) {\r\n      interval = class_\r\n    }\r\n  })\r\n\r\n  return interval\r\n}\r\n\r\nconsole.log(\"[utilities] current interval is \", determineInterval())\r\n\r\nexport function getContentfulClient() {\r\n  console.log(\"contentful module: \", contentful)\r\n  console.log(\"create contentful client: \", createClient)\r\n\r\n  const client: ContentfulClientApi<undefiend> = createClient({\r\n    space: ContentfulSpace,\r\n    environment: \"master\", // defaults to 'master' if not set\r\n    accessToken: ContentfulContentDeliveryAccessToken,\r\n  })\r\n\r\n  return client\r\n}\r\n\r\nexport function ensureExtension(filename: string, extension: string) {\r\n  if (filename.endsWith(extension)) return filename\r\n\r\n  return filename + extension\r\n}\r\n\r\nexport function ensureNoExtension(filename: string, extension: string) {\r\n  if (!filename.endsWith(extension)) return filename\r\n\r\n  return filename.slice(0, -extension.length)\r\n}\r\n\r\nexport const isMail = (text: string) => {\r\n  return text.includes(\"@\") && !text.includes(\"http\")\r\n}\r\n\r\nexport function isRunningInExpoGo() {\r\n  const isRunningInExpo = constants.executionEnvironment == ExecutionEnvironment.StoreClient\r\n  return isRunningInExpo\r\n}\r\n\r\nexport function isRunningInBrowser() {\r\n  // const isRunningInBrowser = constants.executionEnvironment == ExecutionEnvironment.Bare\r\n\r\n  // debugger\r\n\r\n  const isRunningInBrowser = Platform.OS === \"web\"\r\n  return isRunningInBrowser\r\n}\r\n\r\nexport function isHorizontalOrientation() {\r\n  if (isRunningInBrowser()) {\r\n    return window.innerWidth > window.innerHeight\r\n  }\r\n\r\n  return (\r\n    constants.platform.ios.interfaceOrientation === \"landscape\" ||\r\n    constants.platform.android.interfaceOrientation === \"landscape\"\r\n  )\r\n}\r\n\r\nexport function isLandscapeWeb() {\r\n  return isRunningInBrowser() && isHorizontalOrientation()\r\n}\r\n\r\nexport const loadJSON = async (pathToJSONFile: string) => {\r\n  const fileName = pathToJSONFile // Replace with the name of your JSON file\r\n  const filePath =\r\n    Platform.OS === \"android\" ? FileSystem.documentDirectory + fileName : FileSystem.documentDirectory + \"/\" + fileName\r\n\r\n  try {\r\n    const fileContents = await FileSystem.readAsStringAsync(filePath)\r\n\r\n    const data = JSON.parse(fileContents)\r\n    return data\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nexport function truncateText(text: string, maxLength: number) {\r\n  if (text.length > maxLength) {\r\n    return text.slice(0, maxLength) + \"...\"\r\n  } else {\r\n    return text\r\n  }\r\n}\r\n","export enum FontName {\r\n  LatoRegular = \"lato-regular\",\r\n  LatoBold = \"lato-bold\",\r\n  CinzelRegular = \"cinzel-regular\",\r\n\r\n  MontserratRegular = \"montserrat-regular\",\r\n  MontserratMedium = \"montserrat-medium\",\r\n  MontserratSemiBold = \"montserrat-semibold\",\r\n\r\n  RalewayRegular = \"raleway-regular\",\r\n  RalewayMedium = \"raleway-medium\",\r\n\r\n  Montserrat500 = \"montserrat-500\",\r\n  Montserrat600 = \"montserrat-600\",\r\n\r\n  MontserratBold = \"montserrat-bold\",\r\n  Raleway500 = \"raleway-500\",\r\n  Raleway600 = \"raleway-600\",\r\n\r\n  CenturyGothic = \"century-gothic\",\r\n  CenturyGothicBold = \"century-gothic-bold\",\r\n  CenturyGothicItalic = \"century-gothic-italic\",\r\n}\r\n\r\nexport function GetAllAppFonts() {\r\n  //   const pathToFontsFolder = \"../assets/fonts/\"\r\n  //  path to fonts folder is hardcoded  because  require() doesn't work with interpolated strings\r\n\r\n  const FONTS = {\r\n    [FontName.LatoRegular]: require(\"../assets/fonts/Lato-Regular.ttf\"),\r\n    [FontName.LatoBold]: require(\"../assets/fonts/Lato-Bold.ttf\"),\r\n    [FontName.CinzelRegular]: require(\"../assets/fonts/CinzelDecorative-Regular.ttf\"),\r\n\r\n    [FontName.MontserratRegular]: require(\"../assets/fonts/Montserrat-Regular.ttf\"),\r\n    [FontName.MontserratMedium]: require(\"../assets/fonts/Montserrat-Medium.ttf\"),\r\n    [FontName.MontserratSemiBold]: require(\"../assets/fonts/Montserrat-SemiBold.ttf\"),\r\n\r\n    [FontName.RalewayRegular]: require(\"../assets/fonts/Raleway-Regular.ttf\"),\r\n    [FontName.RalewayMedium]: require(\"../assets/fonts/Raleway-Medium.ttf\"),\r\n    [FontName.Raleway500]: require(\"../assets/fonts/Raleway-Regular.ttf\"),\r\n    [FontName.Raleway600]: require(\"../assets/fonts/Raleway-Medium.ttf\"),\r\n\r\n    [FontName.Montserrat500]: require(\"../assets/fonts/Montserrat-Medium.ttf\"),\r\n    [FontName.Montserrat600]: require(\"../assets/fonts/Montserrat-SemiBold.ttf\"),\r\n    [FontName.MontserratBold]: require(\"../assets/fonts/Montserrat-Bold.ttf\"),\r\n\r\n    [FontName.CenturyGothic]: require(\"../assets/fonts/CenturyGothic.ttf\"),\r\n    [FontName.CenturyGothicBold]: require(\"../assets/fonts/GOTHICB.ttf\"),\r\n    [FontName.CenturyGothicItalic]: require(\"../assets/fonts/GOTHICI.ttf\"),\r\n  }\r\n\r\n  return FONTS\r\n}\r\n","import { StyleSheet } from \"react-native\"\r\nimport { isLandscapeWeb, isRunningInBrowser } from \"../utilities/utilities\"\r\nimport { FontName } from \"../constants/Fonts\"\r\n\r\nexport const palette = {\r\n  background: \"#E6E6E6\",\r\n  backgroundLight: \"#F5F5F5\",\r\n  textOnBackground: \"#5A5A5A\",\r\n  navigationBackground: \"#1C5D8F\",\r\n  text: \"#525252\",\r\n  numbers: \"#888888\",\r\n  grayedOut: \"#888888\",\r\n  grayishBlue: \"#4A6172\",\r\n  ongoingClass: \"rgb(227, 239, 249)\",\r\n}\r\n\r\nexport const globalStyles = StyleSheet.create({\r\n  container: {\r\n    padding: 20,\r\n  },\r\n\r\n  scrollView: {\r\n    marginBottom: 80, // to make sure last item is visible.\r\n    // there is other way to do that: via flex\r\n  },\r\n\r\n  screen: {\r\n    flex: 1,\r\n    // backgroundColor: \"#E6E6E6\",\r\n    backgroundColor: palette.backgroundLight,\r\n    padding: 0, // I don't know what's a sensible value for this. Will figure out later\r\n  },\r\n\r\n  centered: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  text: {\r\n    fontFamily: FontName.CinzelRegular,\r\n    fontSize: 18,\r\n  },\r\n\r\n  paragraph: {\r\n    marginVertical: 8,\r\n    lineHeight: 20,\r\n  },\r\n\r\n  sectionHeader: {\r\n    marginLeft: 24,\r\n  },\r\n\r\n  input: {\r\n    borderWidth: 1,\r\n    borderColor: \"#ddd\",\r\n    padding: 10,\r\n    fontSize: 18,\r\n    borderRadius: 6,\r\n    marginBottom: 10,\r\n  },\r\n\r\n  errorText: {\r\n    color: \"crimson\",\r\n    fontWeight: \"bold\",\r\n    marginBottom: 10,\r\n    marginTop: 6,\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  navIcon: {\r\n    color: \"white\",\r\n    paddingHorizontal: 16,\r\n    paddingRight: 10,\r\n  },\r\n\r\n  separator: {\r\n    height: 1, // haha\r\n    width: \"100%\",\r\n    backgroundColor: \"#E6E6E6\",\r\n  },\r\n\r\n  noDisplay: {\r\n    display: \"none\",\r\n    margin: 0,\r\n    padding: 0,\r\n    width: 0,\r\n    height: 0,\r\n    zIndex: -1,\r\n  },\r\n\r\n  invisible: {\r\n    opacity: 0,\r\n  },\r\n\r\n  row: {\r\n    flexDirection: \"row\",\r\n  },\r\n\r\n  grayIcon: {\r\n    color: \"rgba(136,136,136,1)\",\r\n    fontSize: 26,\r\n  },\r\n\r\n  card: {\r\n    borderRadius: 6,\r\n    backgroundColor: \"white\",\r\n\r\n    paddingVertical: 2,\r\n    paddingHorizontal: 5,\r\n\r\n    elevation: 1,\r\n    shadowOffset: { width: 1, height: 1 },\r\n    shadowColor: \"#333\",\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 2,\r\n  },\r\n\r\n  link: {\r\n    color: palette.navigationBackground,\r\n  },\r\n\r\n  underlinedLink: {\r\n    color: palette.navigationBackground,\r\n    textDecorationLine: \"underline\",\r\n  },\r\n\r\n  captionWithIcon: {\r\n    marginLeft: -3,\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  navigationButton: {\r\n    borderColor: palette.navigationBackground,\r\n    borderWidth: 1,\r\n\r\n    // paddingHorizontal: 15,\r\n    paddingVertical: 5,\r\n\r\n    borderRadius: 10,\r\n\r\n    width: 75,\r\n\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  modalContentContainer: {\r\n    position: \"absolute\",\r\n    top: \"10%\",\r\n\r\n    margin: 30,\r\n    marginHorizontal: isLandscapeWeb() ? \"35%\" : \"2%\", // 27 + 8 for sidebar\r\n    padding: 20,\r\n    borderRadius: 10,\r\n    backgroundColor: \"white\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: isLandscapeWeb() ? \"45%\" : \"95%\",\r\n  },\r\n\r\n  searchBar: {\r\n    fontSize: 12,\r\n    flex: 1,\r\n    fontFamily: FontName.Montserrat500,\r\n    paddingVertical: 2,\r\n  },\r\n\r\n  horizontalCenteredFlex: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n})\r\n","export enum DrawerRoutes {\r\n  VIEWER = \"Мій Розклад\",\r\n  REGLAMENT = \"Регламент\",\r\n  TEACHERS = \"Викладачі\",\r\n  CONTACTS = \"Контакти\",\r\n  NEWS = \"Новини\",\r\n\r\n  TESTS = \"Тести\",\r\n  QnA = \"Q&A\",\r\n  EDITOR = \"Редактор\",\r\n  SETTINGS = \"Налаштування\",\r\n  ABOUT = \"Про Застосунок\",\r\n}\r\n","import { Ionicons, FontAwesome5, FontAwesome } from \"@expo/vector-icons\"\r\nimport { DrawerRoutes } from \"../routes/DrawerRoutes\"\r\n\r\ntype RouteIconsType = {\r\n  [key in DrawerRoutes]: JSX.Element\r\n}\r\n\r\nconst RouteIcons: RouteIconsType = {\r\n  [DrawerRoutes.VIEWER]: <Ionicons name=\"calendar\" color={\"white\"} size={18} />,\r\n  [DrawerRoutes.REGLAMENT]: <Ionicons name=\"time-sharp\" color={\"white\"} size={18} />,\r\n  [DrawerRoutes.TEACHERS]: <FontAwesome5 name=\"user-graduate\" color={\"white\"} size={18} />,\r\n  [DrawerRoutes.CONTACTS]: <Ionicons name=\"call\" color={\"white\"} size={18} />,\r\n  [DrawerRoutes.NEWS]: <Ionicons name=\"chatbox-ellipses\" color={\"white\"} size={18} />,\r\n  [DrawerRoutes.QnA]: <FontAwesome name=\"comments\" color={\"white\"} size={18} />,\r\n\r\n  [DrawerRoutes.TESTS]: <Ionicons name=\"flask\" color={\"white\"} size={18} />,\r\n  [DrawerRoutes.EDITOR]: <Ionicons name=\"options\" color={\"white\"} size={18} />,\r\n  [DrawerRoutes.SETTINGS]: <FontAwesome5 name=\"cog\" color={\"white\"} size={18} />,\r\n  [DrawerRoutes.ABOUT]: <Ionicons name=\"information-circle\" color={\"white\"} size={18} />,\r\n}\r\n\r\nexport default RouteIcons\r\n","import React from \"react\"\r\nimport { StyleSheet, Text, View } from \"react-native\"\r\nimport { FontAwesome5, Ionicons, MaterialIcons } from \"@expo/vector-icons\"\r\nimport { SafeAreaView } from \"react-native-safe-area-context\"\r\nimport { globalStyles } from \"../styles/global\"\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport { isHorizontalOrientation, isLandscapeWeb } from \"../utilities/utilities\"\r\nimport RouteIcons from \"../constants/RouteIcons\"\r\nimport { FontName } from \"../constants/Fonts\"\r\n\r\nexport function getIcon(navigation, headerText: string) {\r\n  const RouteIconConstructor = RouteIcons[headerText].type\r\n  const RouteIcon = <RouteIconConstructor {...RouteIcons[headerText].props} style={globalStyles.navIcon} />\r\n\r\n  const iconOnPress = () => navigation.openDrawer()\r\n\r\n  const icon = isLandscapeWeb() ? (\r\n    RouteIcon\r\n  ) : (\r\n    <MaterialIcons onPress={iconOnPress} name=\"menu\" size={24} style={globalStyles.navIcon} />\r\n  )\r\n\r\n  return icon\r\n}\r\n\r\nfunction BaseHeader({ title, navigation }) {\r\n  // extract current screen name from navigation state\r\n  const headerText = title\r\n\r\n  const icon = getIcon(navigation, headerText)\r\n\r\n  return (\r\n    <View style={styles.headerContentContainer}>\r\n      <TouchableOpacity>{icon}</TouchableOpacity>\r\n\r\n      <Text style={styles.headerText}>{headerText}</Text>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default function GlobalHeader({\r\n  title,\r\n  navigation,\r\n  headerContent: headerContentElement,\r\n}: {\r\n  title: string\r\n  navigation: any\r\n  headerContent?: React.ReactNode\r\n}) {\r\n  return (\r\n    <SafeAreaView style={styles.header}>\r\n      {headerContentElement ? headerContentElement : <BaseHeader title={title} navigation={navigation} />}\r\n    </SafeAreaView>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  header: {\r\n    paddingVertical: 15,\r\n    width: \"100%\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#1C5D8F\",\r\n  },\r\n\r\n  headerText: {\r\n    fontSize: 20,\r\n    color: \"white\",\r\n    fontFamily: FontName.CenturyGothic,\r\n  },\r\n\r\n  headerContentContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n  },\r\n})\r\n","export const previewImages = {\r\n  schedule: require(\"../assets/images/previews/schedule-preview.png\"),\r\n  scheduleCropped: require(\"../assets/images/previews/schedule-view-cropped-preview-3.png\"),\r\n  reglamentPreview: require(\"../assets/images/previews/reglament-preview.png\"),\r\n  settingsPreview: require(\"../assets/images/previews/settings-preview.png\"),\r\n  editorPreview: require(\"../assets/images/previews/editor-preview.png\"),\r\n}\r\n\r\nexport const previewImagesFull = {\r\n  schedule: require(\"../assets/images/previews/previews-full/schedule-view-highlight.png\"),\r\n  reglamentPreview: require(\"../assets/images/previews/previews-full/reglament.png\"),\r\n  editorPreview: require(\"../assets/images/previews/previews-full/editor-view-preview.png\"),\r\n  settingsPreview: require(\"../assets/images/previews/previews-full/settings.png\"),\r\n}\r\n\r\nexport const images = {\r\n  uad_logo_text: require(\"../assets/images/uad_logo_text.svg\"),\r\n  uad_logo_text_not_vector: require(\"../assets/images/uad_logo_text_not_vector.png\"),\r\n  uad_logo_text_not_vector_hires: require(\"../assets/images/uad_logo_text_not_vector_hires.png\"),\r\n}\r\n\r\nexport const teamMemberImages = {\r\n  senchyk_andrii: require(\"../assets/images/team/senchyk_andrii.png\"),\r\n  zakharova_zarina: require(\"../assets/images/team/zakharova_zarina.png\"),\r\n  shepita_julia: require(\"../assets/images/team/shepita_julia.png\"),\r\n  ivanov_mykhailo: require(\"../assets/images/team/ivanov_mykhailo.png\"),\r\n}\r\n\r\nexport const editorImages = {\r\n  lightbulb: require(\"../assets/images/editor/lightbulb-nontrasparent-fixed.png\"),\r\n}\r\n\r\nexport const drawerMenuImages = {\r\n  uad_logo_white_outline: require(\"../assets/images/uad-logo-white-outline.png\"),\r\n}\r\n\r\nexport const imageIcons = {\r\n  museum: require(\"../assets/image_icons/museum.png\"),\r\n  tiktok: require(\"../assets/image_icons/tiktok.png\"),\r\n}\r\n","export const EXAMPLE_NEWS = [\r\n    {\r\n      title: \"Новина 1\",\r\n      body: \"Текст новини 1\",\r\n      createdAt: \"2021-06-01T00:00:00.000Z\",\r\n    },\r\n    {\r\n      title: \"Новина 2\",\r\n      body: \"Текст новини 2\",\r\n      createdAt: \"2022-06-02T00:00:00.000Z\",\r\n    },\r\n    {\r\n      title: \"Новина 3\",\r\n      body: \"Текст новини 3\",\r\n      createdAt: \"2023-06-03T00:00:00.000Z\",\r\n    },\r\n  ]","// This is a singleton service that loads news from contenful and provides it to the rest of the application\r\n\r\nimport { EXAMPLE_NEWS } from \"../constants/ExampleData\"\r\nimport { getContentfulClient } from \"../utilities/utilities\"\r\n\r\ntype ContentfulNewsArticleFields = {\r\n  title: string\r\n  body: string\r\n}\r\n\r\nexport type NewsArticle = {\r\n  title: string\r\n  body: string\r\n  createdAt: string\r\n}\r\n\r\nexport default class NewsLoaderService {\r\n  protected static instance: NewsLoaderService\r\n\r\n  protected _newsCached: NewsArticle[] = []\r\n\r\n  static async GetInstance(): Promise<NewsLoaderService> {\r\n    if (!this.instance) {\r\n      this.instance = new this()\r\n      await this.instance.init()\r\n\r\n      console.log(`[${this.name}] news loader service instance constructed successfully`)\r\n    }\r\n\r\n    return this.instance\r\n  }\r\n\r\n  protected constructor() {}\r\n\r\n  protected async init() {}\r\n\r\n  async getNewsFromContentful(): Promise<NewsArticle[]> {\r\n    // retrieve schedules from contentful\r\n    console.log(`[News Loader] retrieving news from contentful`)\r\n\r\n    if (this._newsCached.length > 0) {\r\n      console.log(`[News Loader] returning cached news`)\r\n      return this._newsCached\r\n    }\r\n\r\n    const entries = await this.fetchContentfulEntries()\r\n\r\n    let news = entries.items.map((entry) => {\r\n      const { title, body } = entry.fields as ContentfulNewsArticleFields\r\n      const createdAt = entry.sys.createdAt\r\n      return {\r\n        title,\r\n        body,\r\n        createdAt,\r\n      }\r\n    })\r\n\r\n    // sort news by date\r\n    news = news.sort((a, b) => {\r\n      return new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()\r\n    })\r\n\r\n    console.log(`[News Loader] entries: ${JSON.stringify(news)}`)\r\n\r\n    this._newsCached = news\r\n    return news\r\n  }\r\n\r\n  async fetchContentfulEntries() {\r\n    const client = getContentfulClient()\r\n\r\n    const content_type = \"newsArticle\"\r\n    const entries = await client.getEntries({\r\n      content_type,\r\n    })\r\n\r\n    return entries\r\n  }\r\n\r\n  getExampleNews(): NewsArticle[] {\r\n    return EXAMPLE_NEWS\r\n  }\r\n\r\n  // TODO: move to utilities\r\n  async getNewestArticleDate(): Promise<Date> {\r\n    let news = await this.getNewsFromContentful()\r\n    return new Date(news[0].createdAt)\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport { View } from \"react-native\"\r\nimport { palette } from \"../styles/global\"\r\n\r\nexport function YellowCircle({ filled = true }: { filled?: boolean }) {\r\n  return (\r\n    <View\r\n      style={{\r\n        marginLeft: 10,\r\n        marginTop: 5,\r\n\r\n        alignSelf: \"flex-start\",\r\n\r\n        width: 5,\r\n        height: 5,\r\n        borderRadius: 10,\r\n        backgroundColor: filled ? \"#FFE600\" : \"transparent\",\r\n        borderWidth: 1,\r\n        borderColor: !filled ? palette.grayedOut : \"transparent\",\r\n      }}\r\n    />\r\n  )\r\n}\r\n","import React, { useRef } from \"react\"\r\nimport { ActivityIndicator, Text, View, StyleSheet, Image } from \"react-native\"\r\nimport { useNavigation, useNavigationState } from \"@react-navigation/native\"\r\nimport { globalStyles, palette } from \"../styles/global\"\r\nimport { drawerMenuImages } from \"../constants/Images\"\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport { DrawerRoutes } from \"../routes/DrawerRoutes\"\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\"\r\nimport NewsLoaderService from \"../services/NewsLoaderService\"\r\nimport { isRunningInExpoGo } from \"../utilities/utilities\"\r\nimport _ from \"lodash\"\r\nimport RouteIcons from \"../constants/RouteIcons\"\r\nimport { YellowCircle } from \"./YellowCircle\"\r\nimport { FontName } from \"../constants/Fonts\"\r\n\r\n// let allIcons = Object.keys(Ionicons.getRawGlyphMap())\r\n// console.log(allIcons)\r\n\r\nlet shouldDisplayYellowCircle = true\r\nNewsLoaderService.GetInstance().then(async (instance) => {\r\n  let newestArticleDate = await instance.getNewestArticleDate()\r\n  let lastSeenArticle = await AsyncStorage.getItem(\"newsChecked\")\r\n  let lastSeenArticleDate = lastSeenArticle ? new Date(lastSeenArticle) : null\r\n\r\n  console.log(\"newestArticleDate\", newestArticleDate)\r\n  console.log(\"lastSeenArticleDate\", lastSeenArticleDate)\r\n\r\n  if (!lastSeenArticleDate || newestArticleDate.getTime() > lastSeenArticleDate.getTime()) {\r\n    shouldDisplayYellowCircle = true\r\n  } else {\r\n    shouldDisplayYellowCircle = false\r\n  }\r\n\r\n  console.log(\"shouldDisplayYellowCircle: \", shouldDisplayYellowCircle)\r\n})\r\n\r\nexport default function DrawerMenu() {\r\n  const routeNameToIconRef = useRef(RouteIcons)\r\n\r\n  const navigation = useNavigation()\r\n  console.log(\"navigation\", navigation)\r\n\r\n  const handleNavigationButtonPress = (screenName: DrawerRoutes) => {\r\n    console.log(\"handlePageLinkPress\", screenName)\r\n    // @ts-ignore\r\n    navigation.navigate(screenName)\r\n  }\r\n\r\n  // Get all the routes from the navigation state\r\n  let routesContainer = useNavigationState((state) => state)\r\n  //   console.log(\"routes\", routesContainer)\r\n\r\n  if (routesContainer && routesContainer.routes) {\r\n    const isRunningInExpoGo_ = isRunningInExpoGo()\r\n\r\n    let routes = routesContainer.routes\r\n\r\n    let breakpoint = routes.length - 5\r\n    let topRoutes = routes.slice(0, breakpoint)\r\n    let bottomRoutes = routes.slice(breakpoint, routes.length)\r\n\r\n    if (!isRunningInExpoGo_) {\r\n      _.remove(bottomRoutes, (route) => route.name == DrawerRoutes.TESTS)\r\n    }\r\n\r\n    let currentRouteIndex = routesContainer.index\r\n    let currentRoute = routes[currentRouteIndex]\r\n\r\n    // NavigationRoute type isn't exported, thus I have to use typeof here\r\n    const RouteButton = ({ route, index }: { route: typeof currentRoute; index: number }) => {\r\n      const routeName = route.name as DrawerRoutes\r\n\r\n      const isCurrentRoute = routeName == currentRoute.name\r\n      const isNewsRoute = routeName == DrawerRoutes.NEWS\r\n\r\n      const yellowCircle =\r\n        shouldDisplayYellowCircle && isNewsRoute ? <YellowCircle /> : <View style={globalStyles.noDisplay} />\r\n\r\n      return (\r\n        <TouchableOpacity\r\n          key={index}\r\n          onPress={() => {\r\n            if (isNewsRoute) {\r\n              shouldDisplayYellowCircle = false\r\n              AsyncStorage.setItem(\"newsChecked\", new Date().toString())\r\n            }\r\n\r\n            handleNavigationButtonPress(routeName)\r\n          }}\r\n        >\r\n          <View\r\n            style={{\r\n              ...styles.pageLinkContainer,\r\n              ...(isCurrentRoute ? styles.activePageLink : {}),\r\n            }}\r\n          >\r\n            {routeNameToIconRef.current[routeName]}\r\n            <Text style={styles.pageLink}>{route.name}</Text>\r\n            {yellowCircle}\r\n          </View>\r\n        </TouchableOpacity>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <View style={styles.drawerContainer}>\r\n        <View>\r\n          <View style={styles.drawerContainerHeader}>\r\n            <Image\r\n              style={{ width: 35, height: 40, marginRight: 15 }}\r\n              source={drawerMenuImages.uad_logo_white_outline}\r\n            />\r\n            <Text style={{ fontSize: 24, fontFamily: FontName.CenturyGothic, color: \"white\" }}>Розклад</Text>\r\n          </View>\r\n          {topRoutes.map((route, index: number) => {\r\n            return <RouteButton key={index} route={route} index={index} />\r\n          })}\r\n        </View>\r\n\r\n        <View style={styles.drawerContainerBottom}>\r\n          {bottomRoutes.map((route, index: number) => {\r\n            return <RouteButton key={index + topRoutes.length} route={route} index={index + topRoutes.length} />\r\n          })}\r\n        </View>\r\n      </View>\r\n    )\r\n  } else {\r\n    return (\r\n      <View style={{ ...styles.drawerContainer, ...globalStyles.centered }}>\r\n        <ActivityIndicator size={\"large\"} color={palette.navigationBackground} />\r\n      </View>\r\n    )\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  pageLinkContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 20,\r\n  },\r\n  pageLink: {\r\n    fontSize: 18,\r\n    marginLeft: 10,\r\n    color: \"white\",\r\n    fontFamily: FontName.CenturyGothic,\r\n  },\r\n\r\n  drawerContainer: {\r\n    flex: 1,\r\n    justifyContent: \"space-between\",\r\n\r\n    backgroundColor: \"#1C5D8F\",\r\n    paddingTop: 35,\r\n    paddingBottom: 25,\r\n  },\r\n\r\n  drawerContainerBottom: {},\r\n\r\n  activePageLink: {\r\n    // backgroundColor: \"lightblue\",\r\n    backgroundColor: \"rgba(37, 150, 190, 0.7)\",\r\n    // opacity: 0.5,\r\n  },\r\n\r\n  drawerContainerHeader: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n\r\n    marginBottom: 25,\r\n    paddingBottom: 15,\r\n\r\n    paddingHorizontal: 20,\r\n\r\n    borderBottomColor: \"rgba(0,0,0,0.1)\",\r\n    borderBottomWidth: 1,\r\n  },\r\n})\r\n","import { GetTimeDifference } from \"./utilities\"\r\n\r\nexport enum WeekType {\r\n  Nominator,\r\n  Denominator,\r\n}\r\n\r\n// month/day/year\r\n// const SEMESTER_START = new Date(\"10/3/2022\") // such string notation doesn't work in react native\r\nconst SEMESTER_START = new Date(2022, 9, 3) // month is 0-based\r\nconst SEMESTER_START_TYPE = WeekType.Denominator\r\n\r\nexport default function GetWeekType(timepoint = new Date()): WeekType {\r\n  // let timepoint = new Date()\r\n  let timeDifferenceInHours = GetTimeDifference(SEMESTER_START, timepoint).hours\r\n  let timeDifferenceInDays = timeDifferenceInHours / 24\r\n  let timeDifferenceInWeeks = Math.trunc(timeDifferenceInDays / 7)\r\n\r\n  if (timeDifferenceInWeeks % 2 == 0) {\r\n    if (SEMESTER_START_TYPE === WeekType.Denominator) {\r\n      return WeekType.Denominator\r\n    }\r\n    return WeekType.Nominator\r\n  } else {\r\n    if (SEMESTER_START_TYPE === WeekType.Denominator) {\r\n      return WeekType.Nominator\r\n    }\r\n    return WeekType.Denominator\r\n  }\r\n}\r\n","// checks whether index is not out of bounds and throws an error if it is\r\n// TODO: deprecate maybe\r\nexport default function getStrict(array: Array<any>, index: number) {\r\n  if (index >= array.length || index < 0) {\r\n    throw new Error(`[Array Indexing] Index out of bounds: ${index} (length: ${array.length})`)\r\n  }\r\n  return array[index]\r\n}\r\n","export const daysInShortenedForm = [\"Пн\", \"Вт\", \"Ср\", \"Чт\", \"Пт\"]\r\nexport const localizedDays = [\"Неділя\", \"Понеділок\", \"Вівторок\", \"Середа\", \"Четвер\", \"П'ятниця\", \"Субота\"]\r\n\r\nexport const workDays = [\"Понеділок\", \"Вівторок\", \"Середа\", \"Четвер\", \"П'ятниця\"]\r\nexport const workDaysEn = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"]\r\nexport const workDaysEnLower = workDaysEn.map((day) => day.toLowerCase())\r\n\r\nexport function mapEnWorkDayToUkrWorkDay(day: string): string {\r\n  let index = workDaysEnLower.indexOf(day.toLowerCase())\r\n  return workDays[index]\r\n}\r\n\r\nexport function mapUkrWorkDayToEnWorkDay(day: string): string {\r\n  day = day.toLowerCase()\r\n  let workDaysLower = workDays.map((d) => d.toLowerCase())\r\n\r\n  let index = workDaysLower.indexOf(day)\r\n  return workDaysEn[index]\r\n}\r\n","import GetWeekType from \"../utilities/getWeekType\"\r\nimport { determineInterval } from \"../utilities/utilities\"\r\nimport getStrict from \"../utilities/getStrict\"\r\nimport { workDaysEnLower } from \"../constants/Days\"\r\nimport { REGLAMENT_DATA } from \"../constants/Constants\"\r\n\r\nexport enum CLASS_TYPE {\r\n  LECTURE = \"Лекція\",\r\n  PRACTICE = \"Практична\",\r\n  LAB = \"Лабораторна\",\r\n}\r\n\r\nexport const CLASS_TYPE_SHORT = {\r\n  [CLASS_TYPE.LECTURE]: \"Лек\",\r\n  [CLASS_TYPE.PRACTICE]: \"Прак\",\r\n  [CLASS_TYPE.LAB]: \"Лаб\",\r\n}\r\n\r\nexport type ScheduleClassFields = {\r\n  index: number\r\n  isBiweekly: boolean\r\n  week: 1 | 2\r\n  name: string\r\n  teacher: string | string[]\r\n  room: string | string[]\r\n  isSharedClass: boolean\r\n\r\n  classType: CLASS_TYPE\r\n}\r\nexport interface IScheduleClass extends ScheduleClassFields {\r\n  getUniqueStringSignature(): string\r\n}\r\n\r\nexport class ScheduleClass implements IScheduleClass {\r\n  index: number\r\n  isBiweekly: boolean\r\n  week: 1 | 2 // 1 or 2, 1 - чисельник, 2 - знаменник\r\n  name: string\r\n  teacher: string | string[]\r\n  room: string | string[]\r\n  isSharedClass: boolean\r\n\r\n  day: string\r\n  weekName: string = \"\"\r\n\r\n  classType: CLASS_TYPE\r\n\r\n  constructor(data: ScheduleClassFields, day: string) {\r\n    this.index = data.index\r\n    this.isBiweekly = data.isBiweekly ?? false\r\n    this.name = data.name\r\n\r\n    // here you make assumptions as you parse the data (that separator character is pipe).\r\n    // Perhaps that's not the right place for such things\r\n    let teacherSeparator = \"|\"\r\n    if (typeof data.teacher == \"string\" && data.teacher.includes(teacherSeparator)) {\r\n      this.teacher = data.teacher.split(teacherSeparator)\r\n    } else {\r\n      this.teacher = data.teacher\r\n    }\r\n\r\n    let roomSeparator = \"|\"\r\n    if (typeof data.room == \"string\" && data.room.includes(roomSeparator)) {\r\n      this.room = data.room.split(roomSeparator)\r\n    } else {\r\n      this.room = data.room\r\n    }\r\n\r\n    this.isSharedClass = data.isSharedClass\r\n    this.day = day\r\n\r\n    this.classType = data.classType ?? CLASS_TYPE.LECTURE\r\n\r\n    this.setWeek(data.week)\r\n  }\r\n\r\n  static sampleName = \"Редагувати\"\r\n  static sampleTeacher = \"Викладач не зазначений\"\r\n  static sampleRoom = \"...\"\r\n\r\n  static GetPlaceholder(day: string, index: number, week: 1 | 2) {\r\n    return new ScheduleClass(\r\n      {\r\n        index,\r\n        isBiweekly: true,\r\n        week,\r\n        name: this.sampleName,\r\n        teacher: this.sampleTeacher,\r\n        room: this.sampleRoom,\r\n        isSharedClass: false,\r\n      },\r\n      day\r\n    )\r\n  }\r\n\r\n  setWeek(week: 1 | 2) {\r\n    this.week = week\r\n    this.weekName = this.isBiweekly ? (this.week === 1 ? \"Чисельник\" : \"Знаменник\") : \"\"\r\n  }\r\n\r\n  getUniqueStringSignature(): string {\r\n    return `[${this.day} * ${this.index}] ${this.name} * ${this.teacher} * ${this.room} <${this.weekName}>})`\r\n  }\r\n\r\n  isCurrent() {\r\n    // debugger\r\n    // return this.index == 3\r\n    let isInCurrentDay = this.day == workDaysEnLower[new Date().getDay() - 1]\r\n\r\n    if (!isInCurrentDay) return false\r\n\r\n    let isInCurrentTimeSlot = determineInterval() == getStrict(REGLAMENT_DATA, this.index - 1)\r\n    let isMatchingWeekType = GetWeekType() + 1 == this.week\r\n    let isOngoingClass = isInCurrentTimeSlot && (!this.isBiweekly || isMatchingWeekType)\r\n\r\n    return isOngoingClass\r\n  }\r\n\r\n  isSampleClass() {\r\n    // TODO: find better way to compare lists\r\n    let isSample =\r\n      this.name == ScheduleClass.sampleName &&\r\n      this.room == ScheduleClass.sampleRoom &&\r\n      this.teacher.toString() == [ScheduleClass.sampleTeacher].toString()\r\n\r\n    return isSample\r\n  }\r\n}\r\n","import teachersJson from \"../assets/teachers.json\"\r\n\r\nimport Fuse from \"fuse.js\"\r\n\r\n// TODO: make teacher model\r\n\r\ntype Teacher = {\r\n  \"ПІБ викладача\": string\r\n  Кваліфікаця: string\r\n  \"E-mail\": string\r\n  \"Кафедра Абревіатура\": string\r\n  \"Кафедра Повна назва\": string\r\n  \"Кафедра Посилання\": string\r\n  \"№\": number\r\n}\r\n\r\nexport default class TeacherModel {\r\n  teachers = teachersJson\r\n  teachersFuse = new Fuse(this.teachers, {\r\n    keys: [\"ПІБ викладача\"],\r\n    threshold: 0.3,\r\n  })\r\n\r\n  private static instance: TeacherModel\r\n\r\n  static GetInstance(): TeacherModel {\r\n    if (!TeacherModel.instance) {\r\n      TeacherModel.instance = new TeacherModel()\r\n    }\r\n\r\n    return TeacherModel.instance\r\n  }\r\n\r\n  private constructor() {\r\n    console.log(\"teacher table model constructed successfully\")\r\n  }\r\n\r\n  getTeacherBySurname(surname: string): Teacher | string {\r\n    if (typeof surname != \"string\") return \"Викладача не знайдено\"\r\n\r\n    let match = this.teachersFuse.search(surname)\r\n\r\n    if (match.length == 0) return \"Викладача не знайдено\"\r\n\r\n    return match[0].item\r\n  }\r\n\r\n  getFullNameBySurname(surname: string): string {\r\n    let teacher = this.getTeacherBySurname(surname)\r\n    if (teacher == \"Викладача не знайдено\") return surname\r\n\r\n    if (typeof teacher == \"string\") return teacher\r\n    return teacher[\"ПІБ викладача\"]\r\n  }\r\n\r\n  getSurnameAndInitialsBySurname(surname: string): string {\r\n    let teacher = this.getTeacherBySurname(surname)\r\n    if (typeof teacher == \"string\") return surname\r\n\r\n    const teacherFullNameBits = teacher[\"ПІБ викладача\"].split(\" \")\r\n\r\n    surname = teacherFullNameBits[0]\r\n    let name = teacherFullNameBits[1]\r\n    let patronymic = teacherFullNameBits[2]\r\n\r\n    return `${surname} ${name[0]}. ${patronymic[0]}.`\r\n  }\r\n}\r\n","export enum DisplayEmptyDaysMode {\r\n  Display = \"Відображати\",\r\n  Darken = \"Затемняти\",\r\n  Hide = \"Приховати\",\r\n}\r\n\r\nexport enum DisplayTeacherMode {\r\n  Full = \"ПІБ\",\r\n  SurnameAndInitials = \"Прізвище та ініціали\",\r\n  Hide = \"Приховати\",\r\n}\r\n// update place 1 for new setting\r\n\r\nexport type ScheduleAppSettings = {\r\n  currentScheduleName: string\r\n  notifyBeforeClass: boolean\r\n  notifyBeforeClassOffsetMinutes: number\r\n  displayRoomNumber: boolean\r\n  displayTeacherName: DisplayTeacherMode\r\n\r\n  displayEmptyRows: boolean // TODO: use enum here\r\n  displayEmptyDays: DisplayEmptyDaysMode\r\n}\r\nexport interface ISettingsService extends ScheduleAppSettings {\r\n  saveToStorage: () => Promise<void>\r\n  readFromStorage: () => Promise<ScheduleAppSettings | null>\r\n}\r\n","import React from \"react\"\r\nimport SettingsService from \"../services/SettingsService/SettingsService\"\r\n\r\nexport const SettingsContext = React.createContext<SettingsService | null>(null)\r\n","import React from \"react\"\r\nimport { View, Text, StyleSheet } from \"react-native\"\r\nimport { TextProps } from \"react-native-elements\"\r\nimport { palette } from \"../../styles/global\"\r\n\r\n// export default class AppText extends Text {\r\n\r\n//     render(){\r\n//         return <Text style={[styles.appText, this.props.style]}>{this.props.children}</Text>\r\n//     }\r\n\r\n// }\r\n\r\nexport default function AppText(props: TextProps) {\r\n  return (\r\n    <Text android_hyphenationFrequency=\"full\" {...props} style={[styles.appText, props.style]}>\r\n      {props.children}\r\n    </Text>\r\n  )\r\n}\r\n\r\n// AppText.propTypes = {\r\n//   ...Text.propTypes,\r\n//   // add any additional propTypes here\r\n// }\r\n\r\nconst styles = StyleSheet.create({\r\n  appText: {\r\n    fontFamily: \"montserrat-medium\",\r\n    fontSize: 12,\r\n    // letterSpacing: -0.5,\r\n    color: palette.text,\r\n  },\r\n})\r\n","import React from \"react\"\r\nimport { View, Text, StyleSheet } from \"react-native\"\r\nimport { TextProps } from \"react-native-elements\"\r\nimport { palette } from \"../../styles/global\"\r\nimport AppText from \"../shared/AppText\"\r\nimport { FontName } from \"../../constants/Fonts\"\r\n\r\nexport default function ScheduleText(props: TextProps) {\r\n  return (\r\n    //     backgroundColor: \"rgb(227, 239, 249)\",\r\n\r\n    <AppText\r\n      // selectionColor={\"rgb(227, 239, 249)\"}\r\n      // selectable={true}\r\n      android_hyphenationFrequency=\"full\"\r\n      {...props}\r\n      style={[styles.appText, props.style]}\r\n    >\r\n      {props.children}\r\n    </AppText>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  appText: {\r\n    fontFamily: FontName.MontserratMedium,\r\n    fontSize: 12,\r\n    letterSpacing: -0.5,\r\n    color: palette.text,\r\n  },\r\n})\r\n","import React from \"react\"\r\nimport { WeekType } from \"../utilities/getWeekType\"\r\n\r\nexport const WeekTypeContext = React.createContext<WeekType | null>(null)\r\n","import React, { useContext, useEffect, useState } from \"react\"\r\nimport { View, Text, StyleSheet, useWindowDimensions, ActivityIndicator, ToastAndroid } from \"react-native\"\r\nimport { CLASS_TYPE_SHORT } from \"../../models/ScheduleClass\"\r\nimport { CLASS_TYPE } from \"../../models/ScheduleClass\"\r\nimport { ScheduleClass } from \"../../models/ScheduleClass\"\r\nimport { globalStyles, palette } from \"../../styles/global\"\r\nimport getStrict from \"../../utilities/getStrict\"\r\nimport { REGLAMENT_DATA } from \"../../constants/Constants\"\r\nimport _ from \"lodash\"\r\nimport TeacherModel from \"../../models/TeacherModel\"\r\nimport SettingsService from \"../../services/SettingsService/SettingsService\"\r\nimport { DisplayTeacherMode } from \"../../services/SettingsService/Types\"\r\nimport { SettingsContext } from \"../../contexts/settingsContext\"\r\nimport ScheduleText from \"./ScheduleText\"\r\nimport * as Clipboard from \"expo-clipboard\"\r\nimport { isRunningInBrowser } from \"../../utilities/utilities\"\r\nimport { WeekTypeContext } from \"../../contexts/weekTypeContext\"\r\nimport GetWeekType from \"../../utilities/getWeekType\"\r\nimport { FontName } from \"../../constants/Fonts\"\r\n\r\nexport const formatRoomName = (scheduleClassInstance: ScheduleClass, unfoldClassText: boolean) => {\r\n  let room = \"\"\r\n\r\n  if (\r\n    scheduleClassInstance.room == \"\" ||\r\n    scheduleClassInstance.room == null ||\r\n    scheduleClassInstance.room == undefined\r\n  ) {\r\n    // collapse all kinds of missing values into empty string\r\n    room = \"\"\r\n  } else {\r\n    if (typeof scheduleClassInstance.room == \"string\") {\r\n      room = scheduleClassInstance.room\r\n    } else if (scheduleClassInstance.room.length != undefined) {\r\n      // array check\r\n      room = scheduleClassInstance.room.join(\"\\n\")\r\n    }\r\n  }\r\n\r\n  // pad dots with spaces\r\n  room = room.replace(/\\.(?!\\s)/g, \". \")\r\n\r\n  if (!unfoldClassText) {\r\n    room = room.split(\"\\n\")[0]\r\n  }\r\n\r\n  return room\r\n}\r\n\r\nexport const formatTeacherName = (\r\n  scheduleClassInstance: ScheduleClass,\r\n  isEditable: boolean,\r\n  settings: SettingsService | null // can be null if isEditable is true\r\n) => {\r\n  let teacher = \"\"\r\n\r\n  let teacherTable = TeacherModel.GetInstance()\r\n  let teacherSurname = scheduleClassInstance.teacher\r\n  if (teacherSurname == null) {\r\n    teacher = \"...\"\r\n  } else if (typeof teacherSurname != \"string\") {\r\n    if (teacherSurname.length == 1) {\r\n      teacher = teacherTable.getFullNameBySurname(teacherSurname[0])\r\n    } else {\r\n      let teachers = teacherSurname.map((sn) => teacherTable.getSurnameAndInitialsBySurname(sn))\r\n      teacher = teachers.join(\", \")\r\n    }\r\n  } else {\r\n    let displayTeacherNameMode = isEditable ? DisplayTeacherMode.Full : settings!.displayTeacherName\r\n\r\n    if (displayTeacherNameMode == DisplayTeacherMode.Full) {\r\n      teacher = teacherTable.getFullNameBySurname(teacherSurname)\r\n    } else if (displayTeacherNameMode == DisplayTeacherMode.SurnameAndInitials) {\r\n      teacher = teacherTable.getSurnameAndInitialsBySurname(teacherSurname)\r\n    }\r\n  }\r\n\r\n  return teacher\r\n}\r\n\r\nexport type ScheduleClassComponentProps = {\r\n  scheduleClassInstance: ScheduleClass\r\n  idx: number\r\n  displayRoomNumber: boolean\r\n  isEditable?: boolean\r\n  highlightAsOngoing?: boolean\r\n}\r\n\r\nexport default function ScheduleClassComponent({\r\n  scheduleClassInstance,\r\n  idx,\r\n  displayRoomNumber,\r\n  isEditable = false,\r\n  highlightAsOngoing = false,\r\n}: ScheduleClassComponentProps) {\r\n  let [state, setState] = React.useState({})\r\n  let isCurrentClassRef = React.useRef(scheduleClassInstance.isCurrent())\r\n\r\n  const [unfoldClassText, setUnfoldClassText] = React.useState(isEditable)\r\n  const [unfoldTeacherText, setUnfoldTeacherText] = React.useState(isEditable)\r\n\r\n  const { height, width } = useWindowDimensions()\r\n  const settings = useContext(SettingsContext)\r\n  const selectedWeekType = useContext(WeekTypeContext)\r\n\r\n  let [isOngoingClass, setIsOngoingClass] = useState(false)\r\n  let className = scheduleClassInstance.name\r\n  let room = formatRoomName(scheduleClassInstance, unfoldClassText)\r\n  let teacher = formatTeacherName(scheduleClassInstance, isEditable, settings) // need to run this on every rerender because teacher name could have changed in settings\r\n\r\n  let shouldDisplayTeacher = isEditable || settings!.displayTeacherName != DisplayTeacherMode.Hide\r\n\r\n  const [isReady, setIsReady] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const rerenderInterval = setInterval(() => {\r\n      // periodically re-render component to update ongoing class\r\n\r\n      let isCurrentClass = scheduleClassInstance.isCurrent()\r\n      let wasCurrent = isCurrentClassRef.current\r\n\r\n      if (isCurrentClass != wasCurrent) {\r\n        isCurrentClassRef.current = isCurrentClass\r\n        setState({})\r\n      }\r\n    }, 15000)\r\n\r\n    async function init() {\r\n      let isOngoingClass = scheduleClassInstance.isCurrent() && selectedWeekType == GetWeekType()\r\n\r\n      setIsOngoingClass(isOngoingClass)\r\n      setIsReady(true)\r\n    }\r\n\r\n    init()\r\n\r\n    return () => clearInterval(rerenderInterval)\r\n  }, [])\r\n\r\n  let reglamentClass = getStrict(REGLAMENT_DATA, scheduleClassInstance.index - 1)\r\n\r\n  let classStart: string = reglamentClass[1]\r\n  if (classStart.length == 4) classStart = \"0\" + classStart\r\n\r\n  const classEnd: string = reglamentClass[2]\r\n\r\n  if (!isReady) {\r\n    return (\r\n      <View style={[{ paddingVertical: 10 }]}>\r\n        <ActivityIndicator size=\"small\" color={palette.navigationBackground} />\r\n      </View>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <View key={idx}>\r\n      <View\r\n        style={{ ...styles.classContainer, ...(isOngoingClass || highlightAsOngoing ? styles.ongoingClass : {}) }}\r\n        testID=\"schedule-class\"\r\n      >\r\n        <View style={styles.startAndEndTimesContainer}>\r\n          <ScheduleText style={[styles.text, styles.classStartText]}>{classStart}</ScheduleText>\r\n          <ScheduleText style={[styles.text, styles.classEndText]}>{classEnd} </ScheduleText>\r\n        </View>\r\n        <View style={styles.classAndTeacherBlock}>\r\n          <ScheduleText\r\n            onPress={() => {\r\n              if (isEditable) return\r\n              setUnfoldClassText(!unfoldClassText)\r\n            }}\r\n            // onLongPress={() => null} // necessary for text to be selectable on long press (otherwise onPress will rerender the component in attempt to expand it)\r\n\r\n            onLongPress={() => {\r\n              if (isEditable) return\r\n              Clipboard.setStringAsync(className).then(() => {\r\n                if (isRunningInBrowser()) return\r\n                ToastAndroid.show(\"Скопійовано: предмет\", ToastAndroid.SHORT)\r\n              })\r\n            }}\r\n            style={[styles.classNameText, teacher == \"...\" ? { flexGrow: 0 } : {}]}\r\n            ellipsizeMode=\"tail\"\r\n            numberOfLines={!unfoldClassText ? 1 : 0}\r\n          >\r\n            {className}\r\n          </ScheduleText>\r\n          <ScheduleText\r\n            onPress={() => {\r\n              if (isEditable) return\r\n\r\n              setUnfoldTeacherText(!unfoldTeacherText)\r\n            }}\r\n            // onLongPress={() => null} // necessary for text to be selectable on long press (otherwise onPress will rerender the component in attempt to expand it)\r\n\r\n            onLongPress={() => {\r\n              if (isEditable) return\r\n              Clipboard.setStringAsync(teacher).then(() => {\r\n                if (isRunningInBrowser()) return\r\n                ToastAndroid.show(\"Скопійовано: викладач\", ToastAndroid.SHORT)\r\n              })\r\n            }}\r\n            style={[styles.teacherNameText, !shouldDisplayTeacher || teacher == \"...\" ? globalStyles.noDisplay : {}]}\r\n            ellipsizeMode=\"tail\"\r\n            numberOfLines={!unfoldTeacherText ? 1 : 0}\r\n            testID=\"teacher-text\"\r\n          >\r\n            {teacher}\r\n          </ScheduleText>\r\n        </View>\r\n        <View style={styles.classTypeAndRoomNumberContainer}>\r\n          <View\r\n            style={\r\n              scheduleClassInstance.classType != CLASS_TYPE.LECTURE && !unfoldClassText\r\n                ? styles.roomNumberContainer\r\n                : globalStyles.noDisplay\r\n            }\r\n          >\r\n            <ScheduleText style={styles.roomNumberText}>\r\n              {CLASS_TYPE_SHORT[scheduleClassInstance.classType]}\r\n            </ScheduleText>\r\n          </View>\r\n\r\n          <View style={displayRoomNumber ? styles.roomNumberContainer : globalStyles.noDisplay}>\r\n            <ScheduleText\r\n              onLongPress={() => {\r\n                if (isEditable) return\r\n\r\n                Clipboard.setStringAsync(room).then(() => {\r\n                  if (isRunningInBrowser()) return\r\n                  ToastAndroid.show(\"Скопійовано: аудиторія\", ToastAndroid.SHORT)\r\n                })\r\n              }}\r\n              style={styles.roomNumberText}\r\n            >\r\n              {room}\r\n            </ScheduleText>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  ongoingClass: {\r\n    // backgroundColor: \"rgba(28, 93, 143, 0.1)\",\r\n    backgroundColor: \"rgb(227, 239, 249)\",\r\n  },\r\n\r\n  classContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginVertical: 5,\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 3,\r\n    borderRadius: 5,\r\n  },\r\n\r\n  startAndEndTimesContainer: {\r\n    alignItems: \"flex-start\",\r\n    width: \"10%\",\r\n    marginRight: \"4%\",\r\n  },\r\n\r\n  separator: {\r\n    ...globalStyles.separator,\r\n\r\n    backgroundColor: \"rgba(217, 217, 217, 0.4)\",\r\n  },\r\n\r\n  text: {\r\n    fontFamily: FontName.MontserratRegular,\r\n    color: palette.text,\r\n  },\r\n\r\n  classStartText: {\r\n    fontFamily: FontName.MontserratRegular,\r\n    color: palette.text,\r\n    alignSelf: \"center\",\r\n  },\r\n\r\n  classEndText: {\r\n    fontFamily: FontName.MontserratRegular,\r\n    color: palette.text,\r\n    alignSelf: \"center\",\r\n  },\r\n\r\n  classNameText: {\r\n    fontFamily: FontName.MontserratMedium,\r\n    color: palette.text,\r\n    alignSelf: \"flex-start\",\r\n    textAlign: \"left\",\r\n    flexGrow: 0.5,\r\n  },\r\n\r\n  teacherNameText: {\r\n    fontFamily: FontName.MontserratRegular,\r\n    color: palette.grayedOut,\r\n  },\r\n\r\n  roomNumberText: {\r\n    fontFamily: FontName.MontserratRegular,\r\n    color: palette.text,\r\n    textAlign: \"right\",\r\n  },\r\n\r\n  classTypeAndRoomNumberContainer: {\r\n    width: \"12%\",\r\n  },\r\n\r\n  roomNumberContainer: {\r\n    // flexGrow: 0.12,\r\n    alignItems: \"flex-end\",\r\n    textAlign: \"right\",\r\n  },\r\n\r\n  classAndTeacherBlock: {\r\n    // width: \"74%\",\r\n    flexBasis: \"74%\",\r\n    flexGrow: 1,\r\n    // flexGrow: 0.74,\r\n    // flexGrow: 1,\r\n    alignItems: \"flex-start\",\r\n    textAlign: \"left\",\r\n  },\r\n})\r\n","import React from \"react\"\r\nimport { View, Text, StyleSheet } from \"react-native\"\r\nimport { globalStyles } from \"../../styles/global\"\r\n\r\nexport default function Separator({\r\n  upperElement,\r\n  lowerElement,\r\n  color,\r\n  width = \"100%\",\r\n}: {\r\n  upperElement: any\r\n  lowerElement: any\r\n  color?: string\r\n  width?: string\r\n}) {\r\n  const localStyles = StyleSheet.create({\r\n    separator: {\r\n      ...globalStyles.separator,\r\n      backgroundColor: color || globalStyles.separator.backgroundColor,\r\n      width: width,\r\n      alignSelf: \"center\",\r\n    },\r\n  })\r\n\r\n  if (upperElement && lowerElement) {\r\n    return <View style={localStyles.separator} />\r\n  }\r\n\r\n  return <View style={globalStyles.noDisplay} />\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n})\r\n","import React from \"react\"\r\nimport { useSwipeableItemParams } from \"react-native-swipeable-item\"\r\nimport { TouchableOpacity, View, StyleSheet } from \"react-native\"\r\nimport { Ionicons } from \"@expo/vector-icons\"\r\nimport { globalStyles, palette } from \"../../styles/global\"\r\n\r\n// TODO: hide this component children right when hide animation starts\r\n// TODO: make sure that class start and class end block gets completely hidden when main content is shifted to the side\r\n\r\nexport default function UnderlayRightSide({\r\n  onDeleteButtonPress: onDeleteButtonPress,\r\n}: {\r\n  onDeleteButtonPress: () => void\r\n}) {\r\n  const { close } = useSwipeableItemParams<Item>()\r\n\r\n  return (\r\n    <View style={[globalStyles.row, styles.underlayLeft]}>\r\n      <View>\r\n        <TouchableOpacity\r\n          onPress={(e) => {\r\n            onDeleteButtonPress()\r\n            close()\r\n          }}\r\n        >\r\n          <Ionicons name=\"trash-outline\" size={14} color={palette.grayedOut} />\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  underlayLeft: {\r\n    flex: 1,\r\n    backgroundColor: palette.ongoingClass,\r\n    justifyContent: \"flex-end\",\r\n    alignItems: \"center\",\r\n    marginVertical: 2,\r\n    padding: 10,\r\n    borderRadius: 10,\r\n  },\r\n})\r\n","// web only.\r\n// service for saving edited schedules to local storage\r\n\r\n// TODO: resolve require cycle: EditedScheduleStorageService.ts -> services\\ScheduleLoaderService.ts -> EditedScheduleStorageService.ts\r\n\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\"\r\n\r\nimport ScheduleModel from \"../../models/ScheduleModel\"\r\nimport { workDaysEnLower } from \"../../constants/Days\"\r\nimport ScheduleLoaderService from \"../ScheduleLoaderService/ScheduleLoaderService\"\r\nimport _ from \"lodash\"\r\nimport { ensureExtension } from \"../../utilities/utilities\"\r\nimport { IEditedScheduleStorageService, ScheduleWithMetadata } from \"./Types\"\r\n\r\n// singleton service\r\nexport default class EditedSchedulesStorageService implements IEditedScheduleStorageService {\r\n  private static instance: EditedSchedulesStorageService\r\n\r\n  static async GetInstance(): Promise<EditedSchedulesStorageService> {\r\n    if (!EditedSchedulesStorageService.instance) {\r\n      EditedSchedulesStorageService.instance = new EditedSchedulesStorageService()\r\n\r\n      await EditedSchedulesStorageService.instance.init()\r\n\r\n      console.log(\"EditedScheduleStorageService instance constructed successfully\")\r\n    }\r\n\r\n    return EditedSchedulesStorageService.instance\r\n  }\r\n\r\n  async init() {\r\n    let scheduleLoader = await ScheduleLoaderService.GetInstance()\r\n    // invalidate outdated edited schedules\r\n    const results = scheduleLoader.scheduleFiles.map(async (scheduleFile) => {\r\n      if (await this.isOutdated(scheduleFile.filename)) {\r\n        await this.removeEditedSchedule(scheduleFile.filename)\r\n      }\r\n    })\r\n\r\n    await Promise.all(results)\r\n  }\r\n\r\n  // copies regular schedule to local storage\r\n  async createVersionForEdits(schedule: ScheduleModel) {\r\n    // I wonder if this is enough\r\n    await this.saveEditedSchedule(schedule)\r\n    return schedule\r\n  }\r\n\r\n  // saves schedule with its metadata to local storage\r\n  async saveEditedSchedule(schedule: ScheduleModel): Promise<void> {\r\n    const scheduleLoader = await ScheduleLoaderService.GetInstance()\r\n    const scheduleMetadata = scheduleLoader.getScheduleFileMetadata(\r\n      scheduleLoader.getScheduleFileByFileName(ensureExtension(schedule.name, \".json\"))\r\n    )\r\n\r\n    let jsonToDump: ScheduleWithMetadata = {\r\n      metadata: scheduleMetadata,\r\n      scheduleDays: {},\r\n    }\r\n\r\n    workDaysEnLower.forEach((day, idx) => {\r\n      jsonToDump[\"scheduleDays\"][day] = schedule.scheduleDays[idx]\r\n    })\r\n\r\n    await AsyncStorage.setItem(ensureExtension(schedule.name, \".json\"), JSON.stringify(jsonToDump))\r\n  }\r\n\r\n  // gets edited schedule from local storage\r\n  async loadEditedSchedule(scheduleFileName: string): Promise<ScheduleWithMetadata | null> {\r\n    const scheduleWithMetadata = await AsyncStorage.getItem(scheduleFileName)\r\n\r\n    if (!scheduleWithMetadata) return null\r\n\r\n    const scheduleWithMetadataJSON: ScheduleWithMetadata = JSON.parse(scheduleWithMetadata)\r\n\r\n    return scheduleWithMetadataJSON\r\n  }\r\n\r\n  async isOutdated(scheduleFileName: string) {\r\n    let scheduleLoader = await ScheduleLoaderService.GetInstance()\r\n    let contentfulScheduleFile = scheduleLoader.getScheduleFileByFileName(scheduleFileName)\r\n\r\n    let editVer = await this.loadEditedSchedule(scheduleFileName)\r\n    if (!editVer) return false\r\n\r\n    // debugger\r\n\r\n    let editVerMetadata = editVer.metadata\r\n\r\n    let contentfulVerMetadata = scheduleLoader.getScheduleFileMetadata(contentfulScheduleFile)\r\n\r\n    return !_.isEqual(editVerMetadata, contentfulVerMetadata)\r\n  }\r\n\r\n  removeEditedSchedule(scheduleName: string) {\r\n    return AsyncStorage.removeItem(scheduleName)\r\n  }\r\n\r\n  async hasEditedVersion(scheduleName: string) {\r\n    const editedVersion = await this.loadEditedSchedule(scheduleName)\r\n    return editedVersion != null\r\n  }\r\n}\r\n","import _ from \"lodash\"\r\nimport { workDaysEnLower } from \"../../constants/Days\"\r\nimport { ScheduleDay } from \"../../models/ScheduleDay\"\r\nimport ScheduleModel from \"../../models/ScheduleModel\"\r\nimport { ensureExtension } from \"../../utilities/utilities\"\r\nimport EditedSchedulesStorageService from \"../EditedScheduleStorageService/EditedScheduleStorageService\"\r\nimport ScheduleLoaderServiceBase from \"./ScheduleLoaderServiceBase\"\r\n\r\n/**\r\n * Web version of the ScheduleLoaderService\r\n */\r\nexport default class ScheduleLoaderService extends ScheduleLoaderServiceBase {\r\n  protected override async init() {\r\n    await this.getSchedulesFromContentful()\r\n    // replace contentful schedules with their user edited versions\r\n    await this.replaceContentfulSchedulesWithEditedVersions()\r\n\r\n    this.scheduleFiles = _.sortBy(this.scheduleFiles, (sf) => sf.filename)\r\n  }\r\n\r\n  async replaceContentfulSchedulesWithEditedVersions() {\r\n    const editedSchedulesStorage = await EditedSchedulesStorageService.GetInstance()\r\n\r\n    let editedCounterpartsPromises = this.scheduleFiles.map(async (sf) => {\r\n      // patch contentful schedules with edited versions\r\n      const editedSchedule = await editedSchedulesStorage.loadEditedSchedule(sf.filename)\r\n      if (editedSchedule) {\r\n        sf.json_parsed = editedSchedule.scheduleDays\r\n      }\r\n\r\n      return sf\r\n    })\r\n\r\n    let editedCounterparts = await Promise.all(editedCounterpartsPromises)\r\n\r\n    this.scheduleFiles = editedCounterparts\r\n  }\r\n\r\n  // persists schedule model into file\r\n  override async dumpSchedule(schedule: ScheduleModel) {\r\n    // get corresponding schedule file\r\n    let scheduleFile = this.getScheduleFileByFileName(ensureExtension(schedule.name, \".json\"))\r\n\r\n    let jsonToDump: {\r\n      [key: string]: ScheduleDay\r\n    } = {}\r\n\r\n    workDaysEnLower.forEach((day, idx) => {\r\n      jsonToDump[day] = schedule.scheduleDays[idx]\r\n    })\r\n\r\n    // replace .json_parsed with schedule contents\r\n    scheduleFile!.json_parsed = jsonToDump\r\n\r\n    const editedScheduleStorage = await EditedSchedulesStorageService.GetInstance()\r\n    await editedScheduleStorage.saveEditedSchedule(schedule)\r\n\r\n    return Promise.resolve()\r\n  }\r\n}\r\n","import * as FileSystem from \"expo-file-system\"\r\nimport { AssetFile } from \"contentful\"\r\nimport _ from \"lodash\"\r\nimport NetInfo from \"@react-native-community/netinfo\"\r\n\r\nimport ScheduleModel from \"../../models/ScheduleModel\"\r\nimport { workDaysEnLower } from \"../../constants/Days\"\r\nimport { ensureExtension, getContentfulClient, isRunningInBrowser } from \"../../utilities/utilities\"\r\nimport ExampleScheduleKN from \"../../assets/example_schedules/КН-example.json\"\r\nimport ExampleScheduleIST from \"../../assets/example_schedules/ІСТ-example.json\"\r\nimport ExampleScheduleTE from \"../../assets/example_schedules/ТЕ-example.json\"\r\n\r\nimport { ScheduleDay } from \"../../models/ScheduleDay\"\r\nimport { ScheduleFile, ScheduleFileMetadata } from \"./Types\"\r\n\r\n// This is a singleton service that loads schedules from local storage / contentful and provides them to the rest of the application\r\n// if no schedules are available (no schedules folder), it should retrieve them from contentful and store them locally\r\n// if schedules are indeed available, we gotta check whether they are up to date or not\r\n// for that we will have to rely on some additional field. Perhaps revision or perhaps creactedAt.\r\n// or perhaps both\r\n\r\n/**\r\n * Singleton service that loads schedules from Local Storage / Contentful and provides them to the rest of the application.\r\n */\r\nexport default class ScheduleLoaderServiceBase {\r\n  protected static instance: ScheduleLoaderServiceBase\r\n\r\n  scheduleFiles: ScheduleFile[] = []\r\n\r\n  pathToScheduleFolder = `${FileSystem.documentDirectory}schedules/`\r\n\r\n  static async GetInstance(): Promise<ScheduleLoaderServiceBase> {\r\n    if (!this.instance) {\r\n      this.instance = new this()\r\n      await this.instance.init()\r\n\r\n      // log loaded schedule files\r\n      console.log(`[${this.name}] schedule loader service instance constructed successfully`)\r\n      console.log(`[${this.name}] schedule loader files:`)\r\n      this.instance.scheduleFiles.forEach((file) => console.log(`[${this.name}] file: ${file.filename}`))\r\n    }\r\n\r\n    return this.instance\r\n  }\r\n\r\n  protected constructor() {}\r\n\r\n  protected async init() {\r\n    // check whether schedules are available locally\r\n    const schedulesAvailableLocally = (await FileSystem.getInfoAsync(this.pathToScheduleFolder)).exists\r\n\r\n    // TODO: refactor try catches into one hoisted try catch\r\n    if (schedulesAvailableLocally) {\r\n      await this.getSchedulesFromFileSystem()\r\n\r\n      // check for updates\r\n      try {\r\n        await this.checkForUpdatesAsync()\r\n      } catch (e) {\r\n        this.getExampleSchedules()\r\n      }\r\n    } else {\r\n      // create schedules folder\r\n      await FileSystem.makeDirectoryAsync(this.pathToScheduleFolder, {\r\n        intermediates: true,\r\n      })\r\n\r\n      try {\r\n        await this.getSchedulesFromContentful()\r\n      } catch (e) {\r\n        this.getExampleSchedules()\r\n      }\r\n    }\r\n\r\n    this.scheduleFiles = _.sortBy(this.scheduleFiles, (sf) => sf.filename)\r\n  }\r\n\r\n  async getSchedulesFromFileSystem() {\r\n    console.log(`[Schedule Loader] schedules are available locally. loading...`)\r\n    let allScheduleFileNames = await FileSystem.readDirectoryAsync(this.pathToScheduleFolder)\r\n    // sort the filenames alphabetically\r\n    allScheduleFileNames.sort()\r\n\r\n    console.log(`[Schedule Loader] allScheduleFileNames: ${allScheduleFileNames}`)\r\n    const scheduleFiles: ScheduleFile[] = await Promise.all(\r\n      allScheduleFileNames.map(async (filename) => {\r\n        let file = await FileSystem.readAsStringAsync(`${this.pathToScheduleFolder}${filename}`)\r\n        let json = JSON.parse(file)\r\n        let { revision, createdAt, updatedAt, json_parsed } = json\r\n        return {\r\n          filename,\r\n          revision,\r\n          createdAt,\r\n          updatedAt,\r\n          json_parsed,\r\n        }\r\n      })\r\n    )\r\n\r\n    this.scheduleFiles = scheduleFiles\r\n    return scheduleFiles\r\n  }\r\n\r\n  /**\r\n   * Downloads schedules from contentful and sets them to .scheduleFiles.\r\n   * Also saves them to schedules folder (android only).\r\n   */\r\n  async getSchedulesFromContentful() {\r\n    // retrieve schedules from contentful\r\n    console.log(`[Schedule Loader] retrieving schedules from contentful`)\r\n\r\n    try {\r\n      var client = getContentfulClient()\r\n    } catch (e) {\r\n      return this.getExampleSchedules()\r\n    }\r\n    const assets = await client.getAssets({\r\n      limit: 1000,\r\n    })\r\n    console.log(`[Schedule Loader] retrieved ${assets.items.length} schedule assets from Contentful`)\r\n\r\n    // iterate over assets and download them\r\n\r\n    const scheduleFiles: ScheduleFile[] = await Promise.all(\r\n      assets.items.map(async (a) => {\r\n        const file: AssetFile = a.fields.file\r\n\r\n        const protocol = \"https:\"\r\n        const linkToFile = protocol + file.url\r\n\r\n        // get file located at url and temporarily store it in .json file as I don't know how to download it in memory\r\n        const linkToDestFile = `${this.pathToScheduleFolder}${file.fileName}`\r\n\r\n        var scheduleClassesJson: string\r\n\r\n        if (!isRunningInBrowser()) {\r\n          await FileSystem.downloadAsync(linkToFile, linkToDestFile)\r\n          scheduleClassesJson = await FileSystem.readAsStringAsync(linkToDestFile)\r\n        } else {\r\n          let res = await fetch(linkToFile)\r\n\r\n          const blob = await res.blob()\r\n          const data = await blob.text()\r\n\r\n          scheduleClassesJson = data\r\n        }\r\n\r\n        let scheduleFile: ScheduleFile = {\r\n          filename: file.fileName,\r\n          revision: a.sys.revision,\r\n          createdAt: a.sys.createdAt,\r\n          updatedAt: a.sys.updatedAt,\r\n          json_parsed: JSON.parse(scheduleClassesJson),\r\n        }\r\n\r\n        if (!isRunningInBrowser()) {\r\n          // save schedule classes json together with metadata to schedules folder\r\n          await FileSystem.writeAsStringAsync(linkToDestFile, JSON.stringify(scheduleFile))\r\n        }\r\n\r\n        return scheduleFile\r\n      })\r\n    )\r\n\r\n    this.scheduleFiles = scheduleFiles\r\n  }\r\n\r\n  getExampleSchedules() {\r\n    console.log(`[Schedule Loader] retrieving example schedules`)\r\n\r\n    const scheduleFiles: ScheduleFile[] = [\r\n      {\r\n        filename: \"КН-example.json\",\r\n        revision: 0,\r\n        createdAt: \"\",\r\n        updatedAt: \"\",\r\n        json_parsed: ExampleScheduleKN,\r\n      },\r\n      {\r\n        filename: \"ІСТ-example.json\",\r\n        revision: 0,\r\n        createdAt: \"\",\r\n        updatedAt: \"\",\r\n        json_parsed: ExampleScheduleIST,\r\n      },\r\n\r\n      {\r\n        filename: \"ТЕ-example.json\",\r\n        revision: 0,\r\n        createdAt: \"\",\r\n        updatedAt: \"\",\r\n        json_parsed: ExampleScheduleTE,\r\n      },\r\n    ]\r\n\r\n    this.scheduleFiles = scheduleFiles\r\n\r\n    return scheduleFiles\r\n  }\r\n\r\n  getScheduleFileByFileName(fileName: string): ScheduleFile | undefined {\r\n    return this.scheduleFiles.find((sf) => sf.filename === fileName)\r\n  }\r\n\r\n  // checks for updates and updates schedules if they are outdated\r\n  async checkForUpdatesAsync() {\r\n    let netInfo = await NetInfo.fetch()\r\n\r\n    if (!netInfo.isConnected || !netInfo.isInternetReachable) {\r\n      console.log(`[Schedule Loader] no internet connection. skipping update check`)\r\n      return\r\n    }\r\n\r\n    const client = getContentfulClient()\r\n\r\n    const assets = await client.getAssets({\r\n      limit: 1000,\r\n    })\r\n    console.log(`[Schedule Loader] retrieved ${assets.items.length} schedule assets from contentful`)\r\n\r\n    // iterate over assets and download their metadata\r\n    // TODO: dry up the duplicate\r\n\r\n    const scheduleFileMetadatas: (ScheduleFileMetadata & {\r\n      linkToFile: string\r\n    })[] = await Promise.all(\r\n      assets.items.map(async (item) => {\r\n        const file: AssetFile = item.fields.file\r\n\r\n        const protocol = \"https:\"\r\n        const linkToFile = protocol + file.url\r\n\r\n        let scheduleFileMetadata: ScheduleFileMetadata & {\r\n          linkToFile: string\r\n        } = {\r\n          filename: file.fileName,\r\n          revision: item.sys.revision,\r\n          createdAt: item.sys.createdAt,\r\n          updatedAt: item.sys.updatedAt,\r\n          linkToFile,\r\n        }\r\n\r\n        return scheduleFileMetadata\r\n      })\r\n    )\r\n\r\n    // update whatever schedules are outdated\r\n    const updatedScheduleFiles: ScheduleFile[] = await Promise.all(\r\n      scheduleFileMetadatas.map(async (sfm) => {\r\n        let oldSchedule = this.getScheduleFileByFileName(sfm.filename)\r\n        if (!oldSchedule) {\r\n          // schedule is new, download it\r\n          const linkToDestFile = `${this.pathToScheduleFolder}${sfm.filename}`\r\n          await FileSystem.downloadAsync(sfm.linkToFile, linkToDestFile)\r\n\r\n          let scheduleFile: ScheduleFile = {\r\n            filename: sfm.filename,\r\n            revision: sfm.revision,\r\n            createdAt: sfm.createdAt,\r\n            updatedAt: sfm.updatedAt,\r\n            json_parsed: JSON.parse(await FileSystem.readAsStringAsync(linkToDestFile)),\r\n          }\r\n\r\n          // write newly downloaded schedule to schedules folder\r\n          await FileSystem.writeAsStringAsync(linkToDestFile, JSON.stringify(scheduleFile))\r\n\r\n          return scheduleFile\r\n        } else {\r\n          // schedule exists, check if it's outdated\r\n          const isOutdated =\r\n            oldSchedule.revision < sfm.revision ||\r\n            new Date(oldSchedule.updatedAt) < new Date(sfm.updatedAt) ||\r\n            new Date(oldSchedule.createdAt) < new Date(sfm.createdAt)\r\n\r\n          //   console.log(`old schedule created at (date constructed from string): ${new Date(oldSchedule.createdAt)}`) // works\r\n          console.log(`[Schedule Loader] schedule ${sfm.filename} is outdated: ${isOutdated}`)\r\n          if (isOutdated) {\r\n            // schedule is outdated, download it\r\n            const linkToDestFile = `${this.pathToScheduleFolder}${sfm.filename}`\r\n            await FileSystem.downloadAsync(sfm.linkToFile, linkToDestFile)\r\n\r\n            let scheduleFile: ScheduleFile = {\r\n              json_parsed: JSON.parse(await FileSystem.readAsStringAsync(linkToDestFile)),\r\n              filename: sfm.filename,\r\n              revision: sfm.revision,\r\n              createdAt: sfm.createdAt,\r\n              updatedAt: sfm.updatedAt,\r\n            }\r\n\r\n            // write newly downloaded schedule to schedules folder (important)\r\n            await FileSystem.writeAsStringAsync(linkToDestFile, JSON.stringify(scheduleFile))\r\n\r\n            return scheduleFile\r\n          } else {\r\n            // schedule is up to date, do nothing\r\n            return oldSchedule\r\n          }\r\n        }\r\n      })\r\n    )\r\n\r\n    this.scheduleFiles = updatedScheduleFiles\r\n  }\r\n\r\n  getScheduleFileMetadata(scheduleFile: ScheduleFile): ScheduleFileMetadata | undefined {\r\n    if (!scheduleFile) {\r\n      return undefined\r\n    }\r\n\r\n    return {\r\n      filename: scheduleFile.filename,\r\n      revision: scheduleFile.revision,\r\n      createdAt: scheduleFile.createdAt,\r\n      updatedAt: scheduleFile.updatedAt,\r\n    }\r\n  }\r\n\r\n  // persists schedule model into file\r\n  async dumpSchedule(schedule: ScheduleModel) {\r\n    // get corresponding schedule file\r\n    let scheduleFile = this.getScheduleFileByFileName(ensureExtension(schedule.name, \".json\"))\r\n\r\n    let jsonToDump: {\r\n      [key: string]: ScheduleDay\r\n    } = {}\r\n\r\n    workDaysEnLower.forEach((day, idx) => {\r\n      jsonToDump[day] = schedule.scheduleDays[idx]\r\n    })\r\n\r\n    // replace .json_parsed with schedule contents\r\n    scheduleFile!.json_parsed = jsonToDump\r\n\r\n    // if (isRunningInBrowser()) {\r\n    //   const editedScheduleStorage = await EditedSchedulesStorageService.GetInstance()\r\n    //   await editedScheduleStorage.saveEditedSchedule(schedule)\r\n\r\n    //   return Promise.resolve()\r\n    // }\r\n\r\n    console.log(`[Schedule Loader] dumping schedule ${scheduleFile?.filename} to file`)\r\n    // write to file\r\n    return FileSystem.writeAsStringAsync(\r\n      `${this.pathToScheduleFolder}${scheduleFile!.filename}`,\r\n      JSON.stringify(scheduleFile)\r\n    )\r\n  }\r\n}\r\n","import * as Notifications from \"expo-notifications\"\r\nimport { Platform } from \"react-native\"\r\nimport { isRunningInBrowser } from \"../../utilities/utilities\"\r\nimport { ILocalNotificationsService } from \"./Types\"\r\n\r\n// expo notifications docs: https://docs.expo.dev/versions/latest/sdk/notifications/\r\n// Expo's Push Notification Tool: https://expo.dev/notifications\r\n\r\n// singleton\r\nexport default class LocalNotificationsService implements ILocalNotificationsService {\r\n  protected static instance: LocalNotificationsService\r\n  exampleNotificationContent: Notifications.NotificationContentInput = {\r\n    title: \"Мультимедійне видавництво\",\r\n    body: \"Миклушка І. З.\",\r\n    subtitle: \"[10:15] Пара починається\",\r\n    data: { someData: \"додаткова інформація тут\" },\r\n  }\r\n  notificationChannelId = \"interactive-schedule-notifications\"\r\n\r\n  static async GetInstance(): Promise<LocalNotificationsService> {\r\n    if (!this.instance) {\r\n      this.instance = new this()\r\n      await this.instance.init()\r\n      console.log(`[${this.name}] local notifications service instance constructed successfully`)\r\n    }\r\n\r\n    return this.instance\r\n  }\r\n\r\n  protected constructor() {}\r\n  cancelScheduledNotificationAsync(identifier: string): Promise<void> {\r\n    return Notifications.cancelScheduledNotificationAsync(identifier)\r\n  }\r\n\r\n  cancelAllScheduledNotificationsAsync(): Promise<void> {\r\n    return Notifications.cancelAllScheduledNotificationsAsync()\r\n  }\r\n  getAllScheduledNotificationsAsync(): Promise<Notifications.NotificationRequest[]> {\r\n    return Notifications.getAllScheduledNotificationsAsync()\r\n  }\r\n  checkPermissionsAsync(): Promise<Notifications.NotificationPermissionsStatus> {\r\n    return Notifications.getPermissionsAsync()\r\n  }\r\n\r\n  protected async init() {\r\n    Notifications.setNotificationHandler({\r\n      handleNotification: async () => ({\r\n        shouldShowAlert: true,\r\n        priority: Notifications.AndroidNotificationPriority.MAX,\r\n        shouldPlaySound: true,\r\n        shouldSetBadge: true,\r\n      }),\r\n    })\r\n    await this.registerNotificationsChannel()\r\n\r\n    if (!isRunningInBrowser()) {\r\n      let permissionsGranted = (await this.checkPermissionsAsync()).granted\r\n      if (!permissionsGranted) await Notifications.requestPermissionsAsync()\r\n\r\n      console.log(`[Local Notifications] permissions granted: ${permissionsGranted}`)\r\n    }\r\n\r\n    console.log(\"local notifications service initialized\")\r\n  }\r\n\r\n  async registerNotificationsChannel() {\r\n    if (Platform.OS === \"android\") {\r\n      // delete default notification channel that expo creates for you\r\n      await Notifications.deleteNotificationChannelAsync(\"default\")\r\n\r\n      Notifications.setNotificationChannelAsync(this.notificationChannelId, {\r\n        name: \"Сповіщення про початок пари\",\r\n        importance: Notifications.AndroidImportance.MAX,\r\n        vibrationPattern: [0, 250, 250, 250],\r\n        lightColor: \"#FF231F7C\",\r\n        lockscreenVisibility: Notifications.AndroidNotificationVisibility.PUBLIC,\r\n      })\r\n    }\r\n  }\r\n\r\n  async sendNotification(content: Notifications.NotificationContentInput) {\r\n    const message: Notifications.NotificationRequestInput = {\r\n      identifier: this.notificationChannelId,\r\n      content: {\r\n        ...content,\r\n        priority: \"high\",\r\n      },\r\n      // I have to set seconds to 1, otherwise the notification is not shown.\r\n      // I don't know whether it's a bug or something else\r\n      trigger: {\r\n        seconds: 1,\r\n        channelId: this.notificationChannelId,\r\n      },\r\n    }\r\n\r\n    Notifications.scheduleNotificationAsync(message).catch((e) => {\r\n      console.error(\"error while sending notification\")\r\n      console.log(\"...this is the notification that was supposed to be sent:\")\r\n      console.log(message)\r\n    })\r\n  }\r\n\r\n  async scheduleNotification(\r\n    content: Notifications.NotificationContentInput,\r\n    trigger: Notifications.NotificationTriggerInput\r\n  ) {\r\n    // TODO: narrow down types\r\n    if (trigger == null || typeof trigger != \"object\") {\r\n      throw new Error(\"trigger is not an object\")\r\n    }\r\n\r\n    // TODO: pass channel id to trigger\r\n\r\n    // random unique identifier will be generated if not specified\r\n    let notificationId = undefined\r\n\r\n    const message: Notifications.NotificationRequestInput = {\r\n      identifier: notificationId,\r\n      content: {\r\n        ...content,\r\n        priority: \"high\",\r\n      },\r\n      trigger: trigger,\r\n    }\r\n\r\n    let nextTriggerDate = await Notifications.getNextTriggerDateAsync(trigger)\r\n    let now = new Date()\r\n\r\n    if (nextTriggerDate == null && trigger.date >= now) {\r\n      throw new Error(\"nextTriggerDate is null for this notification: \" + trigger.date)\r\n    }\r\n\r\n    Notifications.scheduleNotificationAsync(message)\r\n  }\r\n\r\n  // - - - methods for testing - - -\r\n  // TODO: move to separate class\r\n\r\n  async sendExampleNotification() {\r\n    this.sendNotification(this.exampleNotificationContent)\r\n  }\r\n\r\n  async scheduleExampleNotificationViaDate(secondsFromNow = 5) {\r\n    let trigger: Notifications.NotificationTriggerInput = {\r\n      date: new Date(Date.now() + secondsFromNow * 1000),\r\n      channelId: this.notificationChannelId,\r\n    }\r\n\r\n    this.scheduleNotification(this.exampleNotificationContent, trigger)\r\n  }\r\n\r\n  async scheduleRepeatableExampleNotification() {\r\n    let trigger: Notifications.NotificationTriggerInput = {\r\n      seconds: 5,\r\n      repeats: true,\r\n      channelId: this.notificationChannelId,\r\n    }\r\n\r\n    this.scheduleNotification(this.exampleNotificationContent, trigger)\r\n  }\r\n\r\n  async scheduleRepeatableDailyExampleNotification() {\r\n    let trigger: Notifications.DailyTriggerInput = {\r\n      hour: 14,\r\n      minute: 41,\r\n      repeats: true,\r\n      channelId: this.notificationChannelId,\r\n    }\r\n\r\n    this.scheduleNotification(this.exampleNotificationContent, trigger)\r\n  }\r\n}\r\n","export enum Event {\r\n  SETTINGS_UPDATED = \"settings updated\",\r\n}\r\n","import AsyncStorage from \"@react-native-async-storage/async-storage\"\r\nimport EventEmitter from \"events\"\r\nimport ScheduleLoaderService from \"../ScheduleLoaderService/ScheduleLoaderService\"\r\nimport Constants from \"expo-constants\"\r\nimport * as Notifications from \"expo-notifications\"\r\nimport * as IntentLauncher from \"expo-intent-launcher\"\r\nimport { NOTIFICATIONS_CHANNEL_ID } from \"../../constants/Constants\"\r\nimport { STORAGE_KEY } from \"../../constants/Keys\"\r\nimport { Event } from \"../../constants/Events\"\r\nimport { ISettingsService, DisplayEmptyDaysMode, DisplayTeacherMode, ScheduleAppSettings } from \"./Types\"\r\n\r\n// update place 2 for new setting\r\n// as of now in order to add a new setting you have to modify 2 places\r\n// that doesn't sound great.\r\n// make sure you start with ScheduleAppSettings type\r\n\r\n/**\r\n * Represents a service for managing settings in the application.\r\n * Loads and saves settings to async storage. Provides a way to subscribe to settings change event.\r\n */\r\nexport default class SettingsService implements ISettingsService {\r\n  displayEmptyDays: DisplayEmptyDaysMode = DisplayEmptyDaysMode.Display\r\n  currentScheduleName = \"\" // Object.keys(scheduleFilesJSON)[0] // this has to match the name of the file in assets/schedules\r\n  notifyBeforeClass = true\r\n  notifyBeforeClassOffsetMinutes = 0\r\n  displayRoomNumber = true\r\n  displayTeacherName = DisplayTeacherMode.Full\r\n  displayEmptyRows = true\r\n\r\n  private static instance: SettingsService\r\n\r\n  SettingsEventEmitter: EventEmitter = new EventEmitter()\r\n\r\n  static async GetInstance(): Promise<SettingsService> {\r\n    if (!SettingsService.instance) {\r\n      SettingsService.instance = new SettingsService()\r\n      await SettingsService.instance.init()\r\n      console.log(\"settings service instance constructed successfully\")\r\n    }\r\n\r\n    return SettingsService.instance\r\n  }\r\n\r\n  private async init() {\r\n    // get first schedule from ScheduleLoaderService and use it as default\r\n\r\n    let scheduleLoader = await ScheduleLoaderService.GetInstance()\r\n    this.currentScheduleName = scheduleLoader.scheduleFiles[0].filename\r\n\r\n    const fetchedSettings = await this.readFromStorage()\r\n    if (!fetchedSettings) return\r\n\r\n    // gotta make sure that each and every property is set\r\n\r\n    console.log(\"[SettingsService] fetched settings:\")\r\n    console.log(fetchedSettings)\r\n\r\n    console.log(\"settings fetched. Populating properties...\")\r\n    for (const [key, value] of Object.entries(fetchedSettings)) {\r\n      console.log(`[fetched settings] ${key}: ${value}`)\r\n      let key_ = key as keyof ScheduleAppSettings\r\n      ;(this[key_] as any) = value\r\n    }\r\n\r\n    console.log(`[SettingsService] current schedule name: ${this.currentScheduleName}`)\r\n    if (this.currentScheduleName == \"\" || this.currentScheduleName == \".json\") {\r\n      console.log(\"current schedule name is empty. setting it to default...\")\r\n      this.currentScheduleName = scheduleLoader.scheduleFiles[0].filename\r\n    }\r\n\r\n    // TODO: remove this before next publish\r\n    this.SettingsEventEmitter = new EventEmitter()\r\n  }\r\n\r\n  // TODO: move all settings to separate object\r\n  constructSettingsObjectFromProperties(): ScheduleAppSettings {\r\n    let settingsObject = { ...this }\r\n\r\n    // exclude event emitter from settings object\r\n\r\n    delete settingsObject.SettingsEventEmitter\r\n\r\n    return settingsObject\r\n  }\r\n\r\n  // TODO: Refactor\r\n  // \"settings updated\" event should be emmitted every time they're updated, but not necessarily saved to storage\r\n  async saveToStorage() {\r\n    try {\r\n      const settingsObject = this.constructSettingsObjectFromProperties()\r\n      const jsonValue = JSON.stringify(settingsObject)\r\n      await AsyncStorage.setItem(STORAGE_KEY, jsonValue)\r\n\r\n      this.SettingsEventEmitter.emit(Event.SETTINGS_UPDATED, this)\r\n    } catch (e) {\r\n      // saving error\r\n      console.error(e)\r\n    }\r\n  }\r\n\r\n  async readFromStorage(): Promise<ScheduleAppSettings | null> {\r\n    try {\r\n      console.log(\"trying to read settings from storage... storage key is: \", STORAGE_KEY)\r\n      const jsonValue = await AsyncStorage.getItem(STORAGE_KEY)\r\n      return jsonValue != null ? JSON.parse(jsonValue) : null\r\n    } catch (e) {\r\n      console.log(\"failed to parse whatever was read from settings. returning null...\")\r\n      // error reading value\r\n      console.error(e)\r\n      return null\r\n    }\r\n  }\r\n\r\n  async openAndroidSystemSettingsForNotifications() {\r\n    // const pkg = Constants.manifest.android.package\r\n    const pkg = Constants.expoConfig.android.package\r\n\r\n    const channel = await Notifications.getNotificationChannelAsync(NOTIFICATIONS_CHANNEL_ID)\r\n    const allChannels = await Notifications.getNotificationChannelsAsync()\r\n    console.log(\"[Notification Tests] All channels of this app: \")\r\n    console.log(allChannels)\r\n    console.log(\"[Notification Tests] Channel id for main channel: \" + channel?.id)\r\n\r\n    // TODO: fix expo go notification settings not opening when the code is running in expo go\r\n\r\n    IntentLauncher.startActivityAsync(\"android.settings.CHANNEL_NOTIFICATION_SETTINGS\", {\r\n      // data: \"package:\" + pkg,\r\n      extra: {\r\n        \"android.provider.extra.CHANNEL_ID\": pkg == \"host.exp.exponent\" ? \"expo-experience\" : NOTIFICATIONS_CHANNEL_ID,\r\n        \"android.provider.extra.APP_PACKAGE\": pkg,\r\n      },\r\n    })\r\n  }\r\n}\r\n","import { DateTriggerInput, NotificationContentInput, WeeklyTriggerInput } from \"expo-notifications\"\r\nimport ScheduleModel from \"../models/ScheduleModel\"\r\nimport { ScheduleDay } from \"../models/ScheduleDay\"\r\nimport { ScheduleClass } from \"../models/ScheduleClass\"\r\nimport GetWeekType from \"../utilities/getWeekType\"\r\nimport { createEvenlySpacedTimeSequence, setDayOnDate } from \"../utilities/utilities\"\r\nimport LocalNotificationsService from \"./LocalNotificationsService/LocalNotificationsService\"\r\nimport { REGLAMENT_DATA, SEMESTER_MONTHS } from \"../constants/Constants\"\r\nimport TeacherModel from \"../models/TeacherModel\"\r\n\r\nexport default class ClassNotificationBuilder {\r\n  signature: string\r\n\r\n  hour: number\r\n  minute: number\r\n\r\n  notificationsService: LocalNotificationsService\r\n  schedule: ScheduleModel\r\n  class_: ScheduleClass\r\n\r\n  teachersTable = TeacherModel.GetInstance()\r\n\r\n  constructor(\r\n    schedule: ScheduleModel,\r\n    class_: ScheduleClass,\r\n    notificationsService: LocalNotificationsService,\r\n    negativeOffsetInMins: number\r\n  ) {\r\n    this.notificationsService = notificationsService\r\n\r\n    this.schedule = schedule\r\n    this.class_ = class_\r\n\r\n    this.signature = class_.getUniqueStringSignature()\r\n\r\n    // use reglament to determine hour and minute\r\n    let hourAndMinute = REGLAMENT_DATA[class_.index - 1][1]\r\n\r\n    this.hour = parseInt(hourAndMinute.split(\":\")[0])\r\n    this.minute = parseInt(hourAndMinute.split(\":\")[1])\r\n\r\n    this.minute -= negativeOffsetInMins\r\n    if (this.minute < 0) {\r\n      this.minute += 60\r\n      this.hour -= 1\r\n    }\r\n  }\r\n\r\n  constructBiweeklyNotificationsSequence(scheduleDay: ScheduleDay) {\r\n    // we need to generate lots of periodic biweekly notifications. Here a period is two weeks\r\n    // we need approx this number of notifications: n of months in semester * 2. n of months in semester = ~6\r\n\r\n    // construct notification date\r\n    let now = new Date()\r\n\r\n    let monthDay = now.getDate()\r\n    let notificationDate = new Date(now.getFullYear(), now.getMonth(), monthDay, this.hour, this.minute)\r\n    notificationDate = setDayOnDate(notificationDate, this.schedule.dayNames.indexOf(scheduleDay.name))\r\n\r\n    // construct future notification dates\r\n    let twoWeeksInSeconds = 60 * 60 * 24 * 7 * 2\r\n    // add additional week of offset if week types don't match. It's important to add 1 to week type enum returned by GetWeekType() because it's 0-indexed\r\n    let offset = GetWeekType() + 1 == this.class_.week ? 0 : twoWeeksInSeconds / 2\r\n    let offsetInMillis = offset * 1000\r\n    notificationDate = new Date(offsetInMillis + notificationDate.getTime())\r\n\r\n    let notificationDates = createEvenlySpacedTimeSequence(SEMESTER_MONTHS * 2, twoWeeksInSeconds, notificationDate)\r\n\r\n    // construct future notification objects for expo-notifications\r\n    let notificationObjects = notificationDates.map((notifDate) => {\r\n      let trigger: DateTriggerInput = {\r\n        date: notifDate,\r\n        channelId: this.notificationsService.notificationChannelId,\r\n      }\r\n\r\n      // format teacher name\r\n      let teacherName = this.class_.teacher\r\n      if (teacherName) {\r\n        teacherName =\r\n          typeof teacherName == \"string\" ? this.teachersTable.getFullNameBySurname(teacherName) : teacherName.join(\", \")\r\n      } else {\r\n        teacherName = \"\"\r\n      }\r\n\r\n      // pad hour and minute with 0 if they consist of only one digit\r\n      let hourPadded = this.hour < 10 ? \"0\" + this.hour : this.hour\r\n      let minutePadded = this.minute < 10 ? \"0\" + this.minute : this.minute\r\n\r\n      // construct notification object that will be passed to expo-notifications\r\n      let content: NotificationContentInput = {\r\n        title: this.class_.name,\r\n        body: teacherName,\r\n        subtitle: `[${hourPadded}:${minutePadded}] Пара починається`,\r\n      }\r\n\r\n      return { content: content, trigger: trigger }\r\n    })\r\n\r\n    return notificationObjects\r\n  }\r\n\r\n  constructWeeklyNotification(scheduleDay: ScheduleDay) {\r\n    // construct trigger object that will be passed to expo-notifications\r\n    let trigger: WeeklyTriggerInput = {\r\n      weekday: this.schedule.dayNames.indexOf(scheduleDay.name) + 1, // why do we add + 1 here? because weekday is 1-indexed, but dayNames is 0-indexed\r\n      hour: this.hour,\r\n      minute: this.minute,\r\n\r\n      repeats: true,\r\n      channelId: this.notificationsService.notificationChannelId,\r\n    }\r\n\r\n    // format teacher name\r\n    let teacherName = this.class_.teacher\r\n    if (teacherName) {\r\n      teacherName =\r\n        typeof teacherName == \"string\" ? this.teachersTable.getFullNameBySurname(teacherName) : teacherName.join(\", \")\r\n    } else {\r\n      teacherName = \"\"\r\n    }\r\n\r\n    // pad hour and minute with 0 if they consist of only one digit\r\n    let hourPadded = this.hour < 10 ? \"0\" + this.hour : this.hour\r\n    let minutePadded = this.minute < 10 ? \"0\" + this.minute : this.minute\r\n\r\n    // construct notification object that will be passed to expo-notifications\r\n    const weeklyNotif = {\r\n      content: {\r\n        title: this.class_.name,\r\n        body: teacherName,\r\n        subtitle: `[${hourPadded}:${minutePadded}] Пара починається`,\r\n      },\r\n      trigger: trigger,\r\n    }\r\n\r\n    return weeklyNotif\r\n  }\r\n}\r\n","import ScheduleModel from \"../models/ScheduleModel\"\r\nimport LocalNotificationsService from \"./LocalNotificationsService/LocalNotificationsService\"\r\nimport SettingsService from \"./SettingsService/SettingsService\"\r\nimport ClassNotificationBuilder from \"./ClassNotificationBuilder\"\r\nimport { isRunningInBrowser } from \"../utilities/utilities\"\r\n\r\n// TODO: Read about override keyword in TypeScript\r\n\r\n//\r\n/**\r\n * Singleton service. Main function is constructing and registering notifications for entire schedule.\r\n */\r\nexport default class ScheduleNotificationsService extends LocalNotificationsService {\r\n  onConfigureNotificationsForScheduleStart: null | (() => void) = null\r\n  onConfigureNotificationsForScheduleEnd: null | (() => void) = null\r\n\r\n  protected static instance: ScheduleNotificationsService\r\n\r\n  static async GetInstance(): Promise<ScheduleNotificationsService> {\r\n    if (!this.instance) {\r\n      this.instance = new ScheduleNotificationsService()\r\n      await this.instance.init()\r\n      console.log(`[${this.name}] service instance constructed successfully`)\r\n    }\r\n\r\n    return this.instance\r\n  }\r\n\r\n  async configureNotificationsForSchedule(schedule: ScheduleModel) {\r\n    console.log(`[configure notifications] configuring notifications for schedule ${schedule.name}`)\r\n    this.onConfigureNotificationsForScheduleStart?.call(this)\r\n\r\n    // get notifications service and settings service\r\n    const notificationsService = await LocalNotificationsService.GetInstance()\r\n    const settingsService = await SettingsService.GetInstance()\r\n\r\n    // check whether notifications are enabled\r\n    if (!isRunningInBrowser() && settingsService.notifyBeforeClass) {\r\n      // if notifications are enabled, then schedule notifications for each class\r\n      // make sure to not register duplicate notifications by either checking for duplicates or deleting all notifications before setting any\r\n      await notificationsService.cancelAllScheduledNotificationsAsync()\r\n\r\n      const configureDays = schedule.scheduleDays.map(async (day) => {\r\n        const configureDayClasses = day.classes.map(async (class_) => {\r\n          let notifBuilder = new ClassNotificationBuilder(\r\n            schedule,\r\n            class_,\r\n            notificationsService,\r\n            settingsService.notifyBeforeClassOffsetMinutes\r\n          )\r\n\r\n          if (class_.isBiweekly) {\r\n            let notifications = notifBuilder.constructBiweeklyNotificationsSequence(day)\r\n\r\n            await Promise.all(\r\n              notifications.map((notif) => {\r\n                return notificationsService.scheduleNotification(notif.content, notif.trigger)\r\n              })\r\n            )\r\n          } else {\r\n            let weeklyNotif = notifBuilder.constructWeeklyNotification(day)\r\n\r\n            return await notificationsService.scheduleNotification(weeklyNotif.content, weeklyNotif.trigger)\r\n          }\r\n        })\r\n\r\n        await Promise.all(configureDayClasses)\r\n      })\r\n\r\n      await Promise.all(configureDays)\r\n    }\r\n\r\n    this.onConfigureNotificationsForScheduleEnd?.call(this)\r\n  }\r\n}\r\n","export enum EditorStackRoutes {\r\n  EDITOR = \"Editor\",\r\n  SCHEDULE_CLASS_FORM = \"ScheduleClassForm\",\r\n}\r\n","export const NoClassesText = [\r\n  \"Пар немає\",\r\n  \"Чудовий день (бо пар нема)\",\r\n  \"Просили передати, що пар не буде\",\r\n  \"Пар не буде, сьогодні чілимо\",\r\n  \"Академ. вихідний\",\r\n]\r\n","import React, { useCallback, useContext, useEffect, useRef, useState } from \"react\"\r\nimport { Text, View, StyleSheet, ActivityIndicator } from \"react-native\"\r\nimport { globalStyles, palette } from \"../../styles/global\"\r\nimport ScheduleModel from \"../../models/ScheduleModel\"\r\nimport { ScheduleDay } from \"../../models/ScheduleDay\"\r\nimport { ScheduleClassFields } from \"../../models/ScheduleClass\"\r\nimport { ScheduleClass } from \"../../models/ScheduleClass\"\r\nimport _ from \"lodash\"\r\nimport ScheduleClassComponent from \"./ScheduleClass\"\r\nimport Separator from \"../shared/Separator\"\r\nimport GetWeekType from \"../../utilities/getWeekType\"\r\nimport { FlatList, TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport { useNavigation } from \"@react-navigation/native\"\r\nimport SwipeableItem, { useSwipeableItemParams } from \"react-native-swipeable-item\"\r\nimport UnderlayRightSide from \"../ScheduleEditorComponents/ScheduleClassUnderlay\"\r\nimport DraggableFlatList from \"react-native-draggable-flatlist\"\r\nimport AppText from \"../shared/AppText\"\r\nimport { mapUkrWorkDayToEnWorkDay } from \"../../constants/Days\"\r\nimport ScheduleLoaderService from \"../../services/ScheduleLoaderService/ScheduleLoaderService\"\r\nimport ScheduleNotificationsService from \"../../services/ScheduleNotificationsService\"\r\nimport SettingsService from \"../../services/SettingsService/SettingsService\"\r\nimport { DisplayEmptyDaysMode } from \"../../services/SettingsService/Types\"\r\nimport { EditorStackRoutes } from \"../../routes/EditorStackRoutes\"\r\nimport { SettingsContext } from \"../../contexts/settingsContext\"\r\nimport { NoClassesText } from \"../../constants/Descriptions\"\r\nimport { FontName } from \"../../constants/Fonts\"\r\n\r\n// TODO: accelerate disengage time once an item gets dropped into new slot\r\n\r\nexport default function ScheduleDayComponent({\r\n  classesCollection,\r\n  scheduleObject,\r\n  dayName,\r\n  scheduleDay,\r\n  displayRoomNumber,\r\n  weekType = GetWeekType(),\r\n  fade,\r\n  isEditable = false,\r\n}: {\r\n  classesCollection: ScheduleClass[]\r\n  scheduleObject: ScheduleModel\r\n  dayName: string\r\n  scheduleDay: ScheduleDay\r\n  displayRoomNumber: boolean\r\n  weekType?: number\r\n  fade: boolean\r\n  isEditable?: boolean\r\n}): JSX.Element {\r\n  if (scheduleDay == undefined) {\r\n    return (\r\n      <View style={SDstyles.scheduleDayCard}>\r\n        <Text style={globalStyles.dayNameHeader}>{dayName}</Text>\r\n        <View>\r\n          <View style={globalStyles.centered}>\r\n            <ActivityIndicator size=\"large\" color={palette.navigationBackground} />\r\n          </View>\r\n        </View>\r\n      </View>\r\n    )\r\n  }\r\n\r\n  const settings = useContext(SettingsContext)\r\n\r\n  const configureNotificationsCallback = useCallback(\r\n    _.debounce(async (updatedSchedule) => {\r\n      let scheduleNotificationService = await ScheduleNotificationsService.GetInstance()\r\n      scheduleNotificationService.configureNotificationsForSchedule(updatedSchedule)\r\n    }, 3000),\r\n    []\r\n  )\r\n\r\n  let navigation = useNavigation()\r\n\r\n  let [classes, setClasses] = useState<ScheduleClass[]>([])\r\n  let dayNameEnRef = useRef(mapUkrWorkDayToEnWorkDay(dayName).toLowerCase())\r\n\r\n  function saveEditedClasses(classes: ScheduleClass[]) {\r\n    console.log(\"saving edited classes\")\r\n    let updatedSchedule = scheduleObject\r\n    let classesWithoutPlaceholders = classes.filter((class_) => !class_.isSampleClass())\r\n\r\n    let thisDay = updatedSchedule.scheduleDays.find((day) => day.name == dayNameEnRef.current)\r\n    // construct new classes array with classes of other week preserved\r\n\r\n    let biweeklyClassesOfOtherWeek = thisDay!.classes.filter(\r\n      (class_) => class_.isBiweekly && class_.week != weekType + 1\r\n    )\r\n\r\n    thisDay!.classes = [...classesWithoutPlaceholders, ...biweeklyClassesOfOtherWeek]\r\n\r\n    ScheduleLoaderService.GetInstance().then((instance) => {\r\n      instance.dumpSchedule(updatedSchedule)\r\n    })\r\n\r\n    SettingsService.GetInstance().then((instance) => {\r\n      if (instance.notifyBeforeClass) {\r\n        configureNotificationsCallback(updatedSchedule)\r\n      }\r\n    })\r\n  }\r\n\r\n  // any time new updated classes collection prop is passed, add placeholders to it and update state\r\n  // it also initializes classes state on first render\r\n  useEffect(() => {\r\n    let placeholderClasses = addPlaceholders(classesCollection)\r\n    // sort by index in ascending order\r\n    let sortedClasses = _.sortBy(placeholderClasses, (class_) => class_.index)\r\n\r\n    setClasses(sortedClasses)\r\n  }, [classesCollection])\r\n\r\n  useEffect(() => {\r\n    console.log(\"mounting schedule day component\")\r\n  }, [])\r\n\r\n  function addPlaceholders(classes: ScheduleClass[]) {\r\n    if (!isEditable) {\r\n      return classes\r\n    }\r\n\r\n    let extendedContainer: ScheduleClass[] = [undefined, undefined, undefined, undefined, undefined, undefined]\r\n    extendedContainer = extendedContainer.map((_, idx) => {\r\n      let class_ = classes.find((class_) => class_.index == idx + 1)\r\n      const shouldCreatePlaceholderClass = class_ == undefined\r\n\r\n      if (shouldCreatePlaceholderClass) {\r\n        return ScheduleClass.GetPlaceholder(dayNameEnRef.current, idx + 1, weekType + 1)\r\n      } else {\r\n        return class_\r\n      }\r\n    })\r\n\r\n    return extendedContainer\r\n  }\r\n\r\n  // flat list doesn't suppress scroll events while nested inside ScrollView. Flat list is preferrable if component is not editable\r\n  const ListComponent = isEditable ? DraggableFlatList : FlatList\r\n\r\n  return (\r\n    <View key={dayName + weekType}>\r\n      <Text style={SDstyles.dayNameHeader}>{dayName}</Text>\r\n      <View\r\n        style={[\r\n          SDstyles.scheduleDayCard,\r\n          classes.length == 0 && settings?.displayEmptyDays == DisplayEmptyDaysMode.Darken\r\n            ? SDstyles.fadedDayContainerView\r\n            : {},\r\n        ]}\r\n      >\r\n        <ListComponent\r\n          data={classes}\r\n          keyExtractor={(item) => item.index + \"\" + item.week}\r\n          onDragEnd={({ data }) => {\r\n            // reindex\r\n            data = data.map((class_, idx) => {\r\n              class_.index = idx + 1\r\n              return class_\r\n            })\r\n\r\n            // TODO: Refactor into one function\r\n            setClasses(data)\r\n            saveEditedClasses(data)\r\n          }}\r\n          ListEmptyComponent={() => {\r\n            return (\r\n              <AppText style={SDstyles.noClassesText} testID=\"noClassesText\">\r\n                {_.sample(NoClassesText)}\r\n              </AppText>\r\n            )\r\n          }}\r\n          scrollEnabled={false}\r\n          nestedScrollEnabled={false}\r\n          ItemSeparatorComponent={() => {\r\n            return <Separator width=\"97%\" color=\"rgba(217, 217, 217, 0.4)\" upperElement={true} lowerElement={true} /> // TODO: Refactor\r\n          }}\r\n          renderItem={({ item, drag, isActive }) => {\r\n            let class_ = item\r\n            let idx = item.index - 1\r\n\r\n            // normal class component\r\n            let scheduleClassComponent = (\r\n              <ScheduleClassComponent\r\n                displayRoomNumber={displayRoomNumber}\r\n                idx={idx}\r\n                key={idx + \"\" + class_.week}\r\n                scheduleClassInstance={class_}\r\n                isEditable={isEditable}\r\n                noTeacherText=\"Викладач\"\r\n                highlightAsOngoing={isActive}\r\n              />\r\n            )\r\n\r\n            const onDeleteButtonPressed = () => {\r\n              let filteredClasses = classes.filter((class_) => class_.index != idx + 1)\r\n              let filteredClassesWithPlaceholders = addPlaceholders(filteredClasses)\r\n              setClasses(filteredClassesWithPlaceholders)\r\n              saveEditedClasses(filteredClassesWithPlaceholders)\r\n            }\r\n\r\n            // editable class component\r\n            let editableScheduleClassWrapper = (\r\n              <SwipeableItem\r\n                key={idx + \"\" + class_.week}\r\n                // item={item}\r\n                renderUnderlayLeft={() => (\r\n                  <UnderlayRightSide\r\n                    onDeleteButtonPress={() => {\r\n                      onDeleteButtonPressed()\r\n                    }}\r\n                  />\r\n                )}\r\n                // renderUnderlayRight={() => <UnderlayLeft />}\r\n                snapPointsLeft={[50]} // snap points for right side underlay\r\n                snapPointsRight={[0]} // disable left side underlay\r\n                activationThreshold={10}\r\n              >\r\n                <TouchableOpacity\r\n                  onPress={(e) => {\r\n                    navigation.push(EditorStackRoutes.SCHEDULE_CLASS_FORM, {\r\n                      scheduleClass: class_,\r\n                      currentlyViewedWeek: weekType,\r\n                      onFormDataUpdated: (values: ScheduleClassFields) => {\r\n                        let updatedClasses = classes.map((class_) => {\r\n                          if (class_.index == idx + 1) {\r\n                            // process the values\r\n                            let teacher = values.teacher.split(\",\").map((t: string) => t.trim())\r\n                            let room = values.room.split(\",\").map((r: string) => r.trim())\r\n                            let isBiweekly =\r\n                              typeof values.isBiweekly == \"string\" ? JSON.parse(values.isBiweekly) : values.isBiweekly\r\n\r\n                            let wasBiweekly = class_.isBiweekly\r\n\r\n                            // if class wasn't biweekly and now it is, update week to currently viewed week\r\n                            if (!wasBiweekly && isBiweekly) {\r\n                              console.log(\"wasn't biweekly and now it is\")\r\n                              console.log(\"new weekType will be:\", weekType + 1)\r\n                              class_.isBiweekly = isBiweekly\r\n\r\n                              class_.setWeek(weekType + 1)\r\n                            }\r\n\r\n                            return new ScheduleClass(\r\n                              { ...class_, ...values, teacher, room, isBiweekly },\r\n                              dayNameEnRef.current\r\n                            )\r\n                          } else {\r\n                            return class_\r\n                          }\r\n                        })\r\n\r\n                        setClasses(updatedClasses)\r\n                        saveEditedClasses(updatedClasses)\r\n                      },\r\n                    })\r\n                  }}\r\n                  onLongPress={drag}\r\n                >\r\n                  {scheduleClassComponent}\r\n                </TouchableOpacity>\r\n              </SwipeableItem>\r\n            )\r\n\r\n            return <View>{isEditable ? editableScheduleClassWrapper : scheduleClassComponent}</View>\r\n          }}\r\n        />\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport const SDstyles = StyleSheet.create({\r\n  noClassesText: {\r\n    fontSize: 14,\r\n    marginVertical: 10,\r\n    justifyContent: \"center\",\r\n    alignSelf: \"center\",\r\n\r\n    fontFamily: FontName.Montserrat600,\r\n\r\n    color: palette.grayedOut,\r\n  },\r\n\r\n  fadedDayContainerView: {\r\n    opacity: 0.5,\r\n  },\r\n\r\n  dayNameHeader: {\r\n    fontFamily: FontName.Montserrat600,\r\n    fontSize: 14,\r\n    ...globalStyles.sectionHeader,\r\n    color: palette.text,\r\n  },\r\n\r\n  scheduleDayCard: {\r\n    marginTop: 5,\r\n    marginBottom: 15,\r\n    marginHorizontal: 5,\r\n    borderRadius: 6,\r\n    backgroundColor: \"white\",\r\n\r\n    paddingVertical: 2,\r\n    paddingHorizontal: 5,\r\n\r\n    elevation: 1,\r\n    shadowOffset: { width: 1, height: 1 },\r\n    shadowColor: \"#333\",\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 2,\r\n  },\r\n\r\n  row: {\r\n    flexDirection: \"row\",\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: 15,\r\n  },\r\n})\r\n","import GetWeekType from \"../utilities/getWeekType\"\r\nimport { IScheduleClass, ScheduleClass } from \"./ScheduleClass\"\r\n\r\ninterface IScheduleDayFields {\r\n  classes: IScheduleClass[]\r\n  name: string\r\n}\r\n\r\nexport interface IScheduleDay extends IScheduleDayFields {\r\n  getCurrentWeekClasses(): IScheduleClass[]\r\n  getNominatorClasses(): IScheduleClass[]\r\n  getDenominatorClasses(): IScheduleClass[]\r\n  getMatchingClassOfOtherWeek(class_: IScheduleClass): IScheduleClass | null\r\n}\r\n\r\nexport class ScheduleDay implements IScheduleDay {\r\n  classes: ScheduleClass[]\r\n  name: string\r\n\r\n  constructor(name: string, classes: IScheduleClass[]) {\r\n    this.classes = classes.map((class_) => new ScheduleClass(class_, name))\r\n    this.name = name\r\n  }\r\n\r\n  getCurrentWeekClasses(): ScheduleClass[] {\r\n    let currentWeekType = GetWeekType() + 1\r\n    let currentWeekClasses = this.classes.filter((class_) => !class_.isBiweekly || class_.week == currentWeekType)\r\n    return currentWeekClasses\r\n  }\r\n\r\n  // пари по чисельнику\r\n  getNominatorClasses(): ScheduleClass[] {\r\n    let nominatorClasses = this.classes.filter((class_) => !class_.isBiweekly || class_.week == 1)\r\n    return nominatorClasses\r\n  }\r\n\r\n  // пари по знаменнику\r\n  getDenominatorClasses(): ScheduleClass[] {\r\n    let denominatorClasses = this.classes.filter((class_) => !class_.isBiweekly || class_.week == 2)\r\n    return denominatorClasses\r\n  }\r\n\r\n  getMatchingClassOfOtherWeek(class_: ScheduleClass) {\r\n    if (!class_.isBiweekly) return null\r\n\r\n    let otherWeek = class_.week == 1 ? 2 : 1\r\n    let index = class_.index\r\n\r\n    let matchingClass = this.classes.find((class_) => class_.index == index && class_.week == otherWeek)\r\n\r\n    return matchingClass\r\n  }\r\n}\r\n","import { ensureNoExtension } from \"../utilities/utilities\"\r\nimport ScheduleLoaderService from \"../services/ScheduleLoaderService/ScheduleLoaderService\"\r\nimport EditedSchedulesStorageService from \"../services/EditedScheduleStorageService/EditedScheduleStorageService\"\r\nimport { ScheduleClass } from \"./ScheduleClass\"\r\nimport { IScheduleClass } from \"./ScheduleClass\"\r\nimport { ScheduleDay } from \"./ScheduleDay\"\r\n\r\nexport type ScheduleDaysJson = { [key: string]: ScheduleDay }\r\n\r\ninterface IScheduleModelFields {\r\n  name: string\r\n  specialtyName: string\r\n  year: number\r\n  dayNames: string[]\r\n  weekendDays: string[]\r\n  scheduleDays: ScheduleDay[]\r\n}\r\n\r\ninterface IScheduleModel extends IScheduleModelFields {\r\n  setSchedule(data: ScheduleDaysJson): void\r\n  loadScheduleFromJSONFile(): void\r\n  loadScheduleFromImportedObject(objectName: string): void\r\n  getScheduleFromScheduleLoader(scheduleFileName: string): void\r\n  getScheduleFromEditedSchedulesStorage(scheduleFileName: string): void\r\n  getCurrentClass(): ScheduleClass | null\r\n}\r\n\r\nexport default class ScheduleModel implements IScheduleModel {\r\n  name: string\r\n  specialtyName: string\r\n  year: number\r\n\r\n  // TODO: move to constants\r\n  dayNames = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"].map((day) =>\r\n    day.toLowerCase()\r\n  )\r\n  weekendDays = [\"saturday\", \"sunday\"]\r\n  scheduleDays = new Array<ScheduleDay>()\r\n\r\n  constructor(name: string, specialtyName: string, year: number) {\r\n    this.name = name\r\n    this.specialtyName = specialtyName\r\n    this.year = year\r\n  }\r\n\r\n  setSchedule(data: ScheduleDaysJson) {\r\n    // console.log(\"[Schedule Model] processing raw schedule data \", data)\r\n\r\n    console.log(`[Schedule Model] setting schedule from the object:`)\r\n    console.log(data)\r\n\r\n    this.dayNames.forEach((day) => {\r\n      if (this.weekendDays.includes(day)) return\r\n\r\n      let dayClasses: IScheduleClass[] = data[day].classes\r\n      let scheduleDay = new ScheduleDay(day, dayClasses)\r\n      this.scheduleDays.push(scheduleDay)\r\n    })\r\n\r\n    console.log(\"[Schedule Model] loaded schedule from imported object\")\r\n  }\r\n\r\n  loadScheduleFromJSONFile() {}\r\n  loadScheduleFromImportedObject(objectName: string) {\r\n    throw new Error(\"Method not supported.\")\r\n  }\r\n\r\n  async getScheduleFromScheduleLoader(scheduleFileName: string) {\r\n    let scheduleLoader = await ScheduleLoaderService.GetInstance()\r\n    let scheduleFile = scheduleLoader.scheduleFiles.find((file) => file.filename.startsWith(scheduleFileName))\r\n\r\n    if (!scheduleFile) {\r\n      console.log(`[Schedule Model] schedule file ${scheduleFileName} not found`)\r\n      // TODO: move out of the model and to UI\r\n      // ToastAndroid.show(\"Не вдалось завантажити розклад\", ToastAndroid.SHORT)\r\n\r\n      return\r\n    }\r\n\r\n    this.name = ensureNoExtension(scheduleFile.filename, \".json\")\r\n\r\n    console.log(`[Schedule Model] loading schedule from Schedule Loader: ${this.name}`)\r\n\r\n    let data: ScheduleDaysJson = scheduleFile.json_parsed\r\n\r\n    this.setSchedule(data)\r\n  }\r\n\r\n  async getScheduleFromEditedSchedulesStorage(scheduleFileName: string) {\r\n    let editedScheduleService = await EditedSchedulesStorageService.GetInstance()\r\n    let schedule = await editedScheduleService.loadEditedSchedule(scheduleFileName)\r\n\r\n    if (!schedule) {\r\n      console.log(`[Schedule Model] schedule file ${scheduleFileName} not found`)\r\n      return\r\n    }\r\n\r\n    this.name = ensureNoExtension(schedule.metadata.filename, \".json\")\r\n    this.setSchedule(schedule.scheduleDays)\r\n  }\r\n\r\n  getCurrentClass(): ScheduleClass | null {\r\n    const dayIndex = new Date().getDay()\r\n    const isWeekEnd = dayIndex == 0 || dayIndex == 6\r\n\r\n    if (isWeekEnd) return null\r\n\r\n    const todayClasses = this.scheduleDays[dayIndex - 1].classes\r\n    if (todayClasses.length == 0) return null\r\n\r\n    let currentClass = null\r\n\r\n    todayClasses.forEach((class_) => {\r\n      if (class_.isCurrent()) {\r\n        currentClass = class_\r\n      }\r\n    })\r\n\r\n    return currentClass\r\n  }\r\n}\r\n","import React, { useEffect } from \"react\"\r\nimport { View, Text, StyleSheet, Modal, Pressable, ScrollView, useWindowDimensions } from \"react-native\"\r\nimport { Button, Input } from \"react-native-elements\"\r\nimport { globalStyles, palette } from \"../styles/global\"\r\nimport { TextInput, TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport { Ionicons } from \"@expo/vector-icons\"\r\nimport AppText from \"./shared/AppText\"\r\nimport { FontName } from \"../constants/Fonts\"\r\n\r\n// TODO: fix modal content overflowing when keyboard is shown\r\n// TODO: refactor onClose to something more understandable\r\n\r\nexport type OptionPickerModalProps = {\r\n  hasSearchBar?: boolean\r\n  headerText?: string\r\n  isOpen: boolean\r\n  displaySeparators?: boolean\r\n  initialOptions: string[]\r\n  initialSelectedOption: string\r\n  renderItem?: (option: string, idx: number) => JSX.Element\r\n  closeModal: () => void\r\n  onSelected: (option: string) => void\r\n  optionIcon?: JSX.Element\r\n  isOptionSelectable?: boolean\r\n}\r\n\r\nexport default function OptionPickerModal({\r\n  hasSearchBar = true,\r\n  headerText = \"\",\r\n  isOpen = false,\r\n  displaySeparators = true,\r\n  initialOptions,\r\n  initialSelectedOption,\r\n  renderItem,\r\n  closeModal: closeModalCallback,\r\n  onSelected,\r\n  optionIcon,\r\n  isOptionSelectable = true,\r\n}: OptionPickerModalProps) {\r\n  const { height, width } = useWindowDimensions()\r\n\r\n  const [options, setOptions] = React.useState<string[]>(initialOptions)\r\n  const [searchQuery, setSearchQuery] = React.useState<string>(\"\")\r\n\r\n  const filteredOptions = hasSearchBar\r\n    ? options.filter((option) => JSON.stringify(option).toLowerCase().includes(searchQuery.toLowerCase()))\r\n    : options\r\n\r\n  const [selectedOption, setSelectedOption] = React.useState<string>(initialSelectedOption)\r\n\r\n  console.log(\"selectedOption in schedule picker modal:\", selectedOption)\r\n\r\n  const closeModal = () => {\r\n    setSearchQuery(\"\")\r\n    closeModalCallback()\r\n    console.log(\"cleared search query and closed schedule picker modal\")\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      console.log(\"unmounting schedule picker modal\")\r\n      setSearchQuery(\"\")\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <Modal animationType=\"fade\" transparent={true} style={styles.modal} visible={isOpen}>\r\n      <View style={styles.overlay} />\r\n      <View style={styles.modalContentContainer}>\r\n        <View style={{ width: \"100%\" }}>\r\n          <Text style={styles.header}>{headerText ?? \"\"}</Text>\r\n          <View style={[styles.horizontalFlex, styles.searchBarContainer, !hasSearchBar ? globalStyles.noDisplay : {}]}>\r\n            <Ionicons name=\"search-outline\" size={14} style={{ marginHorizontal: 5 }} color={palette.grayedOut} />\r\n            <TextInput style={styles.searchBar} onChangeText={setSearchQuery} placeholder=\"Пошук групи\" />\r\n          </View>\r\n        </View>\r\n        <ScrollView style={{ width: \"100%\", height: 0.4 * height }}>\r\n          {filteredOptions.map((option, idx) => (\r\n            <View key={idx}>\r\n              {renderItem ? (\r\n                renderItem(option, idx)\r\n              ) : (\r\n                <Pressable\r\n                  onPress={() => {\r\n                    if (!isOptionSelectable) return\r\n\r\n                    setSelectedOption(option)\r\n                    onSelected(option)\r\n                    closeModal()\r\n                  }}\r\n                >\r\n                  <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n                    <View\r\n                      style={{\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                      }}\r\n                    >\r\n                      {optionIcon}\r\n\r\n                      <AppText style={{ ...styles.option, ...(selectedOption == option ? styles.selectedOption : {}) }}>\r\n                        {option}\r\n                      </AppText>\r\n                    </View>\r\n\r\n                    {selectedOption == option ? (\r\n                      <Ionicons style={styles.checkIcon} name=\"checkmark-outline\" color={\"#1C5D8FCC\"} size={24} />\r\n                    ) : (\r\n                      <View />\r\n                    )}\r\n                  </View>\r\n                </Pressable>\r\n              )}\r\n\r\n              {displaySeparators && idx != options.length - 1 ? <View style={styles.separator}></View> : <View />}\r\n            </View>\r\n          ))}\r\n        </ScrollView>\r\n\r\n        <Pressable onPress={() => closeModal()}>\r\n          <View style={styles.closeButton}>\r\n            <Text style={styles.closeButtonText}>Закрити</Text>\r\n          </View>\r\n        </Pressable>\r\n      </View>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  modal: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"red\", // not gonna work cause it's transparent\r\n  },\r\n\r\n  horizontalFlex: {\r\n    ...globalStyles.horizontalCenteredFlex,\r\n  },\r\n\r\n  searchBarContainer: {\r\n    marginLeft: -4,\r\n    marginVertical: 10,\r\n    backgroundColor: \"#F2F2F2\",\r\n    borderRadius: 7,\r\n    padding: 5,\r\n    paddingVertical: 2,\r\n  },\r\n\r\n  searchBar: {\r\n    ...globalStyles.searchBar,\r\n  },\r\n\r\n  modalContentContainer: {\r\n    ...globalStyles.modalContentContainer,\r\n    // top: \"5%\",\r\n  },\r\n\r\n  overlay: {\r\n    backgroundColor: \"rgba(0, 0, 0, 0.25)\",\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n\r\n  option: {\r\n    fontFamily: FontName.Montserrat500,\r\n    color: palette.text,\r\n    width: \"100%\",\r\n    marginVertical: 10,\r\n  },\r\n\r\n  selectedOption: {\r\n    fontFamily: FontName.Montserrat600,\r\n  },\r\n\r\n  separator: {\r\n    height: 1, // haha\r\n    width: \"100%\",\r\n    marginVertical: 6,\r\n    backgroundColor: \"#E6E6E6\",\r\n  },\r\n\r\n  header: {\r\n    fontFamily: FontName.MontserratBold,\r\n    fontSize: 20,\r\n    marginBottom: 10,\r\n    color: palette.text,\r\n  },\r\n\r\n  closeButton: {\r\n    backgroundColor: \"#FFFFFF\",\r\n    borderWidth: 1,\r\n    borderColor: \"#E6E6E6\",\r\n    padding: 10,\r\n    paddingHorizontal: 30,\r\n    marginTop: 10,\r\n    // borderRadius: 10,\r\n\r\n    shadowColor: \"rgba(0,0,0,1)\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 1,\r\n    },\r\n    elevation: 0.2,\r\n    shadowOpacity: 0.0,\r\n    shadowRadius: 0,\r\n    borderRadius: 10,\r\n  },\r\n\r\n  closeButtonText: {\r\n    fontFamily: FontName.Montserrat600,\r\n    color: palette.grayedOut,\r\n    fontSize: 16,\r\n  },\r\n\r\n  checkIcon: {\r\n    position: \"absolute\",\r\n    right: 0,\r\n  },\r\n})\r\n","import { View, Text, StyleSheet, ImageBackground } from \"react-native\"\r\nimport AppText from \"../../components/shared/AppText\"\r\nimport { palette, globalStyles } from \"../../styles/global\"\r\nimport { previewImagesFull } from \"../../constants/Images\"\r\nimport { previewImages } from \"../../constants/Images\"\r\nimport { isRunningInBrowser } from \"../../utilities/utilities\"\r\n\r\nimport * as Device from \"expo-device\"\r\n\r\n// Import Swiper React components\r\nimport { SwiperSlide } from \"swiper/react\"\r\n\r\n// Import Swiper styles\r\nimport \"swiper/css\"\r\n\r\n// TODO: integrate with native carousel (it uses cropped preview images)\r\n// TODO: adapt settings page to web\r\n\r\nexport function getPageOne() {\r\n  const pageOne = (\r\n    <SwiperSlide style={styles.page} key=\"1\">\r\n      <View style={styles.imageContainer}>\r\n        <img style={styles.previewImage} src={previewImagesFull.schedule} />\r\n      </View>\r\n      <AppText style={styles.pageTitle}>Розклад</AppText>\r\n      <View style={styles.pageDescriptionText}>\r\n        <AppText style={styles.centeredDescriptionText}>\r\n          Розклад занять в академії чергується тижнями: чисельник, знаменник.\r\n        </AppText>\r\n        <br />\r\n        <AppText style={styles.centeredDescriptionText}>\r\n          Якщо цього тижня – чисельник, то перемикач <Text style={{ color: palette.navigationBackground }}>Чис</Text>{\" \"}\r\n          буде активним.\r\n        </AppText>\r\n      </View>\r\n    </SwiperSlide>\r\n  )\r\n\r\n  return pageOne\r\n}\r\n\r\nexport function getPageTwo() {\r\n  const pageTwo = (\r\n    <SwiperSlide style={styles.page} key=\"2\">\r\n      <View style={{ ...styles.imageContainer }}>\r\n        <img style={styles.previewImage} src={previewImagesFull.reglamentPreview} />\r\n      </View>\r\n      <AppText style={styles.pageTitle}>Регламент</AppText>\r\n      <View style={styles.pageDescriptionText}>\r\n        <AppText style={styles.centeredDescriptionText}>\r\n          Звичайний регламент... Але з{\" \"}\r\n          <AppText style={{ color: palette.navigationBackground }}>підсвіткою поточної пари </AppText>✨\r\n        </AppText>\r\n      </View>\r\n    </SwiperSlide>\r\n  )\r\n\r\n  return pageTwo\r\n}\r\n\r\nexport function getPageThree() {\r\n  const pageThree = (\r\n    <SwiperSlide style={styles.page} key=\"3\">\r\n      <View style={styles.imageContainer}>\r\n        <img style={styles.previewImage} src={previewImagesFull.editorPreview} />\r\n      </View>\r\n      <AppText style={styles.pageTitle}>Редактор</AppText>\r\n      <View style={styles.pageDescriptionText}>\r\n        <AppText style={styles.centeredDescriptionText}>\r\n          Дозволяє виправити чи змінити розклад за власними побажаннями.\r\n        </AppText>\r\n      </View>\r\n    </SwiperSlide>\r\n  )\r\n\r\n  return pageThree\r\n}\r\n\r\nexport function getPageFour() {\r\n  const pageFour = (\r\n    <SwiperSlide style={styles.page} key=\"4\">\r\n      <View style={styles.imageContainer}>\r\n        <img style={styles.previewImage} src={previewImagesFull.settingsPreview} />\r\n      </View>\r\n      <AppText style={styles.pageTitle}>Налаштування</AppText>\r\n      <View style={styles.pageDescriptionText}>\r\n        <AppText style={styles.centeredDescriptionText}>Вигляд розкладу та сповіщення можна налаштувати тут.</AppText>\r\n      </View>\r\n    </SwiperSlide>\r\n  )\r\n\r\n  return pageFour\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  page: {\r\n    // height: \"80vh\",\r\n    // width: \"100vw\",\r\n    // alignSelf: \"stretch\",\r\n\r\n    // marginHorizontal: \"5%\",\r\n    // marginLeft: \"5%\",\r\n    marginBottom: 20,\r\n    marginHorizontal: 20,\r\n\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n\r\n  pageTitle: {\r\n    fontSize: 24,\r\n    color: palette.navigationBackground,\r\n    textAlign: \"center\",\r\n    marginVertical: isRunningInBrowser() ? 20 : 10,\r\n    marginTop: isRunningInBrowser() ? 40 : 20,\r\n  },\r\n\r\n  imageContainer: {\r\n    borderRadius: 10,\r\n    height: \"55%\",\r\n    // width: \"100%\",\r\n    // flex: 1,\r\n    alignSelf: \"stretch\",\r\n\r\n    overflow: \"hidden\",\r\n    flexDirection: \"row\",\r\n\r\n    // backgroundColor: \"orange\",\r\n  },\r\n\r\n  previewImage: {\r\n    borderRadius: 10,\r\n\r\n    width: \"100%\",\r\n\r\n    objectFit: \"cover\",\r\n    objectPosition: \"top\",\r\n  },\r\n\r\n  centeredDescriptionText: {\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  pageDescriptionText: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n})\r\n","import React, { useEffect, useRef, useState } from \"react\"\r\n\r\nimport { View, Button, StyleSheet, Text, Image, TouchableOpacity, ActivityIndicator } from \"react-native\"\r\nimport { palette, globalStyles } from \"../../styles/global\"\r\nimport { previewImages } from \"../../constants/Images\"\r\nimport AppText from \"../../components/shared/AppText\"\r\n\r\n// Import Swiper React components\r\nimport { Swiper, SwiperSlide, useSwiper } from \"swiper/react\"\r\n\r\n// Import Swiper styles\r\nimport \"swiper/css\"\r\n\r\nimport _ from \"lodash\"\r\nimport { setStatusBarHidden } from \"expo-status-bar\"\r\nimport OptionPickerModal from \"../../components/OptionPickerModal\"\r\nimport { DrawerRoutes } from \"../../routes/DrawerRoutes\"\r\nimport SettingsService from \"../../services/SettingsService/SettingsService\"\r\nimport { ensureExtension, ensureNoExtension, isLandscapeWeb } from \"../../utilities/utilities\"\r\nimport { useNavigation } from \"@react-navigation/native\"\r\nimport ScheduleLoaderService from \"../../services/ScheduleLoaderService/ScheduleLoaderService\"\r\nimport { getPageFour, getPageOne, getPageThree, getPageTwo } from \"./Pages\"\r\nimport { Swiper as SwiperType } from \"swiper/types\"\r\nimport { FontName } from \"../../constants/Fonts\"\r\n\r\n// TODO: move shared logic to a separate file. As of now, lots if it is a copypaste from IntroductoryCarousel.native.tsx\r\n// TODO: fix navigation falling out of viewport on firefox\r\n\r\n// TODO: get replace document height with viewport height\r\nconst documentHeight = window.innerHeight\r\nconst swiperWidth = isLandscapeWeb() ? `${documentHeight / 2}px` : \"95%\"\r\n\r\nexport default function InroductoryCarouselScreen({ onClose }: { onClose?: () => void }) {\r\n  const [currentPage, setCurrentPage] = React.useState(0)\r\n  const swiperRef = useRef<SwiperType>()\r\n\r\n  let [isVisible, setIsVisible] = useState(true)\r\n  let [isReady, setIsReady] = useState(false)\r\n\r\n  let [schedulePickerModalVisible, setSchedulePickerModalVisible] = useState(false)\r\n\r\n  let [schedulePickerData, setSchedulePickerData] = useState<string[]>([])\r\n\r\n  const navigation = useNavigation()\r\n\r\n  const lastPageIndex = 3\r\n\r\n  useEffect(() => {\r\n    async function init() {\r\n      let scheduleLodaderInstance = await ScheduleLoaderService.GetInstance()\r\n\r\n      let schedulePickerData = scheduleLodaderInstance.scheduleFiles.map((f) => ensureNoExtension(f.filename, \".json\"))\r\n      setSchedulePickerData(schedulePickerData)\r\n\r\n      setIsReady(true)\r\n    }\r\n\r\n    init()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (swiperRef.current) {\r\n      swiperRef.current.slideTo(currentPage)\r\n    }\r\n  }, [currentPage])\r\n\r\n  if (!isReady) {\r\n    return (\r\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\r\n        <ActivityIndicator size=\"large\" color={palette.navigationBackground} />\r\n      </View>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <View style={{ ...styles.overlay }}>\r\n      <View style={styles.paginationCircles}>\r\n        {_.times(lastPageIndex + 1, (i) => (\r\n          <View key={i} style={[styles.circle, currentPage == i ? styles.circleActive : {}]} />\r\n        ))}\r\n      </View>\r\n\r\n      <Swiper\r\n        initialSlide={currentPage}\r\n        style={{ display: \"flex\", width: swiperWidth, flex: 1 }}\r\n        onSwiper={(swiper) => (swiperRef.current = swiper)}\r\n        onSlideChange={(swiper) => {\r\n          setCurrentPage(swiper.activeIndex)\r\n        }}\r\n      >\r\n        {getPageOne()}\r\n        {getPageTwo()}\r\n\r\n        {getPageThree()}\r\n        {getPageFour()}\r\n      </Swiper>\r\n      {currentPage == 0 ? (\r\n        <View style={[styles.pagerNavigation, { justifyContent: \"center\" }]}>\r\n          <TouchableOpacity\r\n            style={[styles.navigationButton, { width: 150 }]}\r\n            onPress={() => {\r\n              setSchedulePickerModalVisible(true)\r\n            }}\r\n          >\r\n            <AppText\r\n              accessibilityLabel=\"selectSchedule\"\r\n              style={{ color: palette.navigationBackground, fontFamily: FontName.Montserrat600 }}\r\n            >\r\n              Обрати розклад\r\n            </AppText>\r\n          </TouchableOpacity>\r\n          <OptionPickerModal\r\n            headerText=\"Вибери свою групу\"\r\n            isOpen={schedulePickerModalVisible}\r\n            initialOptions={schedulePickerData}\r\n            initialSelectedOption={\"\"}\r\n            closeModal={() => setSchedulePickerModalVisible(false)}\r\n            onSelected={(selected) => {\r\n              SettingsService.GetInstance().then((i) => {\r\n                i.currentScheduleName = ensureExtension(selected, \".json\")\r\n                i.saveToStorage()\r\n\r\n                let newCurrentPage = _.clamp(currentPage + 1, 0, lastPageIndex)\r\n                setCurrentPage(newCurrentPage)\r\n              })\r\n            }}\r\n          />\r\n        </View>\r\n      ) : (\r\n        <View style={styles.pagerNavigation}>\r\n          <TouchableOpacity\r\n            style={[styles.navigationButton, styles.backButton]}\r\n            onPress={() => {\r\n              let newCurrentPage = _.clamp(currentPage - 1, 0, 999)\r\n\r\n              setCurrentPage(newCurrentPage)\r\n            }}\r\n          >\r\n            <AppText\r\n              style={{\r\n                color: palette.navigationBackground,\r\n                fontFamily: FontName.Montserrat600,\r\n                color: palette.grayedOut,\r\n              }}\r\n            >\r\n              Назад\r\n            </AppText>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            style={styles.navigationButton}\r\n            onPress={() => {\r\n              let isCloseButton = currentPage == lastPageIndex\r\n\r\n              if (isCloseButton) {\r\n                setStatusBarHidden(false, \"fade\")\r\n                setIsVisible(false)\r\n                onClose?.()\r\n                navigation.navigate(DrawerRoutes.VIEWER)\r\n              }\r\n\r\n              let newCurrentPage = _.clamp(currentPage + 1, 0, lastPageIndex)\r\n              setCurrentPage(newCurrentPage)\r\n            }}\r\n          >\r\n            <AppText style={{ color: palette.navigationBackground, fontFamily: FontName.Montserrat600 }}>\r\n              {currentPage != lastPageIndex ? \"Далі\" : \"Закрити\"}\r\n            </AppText>\r\n          </TouchableOpacity>\r\n        </View>\r\n      )}\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  carouselContainer: {\r\n    backgroundColor: \"#F5F5F5\",\r\n    // backgroundColor: \"red\",\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    flex: 1,\r\n    zIndex: 9999,\r\n\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  container: {\r\n    flex: 1,\r\n    height: \"100%\",\r\n  },\r\n\r\n  viewPager: {\r\n    flex: 1,\r\n    padding: 0,\r\n    marginHorizontal: 30,\r\n  },\r\n  page: {\r\n    // height: \"100%\",\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  paginationCircles: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginVertical: 20,\r\n\r\n    width: \"100%\",\r\n  },\r\n\r\n  circle: {\r\n    width: 5,\r\n    height: 5,\r\n    margin: 5,\r\n    borderRadius: 123,\r\n    backgroundColor: \"#D9D9D9\",\r\n    flexDirection: \"row\",\r\n  },\r\n\r\n  circleActive: {\r\n    backgroundColor: \"#7B7B7B\",\r\n  },\r\n\r\n  pageBody: {\r\n    marginBottom: 20,\r\n    // flex: 1,\r\n    // height: \"100%\",\r\n  },\r\n\r\n  overlay: {\r\n    backgroundColor: \"#F5F5F5\",\r\n    // backgroundColor: \"red\",\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    flex: 1,\r\n    zIndex: 9998,\r\n  },\r\n\r\n  pagerNavigation: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: 20,\r\n    alignSelf: \"center\",\r\n    width: swiperWidth,\r\n  },\r\n\r\n  pageTitle: {\r\n    fontSize: 24,\r\n    color: palette.navigationBackground,\r\n    textAlign: \"center\",\r\n    marginVertical: 10,\r\n    marginTop: 20,\r\n  },\r\n\r\n  imageContainer: {\r\n    borderRadius: 10,\r\n    height: \"65%\",\r\n    maxHeight: \"65%\",\r\n    width: \"90%\",\r\n    // backgroundColor: \"green\",\r\n\r\n    overflow: \"auto\",\r\n\r\n    // borderColor: palette.navigationBackground,\r\n    // borderWidth: 1,\r\n    // borderColor: palette.grayishBlue,\r\n\r\n    // elevation: 0,\r\n    // shadowOffset: { width: 1, height: 1 },\r\n    // shadowColor: palette.navigationBackground,\r\n    // shadowOpacity: 0.3,\r\n    // shadowRadius: 2,\r\n\r\n    alignItems: \"flex-start\",\r\n    justifyContent: \"flex-start\",\r\n    flexDirection: \"row\",\r\n  },\r\n\r\n  previewImage: {\r\n    borderRadius: 10,\r\n    // borderColor: palette.backgroundLight,\r\n\r\n    // backgroundColor: palette.navigationBackground,\r\n\r\n    // height: \"100%\",\r\n    // width: \"100%\",\r\n\r\n    // resizeMode: \"cover\" is the default\r\n    // resizeMode: \"contain\",\r\n\r\n    // alignSelf: \"flex-start\",\r\n    // alignItems: \"flex-start\",\r\n    // justifyContent: \"flex-start\",\r\n\r\n    // flexDirection: \"column\",\r\n  },\r\n\r\n  halfImageContainer: {\r\n    height: \"30%\",\r\n  },\r\n\r\n  navigationButton: {\r\n    ...globalStyles.navigationButton,\r\n  },\r\n\r\n  backButton: {\r\n    borderColor: palette.grayedOut,\r\n  },\r\n\r\n  forwardButton: {\r\n    borderColor: palette.navigationBackground,\r\n    borderWidth: 1,\r\n  },\r\n\r\n  centeredDescriptionText: {\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  pageDescriptionText: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n})\r\n","import React from \"react\"\r\nimport { StyleSheet, Text, View, Image, Pressable, ImageBackground } from \"react-native\"\r\nimport { MaterialIcons } from \"@expo/vector-icons\"\r\nimport { SafeAreaView } from \"react-native-safe-area-context\"\r\nimport { globalStyles, palette } from \"../../styles/global\"\r\nimport GetWeekType, { WeekType } from \"../../utilities/getWeekType\"\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport { useNavigation } from \"@react-navigation/native\"\r\nimport { ExecutionEnvironment, NativeConstants, Constants, PlatformManifest, AndroidManifest } from \"expo-constants\"\r\nimport constants from \"expo-constants\"\r\nimport { getIcon } from \"../Header\"\r\nimport { DrawerRoutes } from \"../../routes/DrawerRoutes\"\r\n\r\nimport { useRoute } from \"@react-navigation/native\"\r\nimport { FontName } from \"../../constants/Fonts\"\r\n\r\n// TODO: Dry up. I simply copypasted this code from Header.tsx\r\n// TODO: Display activity indicator during changing week type\r\n\r\nexport default function ScheduleHeader({\r\n  title,\r\n  onWeekTypeChanged,\r\n}: {\r\n  title: string\r\n  onWeekTypeChanged: (weekType: WeekType) => void\r\n}) {\r\n  const navigation_ = useNavigation()\r\n\r\n  const [weekType, setWeekType] = React.useState<WeekType>(GetWeekType())\r\n  const weekTypeInUkrainian = weekType === WeekType.Nominator ? \"Чисельник\" : \"Знаменник\"\r\n  console.log(\"[Schedule Header] weekType: \", weekType)\r\n  console.log(\"[Schedule Header] weekType in Ukrainian: \", weekTypeInUkrainian)\r\n\r\n  // extract current screen name from navigation state\r\n  const headerText = title.split(\".\")[0]\r\n\r\n  const routeName = useRoute().name\r\n  console.log(\"[Schedule Header] routeName: \", routeName)\r\n\r\n  const icon = getIcon(navigation_, routeName)\r\n\r\n  return (\r\n    <SafeAreaView style={scheduleHeaderStyles.header}>\r\n      <View style={scheduleHeaderStyles.headerContentContainer}>\r\n        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n          <TouchableOpacity>{icon}</TouchableOpacity>\r\n\r\n          <Text style={scheduleHeaderStyles.headerText}>{headerText}</Text>\r\n        </View>\r\n        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n          <View style={[{ flexDirection: \"row\", alignItems: \"center\", marginRight: 12 }]}>\r\n            <View\r\n              style={[\r\n                scheduleHeaderStyles.weekTextContainer,\r\n                weekTypeInUkrainian == \"Чисельник\" ? scheduleHeaderStyles.selectedContainer : {},\r\n                { marginRight: 5 },\r\n              ]}\r\n            >\r\n              <Text\r\n                style={[\r\n                  scheduleHeaderStyles.weekTypeText,\r\n                  weekTypeInUkrainian == \"Чисельник\" ? scheduleHeaderStyles.selectedText : {},\r\n                ]}\r\n                onPress={() => {\r\n                  onWeekTypeChanged(0)\r\n                  setWeekType(0)\r\n                }}\r\n              >\r\n                Чис\r\n              </Text>\r\n            </View>\r\n\r\n            <View\r\n              style={[\r\n                scheduleHeaderStyles.weekTextContainer,\r\n                weekTypeInUkrainian == \"Знаменник\" ? scheduleHeaderStyles.selectedContainer : {},\r\n              ]}\r\n            >\r\n              <Text\r\n                onPress={() => {\r\n                  // debugger\r\n                  onWeekTypeChanged(1)\r\n                  setWeekType(1)\r\n                }}\r\n                style={[\r\n                  scheduleHeaderStyles.weekTypeText,\r\n                  weekTypeInUkrainian == \"Знаменник\" ? scheduleHeaderStyles.selectedText : {},\r\n                ]}\r\n              >\r\n                Знам\r\n              </Text>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </SafeAreaView>\r\n  )\r\n}\r\nconst baseStyles = StyleSheet.create({\r\n  text: {\r\n    color: \"white\",\r\n    fontFamily: \"century-gothic\",\r\n  },\r\n})\r\n\r\nexport const scheduleHeaderStyles = StyleSheet.create({\r\n  header: {\r\n    paddingVertical: 15,\r\n    width: \"100%\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#1C5D8F\",\r\n  },\r\n\r\n  backroundImage: {\r\n    width: \"100%\",\r\n  },\r\n\r\n  headerText: {\r\n    fontSize: 20,\r\n    color: \"#333\",\r\n    color: \"white\",\r\n    fontFamily: FontName.CenturyGothic,\r\n  },\r\n  sideMenuIcon: {\r\n    color: \"white\",\r\n    marginHorizontal: 16,\r\n    marginRight: 10,\r\n    zIndex: 8888,\r\n  },\r\n\r\n  headerContentContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    width: \"100%\",\r\n  },\r\n\r\n  currentlyViewedDay: {\r\n    fontSize: 14,\r\n    ...baseStyles.text,\r\n    marginLeft: 10,\r\n    marginHorizontal: 16,\r\n  },\r\n\r\n  weekTypeText: {\r\n    fontSize: 16,\r\n    ...baseStyles.text,\r\n  },\r\n\r\n  weekTextContainer: {\r\n    paddingHorizontal: 5,\r\n    paddingVertical: 4,\r\n  },\r\n\r\n  selectedContainer: {\r\n    borderRadius: 5,\r\n    backgroundColor: \"white\",\r\n  },\r\n\r\n  selectedText: {\r\n    color: palette.navigationBackground,\r\n  },\r\n})\r\n","import React from \"react\"\r\nimport { View, Text, StyleSheet, Image } from \"react-native\"\r\nimport AppText from \"../shared/AppText\"\r\nimport { editorImages } from \"../../constants/Images\"\r\nimport { SDstyles } from \"../ScheduleComponents/ScheduleDay\"\r\n\r\nexport default function EditActionsExplanatoryCard() {\r\n  return (\r\n    <View\r\n      style={[\r\n        styles.scheduleDayCard,\r\n        {\r\n          marginHorizontal: 10,\r\n        },\r\n      ]}\r\n    >\r\n      <View\r\n        style={[\r\n          {\r\n            marginVertical: 5,\r\n            paddingHorizontal: 10,\r\n            paddingLeft: 5,\r\n            paddingVertical: 3,\r\n          },\r\n          { flexDirection: \"row\" },\r\n        ]}\r\n      >\r\n        <View\r\n          style={[\r\n            {\r\n              marginRight: 5,\r\n            },\r\n          ]}\r\n        >\r\n          <Image source={editorImages.lightbulb} style={{ height: 50, width: 50 }} />\r\n        </View>\r\n        <View>\r\n          {/* TODO: bolden the action words */}\r\n          <AppText style={{ fontFamily: \"century-gothic\", fontSize: 13, letterSpacing: 0.1 }}>\r\n            Перемістити: затиснути та перетягнути\r\n          </AppText>\r\n\r\n          <AppText style={{ fontFamily: \"century-gothic\", fontSize: 13, letterSpacing: 0.1 }}>\r\n            Видалити: свайп ліворуч\r\n          </AppText>\r\n\r\n          <AppText style={{ fontFamily: \"century-gothic\", fontSize: 13, letterSpacing: 0.1 }}>\r\n            Редагувати: натиснути на пару\r\n          </AppText>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n\r\n  scheduleDayCard: {\r\n    ...SDstyles.scheduleDayCard,\r\n  },\r\n})\r\n","import React from \"react\"\r\nimport { View, Text, StyleSheet, Image } from \"react-native\"\r\nimport AppText from \"../shared/AppText\"\r\nimport { palette } from \"../../styles/global\"\r\nimport { editorImages } from \"../../constants/Images\"\r\nimport { SDstyles } from \"../ScheduleComponents/ScheduleDay\"\r\nimport GetWeekType from \"../../utilities/getWeekType\"\r\nimport _ from \"lodash\"\r\nimport { isRunningInBrowser } from \"../../utilities/utilities\"\r\nimport { FontName } from \"../../constants/Fonts\"\r\n\r\nexport default function DateOverviewCard() {\r\n  // current day of the week, in this format: \"Понеділок\" and nothing else\r\n  let currentDayString = new Date()\r\n    .toLocaleDateString(\"uk-UA\", {\r\n      weekday: \"long\",\r\n    })\r\n    .split(\",\")[0]\r\n\r\n  currentDayString = _.capitalize(currentDayString)\r\n\r\n  const currentDayDate = new Date().toLocaleDateString(\"uk-UA\", {\r\n    day: \"numeric\",\r\n    month: \"long\",\r\n  })\r\n\r\n  // current work week interval, in this format: \"12.04.2021 - 18.04.2021\", where start date is monday and end date is friday\r\n  const currentWorkWeekInterval = (() => {\r\n    const currentDate = new Date()\r\n    // starts with sunday by default, so we need to subtract 1 for it to start with monday\r\n    let currentDayOfWeek = currentDate.getDay() - 1\r\n    if (currentDayOfWeek == -1) {\r\n      currentDayOfWeek = 6\r\n    }\r\n    const currentMonth = currentDate.getMonth()\r\n    const currentYear = currentDate.getFullYear()\r\n\r\n    const mondayDate = new Date(currentYear, currentMonth, currentDate.getDate() - currentDayOfWeek)\r\n    const fridayDate = new Date(currentYear, currentMonth, currentDate.getDate() - currentDayOfWeek + 4)\r\n\r\n    return `${mondayDate.toLocaleDateString(\"uk-UA\", {\r\n      day: \"numeric\",\r\n      month: \"numeric\",\r\n      year: \"numeric\",\r\n    })} – ${fridayDate.toLocaleDateString(\"uk-UA\", {\r\n      day: \"numeric\",\r\n      month: \"numeric\",\r\n      year: \"numeric\",\r\n    })}`\r\n  })()\r\n\r\n  const currentWeekType = GetWeekType() == 0 ? \"Чисельник\" : \"Знаменник\"\r\n\r\n  return (\r\n    <View\r\n      style={[\r\n        styles.scheduleDayCard,\r\n        {\r\n          marginHorizontal: 10,\r\n        },\r\n      ]}\r\n    >\r\n      <View\r\n        style={[\r\n          {\r\n            marginVertical: 5,\r\n            paddingHorizontal: 10,\r\n            paddingLeft: 5,\r\n            paddingVertical: 3,\r\n          },\r\n          { flexDirection: \"row\" },\r\n        ]}\r\n      >\r\n        <View style={{ flex: 1 }}>\r\n          <AppText style={styles.upperRowText}>{currentWeekType}</AppText>\r\n          <AppText style={styles.lowerRowText}>{currentWorkWeekInterval}</AppText>\r\n        </View>\r\n        {isRunningInBrowser() ? <View style={styles.verticalSeparator} /> : <View />}\r\n\r\n        <View style={{ flex: 1, alignItems: \"flex-end\" }}>\r\n          <AppText style={styles.upperRowText}>{currentDayString}</AppText>\r\n          <AppText style={styles.lowerRowText}>{currentDayDate}</AppText>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n\r\n  scheduleDayCard: {\r\n    ...SDstyles.scheduleDayCard,\r\n    borderColor: \"#8FB7DA\",\r\n    borderWidth: 1,\r\n    elevation: 2,\r\n  },\r\n\r\n  verticalSeparator: {\r\n    width: 1,\r\n    height: \"100%\",\r\n    backgroundColor: palette.background,\r\n    opacity: 0.5,\r\n    marginHorizontal: 10,\r\n  },\r\n\r\n  upperRowText: {\r\n    fontFamily: FontName.MontserratMedium,\r\n    fontSize: 13,\r\n    marginBottom: 5,\r\n  },\r\n\r\n  lowerRowText: {\r\n    color: palette.grayedOut,\r\n  },\r\n})\r\n","import React from \"react\"\r\n\r\nimport { useCallback, useRef, useState } from \"react\"\r\nimport { View, StyleSheet, ActivityIndicator, ToastAndroid } from \"react-native\"\r\nimport { globalStyles, palette } from \"../styles/global\"\r\n\r\nimport ScheduleDayComponent from \"../components/ScheduleComponents/ScheduleDay\"\r\nimport { useEffect } from \"react\"\r\nimport SettingsService from \"../services/SettingsService/SettingsService\"\r\nimport { DisplayEmptyDaysMode } from \"../services/SettingsService/Types\"\r\nimport ScheduleModel from \"../models/ScheduleModel\"\r\n\r\nimport { ScrollView } from \"react-native-gesture-handler\"\r\nimport _ from \"lodash\"\r\nimport { workDays } from \"../constants/Days\"\r\nimport ScheduleNotificationsService from \"../services/ScheduleNotificationsService\"\r\nimport ScheduleLoaderService from \"../services/ScheduleLoaderService/ScheduleLoaderService\"\r\nimport { ScheduleFile } from \"../services/ScheduleLoaderService/Types\"\r\nimport { SettingsContext } from \"../contexts/settingsContext\"\r\nimport { ensureExtension, ensureNoExtension, isRunningInBrowser } from \"../utilities/utilities\"\r\nimport IntroductoryCarousel from \"./IntroductoryCarousel/IntroductoryCarousel\"\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\"\r\nimport GetWeekType, { WeekType } from \"../utilities/getWeekType\"\r\nimport { useFocusEffect, useNavigation } from \"@react-navigation/native\"\r\nimport ScheduleHeader from \"../components/ScheduleComponents/ScheduleHeader\"\r\nimport { Event } from \"../constants/Events\"\r\nimport EditActionsExplanatoryCard from \"../components/ScheduleEditorComponents/EditActionsExplanatoryCard\"\r\nimport DateOverviewCard from \"../components/ScheduleComponents/DateOverviewCard\"\r\nimport { WeekTypeContext } from \"../contexts/weekTypeContext\"\r\n\r\n// TODO: scroll to current day on mount only instead of doing so on every rerender?\r\n\r\nexport default function ScheduleScreen({ isEditable = false }: { isEditable: boolean }) {\r\n  // [web] a workaround to render drawer menu content without explicitly opening it\r\n\r\n  if (isRunningInBrowser()) {\r\n    const navigation = useNavigation()\r\n    navigation.openDrawer()\r\n    navigation.closeDrawer()\r\n  }\r\n\r\n  const todayIndex = _.clamp(new Date().getDay() - 1, 0, 4)\r\n\r\n  // state for unconditional rerendering\r\n  const [state, setState] = useState({})\r\n  const [isFirstTimeLaunch, setIsFirstTimeLaunch] = useState<string | null>(\"false\") // async storage can't store anything other than strings\r\n\r\n  let scheduleRef = useRef<ScheduleModel | null>(null)\r\n  let scheduleFileRef = useRef<ScheduleFile | null>(null)\r\n  let settingsServiceRef = useRef<SettingsService>(null)\r\n\r\n  let scrollViewContainerRef = useRef<ScrollView | null>(null)\r\n\r\n  const [scheduleLoaded, setScheduleLoaded] = useState(false)\r\n  const [scheduleName, setScheduleName] = useState(\"\")\r\n  const [dataSourceCords, setDataSourceCords] = useState<any[]>([])\r\n\r\n  const scheduleNameRef = useRef<string>()\r\n  scheduleNameRef.current = scheduleName\r\n\r\n  const [weekType, setWeekType] = React.useState<WeekType>(GetWeekType())\r\n\r\n  const onSettingsUpdated = useCallback(\r\n    async (settingsService: SettingsService) => {\r\n      // if schedule didn't change then there is nothing to do here\r\n      console.log(\" - - - deciding whether to update schedule or not - - -\")\r\n      let settingsScheduleName = ensureNoExtension(settingsService.currentScheduleName, \".json\")\r\n      let currentScheduleName = ensureNoExtension(scheduleNameRef.current, \".json\")\r\n      console.log(\"settings schedule name: \", settingsScheduleName)\r\n      console.log(\"schedule name: \", currentScheduleName)\r\n\r\n      const shouldUpdateSchedule = settingsScheduleName !== currentScheduleName\r\n      console.log(\" - - -\")\r\n\r\n      if (shouldUpdateSchedule) {\r\n        // construct new schedule object and setState for schedule name\r\n        const newSchedule = new ScheduleModel(\"groupname_groupyear\", \"groupname\", 5)\r\n        await newSchedule.getScheduleFromScheduleLoader(settingsService.currentScheduleName)\r\n\r\n        // configure notifications for schedule, but only if it's not in editor\r\n        if (!isEditable) {\r\n          const notifService = await ScheduleNotificationsService.GetInstance()\r\n          await notifService.configureNotificationsForSchedule(newSchedule)\r\n        }\r\n\r\n        scheduleRef.current = newSchedule\r\n        let scheduleLoaderService = await ScheduleLoaderService.GetInstance()\r\n        let updatedSchedule = scheduleLoaderService.getScheduleFileByFileName(\r\n          ensureExtension(settingsService.currentScheduleName, \".json\")\r\n        )\r\n        // TODO: Refactor XD\r\n        scheduleFileRef.current = _.cloneDeep(updatedSchedule) ?? null\r\n\r\n        setScheduleName(settingsService.currentScheduleName)\r\n      } else {\r\n        // assume that something else changed and we need to rerender to reflect those changes\r\n        // (in editor, everything is always unfolded and there is no need to update)\r\n        if (isEditable) return\r\n        setState({})\r\n      }\r\n    },\r\n    [scheduleName]\r\n  )\r\n\r\n  useEffect(() => {\r\n    async function onMount() {\r\n      let settingsService = await SettingsService.GetInstance()\r\n      settingsServiceRef.current = settingsService\r\n\r\n      console.log(\"[Schedule.tsx] settingsService instance: \", settingsService)\r\n\r\n      let scheduleLoaderInstance = await ScheduleLoaderService.GetInstance()\r\n\r\n      let schedule = new ScheduleModel(\"groupname_groupyear\", \"groupname\", 5)\r\n\r\n      // check whether the schedule that settings service is referencing exists. Otherwise load first available schedule\r\n      let scheduleFile = scheduleLoaderInstance.getScheduleFileByFileName(settingsService.currentScheduleName)\r\n      let firstScheduleFile = scheduleLoaderInstance.scheduleFiles[0]\r\n\r\n      scheduleFileRef.current = _.cloneDeep(scheduleFile ?? firstScheduleFile)\r\n\r\n      const nameOfScheduleToLoad = scheduleFile ? settingsService.currentScheduleName : firstScheduleFile.filename\r\n\r\n      await schedule.getScheduleFromScheduleLoader(nameOfScheduleToLoad)\r\n\r\n      // configure notifications for schedule, but only if it's not in editor\r\n      if (!isEditable) {\r\n        ScheduleNotificationsService.GetInstance().then((i) => {\r\n          console.log(\"will call configureNotificationsForSchedule on schedule: \", schedule.name)\r\n          i.configureNotificationsForSchedule(schedule)\r\n        })\r\n      }\r\n\r\n      console.log(\"[Schedule.tsx] schedule: \", schedule)\r\n\r\n      settingsService.SettingsEventEmitter.on(Event.SETTINGS_UPDATED, onSettingsUpdated)\r\n      console.log(\"subscribed to settings updated event\")\r\n      console.log(\"n of subscribers: \", settingsService.SettingsEventEmitter.listenerCount(Event.SETTINGS_UPDATED))\r\n\r\n      scheduleRef.current = schedule\r\n\r\n      const isFirstimeLaunch = await AsyncStorage.getItem(\"isFirstTimeLaunch\")\r\n      setIsFirstTimeLaunch(isFirstimeLaunch)\r\n\r\n      setScheduleName(schedule.name)\r\n      setScheduleLoaded(true)\r\n    }\r\n\r\n    onMount()\r\n\r\n    return () => {\r\n      SettingsService.GetInstance().then((settingsService: SettingsService) => {\r\n        settingsService.SettingsEventEmitter.removeListener(Event.SETTINGS_UPDATED, onSettingsUpdated)\r\n      })\r\n    }\r\n  }, [])\r\n\r\n  const onWeekTypeChanged = (weekType: number) => {\r\n    console.log(\"week type changed to: \", weekType)\r\n    // display toast message if in editor\r\n    // the switching takes longer in editor...\r\n    if (isEditable) {\r\n      // TODO: make cross platform version of toast\r\n      if (!isRunningInBrowser()) {\r\n        ToastAndroid.show(\"Завантаження...\", ToastAndroid.LONG)\r\n      }\r\n    }\r\n    setWeekType(weekType)\r\n  }\r\n\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      if (isEditable) return\r\n\r\n      // compare current schedule file with the one in loader\r\n      // if they are different, update schedule\r\n\r\n      // return if schedule or schedule file is not loaded yet\r\n      if (!scheduleRef.current || !scheduleFileRef.current) {\r\n        console.log(\"[schedule screen focus] schedule or schedule file is not loaded yet\")\r\n        return\r\n      }\r\n\r\n      let currentScheduleFile = scheduleFileRef.current\r\n      ScheduleLoaderService.GetInstance().then((instance) => {\r\n        let scheduleFile = instance.getScheduleFileByFileName(currentScheduleFile!.filename)\r\n        // debugger\r\n\r\n        // have to compare them this way because the objects themselves have different ids\r\n        if (JSON.stringify(currentScheduleFile.json_parsed) != JSON.stringify(scheduleFile!.json_parsed)) {\r\n          console.log(\"[schedule screen focus] schedule file changed, rerendering...\")\r\n          // setScheduleLoaded(false)\r\n\r\n          // update refs\r\n          scheduleFileRef.current = _.cloneDeep(scheduleFile) ?? null\r\n\r\n          let newSchedule = new ScheduleModel(\"groupname_groupyear\", \"groupname\", 5)\r\n          scheduleRef.current! = newSchedule\r\n          newSchedule.getScheduleFromScheduleLoader(scheduleFile!.filename).then(() => {\r\n            setState({})\r\n          })\r\n        } else {\r\n          console.log(\"[schedule screen focus] schedule file didn't change\")\r\n        }\r\n      })\r\n\r\n      // show toast\r\n      // ToastAndroid.show(\"У переглядачі\", ToastAndroid.SHORT)\r\n\r\n      return () => {\r\n        // ToastAndroid.show(\"Поза переглядачем\", ToastAndroid.SHORT)\r\n      }\r\n    }, [])\r\n  )\r\n\r\n  if (!scheduleLoaded) {\r\n    return (\r\n      <View style={styles.rootContainer}>\r\n        <ScheduleHeader title=\"Розклад\" onWeekTypeChanged={onWeekTypeChanged} />\r\n        <View style={{ justifyContent: \"center\", alignItems: \"center\", flex: 1 }}>\r\n          <ActivityIndicator\r\n            testID=\"scheduleScreenActivityIndicator\"\r\n            size=\"large\"\r\n            animating={true}\r\n            color={palette.navigationBackground}\r\n          />\r\n        </View>\r\n      </View>\r\n    )\r\n  }\r\n\r\n  if (isFirstTimeLaunch != \"false\") {\r\n    return (\r\n      <IntroductoryCarousel\r\n        onClose={() => {\r\n          setIsFirstTimeLaunch(\"false\")\r\n          AsyncStorage.setItem(\"isFirstTimeLaunch\", \"false\")\r\n        }}\r\n      />\r\n    )\r\n  }\r\n\r\n  console.log(\"[Schedule View] will render schedule screen\")\r\n\r\n  return (\r\n    <SettingsContext.Provider value={settingsServiceRef.current}>\r\n      <WeekTypeContext.Provider value={weekType}>\r\n        <View style={styles.rootContainer}>\r\n          <ScheduleHeader title={scheduleName} onWeekTypeChanged={onWeekTypeChanged} />\r\n\r\n          <ScrollView\r\n            style={\r\n              {\r\n                // flex: 1\r\n                // ^breaks it on mobile\r\n              }\r\n            }\r\n            contentContainerStyle={{ paddingBottom: 0 }}\r\n            ref={scrollViewContainerRef}\r\n            // nestedScrollEnabled={false}\r\n          >\r\n            {/* explanatory card if in editor, otherwise date overview card */}\r\n\r\n            {isEditable ? <EditActionsExplanatoryCard /> : <DateOverviewCard />}\r\n            {/* temp slice for performance reasons */}\r\n            {workDays.slice(0, 111).map((day, idx) => {\r\n              const item = day\r\n\r\n              const schedule = scheduleRef.current!\r\n              const scheduleDay = schedule.scheduleDays[idx]\r\n\r\n              const currentlySelectedWeekClasses =\r\n                weekType == 0 ? scheduleDay.getNominatorClasses() : scheduleDay.getDenominatorClasses()\r\n\r\n              const isEmpty = currentlySelectedWeekClasses.length === 0\r\n              const shouldDisplayEmptyDay = settingsServiceRef.current!.displayEmptyDays != DisplayEmptyDaysMode.Hide\r\n\r\n              if (!isEditable && isEmpty && !shouldDisplayEmptyDay) {\r\n                return <View style={globalStyles.noDisplay} key={day + weekType}></View>\r\n              }\r\n\r\n              let classes = weekType == 0 ? scheduleDay.getNominatorClasses() : scheduleDay.getDenominatorClasses()\r\n\r\n              return (\r\n                <View\r\n                  style={styles.cardContainer}\r\n                  key={day + weekType}\r\n                  onLayout={(event) => {\r\n                    const layout = event.nativeEvent.layout\r\n                    dataSourceCords[idx] = layout.y\r\n                    setDataSourceCords(dataSourceCords)\r\n                    // console.log(\"- - - component layout data (start) - - - \")\r\n                    // console.log(dataSourceCords)\r\n                    // console.log(\"height:\", layout.height)\r\n                    // console.log(\"width:\", layout.width)\r\n                    // console.log(\"x:\", layout.x)\r\n                    // console.log(\"y:\", layout.y)\r\n                    // console.log(\"- - - component layout data (end) - - - \")\r\n\r\n                    if (dataSourceCords.length < todayIndex) return\r\n                    if (this.scrolledToToday == true) return\r\n\r\n                    // this should happen only once\r\n                    scrollViewContainerRef.current!.scrollTo({\r\n                      x: 0,\r\n                      y: dataSourceCords[todayIndex],\r\n                      animated: true,\r\n                    })\r\n\r\n                    // TODO: Refactor\r\n                    if (dataSourceCords.length == 5) {\r\n                      this.scrolledToToday = true\r\n                    }\r\n                  }}\r\n                >\r\n                  <ScheduleDayComponent\r\n                    classesCollection={classes}\r\n                    scheduleObject={scheduleRef.current!}\r\n                    dayName={item}\r\n                    dayIndex={idx}\r\n                    scheduleDay={scheduleRef.current!.scheduleDays[idx]}\r\n                    displayRoomNumber={!isEditable ? settingsServiceRef.current!.displayRoomNumber : true}\r\n                    showSeparator={idx !== workDays.length - 1}\r\n                    weekType={weekType}\r\n                    fade={\r\n                      !isEditable\r\n                        ? isEmpty && settingsServiceRef.current!.displayEmptyDays == DisplayEmptyDaysMode.Darken\r\n                        : false\r\n                    }\r\n                    isEditable={isEditable}\r\n                  ></ScheduleDayComponent>\r\n                </View>\r\n              )\r\n            })}\r\n          </ScrollView>\r\n        </View>\r\n      </WeekTypeContext.Provider>\r\n    </SettingsContext.Provider>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  rootContainer: {\r\n    // width: \"70%\",\r\n    // alignSelf: \"center\",\r\n\r\n    // paddingBottom: 60,\r\n    ...globalStyles.screen,\r\n\r\n    // flex: 0,\r\n    backgroundColor: \"#F5F5F5\",\r\n  },\r\n  modalToggle: {\r\n    marginBottom: 10,\r\n    borderWidth: 1,\r\n    borderColor: \"lightgray\",\r\n    padding: 10,\r\n    borderRadius: 10,\r\n    alignSelf: \"center\",\r\n  },\r\n\r\n  modalClose: {\r\n    marginTop: 20,\r\n    marginBottom: 0,\r\n  },\r\n\r\n  modalContent: {\r\n    flex: 1,\r\n  },\r\n\r\n  selected: {\r\n    backgroundColor: \"white\",\r\n    color: \"black\",\r\n    padding: 5,\r\n    borderRadius: 10,\r\n    marginBottom: 5,\r\n  },\r\n\r\n  placeholderView: {\r\n    height: 35,\r\n  },\r\n  cardContainer: {\r\n    // height: 350,\r\n    padding: 5,\r\n  },\r\n\r\n  scheduleDaySelector: {\r\n    padding: 5,\r\n    zIndex: 9999,\r\n    position: \"absolute\",\r\n    top: 0,\r\n    right: 0,\r\n    backgroundColor: \"rgba(0,0,0,0.5)\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n})\r\n","import React, { Component, useEffect, useRef, useState } from \"react\"\r\nimport { FlatList, View, StyleSheet, TouchableOpacity, TouchableWithoutFeedback, PixelRatio } from \"react-native\"\r\nimport Card from \"../components/shared/card\"\r\nimport { Text } from \"react-native-elements\"\r\nimport { globalStyles, palette } from \"../styles/global\"\r\nimport SafeAccessArray from \"../utilities/getStrict\"\r\nimport * as Device from \"expo-device\"\r\n\r\nimport { useWindowDimensions } from \"react-native\"\r\nimport { determineInterval } from \"../utilities/utilities\"\r\nimport { REGLAMENT_DATA } from \"../constants/Constants\"\r\nimport AppText from \"../components/shared/AppText\"\r\nimport { ScrollView } from \"react-native-gesture-handler\"\r\nimport { FontName } from \"../constants/Fonts\"\r\n\r\nconsole.log(\"Importing modules...\")\r\n\r\nexport const getReglamentClass = (index: number) => {\r\n  // console.log(`Getting class at index ${index}...`)\r\n  // throw if index is out of bounds\r\n  if (index < 0 || index > REGLAMENT_DATA.length - 1) {\r\n    throw new Error(\"Index out of bounds\")\r\n  }\r\n\r\n  return REGLAMENT_DATA[index]\r\n}\r\n\r\nconst tableData = {\r\n  tableHead: [\"#\", \"Початок\", \"Кінець\", \"Перерва\"],\r\n  tableData: REGLAMENT_DATA,\r\n}\r\n\r\nconsole.log(\"Creating tableData...\")\r\n\r\n// TODO: try to make own table component with flexbox (additional motivation here is to have builds not fail due to react-native-table-component)\r\n// or follow this article: https://rn-master.com/sortable-react-native-table-example/\r\n\r\nexport default function ReglamentScreen() {\r\n  console.log(\"Rendering ReglamentScreen...\")\r\n  return (\r\n    <View style={[styles.reglamentContainer, { paddingTop: 20 }]}>\r\n      <ScrollView>\r\n        {REGLAMENT_DATA.map((item, index) => {\r\n          return <ReglamentClass index={index} key={index} />\r\n        })}\r\n      </ScrollView>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst ReglamentClass = ({ index }: { index: number }) => {\r\n  const classData = getReglamentClass(index)\r\n\r\n  let currentTimeInterval = determineInterval()\r\n  let isCurrentClassRef = useRef(currentTimeInterval == classData)\r\n\r\n  let [state, setState] = useState({})\r\n  // rerender component if it's not current class anymore or became current class\r\n\r\n  useEffect(() => {\r\n    console.log(`Rendering ReglamentClass at index ${index} for the first time...`)\r\n\r\n    const interval = setInterval(() => {\r\n      let wasCurrent = isCurrentClassRef.current\r\n      let isCurrent = determineInterval() == classData\r\n      if (wasCurrent != isCurrent) {\r\n        isCurrentClassRef.current = isCurrent\r\n        setState({})\r\n      }\r\n    }, 15000)\r\n\r\n    return () => {\r\n      clearInterval(interval)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <View style={styles.reglamentClassContainer}>\r\n      <AppText style={styles.reglamentClassIndex}>{index + 1} пара</AppText>\r\n      <View\r\n        style={[styles.timeDataCard, isCurrentClassRef.current ? styles.currentClass : {}]}\r\n        testID={isCurrentClassRef.current ? \"currentClass\" + index : \"class\"}\r\n      >\r\n        <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\r\n          <View style={{ alignItems: \"flex-start\" }}>\r\n            <AppText style={styles.timePointText}>ПОЧАТОК</AppText>\r\n            <AppText style={styles.timePointDate}>{classData[1]}</AppText>\r\n          </View>\r\n\r\n          <View style={{ alignItems: \"center\", justifyContent: \"space-between\" }}>\r\n            <AppText style={styles.timePointText}>ПЕРЕРВА</AppText>\r\n            <AppText style={[styles.timePointDate, { fontSize: 13 }]}>{classData[3]}</AppText>\r\n          </View>\r\n          <View style={{ alignItems: \"flex-end\" }}>\r\n            <AppText style={styles.timePointText}>КІНЕЦЬ</AppText>\r\n            <AppText style={styles.timePointDate}>{classData[2]}</AppText>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst ReglamentTable = () => {\r\n  console.log(\"Rendering Reglament Component...\")\r\n  const [data, setData] = useState(tableData)\r\n\r\n  let currentTimeInterval = determineInterval()\r\n  let currentLesson = currentTimeInterval ? currentTimeInterval[0] : -1\r\n\r\n  const tableRef = React.useRef(null)\r\n\r\n  const { height, width } = useWindowDimensions()\r\n  const w = width\r\n  let pixelRatio = PixelRatio.get()\r\n  console.log(`Pixel ratio for this device (resolution: w: ${width}, h: ${height}) is ${pixelRatio} `)\r\n\r\n  let cellWidths = [0.09 * w, 0.25 * w, 0.2 * w, 0.39 * w]\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View ref={tableRef} style={{ borderWidth: 0, borderColor: \"teal\" }}>\r\n        <View style={{ ...styles.row, ...styles.head }}>\r\n          {data.tableHead.map((cellText, index) => {\r\n            return (\r\n              <AppText style={{ ...styles.text, ...styles.headerText, width: cellWidths[index], textAlign: \"center\" }}>\r\n                {cellText}\r\n              </AppText>\r\n            )\r\n          })}\r\n        </View>\r\n\r\n        {data.tableData.map((row, index) => {\r\n          if (row[0] === currentLesson) {\r\n            return (\r\n              <View style={styles.row}>\r\n                {row.map((cellText, index) => {\r\n                  return (\r\n                    <AppText\r\n                      style={{\r\n                        ...styles.text,\r\n                        width: cellWidths[index],\r\n                        backgroundColor: \"orange\",\r\n                        textAlign: \"center\",\r\n                      }}\r\n                    >\r\n                      {cellText}\r\n                    </AppText>\r\n                  )\r\n                })}\r\n              </View>\r\n            )\r\n          } else {\r\n            return (\r\n              <View style={styles.row}>\r\n                {row.map((cellText, index) => {\r\n                  return <Text style={{ ...styles.text, width: cellWidths[index] }}>{cellText}</Text>\r\n                })}\r\n              </View>\r\n            )\r\n          }\r\n        })}\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\n// TODO: Remove unused styles\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    width: \"100%\",\r\n    overflow: \"scroll\",\r\n    padding: 10,\r\n    paddingTop: 30,\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  reglamentClassIndex: {\r\n    fontSize: 14,\r\n    fontFamily: FontName.Montserrat600,\r\n    color: palette.text,\r\n\r\n    marginLeft: 10,\r\n    marginBottom: 7,\r\n  },\r\n\r\n  reglamentContainer: {\r\n    ...globalStyles.screen,\r\n    flex: 1,\r\n\r\n    backgroundColor: palette.backgroundLight,\r\n    // backgroundColor: \"red\",\r\n  },\r\n\r\n  timePointText: {\r\n    color: palette.grayishBlue,\r\n    fontFamily: FontName.MontserratBold,\r\n  },\r\n\r\n  timePointDate: {\r\n    marginTop: 3,\r\n    fontSize: 14,\r\n    color: palette.text,\r\n  },\r\n\r\n  timeDataCard: {\r\n    borderRadius: 7,\r\n    backgroundColor: \"white\",\r\n    margin: 0,\r\n    padding: 10,\r\n\r\n    elevation: 1,\r\n    shadowOffset: { width: 1, height: 1 },\r\n    shadowColor: \"#333\",\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 2,\r\n  },\r\n\r\n  currentClass: {\r\n    // backgroundColor: \"rgb(227, 239, 249)\",\r\n    backgroundColor: \"#CCDFF1\",\r\n  },\r\n\r\n  reglamentClassContainer: {\r\n    marginHorizontal: 8,\r\n    marginBottom: 18,\r\n  },\r\n\r\n  head: {},\r\n  text: { margin: 0, textAlign: \"center\", borderBottomWidth: 1, borderRightWidth: 1, padding: 12 },\r\n  headerText: { fontWeight: \"bold\", fontSize: 14 },\r\n  headText: { margin: 6, fontWeight: \"bold\" },\r\n  row: {\r\n    flexDirection: \"row\",\r\n    // backgroundColor: \"red\",\r\n    backgroundColor: \"#f1f8ff\",\r\n  },\r\n})\r\n","import { Ionicons } from \"@expo/vector-icons\"\r\nimport React, { useRef } from \"react\"\r\nimport { View, StyleSheet, TextInput, Linking } from \"react-native\"\r\nimport { globalStyles, palette } from \"../styles/global\"\r\nimport useEffect from \"react\"\r\n\r\nimport teachersJson from \"../assets/teachers.json\"\r\nimport { FlatList } from \"react-native-gesture-handler\"\r\nimport Card from \"../components/shared/card\"\r\nimport TeacherModel from \"../models/TeacherModel\"\r\nimport AppText from \"../components/shared/AppText\"\r\nimport { FontName } from \"../constants/Fonts\"\r\n\r\n// TODO: fix scroll view intercepting select event on text\r\n\r\nexport default function TeachersScreen() {\r\n  const [searchQuery, setSearchQuery] = React.useState<string>(\"\")\r\n\r\n  const teachersTable = useRef(TeacherModel.GetInstance())\r\n\r\n  const [teachers, setTeachers] = React.useState<typeof teachersJson>(teachersTable.current.teachers)\r\n\r\n  const filteredTeachers = teachers.filter((teacher) => {\r\n    const teacherJson = JSON.stringify(teacher)\r\n    return teacherJson.toLowerCase().includes(searchQuery.toLowerCase())\r\n  })\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={{ ...globalStyles.horizontalCenteredFlex, ...styles.searchBarContainer }}>\r\n        <Ionicons name=\"search-outline\" size={14} style={{ marginHorizontal: 5 }} color={palette.grayedOut} />\r\n        <TextInput style={styles.searchBar} onChangeText={setSearchQuery} placeholder=\"Знайти викладача\" />\r\n      </View>\r\n      <View></View>\r\n      <FlatList\r\n        data={filteredTeachers}\r\n        userSelect=\"text\"\r\n        keyExtractor={(item) => item[\"ПІБ викладача\"]}\r\n        renderItem={({ item, index }) => {\r\n          const teacher = item\r\n          return (\r\n            <View key={index} style={styles.teacherCard}>\r\n              <AppText\r\n                style={{\r\n                  fontFamily: FontName.MontserratBold,\r\n                  ...styles.teacherDataText,\r\n                  fontSize: styles.teacherDataText.fontSize + 2,\r\n                }}\r\n                selectable\r\n              >\r\n                {teacher[\"ПІБ викладача\"]}\r\n              </AppText>\r\n              <AppText style={[styles.teacherDataText]} selectable>\r\n                {teacher.Кваліфікаця}\r\n              </AppText>\r\n              <AppText\r\n                style={[globalStyles.link, styles.teacherDataText]}\r\n                selectable\r\n                onPress={() => {\r\n                  console.log(\"pressed\")\r\n                  Linking.openURL(teacher[\"Кафедра Посилання\"])\r\n                }}\r\n              >\r\n                {`Кафедра ${teacher[\"Кафедра Абревіатура\"]} (${teacher[\"Кафедра Повна назва\"]})`}\r\n              </AppText>\r\n\r\n              {!teacher[\"E-mail\"].endsWith(\".ru\") ? (\r\n                <AppText\r\n                  style={[globalStyles.underlinedLink, styles.teacherDataText, { marginBottom: 0 }]}\r\n                  selectable\r\n                  onPress={() => {\r\n                    console.log(\"pressed\")\r\n                    // open email\r\n                    Linking.openURL(\"mailto:\" + teacher[\"E-mail\"])\r\n                  }}\r\n                >\r\n                  {teacher[\"E-mail\"]}\r\n                </AppText>\r\n              ) : (\r\n                <View />\r\n              )}\r\n            </View>\r\n          )\r\n        }}\r\n      />\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: palette.backgroundLight,\r\n  },\r\n\r\n  horizontalFlex: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  searchBarContainer: {\r\n    marginVertical: 10,\r\n    backgroundColor: palette.background,\r\n    borderRadius: 7,\r\n    padding: 5,\r\n    paddingVertical: 4,\r\n\r\n    marginHorizontal: 10,\r\n  },\r\n\r\n  searchBar: {\r\n    ...globalStyles.searchBar,\r\n    fontSize: 14,\r\n  },\r\n\r\n  teacherCard: {\r\n    marginVertical: 5,\r\n    marginHorizontal: 10,\r\n    padding: 14,\r\n    paddingVertical: 12,\r\n    borderRadius: 7,\r\n    backgroundColor: \"white\",\r\n\r\n    elevation: 1,\r\n    shadowOffset: { width: 1, height: 1 },\r\n    shadowColor: \"#333\",\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 2,\r\n  },\r\n\r\n  teacherDataText: {\r\n    fontSize: 14,\r\n    marginBottom: 6,\r\n  },\r\n})\r\n","import React from \"react\"\r\nimport { StyleSheet, Text, View, Image, Pressable, ImageBackground } from \"react-native\"\r\nimport { Ionicons, MaterialIcons } from \"@expo/vector-icons\"\r\nimport { SafeAreaView } from \"react-native-safe-area-context\"\r\nimport { globalStyles, palette } from \"../styles/global\"\r\nimport { useNavigation } from \"@react-navigation/native\"\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport { FontName } from \"../constants/Fonts\"\r\n\r\nexport type StackHeaderProps = {\r\n  title: string\r\n  useSafeAreaView?: boolean\r\n  hasBackground?: boolean\r\n  captionStyles?: any\r\n}\r\n\r\nexport default function StackHeader({\r\n  title,\r\n  useSafeAreaView = true,\r\n  hasBackground = true,\r\n  captionStyles = undefined,\r\n}: StackHeaderProps) {\r\n  const navigation = useNavigation()\r\n\r\n  const ViewComponent = useSafeAreaView ? SafeAreaView : View\r\n\r\n  const headerText = title\r\n  return (\r\n    <ViewComponent style={[styles.header, !hasBackground ? { backgroundColor: \"transparent\" } : {}]}>\r\n      <View style={styles.headerTitle}>\r\n        <TouchableOpacity>\r\n          <Ionicons\r\n            onPress={() => navigation.goBack()}\r\n            name=\"chevron-back-outline\"\r\n            size={24}\r\n            style={[globalStyles.navIcon, captionStyles]}\r\n          />\r\n        </TouchableOpacity>\r\n\r\n        <Text style={[styles.headerText, captionStyles]}>{headerText}</Text>\r\n      </View>\r\n    </ViewComponent>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  header: {\r\n    paddingVertical: 15,\r\n    width: \"100%\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: palette.navigationBackground,\r\n  },\r\n\r\n  headerText: {\r\n    fontSize: 20,\r\n    color: \"white\",\r\n    fontFamily: FontName.CenturyGothic,\r\n  },\r\n\r\n  headerTitle: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n  },\r\n})\r\n","import React, { useState } from \"react\"\r\nimport { View, Switch, StyleSheet } from \"react-native\"\r\nimport { palette } from \"../../styles/global\"\r\nimport { isRunningInBrowser } from \"../../utilities/utilities\"\r\nimport { SwitchProps } from \"react-native-elements\"\r\n\r\n// TODO: find better colors for toggled state\r\n\r\nexport default function CustomSwitch({\r\n  onValueChange,\r\n  initVal = false,\r\n  disabled = false,\r\n  ...otherProps\r\n}: {\r\n  initVal?: boolean\r\n  disabled?: boolean\r\n  onValueChange?: (newValue: boolean) => void\r\n  otherProps: SwitchProps\r\n}): JSX.Element {\r\n  const [isEnabled, setIsEnabled] = useState(initVal)\r\n  const toggleSwitch = () => setIsEnabled((previousState) => !previousState)\r\n\r\n  // disabled = true\r\n\r\n  return (\r\n    <Switch\r\n      style={styles.switch}\r\n      trackColor={{ false: \"#767577\", true: palette.navigationBackground }}\r\n      // thumbColor={\"#eeeeee\"}\r\n      thumbColor=\"#eeeeee\"\r\n      // @ts-ignore\r\n      activeThumbColor=\"#eeeeee\" // this prop is added and used by  react-native-web\r\n      onValueChange={(newValue) => {\r\n        if (disabled) return\r\n        toggleSwitch()\r\n        onValueChange && onValueChange(newValue)\r\n      }}\r\n      value={isEnabled}\r\n      {...otherProps}\r\n    />\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  switch: {\r\n    // react-native-web sets min width to half of height\r\n    height: isRunningInBrowser() ? 20 : 24,\r\n    width: isRunningInBrowser() ? 40 : 44,\r\n  },\r\n})\r\n","import React from \"react\"\r\nimport { CheckBox } from \"react-native-elements\"\r\nimport { View, StyleSheet } from \"react-native\"\r\nimport AppText from \"./AppText\"\r\nimport { palette } from \"../../styles/global\"\r\n\r\nfunction BlueCircle(filled = true) {\r\n  return (\r\n    <View\r\n      style={{\r\n        width: 15,\r\n        height: 15,\r\n        borderRadius: 10,\r\n        backgroundColor: filled ? palette.navigationBackground : \"transparent\",\r\n        borderWidth: 1,\r\n        borderColor: !filled ? palette.grayedOut : \"transparent\",\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\ntype Option = {\r\n  title: string\r\n  code_name: string\r\n}\r\n\r\nexport function RadioButtonGroup({\r\n  options,\r\n  onOptionSelected,\r\n  selectedOptionIndex = 0,\r\n}: {\r\n  options: Option[]\r\n  onOptionSelected: (option: Option) => void\r\n  selectedOptionIndex?: number\r\n}) {\r\n  const [selectedIndex, setIndex] = React.useState(selectedOptionIndex)\r\n\r\n  return (\r\n    <View style={{ flexGrow: 0, marginLeft: 20 }}>\r\n      {options.map((option, index) => (\r\n        <CheckBox\r\n          checked={selectedIndex === index}\r\n          onPress={() => setIndex(index) || onOptionSelected(option)}\r\n          checkedIcon={BlueCircle()}\r\n          uncheckedIcon={BlueCircle(false)}\r\n          title={<AppText style={styles.optionTitle}>{option.title}</AppText>}\r\n          containerStyle={styles.checkboxContainer}\r\n        />\r\n      ))}\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  optionTitle: {\r\n    marginLeft: 10,\r\n    fontSize: 14,\r\n  },\r\n\r\n  checkboxContainer: {\r\n    backgroundColor: \"transparent\",\r\n    borderWidth: 0,\r\n    flexGrow: 0,\r\n    marginVertical: 7,\r\n    marginLeft: 0,\r\n    padding: 0,\r\n  },\r\n})\r\n","import { useRoute } from \"@react-navigation/native\"\r\nimport React, { useCallback } from \"react\"\r\nimport AppText from \"../../../components/shared/AppText\"\r\nimport { View, StyleSheet, TextInput, Platform, TextInputProps } from \"react-native\"\r\nimport { palette } from \"../../../styles/global\"\r\nimport CustomSwitch from \"../../../components/shared/Switch\"\r\nimport { ScheduleClassFields } from \"../../../models/ScheduleClass\"\r\nimport { CLASS_TYPE } from \"../../../models/ScheduleClass\"\r\nimport { ScheduleClass } from \"../../../models/ScheduleClass\"\r\nimport { Formik, useFormikContext } from \"formik\"\r\nimport { REGLAMENT_DATA } from \"../../../constants/Constants\"\r\nimport getStrict from \"../../../utilities/getStrict\"\r\nimport { formatRoomName } from \"../../../components/ScheduleComponents/ScheduleClass\"\r\nimport _ from \"lodash\"\r\nimport { workDays, workDaysEnLower } from \"../../../constants/Days\"\r\nimport { WeekType } from \"../../../utilities/getWeekType\"\r\nimport { RadioButtonGroup } from \"../../../components/shared/RadioButtonGroup\"\r\n\r\n// autocomplete library: https://www.npmjs.com/package/react-native-autocomplete-input\r\n// another one: https://www.npmjs.com/package/react-native-autocomplete-dropdown\r\n\r\n// TODO: do not display all suggestions at once, but only those that match the query (unless query is empty, then display nothing)\r\n\r\ntype ScheduleClassEditables = Omit<ScheduleClassFields, \"index\" | \"isSharedClass\" | \"day\" | \"weekName\" | \"week\">\r\n\r\nconst AutoSubmitFormData = () => {\r\n  // Grab values and submitForm from context\r\n\r\n  let {\r\n    values,\r\n    initialValues,\r\n  }: {\r\n    values: ScheduleClassEditables\r\n    initialValues: ScheduleClassEditables\r\n  } = useFormikContext()\r\n\r\n  const { isSubmitting } = useFormikContext()\r\n\r\n  let submitFormCallback = useCallback(_.debounce(useFormikContext().submitForm, 1000), [])\r\n\r\n  // submitForm = _.debounce(submitForm, 1000)\r\n\r\n  React.useEffect(() => {\r\n    // values.teacher = [values.teacher]\r\n\r\n    // do not submit form if values haven't changed\r\n    if (values == initialValues) {\r\n      console.log(\"values haven't changed, won't submit\")\r\n      return\r\n    }\r\n\r\n    // Submit the form imperatively\r\n    // if (!isSubmitting) submitFormCallback()\r\n    // else console.log(\"already submitting, won't submit again\")\r\n    submitFormCallback()\r\n  }, [values])\r\n  return null\r\n}\r\n\r\n// a decorator around TextInput that adds a bottom border and styles the text\r\nconst FormTextInput = (props: TextInputProps & { captionText: string; noteText: string | undefined }) => {\r\n  return (\r\n    <View style={[styles.formField]}>\r\n      <AppText style={[styles.fieldCaption]}>{props.captionText}</AppText>\r\n\r\n      <View>\r\n        <TextInput cursorColor={palette.navigationBackground} style={styles.textInputText} {...props} />\r\n        <View style={[styles.underline]} />\r\n        {props.noteText ? (\r\n          <AppText style={[styles.fieldCaption, { fontSize: 12, fontFamily: \"montserrat-medium\" }]}>\r\n            {props.noteText}\r\n          </AppText>\r\n        ) : null}\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default function ScheduleClassForm() {\r\n  // const navigation = useNavigation()\r\n  // const options = navigation\r\n\r\n  const route = useRoute()\r\n  const data = route.params\r\n  const {\r\n    scheduleClass,\r\n    currentlyViewedWeek,\r\n    onFormDataUpdated,\r\n  }: {\r\n    scheduleClass: ScheduleClass\r\n    currentlyViewedWeek: WeekType\r\n    onFormDataUpdated: (data: ScheduleClassFields) => void\r\n  } = data\r\n\r\n  let kbAvoidingViewBehavior: \"padding\" | \"height\" | \"position\" = Platform.OS === \"ios\" ? \"padding\" : \"height\"\r\n  kbAvoidingViewBehavior = \"position\" // position seems to work better than height\r\n\r\n  let reglamentClass = getStrict(REGLAMENT_DATA, scheduleClass.index - 1)\r\n\r\n  let classStart: string = reglamentClass[1]\r\n  if (classStart.length == 4) classStart = \"0\" + classStart\r\n\r\n  const classEnd: string = reglamentClass[2]\r\n\r\n  const teacher = scheduleClass.teacher ?? \"\"\r\n\r\n  const dayUkrIndex = workDaysEnLower.findIndex((d) => scheduleClass.day == d)\r\n  console.log(\"|\" + scheduleClass.day + \"|\")\r\n  const dayUkr = workDays[dayUkrIndex]\r\n\r\n  const weekTypeUkr = currentlyViewedWeek == 0 ? \"Чисельник\" : \"Знаменник\"\r\n\r\n  const classType = scheduleClass.classType\r\n\r\n  const scheduleClassEditables = _.pick(scheduleClass, [\"isBiweekly\", \"name\", \"teacher\", \"room\", \"classType\"])\r\n\r\n  const initialFormikValues: ScheduleClassEditables = {\r\n    ...scheduleClassEditables,\r\n    teacher: typeof teacher !== \"string\" ? teacher.join(\", \") : teacher,\r\n    room: formatRoomName(scheduleClass, true),\r\n  }\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialFormikValues}\r\n      onSubmit={(values) => {\r\n        console.log(\"Submitting Formik form...\")\r\n        console.log(values)\r\n        onFormDataUpdated(values)\r\n      }}\r\n    >\r\n      {({ values, handleChange, handleBlur, submitForm }) => {\r\n        return (\r\n          <View>\r\n            <View\r\n              style={[\r\n                styles.row,\r\n                {\r\n                  justifyContent: \"space-between\",\r\n                },\r\n              ]}\r\n            >\r\n              <View>\r\n                <AppText style={[styles.headerTextPrimary]}>Пара №{scheduleClass.index}</AppText>\r\n                <AppText style={[styles.headerTextSecondary]}>\r\n                  {classStart} – {classEnd}\r\n                </AppText>\r\n              </View>\r\n\r\n              <View>\r\n                <AppText\r\n                  style={[\r\n                    {\r\n                      textAlign: \"right\",\r\n                    },\r\n                    styles.headerTextPrimary,\r\n                  ]}\r\n                >\r\n                  {weekTypeUkr}\r\n                </AppText>\r\n                <AppText\r\n                  style={[\r\n                    {\r\n                      textAlign: \"right\",\r\n                    },\r\n                    styles.headerTextSecondary,\r\n                  ]}\r\n                >\r\n                  {dayUkr}\r\n                </AppText>\r\n              </View>\r\n            </View>\r\n            <FormTextInput captionText=\"Предмет\" value={values.name} onChangeText={handleChange(\"name\")} />\r\n\r\n            <FormTextInput\r\n              autoCapitalize=\"words\"\r\n              captionText=\"Викладач\"\r\n              value={values.teacher}\r\n              noteText=\"*якщо декілька – прізвища через кому\"\r\n              onChangeText={handleChange(\"teacher\")}\r\n            />\r\n\r\n            <FormTextInput\r\n              captionText=\"Аудиторія\"\r\n              value={values.room}\r\n              noteText=\"*якщо декілька – через кому\"\r\n              onChangeText={handleChange(\"room\")}\r\n            />\r\n            {/* \r\n            <View style={[styles.row]}>\r\n              <AppText>Посилання: </AppText>\r\n              <TextInput placeholder=\"https://us04web.zoom.us/j/75735448331?pwd=4X7q7Wu5jf43QTje5BuhChQnUcL6I1.1\" />\r\n            </View> */}\r\n            <RadioButtonGroup\r\n              options={[\r\n                {\r\n                  title: CLASS_TYPE.LECTURE,\r\n                  code_name: CLASS_TYPE.LECTURE,\r\n                },\r\n                {\r\n                  title: CLASS_TYPE.LAB,\r\n                  code_name: CLASS_TYPE.LAB,\r\n                },\r\n                {\r\n                  title: CLASS_TYPE.PRACTICE,\r\n                  code_name: CLASS_TYPE.PRACTICE,\r\n                },\r\n              ]}\r\n              onOptionSelected={(o) => handleChange(\"classType\")(o.code_name)}\r\n              selectedOptionIndex={\r\n                values.classType == CLASS_TYPE.LECTURE ? 0 : values.classType == CLASS_TYPE.LAB ? 1 : 2\r\n              }\r\n            />\r\n\r\n            <View\r\n              style={[\r\n                styles.row,\r\n                {\r\n                  justifyContent: \"space-between\",\r\n                  paddingHorizontal: 20,\r\n                  paddingRight: 10,\r\n                },\r\n              ]}\r\n            >\r\n              <AppText\r\n                style={[\r\n                  {\r\n                    fontSize: 14,\r\n                    fontFamily: \"montserrat-medium\",\r\n                  },\r\n                ]}\r\n              >\r\n                Щотижнева пара\r\n              </AppText>\r\n              {/* <TextInput placeholder=\"Лекція\" /> */}\r\n\r\n              <CustomSwitch initVal={!values.isBiweekly} onValueChange={(e) => handleChange(\"isBiweekly\")(!e + \"\")} />\r\n            </View>\r\n\r\n            {/* <KeyboardAvoidingView behavior={kbAvoidingViewBehavior} style={[styles.row]}>\r\n        <AppText>KeyboardAvoidingView -1</AppText>\r\n        <Button title={\"Button\"} />\r\n      </KeyboardAvoidingView> */}\r\n            <AutoSubmitFormData />\r\n          </View>\r\n        )\r\n      }}\r\n    </Formik>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  row: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 20,\r\n  },\r\n\r\n  formField: {\r\n    marginVertical: 10,\r\n    paddingHorizontal: 20,\r\n  },\r\n\r\n  autocompleteContainer: {\r\n    flex: 1,\r\n    left: 0,\r\n    position: \"absolute\",\r\n    right: 0,\r\n    top: 0,\r\n    zIndex: 1,\r\n  },\r\n\r\n  underline: {\r\n    height: 1,\r\n    backgroundColor: \"#C6C4C4\",\r\n    width: \"100%\",\r\n\r\n    marginVertical: 1,\r\n  },\r\n\r\n  fieldCaption: {\r\n    fontFamily: \"montserrat-semibold\",\r\n    color: palette.grayedOut,\r\n  },\r\n\r\n  textInputText: {\r\n    fontSize: 14,\r\n    fontFamily: \"montserrat-semibold\",\r\n    color: palette.text,\r\n  },\r\n\r\n  headerTextPrimary: {\r\n    fontSize: 14,\r\n    fontFamily: \"montserrat-medium\",\r\n  },\r\n\r\n  headerTextSecondary: {\r\n    fontSize: 14,\r\n    fontFamily: \"montserrat-medium\",\r\n    color: palette.grayedOut,\r\n  },\r\n})\r\n","import React from \"react\"\r\nimport ScheduleScreen from \"./ScheduleScreen\"\r\n\r\nexport default function ScheduleEditorScreen() {\r\n  return <ScheduleScreen isEditable={true} />\r\n}\r\n","import { createStackNavigator } from \"@react-navigation/stack\"\r\nimport * as React from \"react\"\r\nimport ScheduleEditor from \"../screens/TestTabsScreens/ScheduleEditor\"\r\nimport { View } from \"react-native\"\r\nimport StackHeader from \"../components/StackHeader\"\r\nimport ScheduleClassForm from \"../screens/TestTabsScreens/scheduleEditorStack/ScheduleClassForm\"\r\nimport ScheduleEditorScreen from \"../screens/ScheduleEditorScreen\"\r\n\r\nconst Stack = createStackNavigator()\r\n\r\nexport enum EditorStackRoutes {\r\n  EDITOR = \"Редактор\",\r\n  SCHEDULE_CLASS_FORM = \"ScheduleClassForm\",\r\n}\r\n\r\nexport default function EditorStack() {\r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={\r\n        {\r\n          // headerShown: false,\r\n        }\r\n      }\r\n    >\r\n      <Stack.Screen\r\n        name={EditorStackRoutes.EDITOR}\r\n        component={ScheduleEditorScreen}\r\n        options={{\r\n          header: () => <View />,\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name={EditorStackRoutes.SCHEDULE_CLASS_FORM}\r\n        component={ScheduleClassForm}\r\n        options={{\r\n          header: (props) => <StackHeader title={\"Пара\"} />,\r\n        }}\r\n      />\r\n    </Stack.Navigator>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { View, Text, StyleSheet, Linking } from \"react-native\"\r\nimport { globalStyles, palette } from \"../../styles/global\"\r\nimport AppText from \"../../components/shared/AppText\"\r\nimport { Ionicons } from \"@expo/vector-icons\"\r\nimport { ScrollView, TouchableOpacity } from \"react-native-gesture-handler\"\r\n\r\nexport default function FacultiesTestScreen() {\r\n  // TODO: perhaps, copy name and full name to clipboard on press\r\n\r\n  const renderFacultyCard = (\r\n    nameAbbreviation: string,\r\n    nameFull: string,\r\n    address: string,\r\n    phone: string,\r\n    mail: string\r\n  ) => {\r\n    return (\r\n      <View style={styles.facultyCard}>\r\n        <AppText\r\n          style={{\r\n            fontSize: 18,\r\n            fontFamily: \"montserrat-bold\",\r\n          }}\r\n        >\r\n          {nameAbbreviation}\r\n        </AppText>\r\n        <AppText style={[]}>{nameFull}</AppText>\r\n        <View style={[globalStyles.captionWithIcon, { marginVertical: 2 }]}>\r\n          <Ionicons name=\"location\" color={palette.grayedOut} size={16} />\r\n          <AppText style={{ marginLeft: 5, fontSize: 14, fontFamily: \"montserrat-semibold\" }}>{address}</AppText>\r\n        </View>\r\n        <TouchableOpacity\r\n          onPress={() => Linking.openURL(`tel:${phone}`)}\r\n          style={[globalStyles.captionWithIcon, { marginVertical: 2 }]}\r\n        >\r\n          <Ionicons name=\"call\" color={palette.grayedOut} size={16} />\r\n          <AppText style={{ marginLeft: 5, fontSize: 14, fontFamily: \"montserrat-semibold\" }}>{phone}</AppText>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity\r\n          onPress={() => Linking.openURL(`mailto:${mail}`)}\r\n          style={[globalStyles.captionWithIcon, { marginVertical: 2 }]}\r\n        >\r\n          <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />\r\n          <AppText\r\n            style={[{ marginLeft: 5, fontSize: 14, fontFamily: \"montserrat-semibold\" }, globalStyles.underlinedLink]}\r\n          >\r\n            {mail}\r\n          </AppText>\r\n        </TouchableOpacity>\r\n      </View>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      {renderFacultyCard(\r\n        \"ФВПІТ\",\r\n        \"Факультет видавничо-поліграфічних, інформаційних технологій\",\r\n        \"вул. Під Голоском, 19, ауд. 234\",\r\n        \"(032) 242 23 77\",\r\n        \"fvpit@uad.lviv.ua\"\r\n      )}\r\n\r\n      {renderFacultyCard(\r\n        \"ФКПІ\",\r\n        \"Факультет комп'ютерно-поліграфічної інженерії\",\r\n        \"вул. Під Голоском, 19, ауд. 219\",\r\n        \"(032) 242 23 76\",\r\n        \"fpu@uad.lviv.ua\"\r\n      )}\r\n\r\n      {renderFacultyCard(\r\n        \"ФМКП\",\r\n        \"Факультет медіакомунікацій та підприємництва\",\r\n        \"вул. Під Голоском, 19, ауд. 313\",\r\n        \"(032) 242 23 75\",\r\n        \"feoks@uad.lviv.ua\"\r\n      )}\r\n    </ScrollView>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 20,\r\n    paddingTop: 0,\r\n  },\r\n\r\n  facultyCard: {\r\n    ...globalStyles.card,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 12,\r\n\r\n    marginVertical: 5,\r\n  },\r\n})\r\n","export enum ContactsStackRoutes {\r\n  CONTACTS_MENU = \"Контакти (Меню)\",\r\n  FACULTIES = \"Факультети\",\r\n}\r\n","import { FontAwesome, Ionicons } from \"@expo/vector-icons\"\r\nimport React from \"react\"\r\nimport { Image } from \"react-native-elements\"\r\nimport { palette } from \"../styles/global\"\r\nimport { imageIcons } from \"./Images\"\r\nimport AppText from \"../components/shared/AppText\"\r\nimport { View } from \"react-native\"\r\n\r\nexport type ModalItem = {\r\n  icon: JSX.Element\r\n  text: string\r\n  isPhone?: boolean\r\n  isLink?: boolean\r\n  linkName?: string\r\n}\r\n\r\nlet academyCorps = [\r\n  \"вул. Під Голоском, 19\",\r\n  \"вул. Підвальна, 17\",\r\n  \"вул. Личаківська, 3\",\r\n  \"вул. Коцюбинського, 21\",\r\n  \"вул. Винниченка, 12\",\r\n]\r\n\r\n// Корпуси академії\r\nexport const corpsModalItems = academyCorps.map((corps) => {\r\n  return {\r\n    text: corps,\r\n    icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n  }\r\n})\r\n\r\n// Ректорат\r\nexport const rectorateModalItems: ModalItem[] = [\r\n  {\r\n    icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n    text: \"вул. Під Голоском, 19, ауд. 234\",\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n    text: \"(032) 242 23 77\",\r\n    isPhone: true,\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n    text: \"uad@uad.edu.ua\",\r\n    isLink: true,\r\n  },\r\n]\r\n\r\n// Підготовче відділення\r\nexport const preparationDepartmentModalItems: ModalItem[] = [\r\n  {\r\n    icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n    text: \"вул. Під Голоском, 19, ауд. 218\",\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n    text: \"(032) 242 23 78\",\r\n    isPhone: true,\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n    text: \"pv@uad.edu.ua\",\r\n    isLink: true,\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"globe\" color={palette.grayedOut} size={16} />,\r\n    text: \"http://www.uad-pv.pp.ua/\",\r\n    isLink: true,\r\n  },\r\n]\r\n\r\n// Відділ міжнародних звʼязків та інформаційного забезпечення\r\nexport const internationalAffairsAndInformationDepartmentModalItems: ModalItem[] = [\r\n  {\r\n    icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n    text: \"вул. Під Голоском, 19\",\r\n  },\r\n\r\n  {\r\n    icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n    text: \"(032) 259 94 21\",\r\n    isPhone: true,\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n    text: \"ird@uad.lviv.ua\",\r\n    isLink: true,\r\n  },\r\n]\r\n\r\n// Приймальна комісія\r\nexport const admissionsCommitteeModalItems: ModalItem[] = [\r\n  {\r\n    icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n    text: \"вул. Під Голоском, 19, каб. 417, 200\",\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n    text: \"(067) 149 14 00\",\r\n    isPhone: true,\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n    text: \"pk@uad.edu.ua\",\r\n    isLink: true,\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n    text: \"pk.uad.lviv@gmail.com\",\r\n    isLink: true,\r\n  },\r\n]\r\n\r\n// Бухгалтерія\r\nexport const accountingModalItems: ModalItem[] = [\r\n  {\r\n    icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n    text: \"вул. Під Голоском, 19, ауд. 213\",\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n    text: \"(032) 242 23 46\",\r\n    isPhone: true,\r\n  },\r\n]\r\n\r\n// Відділ платної форми навчання\r\nexport const contractEducationDepartmentModalItems: ModalItem[] = [\r\n  {\r\n    icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n    text: \"вул. Під Голоском, 19, ауд. 234а\",\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n    text: \"(032) 242 23 80\",\r\n    isPhone: true,\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n    text: \"vpn_uad@ukr.net\",\r\n    isLink: true,\r\n  },\r\n]\r\n\r\n// Профком студентів\r\nexport const studentUnionModalItems: ModalItem[] = [\r\n  {\r\n    icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n    text: \"вул. Під Голоском, 19, ауд. 311\",\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n    text: \"(032) 242 23 79\",\r\n    isPhone: true,\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n    text: \"(067) 67 23 173\",\r\n    isPhone: true,\r\n  },\r\n]\r\n\r\n// Студентська рада\r\nexport const studentCouncilModalItems: ModalItem[] = [\r\n  {\r\n    icon: <FontAwesome name=\"instagram\" color={palette.grayedOut} size={16} />,\r\n    text: \"https://www.instagram.com/uad_lviv/\",\r\n    isLink: true,\r\n    linkName: \"uad_lviv\",\r\n  },\r\n]\r\n\r\n// Соц. мережі академії\r\nexport const socialMediaModalItems: ModalItem[] = [\r\n  {\r\n    icon: (\r\n      <View style={{ marginLeft: 2 }}>\r\n        <FontAwesome name=\"instagram\" color={palette.grayedOut} size={16} />\r\n      </View>\r\n    ),\r\n\r\n    text: \"https://www.instagram.com/uad_lviv/\",\r\n    isLink: true,\r\n    linkName: \"@uad_lviv\",\r\n  },\r\n  {\r\n    icon: <FontAwesome name=\"telegram\" color={palette.grayedOut} size={16} />,\r\n    text: \"https://t.me/uad_live\",\r\n    isLink: true,\r\n    linkName: \"@uad_live\",\r\n  },\r\n  {\r\n    icon: <FontAwesome name=\"youtube-play\" color={palette.grayedOut} size={16} />,\r\n    text: \"https://www.youtube.com/user/UADtelevision\",\r\n    isLink: true,\r\n    linkName: \"UADtelevision\",\r\n  },\r\n  {\r\n    icon: <FontAwesome name=\"facebook-official\" color={palette.grayedOut} size={16} />,\r\n    text: \"https://www.facebook.com/uadlv\",\r\n    isLink: true,\r\n  },\r\n  {\r\n    icon: (\r\n      <Image\r\n        source={imageIcons.tiktok}\r\n        // color={palette.grayedOut}\r\n        style={{\r\n          width: 16,\r\n          height: 18,\r\n        }}\r\n      />\r\n    ),\r\n    text: \"https://www.tiktok.com/@uad.lviv\",\r\n    isLink: true,\r\n    linkName: \"@uad.lviv\",\r\n  },\r\n]\r\n","import React from \"react\"\r\nimport { View, Text, StyleSheet, FlatList, Linking, Pressable } from \"react-native\"\r\nimport Separator from \"../components/shared/Separator\"\r\nimport EntypoIcon from \"react-native-vector-icons/Entypo\"\r\nimport { Ionicons, Octicons } from \"@expo/vector-icons\"\r\nimport { globalStyles, palette } from \"../styles/global\"\r\nimport { imageIcons } from \"../constants/Images\"\r\nimport AppText from \"../components/shared/AppText\"\r\nimport { ScrollView, TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport { Image } from \"react-native-elements\"\r\nimport OptionPickerModal from \"../components/OptionPickerModal\"\r\nimport {\r\n  ModalItem,\r\n  accountingModalItems,\r\n  admissionsCommitteeModalItems,\r\n  contractEducationDepartmentModalItems,\r\n  corpsModalItems,\r\n  internationalAffairsAndInformationDepartmentModalItems,\r\n  preparationDepartmentModalItems,\r\n  rectorateModalItems,\r\n  socialMediaModalItems,\r\n  studentCouncilModalItems,\r\n  studentUnionModalItems,\r\n} from \"../constants/Contacts\"\r\nimport { isMail, isRunningInBrowser } from \"../utilities/utilities\"\r\nimport { useNavigation } from \"@react-navigation/native\"\r\nimport { FontName } from \"../constants/Fonts\"\r\n\r\ntype CategoryProps = {\r\n  title: string\r\n  titleIcon: JSX.Element\r\n  subcategories: string[]\r\n  onPress: () => void\r\n  children?: JSX.Element[]\r\n}\r\n\r\nfunction Category({ title, titleIcon, subcategories, onPress, children }: CategoryProps) {\r\n  return (\r\n    <View style={styles.category}>\r\n      <View style={styles.categoryTitle}>\r\n        {titleIcon}\r\n        <AppText style={[{ fontSize: 14, fontFamily: FontName.Montserrat600, marginLeft: 5 }]}>{title}</AppText>\r\n      </View>\r\n      <FlatList\r\n        data={children}\r\n        style={[globalStyles.card, { paddingHorizontal: 10, paddingVertical: 10 }]}\r\n        keyExtractor={(item, index) => index.toString()}\r\n        ItemSeparatorComponent={() => {\r\n          return <Separator color=\"rgba(217, 217, 217, 0.4)\" upperElement={true} lowerElement={true} /> // TODO: Refactor\r\n        }}\r\n        renderItem={({ item }) => {\r\n          const itemOnPress = item.props.onPress\r\n          const ItemType = item.type\r\n\r\n          const itemWithoutOnPress = <ItemType {...item.props} onPress={() => null} />\r\n\r\n          return (\r\n            <TouchableOpacity\r\n              onPress={(e) => {\r\n                itemOnPress() // hoist the onPress handler to parent for larger hitbox\r\n              }}\r\n              style={styles.subcategoryButtonContainer}\r\n            >\r\n              <AppText style={[{ fontSize: 15 }]}>{itemWithoutOnPress}</AppText>\r\n              <EntypoIcon name=\"chevron-small-right\" style={globalStyles.grayIcon}></EntypoIcon>\r\n            </TouchableOpacity>\r\n          )\r\n        }}\r\n      />\r\n    </View>\r\n  )\r\n}\r\n\r\nconst constructModalItem = (item: ModalItem, idx) => {\r\n  return (\r\n    <View\r\n      style={{\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        marginVertical: 6,\r\n      }}\r\n    >\r\n      {item.icon}\r\n      <AppText\r\n        onPress={() => {\r\n          if (item.isLink) {\r\n            if (isMail(item.text)) Linking.openURL(`mailto:${item.text}`)\r\n            else Linking.openURL(item.text)\r\n          } else if (item.isPhone) Linking.openURL(`tel:${item.text}`)\r\n        }}\r\n        style={[styles.optionText, item.isLink ? globalStyles.underlinedLink : {}]}\r\n      >\r\n        {item.linkName ? item.linkName : item.text}\r\n      </AppText>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst constructContentPresenterModal = (\r\n  headerText: string,\r\n  isOpen: boolean,\r\n  onCloseModal: () => void,\r\n  initialOptions: ModalItem[],\r\n  displaySeparators = false\r\n) => {\r\n  return (\r\n    <OptionPickerModal\r\n      headerText={headerText}\r\n      isOpen={isOpen}\r\n      hasSearchBar={false}\r\n      displaySeparators={displaySeparators}\r\n      closeModal={onCloseModal}\r\n      initialOptions={initialOptions}\r\n      renderItem={constructModalItem}\r\n      isOptionSelectable={false}\r\n    />\r\n  )\r\n}\r\n\r\nexport default function ContactsScreen() {\r\n  const navigation = useNavigation()\r\n\r\n  let [corpsModalIsOpen, setCorpsModalIsOpen] = React.useState(false)\r\n\r\n  let [rectorateModalIsOpen, setRectorateModalIsOpen] = React.useState(false)\r\n  let [admissionCommitteeModalIsOpen, setAdmissionCommitteeModalIsOpen] = React.useState(false)\r\n  let [preparationDepartmentModalIsOpen, setPreparationDepartmentModalIsOpen] = React.useState(false)\r\n  let [\r\n    internationalAffairsAndInformationDepartmentModalIsOpen,\r\n    setInternationalAffairsAndInformationDepartmentModalIsOpen,\r\n  ] = React.useState(false)\r\n\r\n  let [accountingModalIsOpen, setAccountingModalIsOpen] = React.useState(false)\r\n  let [contractEducationModalIsOpen, setContractEducationModalIsOpen] = React.useState(false)\r\n  let [studentUnionModalIsOpen, setStudentUnionModalIsOpen] = React.useState(false)\r\n  let [studentCouncilModalIsOpen, setStudentCouncilModalIsOpen] = React.useState(false)\r\n  let [socialMediaModalIsOpen, setSocialMediaModalIsOpen] = React.useState(false)\r\n\r\n  const structureAndSubdivisionsSubcategories = [\r\n    \"Ректорат\",\r\n    \"Приймальна комісія\",\r\n    \"Підготовче відділення\",\r\n    \"Відділ міжнародних зв'язків та інф. забезпечення\",\r\n    \"Бухгалтерія\",\r\n    \"Відділ платної форми навчання\",\r\n    \"Профком студентів\",\r\n  ]\r\n\r\n  const studentCommunitiesSubcategories = [\"Студентська рада\", \"Соц. мережі академії\"]\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <Category\r\n        title=\"Корпуси та факультети\"\r\n        titleIcon={\r\n          <Image\r\n            style={{\r\n              width: 14,\r\n              height: 14,\r\n              opacity: 0.5,\r\n            }}\r\n            source={imageIcons.museum}\r\n          />\r\n        }\r\n      >\r\n        <Pressable onPress={() => setCorpsModalIsOpen(true)}>\r\n          <AppText style={styles.subcategoryTitle}>Корпуси академії</AppText>\r\n\r\n          {constructContentPresenterModal(\r\n            \"Корпуси академії\",\r\n            corpsModalIsOpen,\r\n            () => setCorpsModalIsOpen(false),\r\n            corpsModalItems\r\n          )}\r\n        </Pressable>\r\n\r\n        <AppText\r\n          onPress={(e) => {\r\n            console.log(\"executing on press handler as child\")\r\n\r\n            navigation.push(\"Факультети\")\r\n            // e.stopPropagation()\r\n            // e.preventDefault()\r\n\r\n            return true\r\n          }}\r\n          style={styles.subcategoryTitle}\r\n        >\r\n          Факультети академії\r\n        </AppText>\r\n      </Category>\r\n\r\n      <Category\r\n        title=\"Структура і підрозділи\"\r\n        titleIcon={<Ionicons name=\"git-merge-outline\" size={16} color={palette.text} />}\r\n        subcategories={structureAndSubdivisionsSubcategories}\r\n      >\r\n        <Pressable onPress={() => setRectorateModalIsOpen(true)}>\r\n          {constructContentPresenterModal(\r\n            \"Ректорат\",\r\n            rectorateModalIsOpen,\r\n            () => setRectorateModalIsOpen(false),\r\n            rectorateModalItems\r\n          )}\r\n          <AppText style={styles.subcategoryTitle}>Ректорат</AppText>\r\n        </Pressable>\r\n\r\n        <Pressable onPress={() => setAdmissionCommitteeModalIsOpen(true)}>\r\n          {constructContentPresenterModal(\r\n            \"Приймальна комісія\",\r\n            admissionCommitteeModalIsOpen,\r\n            () => setAdmissionCommitteeModalIsOpen(false),\r\n            admissionsCommitteeModalItems\r\n          )}\r\n          <AppText style={styles.subcategoryTitle}>Приймальна комісія</AppText>\r\n        </Pressable>\r\n\r\n        <Pressable onPress={() => setPreparationDepartmentModalIsOpen(true)}>\r\n          {constructContentPresenterModal(\r\n            \"Підготовче відділення\",\r\n            preparationDepartmentModalIsOpen,\r\n            () => setPreparationDepartmentModalIsOpen(false),\r\n            preparationDepartmentModalItems\r\n          )}\r\n          <AppText style={styles.subcategoryTitle}>Підготовче відділення</AppText>\r\n        </Pressable>\r\n\r\n        <Pressable onPress={() => setInternationalAffairsAndInformationDepartmentModalIsOpen(true)}>\r\n          {constructContentPresenterModal(\r\n            \"Відділ міжнародних звʼязків та інф. забезпечення\",\r\n            internationalAffairsAndInformationDepartmentModalIsOpen,\r\n            () => setInternationalAffairsAndInformationDepartmentModalIsOpen(false),\r\n            internationalAffairsAndInformationDepartmentModalItems\r\n          )}\r\n          <AppText style={[styles.subcategoryTitle]}>Відділ міжнародних звʼязків{\"\\n\"}та інф. забезпечення</AppText>\r\n        </Pressable>\r\n\r\n        <Pressable onPress={() => setAccountingModalIsOpen(true)}>\r\n          {constructContentPresenterModal(\r\n            \"Бухгалтерія\",\r\n            accountingModalIsOpen,\r\n            () => setAccountingModalIsOpen(false),\r\n            accountingModalItems\r\n          )}\r\n          <AppText style={styles.subcategoryTitle}>Бухгалтерія</AppText>\r\n        </Pressable>\r\n\r\n        <Pressable onPress={() => setContractEducationModalIsOpen(true)}>\r\n          {constructContentPresenterModal(\r\n            \"Відділ платної форми навчання\",\r\n            contractEducationModalIsOpen,\r\n            () => setContractEducationModalIsOpen(false),\r\n            contractEducationDepartmentModalItems\r\n          )}\r\n          <AppText style={styles.subcategoryTitle}>Відділ платної форми навчання</AppText>\r\n        </Pressable>\r\n\r\n        <Pressable onPress={() => setStudentUnionModalIsOpen(true)}>\r\n          {constructContentPresenterModal(\r\n            \"Профком студентів\",\r\n            studentUnionModalIsOpen,\r\n            () => setStudentUnionModalIsOpen(false),\r\n            studentUnionModalItems\r\n          )}\r\n          <AppText style={styles.subcategoryTitle}>Профком студентів</AppText>\r\n        </Pressable>\r\n      </Category>\r\n\r\n      <Category\r\n        title=\"Студентські спільноти\"\r\n        titleIcon={<Octicons name=\"accessibility\" size={16} color={palette.text} />}\r\n        onPress={() => {}}\r\n      >\r\n        <Pressable onPress={() => setStudentCouncilModalIsOpen(true)}>\r\n          {constructContentPresenterModal(\r\n            \"Студентська рада\",\r\n            studentCouncilModalIsOpen,\r\n            () => setStudentCouncilModalIsOpen(false),\r\n            studentCouncilModalItems\r\n          )}\r\n          <AppText style={styles.subcategoryTitle}>Студентська рада</AppText>\r\n        </Pressable>\r\n\r\n        <Pressable onPress={() => setSocialMediaModalIsOpen(true)}>\r\n          {constructContentPresenterModal(\r\n            \"Соц. мережі академії\",\r\n            socialMediaModalIsOpen,\r\n            () => setSocialMediaModalIsOpen(false),\r\n            socialMediaModalItems\r\n          )}\r\n          <AppText style={styles.subcategoryTitle}>Соц. мережі академії</AppText>\r\n        </Pressable>\r\n      </Category>\r\n    </ScrollView>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 10,\r\n    paddingBottom: 20,\r\n  },\r\n\r\n  category: {\r\n    marginVertical: 10,\r\n  },\r\n\r\n  navigateToSubcategoryButton: {},\r\n\r\n  subcategoryButtonContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    marginVertical: 8,\r\n  },\r\n\r\n  categoryTitle: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginLeft: 14,\r\n    marginBottom: 5,\r\n  },\r\n\r\n  subcategoryTitle: {\r\n    fontSize: 15,\r\n  },\r\n\r\n  optionText: {\r\n    marginLeft: 10,\r\n    fontSize: 16,\r\n  },\r\n})\r\n","import * as React from \"react\"\r\n\r\nimport { createStackNavigator } from \"@react-navigation/stack\"\r\nimport FacultiesTestScreen from \"../screens/TestTabsScreens/FacultiesTestScreen\"\r\nimport ContactsModalTestScreen from \"../screens/TestTabsScreens/ContactsModalsTestScreen\"\r\nimport { View } from \"react-native\"\r\nimport { ContactsStackRoutes } from \"./ContactsStackRoutes\"\r\nimport StackHeader from \"../components/StackHeader\"\r\nimport ContactsScreen from \"../screens/ContactsScreen\"\r\nimport { palette } from \"../styles/global\"\r\n\r\nconst Stack = createStackNavigator()\r\n\r\nexport default function ContactsStack() {\r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={\r\n        {\r\n          // headerShown: false,\r\n        }\r\n      }\r\n    >\r\n      <Stack.Screen\r\n        name={ContactsStackRoutes.CONTACTS_MENU}\r\n        component={ContactsScreen}\r\n        options={{\r\n          header: () => <View />,\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name={ContactsStackRoutes.FACULTIES}\r\n        component={FacultiesTestScreen}\r\n        options={{\r\n          header: (props) => (\r\n            <StackHeader\r\n              title={\"Факультети академії\"}\r\n              useSafeAreaView={false}\r\n              hasBackground={false}\r\n              captionStyles={{ color: palette.text, fontFamily: \"montserrat-bold\", fontSize: 20 }}\r\n            />\r\n          ),\r\n        }}\r\n      />\r\n    </Stack.Navigator>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { View, StyleSheet } from \"react-native\"\r\nimport AppText from \"../components/shared/AppText\"\r\nimport { globalStyles, palette } from \"../styles/global\"\r\nimport { FlatList, TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport _ from \"lodash\"\r\nimport NewsLoaderService, { NewsArticle } from \"../services/NewsLoaderService\"\r\nimport { truncateText } from \"../utilities/utilities\"\r\nimport { FontName } from \"../constants/Fonts\"\r\n\r\nfunction NewsCard({ date, title, body }: { date: string; title: string; body: string }) {\r\n  // convert date into day/month/year format\r\n  let dateObj = new Date(date)\r\n  let day = dateObj.getDate()\r\n  let month = dateObj.getMonth() + 1\r\n  let year = dateObj.getFullYear()\r\n  date = `${day}.${month}.${year}`\r\n\r\n  let [isBodyExpanded, setIsBodyExpanded] = useState(false)\r\n\r\n  return (\r\n    <View style={{ marginBottom: 15 }}>\r\n      <AppText style={{ alignSelf: \"center\" }}>{date}</AppText>\r\n      <View style={styles.newsArticleCard}>\r\n        <AppText style={{ fontFamily: FontName.MontserratBold, fontSize: 14 }}>{title}</AppText>\r\n        <AppText style={{ marginVertical: 15, fontFamily: FontName.MontserratRegular }}>\r\n          {isBodyExpanded ? body : truncateText(body, 280)}\r\n        </AppText>\r\n        <TouchableOpacity onPress={() => setIsBodyExpanded(!isBodyExpanded)} style={styles.moreButton}>\r\n          <AppText style={{ fontFamily: FontName.MontserratSemiBold, color: palette.navigationBackground }}>\r\n            {!isBodyExpanded ? \"Детальніше\" : \"Згорнути\"}\r\n          </AppText>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default function NewsScreen() {\r\n  let [news, setNews] = useState<NewsArticle[]>([\r\n    //     {\r\n    //       //   createdAt: \"14.04.2023\",\r\n    //       createdAt: new Date().toDateString(),\r\n    //       title: \"Новий випуск журналу “Студентський MOOD”\",\r\n    //       body: `Привітики друзі! Прийшла весна і вже починає радувати нас сонечком та зеленню 🌷\r\n    // Сьогодні ж замість сонця - наш \"Студентський MOOD\"!\r\n    // Підготували вам тексти про відпочинок, війну та інше)\r\n    // Читайте, піклуйтеся про себе і близьких, і хай весна принесе всім нам лише хороші новини! 🌱`.repeat(2),\r\n    //     },\r\n  ])\r\n\r\n  useEffect(() => {\r\n    async function onMount() {\r\n      const newsLoaderService = await NewsLoaderService.GetInstance()\r\n      let fetchedNews\r\n      try {\r\n        fetchedNews = await newsLoaderService.getNewsFromContentful()\r\n      } catch (e) {\r\n        fetchedNews = newsLoaderService.getExampleNews()\r\n      }\r\n\r\n      setNews([...news, ...fetchedNews])\r\n    }\r\n\r\n    onMount()\r\n  }, [])\r\n\r\n  return (\r\n    <FlatList\r\n      data={news}\r\n      renderItem={({ item }) => <NewsCard date={item.createdAt} title={item.title} body={item.body} />}\r\n      style={styles.container}\r\n    />\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 10,\r\n  },\r\n\r\n  newsArticleCard: {\r\n    ...globalStyles.card,\r\n    paddingVertical: 15,\r\n    paddingHorizontal: 15,\r\n\r\n    marginVertical: 5,\r\n  },\r\n\r\n  moreButton: {\r\n    ...globalStyles.navigationButton,\r\n    width: \"100%\",\r\n    paddingVertical: 7,\r\n  },\r\n})\r\n","import React from \"react\"\r\nimport { View, StyleSheet } from \"react-native\"\r\n\r\nexport default function Card({\r\n  children,\r\n  shadows = true,\r\n  cardContentStyle = {},\r\n}: {\r\n  children: any\r\n  shadows?: boolean\r\n  cardContentStyle?: StyleSheet\r\n}) {\r\n  return (\r\n    <View style={{ ...styles.card, ...(!shadows ? styles.noShadow : {}) }}>\r\n      <View style={styles.cardContent}>{children}</View>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  card: {\r\n    // height: \"95%\",\r\n    // width: \"98%\",\r\n    borderRadius: 6,\r\n    elevation: 3,\r\n    backgroundColor: \"#fff\",\r\n    shadowOffset: { width: 1, height: 1 },\r\n    shadowColor: \"#333\",\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 2,\r\n    marginHorizontal: 4,\r\n    marginVertical: 6,\r\n    overflow: \"scroll\",\r\n  },\r\n\r\n  noShadow: {\r\n    elevation: 0,\r\n    shadowOpacity: 0,\r\n  },\r\n\r\n  cardContent: {\r\n    marginHorizontal: 5,\r\n    marginVertical: 20,\r\n  },\r\n})\r\n","import { useState, useEffect, useRef } from \"react\"\r\nimport { Text, View, Button } from \"react-native\"\r\nimport * as Notifications from \"expo-notifications\"\r\nimport React from \"react\"\r\nimport LocalNotificationsService from \"../../services/LocalNotificationsService/LocalNotificationsService\"\r\nimport { ScrollView } from \"react-native-gesture-handler\"\r\nimport Card from \"../../components/shared/card\"\r\nimport { Input } from \"react-native-elements\"\r\nimport Constants from \"expo-constants\"\r\nimport * as IntentLauncher from \"expo-intent-launcher\"\r\n\r\n// TODO: handle daylight savings. Perhaps ask user to reload notifications, that could be easier\r\n// this makes sense: if the user is interested in the app, they will cooperate\r\n\r\n// TODO: Test biweekly notifications\r\n\r\n// TODO: Fix package name not being resolved correctly first time the app is launched\r\n// a temp fix would be to always open notification channel settings for actual app\r\n\r\n// TODO: Configure notificatitions to appear on the lock screen\r\n\r\nexport default function NotificationTestsScreen() {\r\n  const [ready, setReady] = useState(false)\r\n\r\n  const [permission, setPermission] = useState<Notifications.PermissionStatus | null>(null)\r\n  const [scheduledNotifications, setScheduledNotifications] = useState<Notifications.NotificationRequest[]>([])\r\n  const [delayForExampleNotificationViaDate, setDelayForExampleNotificationViaDate] = useState(\"5\")\r\n\r\n  const [notification, setNotification] = useState<Notifications.Notification | null>(null)\r\n\r\n  const localNotificationsServiceRef = useRef<LocalNotificationsService | null>(null)\r\n\r\n  const notificationListener = useRef<Notifications.Subscription>()\r\n  const responseListener = useRef<Notifications.Subscription>()\r\n\r\n  // data: \"package:\" + pkg,\r\n  // \"interactive-schedule-notifications\"\r\n\r\n  // note: avoid using Constants[.manifest]\r\n\r\n  const requestConfigurePermissions = async () => {\r\n    // navigate to notification channel settings\r\n    // const pkg = Constants.manifest.releaseChannel ? Constants.manifest.android.package : \"host.exp.exponent\"\r\n\r\n    // IntentLauncher.startActivityAsync(\"android.settings.APP_NOTIFICATION_SETTINGS\", {\r\n    //   // data: \"package:\" + pkg,\r\n    //   extra: {\r\n    //     // \"android.provider.extra.CHANNEL_ID\": \"Default\",\r\n    //     \"android.provider.extra.APP_PACKAGE\": pkg,\r\n    //   },\r\n    // })\r\n\r\n    // const pkg = Constants.manifest.releaseChannel ? Constants.manifest.android.package : \"host.exp.exponent\"\r\n    const pkg = Constants.manifest.android.package\r\n    const allChannels = await Notifications.getNotificationChannelsAsync()\r\n    const channel = await Notifications.getNotificationChannelAsync(\"interactive-schedule-notifications\")\r\n    console.log(\"[Notification Tests] All channels of this app: \")\r\n    console.log(allChannels)\r\n    console.log(\"[Notification Tests] Channel id for main channel: \" + channel?.id)\r\n\r\n    IntentLauncher.startActivityAsync(\"android.settings.CHANNEL_NOTIFICATION_SETTINGS\", {\r\n      // data: \"package:\" + pkg,\r\n      extra: {\r\n        \"android.provider.extra.CHANNEL_ID\":\r\n          pkg == \"host.exp.exponent\" ? \"expo-experience\" : \"interactive-schedule-notifications\",\r\n        \"android.provider.extra.APP_PACKAGE\": pkg,\r\n      },\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    notificationListener.current = Notifications.addNotificationReceivedListener((notification) => {\r\n      setNotification(notification)\r\n      console.log(\"notification has beed shown\")\r\n    })\r\n\r\n    responseListener.current = Notifications.addNotificationResponseReceivedListener((response) => {\r\n      console.log(\"user responded to notification:\" + JSON.stringify(response))\r\n    })\r\n\r\n    const init = async () => {\r\n      let notifications = await LocalNotificationsService.GetInstance()\r\n      localNotificationsServiceRef.current = notifications\r\n\r\n      let registeredNotifications = await notifications.getAllScheduledNotificationsAsync()\r\n      let permissions = await notifications.checkPermissionsAsync()\r\n\r\n      setScheduledNotifications(registeredNotifications)\r\n      setPermission(permissions.status)\r\n\r\n      setReady(true)\r\n    }\r\n\r\n    init()\r\n\r\n    return () => {\r\n      Notifications.removeNotificationSubscription(notificationListener.current!)\r\n      Notifications.removeNotificationSubscription(responseListener.current!)\r\n    }\r\n  }, [])\r\n\r\n  if (!ready) {\r\n    return (\r\n      <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\r\n        <Text>Завантаження...</Text>\r\n      </View>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ScrollView contentContainerStyle={{ alignItems: \"center\" }}>\r\n      <Card style={{ backgroundColor: \"magenta\" }}>\r\n        <Text>Сповіщення дозволені: {permission}</Text>\r\n      </Card>\r\n\r\n      <View style={{ alignItems: \"center\", justifyContent: \"center\" }}>\r\n        <Text>Title: {notification && notification.request.content.title} </Text>\r\n        <Text>Body: {notification && notification.request.content.body}</Text>\r\n        <Text>Data: {notification && JSON.stringify(notification.request.content.data)}</Text>\r\n      </View>\r\n\r\n      <View>\r\n        <Text\r\n          style={{\r\n            alignSelf: \"center\",\r\n            marginBottom: 10,\r\n          }}\r\n        >\r\n          Сповіщення:\r\n        </Text>\r\n\r\n        <Button\r\n          title=\"Надіслати локальне сповіщення (приходить зі затримкою в ~3-5 секунд)\"\r\n          onPress={async () => {\r\n            localNotificationsServiceRef.current!.sendExampleNotification()\r\n          }}\r\n        />\r\n      </View>\r\n\r\n      <View style={{ marginVertical: 10 }}>\r\n        <View style={{ flexDirection: \"row\", width: \"50%\", alignItems: \"center\" }}>\r\n          <Text>Через секунд:</Text>\r\n          <Input\r\n            keyboardType=\"number-pad\"\r\n            defaultValue={delayForExampleNotificationViaDate}\r\n            onChangeText={(newValue) => setDelayForExampleNotificationViaDate(newValue)}\r\n          />\r\n        </View>\r\n\r\n        <Button\r\n          title={`Прислати сповіщення через ${delayForExampleNotificationViaDate} секунд`}\r\n          color={\"green\"}\r\n          onPress={async () => {\r\n            localNotificationsServiceRef.current!.scheduleExampleNotificationViaDate(\r\n              parseInt(delayForExampleNotificationViaDate)\r\n            )\r\n          }}\r\n        />\r\n      </View>\r\n\r\n      <View style={{ marginVertical: 10 }}>\r\n        <Text>Має показувати сповіщення кожні 5 секунд, навіть якщо додаток повністю закритий</Text>\r\n        <View style={{ marginVertical: 10 }}>\r\n          <Button\r\n            title=\"Присилати сповіщення кожнi 5 секунд\"\r\n            color={\"green\"}\r\n            onPress={async () => {\r\n              localNotificationsServiceRef.current!.scheduleRepeatableExampleNotification()\r\n            }}\r\n          />\r\n        </View>\r\n\r\n        <View style={{ marginVertical: 10 }}>\r\n          <Button\r\n            title=\"Присилати сповіщення кожного дня о 12:00\"\r\n            color={\"green\"}\r\n            onPress={async () => {\r\n              localNotificationsServiceRef.current!.scheduleRepeatableDailyExampleNotification()\r\n            }}\r\n          />\r\n        </View>\r\n\r\n        <View style={{ marginVertical: 10 }}>\r\n          <Button\r\n            title=\"Попросити дозволу на сповіщення\"\r\n            color={\"green\"}\r\n            onPress={async () => {\r\n              localNotificationsServiceRef.current!.checkPermissionsAsync\r\n            }}\r\n          />\r\n        </View>\r\n\r\n        <Button\r\n          title=\"Зупинити періодичні сповіщення\"\r\n          color={\"red\"}\r\n          onPress={async () => {\r\n            localNotificationsServiceRef.current!.cancelAllScheduledNotificationsAsync()\r\n          }}\r\n        />\r\n\r\n        <View>\r\n          <Text>Наступне Сповіщення</Text>\r\n          <Button\r\n            title=\"Попросити налаштувати сповіщення\"\r\n            onPress={() => {\r\n              requestConfigurePermissions()\r\n            }}\r\n          />\r\n        </View>\r\n      </View>\r\n    </ScrollView>\r\n  )\r\n}\r\n","import * as React from \"react\"\r\nimport {\r\n  PixelRatio,\r\n  Pressable,\r\n  Text,\r\n  TouchableOpacity,\r\n  TouchableOpacityBase,\r\n  View,\r\n  useWindowDimensions,\r\n} from \"react-native\"\r\nimport { NavigationContainer } from \"@react-navigation/native\"\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\"\r\nimport { Ionicons } from \"@expo/vector-icons\"\r\nimport NotificationTestsScreen from \"../../screens/TestTabsScreens/NotificationTests\"\r\nimport Collapsible from \"react-native-collapsible\"\r\nimport { TouchableHighlight } from \"react-native-gesture-handler\"\r\nimport AppText from \"./AppText\"\r\n\r\nexport default function Expander({ header, children }: { header: string; children: React.ReactNode }) {\r\n  let [collapsed, setCollapsed] = React.useState(true)\r\n  //   console.log(\"[Expander] expander recieved these children:\")\r\n  //   console.log(children)\r\n\r\n  return (\r\n    <View>\r\n      <TouchableOpacity onPress={() => setCollapsed(!collapsed)}>\r\n        <AppText>\r\n          {header} <Ionicons name={collapsed ? \"arrow-down\" : \"arrow-up\"} />\r\n        </AppText>\r\n      </TouchableOpacity>\r\n\r\n      <Collapsible collapsed={collapsed}>{children}</Collapsible>\r\n    </View>\r\n  )\r\n}\r\n","import { useState, useEffect, useRef } from \"react\"\r\nimport { Text, View, Button, ToastAndroid } from \"react-native\"\r\n\r\nimport LocalNotificationsService from \"../../services/LocalNotificationsService/LocalNotificationsService\"\r\nimport * as Notifications from \"expo-notifications\"\r\nimport { FlatList, ScrollView } from \"react-native-gesture-handler\"\r\nimport React from \"react\"\r\nimport Card from \"../../components/shared/card\"\r\nimport Expander from \"../../components/shared/Expander\"\r\nimport { CheckBox, Input, SearchBar } from \"react-native-elements\"\r\nimport _ from \"lodash\"\r\n\r\n// TODO: Consider this warning:\r\n// VirtualizedList: You have a large list that is slow to update - make sure your renderItem function renders components that follow React performance best practices\r\n// like PureComponent, shouldComponentUpdate, etc. {\"contentLength\": 7060, \"dt\": 598, \"prevDt\": 859}\r\n\r\nexport default function ScheduledNotificationsScreen() {\r\n  const [ready, setReady] = useState(false)\r\n\r\n  let [showRegularClasses, setShowRegularClasses] = useState(false)\r\n  let [showBiweeklyClasses, setShowBiweeklyClasses] = useState(true)\r\n  let [filterQuery, setFilterQuery] = useState(\"\")\r\n\r\n  // fetch all scheduled nootifications\r\n  const localNotificationsServiceRef = useRef<LocalNotificationsService | null>(null)\r\n  let [scheduledNotifications, setScheduledNotifications] = useState<Notifications.NotificationRequest[]>([])\r\n\r\n  const scheduledNotificationsWithParsedTimestamp = _.cloneDeep(scheduledNotifications).map((n) => {\r\n    if (n.trigger.type === \"date\") {\r\n      n.trigger.value = new Date(n.trigger.value).toUTCString()\r\n      // n.trigger.timeZoneOffset = new Date(n.trigger.value).getTimezoneOffset()\r\n    }\r\n\r\n    return n\r\n  })\r\n  const filteredScheduledNotifications = scheduledNotificationsWithParsedTimestamp.filter((n) => {\r\n    if (n.trigger.type === \"weekly\" && !showRegularClasses) return false\r\n    if (n.trigger.type === \"date\" && !showBiweeklyClasses) return false\r\n\r\n    if (JSON.stringify(n).includes(filterQuery)) {\r\n      return true\r\n    }\r\n    return false\r\n  })\r\n\r\n  const sortedScheduledNotifications = _.sortBy(filteredScheduledNotifications, (n) => {\r\n    if (n.trigger.type === \"weekly\") {\r\n      return n.trigger.weekday * 24 * 60 + n.trigger.hour * 60 + n.trigger.minute\r\n    } else if (n.trigger.type === \"date\") {\r\n      return new Date(n.trigger.value) - 0\r\n    }\r\n  })\r\n\r\n  // display them\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      let notifications = await LocalNotificationsService.GetInstance()\r\n      localNotificationsServiceRef.current = notifications\r\n\r\n      let registeredNotifications = await notifications.getAllScheduledNotificationsAsync()\r\n\r\n      setScheduledNotifications(registeredNotifications)\r\n      setReady(true)\r\n    }\r\n\r\n    init()\r\n  }, [])\r\n\r\n  return (\r\n    <View style={{ alignItems: \"center\", marginTop: 40 }}>\r\n      <Text>Всього запланованих сповіщень: {scheduledNotifications.length}</Text>\r\n      <Button\r\n        title=\"Fetch All Scheduled Notifications\"\r\n        onPress={async () => {\r\n          // show toast\r\n          // AndroidToast.show(\"Fetching all scheduled notifications...\", AndroidToast.SHORT)\r\n\r\n          ToastAndroid.show(\"Fetching all scheduled notifications...\", ToastAndroid.SHORT)\r\n          let notifications = await localNotificationsServiceRef.current!.getAllScheduledNotificationsAsync()\r\n\r\n          setScheduledNotifications(notifications)\r\n          ToastAndroid.show(\"Fetched and set state...\", ToastAndroid.SHORT)\r\n        }}\r\n      />\r\n      <Text>Список запланованих сповіщень: </Text>\r\n      <ScrollView style={{ minHeight: 55 }} horizontal contentContainerStyle={{ flexDirection: \"row\" }}>\r\n        <CheckBox\r\n          checked={showRegularClasses}\r\n          onPress={() => setShowRegularClasses(!showRegularClasses)}\r\n          title={\"Щотижневі пари\"}\r\n        />\r\n        <CheckBox\r\n          checked={showBiweeklyClasses}\r\n          onPress={() => setShowBiweeklyClasses(!showBiweeklyClasses)}\r\n          title={\"Щодвотижневі пари (Ті, що по чисельнику/знаменнику\"}\r\n        />\r\n      </ScrollView>\r\n\r\n      <View style={{ width: \"70%\" }}>\r\n        <Input\r\n          ref={(search) => (this.search = search)}\r\n          onChangeText={(text) => setFilterQuery(text)}\r\n          placeholder=\"Filter By Text\"\r\n          onBlur={() => null}\r\n        />\r\n      </View>\r\n\r\n      <FlatList\r\n        data={sortedScheduledNotifications}\r\n        keyExtractor={(item) => item.identifier}\r\n        ListEmptyComponent={() => (\r\n          <View>\r\n            <Text>Сповіщень не знайдено</Text>\r\n          </View>\r\n        )}\r\n        renderItem={({ item, index }) => {\r\n          const notification = item\r\n\r\n          return (\r\n            <Card\r\n              key={index}\r\n              style={{\r\n                backgroundColor: \"red\",\r\n              }}\r\n            >\r\n              <Text style={{ alignSelf: \"center\" }}>Notification #{index + 1}</Text>\r\n              <Text>\r\n                Notification title: <Text style={{ fontWeight: \"bold\" }}>{notification.content.title}</Text>{\" \"}\r\n              </Text>\r\n              <Text>Notification trigger type: {notification.trigger.type}</Text>\r\n              <Expander header=\"Notification Details\">\r\n                <View>\r\n                  <Text>Details:</Text>\r\n                  <Text>Notification id: {notification.identifier} </Text>\r\n\r\n                  <Text> {JSON.stringify(notification.trigger)} </Text>\r\n                </View>\r\n              </Expander>\r\n\r\n              <View style={{ marginVertical: 10, alignItems: \"flex-end\" }}>\r\n                <Button\r\n                  onPress={() =>\r\n                    localNotificationsServiceRef.current!.cancelScheduledNotificationAsync(notification.identifier)\r\n                  }\r\n                  title=\"Cancel\"\r\n                  color={\"red\"}\r\n                />\r\n              </View>\r\n            </Card>\r\n          )\r\n        }}\r\n      />\r\n    </View>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { View, Text, StyleSheet } from \"react-native\"\r\nimport AppText from \"./shared/AppText\"\r\nimport { Modal } from \"react-native\"\r\nimport { Pressable } from \"react-native\"\r\nimport { ScrollView } from \"react-native-gesture-handler\"\r\nimport { globalStyles } from \"../styles/global\"\r\n\r\n// TODO: Manually type the ContentViewModalProps,It was auto generated by VSCode\r\ntype ContentViewModalProps = {\r\n  visible: boolean\r\n  closeModal: () => void\r\n  children:\r\n    | string\r\n    | number\r\n    | boolean\r\n    | React.ReactElement<any, string | React.JSXElementConstructor<any>>\r\n    | React.ReactFragment\r\n    | React.ReactPortal\r\n}\r\n\r\nexport default function ContentViewModal(props: ContentViewModalProps) {\r\n  return (\r\n    <Modal animationType=\"fade\" transparent={true} style={styles.modal} visible={props.visible}>\r\n      <Pressable onPress={() => props.closeModal()} style={styles.overlay}></Pressable>\r\n\r\n      <View style={styles.modalContentContainer}>\r\n        <ScrollView style={styles.modalChildren}>{props.children}</ScrollView>\r\n      </View>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  modal: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"red\", // not gonna work cause it's transparent\r\n  },\r\n\r\n  overlay: {\r\n    backgroundColor: \"rgba(0, 0, 0, 0.25)\",\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n\r\n  modalContentContainer: {\r\n    ...globalStyles.modalContentContainer,\r\n  },\r\n\r\n  modalChildren: {\r\n    height: \"100%\",\r\n  },\r\n})\r\n","import React from \"react\"\r\n\r\nimport { View } from \"react-native\"\r\nimport { Pressable, Text } from \"react-native\"\r\nimport { StyleSheet } from \"react-native\"\r\nimport { TouchableHighlight, TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport AppText from \"./AppText\"\r\nimport { palette } from \"../../styles/global\"\r\n\r\nexport default function FlatButton({ onPress, text, color }) {\r\n  return (\r\n    <TouchableOpacity style={{ alignItems: \"flex-start\" }} onPress={onPress}>\r\n      <View style={styles.button}>\r\n        <AppText style={styles.closeButtonText}>{text}</AppText>\r\n      </View>\r\n    </TouchableOpacity>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  closeButtonText: {\r\n    fontFamily: \"montserrat-600\",\r\n    color: palette.grayedOut,\r\n    fontSize: 16,\r\n  },\r\n\r\n  button: {\r\n    alignItems: \"flex-start\",\r\n    backgroundColor: \"#FFFFFF\",\r\n    borderWidth: 1,\r\n    borderColor: \"#E6E6E6\",\r\n    padding: 10,\r\n    paddingHorizontal: 30,\r\n    marginTop: 10,\r\n    // borderRadius: 10,\r\n\r\n    shadowColor: \"rgba(0,0,0,1)\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 1,\r\n    },\r\n    elevation: 0.2,\r\n    shadowOpacity: 0.0,\r\n    shadowRadius: 0,\r\n    borderRadius: 10,\r\n  },\r\n})\r\n","import { useEffect } from \"react\"\r\nimport React from \"react\"\r\n\r\nimport { View, Text, StyleSheet, NativeSyntheticEvent, TextInputFocusEventData, Pressable } from \"react-native\"\r\nimport AppText from \"../../components/shared/AppText\"\r\n\r\nimport * as FileSystem from \"expo-file-system\"\r\nimport { Button } from \"@rneui/themed\"\r\nimport { Input } from \"react-native-elements\"\r\nimport ContentViewModal from \"../../components/ContentViewModal\"\r\nimport { ScrollView, TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport { createClient } from \"contentful/dist/contentful.browser.min.js\"\r\nimport { AssetFile, ContentfulClientApi } from \"contentful\"\r\nimport Expander from \"../../components/shared/Expander\"\r\nimport ScheduleLoaderService from \"../../services/ScheduleLoaderService/ScheduleLoaderService\"\r\nimport FlatButton from \"../../components/shared/Button\"\r\n\r\nconst pathToSchedules = `assets/schedules/`\r\n// const istSchedule = FileSystem.readAsStringAsync(pathToSchedules + \"IST-51M.json\")\r\n// const bundledAssetsInfo = FileSystem.getInfoAsync(\"\")\r\n\r\nexport default function FileSystemScreen() {\r\n  const [bundledAssetsInfo, setBundledAssetsInfo] = React.useState([])\r\n\r\n  const [fileContentModalVisible, setFileContentModalVisible] = React.useState(false)\r\n  const [selectedFileContent, setSelectedFileContent] = React.useState(\"selected file content\")\r\n\r\n  const [currentDir, setCurrentDir] = React.useState<string>(FileSystem.documentDirectory)\r\n  const [allFiles, setAllFiles] = React.useState<string[]>([])\r\n\r\n  const [firstFieldText, setFirstFieldText] = React.useState(\"\")\r\n  const [secondFieldText, setSecondFieldText] = React.useState(\"\")\r\n\r\n  const [contentfulSchedule, setContentfulSchedule] = React.useState(\"\")\r\n  const [contentfulScheduleAsAsset, setContentfulScheduleAsAsset] = React.useState(\"\")\r\n  const [contentfulScheduleAsDownloadedAsset, setContentfulScheduleAsDownloadedAsset] = React.useState(\"\")\r\n  const [allContentfulAssets, setAllContentfulAssets] = React.useState(\"\")\r\n\r\n  const saveToFile = async () => {\r\n    const text = firstFieldText + \"\\n\" + secondFieldText\r\n\r\n    const path = FileSystem.documentDirectory + \"test.txt\"\r\n    const content = text\r\n\r\n    await FileSystem.writeAsStringAsync(path, content)\r\n\r\n    const info = await FileSystem.getInfoAsync(path)\r\n    console.log(\"save successful. file info:\")\r\n    console.log(info)\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function init() {\r\n      // const info = await FileSystem.readDirectoryAsync(FileSystem.bundleDirectory)\r\n      // console.log(\"bundled assets info:\")\r\n      // console.log(info)\r\n\r\n      let allFiles = await FileSystem.readDirectoryAsync(currentDir)\r\n\r\n      console.log(\"all files:\")\r\n      console.log(allFiles)\r\n      setAllFiles(allFiles)\r\n\r\n      const client: ContentfulClientApi<undefiend> = createClient({\r\n        space: \"ude6y2h1h61l\",\r\n        environment: \"master\", // defaults to 'master' if not set\r\n        accessToken: \"hQc8OI2VQrAnLLSWSpflQyByQUZ_t5ct1Ed8axAu7M0\",\r\n      })\r\n\r\n      client\r\n        .getEntry(\"4DlBdNKIvYPma8B18WwQsJ\")\r\n        .then((entry) => {\r\n          console.log(entry)\r\n          setContentfulSchedule(JSON.stringify(entry, null, 4))\r\n        })\r\n        .catch((e) => {\r\n          console.error(\"fetching contentful schedule failed:\")\r\n          console.error(e)\r\n        })\r\n\r\n      client\r\n        .getAsset(\"2wFiyBYGXQbdRvtnSAS8Xm\")\r\n        .then((asset) => {\r\n          console.log(asset)\r\n          setContentfulScheduleAsAsset(JSON.stringify(asset, null, 4))\r\n          const file: AssetFile = asset.fields.file\r\n\r\n          const protocol = \"https:\"\r\n          const linkToFile = file.url\r\n          FileSystem.downloadAsync(protocol + linkToFile, FileSystem.documentDirectory + file.fileName, {}).then(\r\n            (res) => {\r\n              console.log(\"downloaded file:\")\r\n              console.log(res)\r\n\r\n              FileSystem.readAsStringAsync(res.uri).then((content) => {\r\n                setContentfulScheduleAsDownloadedAsset(content)\r\n              })\r\n            }\r\n          )\r\n        })\r\n        .catch((e) => {\r\n          console.error(\"fetching contentful schedule as asset failed:\")\r\n          console.error(e)\r\n\r\n          setContentfulScheduleAsAsset(\"failed to download the asset\")\r\n          setContentfulScheduleAsDownloadedAsset(\"failed to download the asset\")\r\n        })\r\n\r\n      client.getAssets().then((assets) => {\r\n        console.log(assets)\r\n\r\n        let assetNames: string[] = []\r\n\r\n        if (assets.items.length !== 0) {\r\n          assetNames = assets.items.map((a) => a.fields.file.fileName)\r\n        }\r\n\r\n        setAllContentfulAssets(JSON.stringify(assetNames, null, 4))\r\n      })\r\n\r\n      await initFields()\r\n\r\n      // for testing purposes:\r\n      let scheudleLoaderInstance = ScheduleLoaderService.GetInstance()\r\n    }\r\n\r\n    init()\r\n  }, [])\r\n\r\n  async function initFields() {\r\n    // read from test.txt\r\n    const path = FileSystem.documentDirectory + \"test.txt\"\r\n\r\n    let content: string\r\n\r\n    try {\r\n      content = await FileSystem.readAsStringAsync(path)\r\n    } catch (e) {\r\n      content = \"a\\nb\"\r\n    }\r\n    const lines = content.split(\"\\n\")\r\n\r\n    setFirstFieldText(lines[0])\r\n    setSecondFieldText(lines[1])\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View>\r\n        <Input onChangeText={(text) => setFirstFieldText(text)} value={firstFieldText} />\r\n        <Input onChangeText={(text) => setSecondFieldText(text)} value={secondFieldText} />\r\n      </View>\r\n      <View style={{ flexDirection: \"row\" }}>\r\n        <Button color={\"success\"} title={\"Зберегти\"} onPress={() => saveToFile()} />\r\n        <Button color={\"error\"} title={\"Скасувати\"} onPress={() => initFields()} />\r\n      </View>\r\n      <View>\r\n        <FlatButton\r\n          text={\"Усі Файли\"}\r\n          onPress={() => {\r\n            setCurrentDir(FileSystem.documentDirectory)\r\n            FileSystem.readDirectoryAsync(FileSystem.documentDirectory).then((content) => {\r\n              setAllFiles(content)\r\n            })\r\n          }}\r\n        />\r\n        <ScrollView>\r\n          {allFiles.map((f, idx) => (\r\n            <TouchableOpacity\r\n              key={idx}\r\n              onLongPress={() => {\r\n                FileSystem.deleteAsync(currentDir + f).then(() => {\r\n                  setAllFiles(allFiles.filter((file) => file !== f))\r\n                })\r\n              }}\r\n              onPress={async () => {\r\n                let isFolder = (await FileSystem.getInfoAsync(FileSystem.documentDirectory + f)).isDirectory\r\n\r\n                if (isFolder) {\r\n                  setCurrentDir(FileSystem.documentDirectory + f + \"/\")\r\n                  FileSystem.readDirectoryAsync(FileSystem.documentDirectory + f).then((content) => {\r\n                    setAllFiles(content)\r\n                  })\r\n                } else {\r\n                  FileSystem.readAsStringAsync(currentDir + f).then((content) => {\r\n                    setSelectedFileContent(content)\r\n                    setFileContentModalVisible(true)\r\n                  })\r\n                }\r\n              }}\r\n            >\r\n              <AppText>{f}</AppText>\r\n            </TouchableOpacity>\r\n          ))}\r\n        </ScrollView>\r\n      </View>\r\n      <View>\r\n        <AppText style={{ color: \"red\" }}>Файли, що йдуть разом з додатком (не працює):</AppText>\r\n        <View></View>\r\n      </View>\r\n      <View>\r\n        <Expander header=\"Contentful Entry тест\">\r\n          <ScrollView style={{ height: 500 }}>\r\n            <AppText>{contentfulSchedule}</AppText>\r\n          </ScrollView>\r\n        </Expander>\r\n      </View>\r\n      <View>\r\n        <Expander header=\"Contentful Asset Test\">\r\n          <ScrollView style={{ height: 200 }}>\r\n            <AppText>{contentfulScheduleAsAsset}</AppText>\r\n          </ScrollView>\r\n        </Expander>\r\n      </View>\r\n      <View>\r\n        <Expander header=\"Contentful Asset As Downloaded File Test\">\r\n          <ScrollView style={{ height: 200 }}>\r\n            <AppText>{contentfulScheduleAsDownloadedAsset}</AppText>\r\n          </ScrollView>\r\n        </Expander>\r\n      </View>\r\n      <View>\r\n        <Expander header=\"All Contentful Assets\">\r\n          <ScrollView style={{ height: 200 }}>\r\n            <AppText>{allContentfulAssets}</AppText>\r\n          </ScrollView>\r\n        </Expander>\r\n      </View>\r\n\r\n      <ContentViewModal visible={fileContentModalVisible} closeModal={() => setFileContentModalVisible(false)}>\r\n        <AppText>{selectedFileContent}</AppText>\r\n      </ContentViewModal>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n})\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { View, Text, StyleSheet } from \"react-native\"\r\nimport { Button } from \"react-native-elements\"\r\nimport { SafeAreaView } from \"react-native-safe-area-context\"\r\nimport ScheduleLoaderService from \"../../services/ScheduleLoaderService/ScheduleLoaderService\"\r\nimport ScheduleModel from \"../../models/ScheduleModel\"\r\nimport { ScheduleDay } from \"../../models/ScheduleDay\"\r\nimport SettingsService from \"../../services/SettingsService/SettingsService\"\r\nimport { FlatList, TouchableOpacity } from \"react-native-gesture-handler\"\r\n\r\nimport { useSwipeableItemParams } from \"react-native-swipeable-item\"\r\nimport { globalStyles } from \"../../styles/global\"\r\nimport { useNavigation } from \"@react-navigation/native\"\r\nimport _ from \"lodash\"\r\nimport { EditorStackRoutes } from \"../../routes/EditorStackRoutes\"\r\n\r\nimport \"setimmediate\"\r\n\r\n// TODO: use this library to implement swipeable items\r\n// https://github.com/computerjazz/react-native-swipeable-item\r\n\r\nexport default function ScheduleEditor() {\r\n  let [isReady, setIsReady] = useState(false)\r\n  let [sampleScheduleDay, setSampleDay] = useState<ScheduleDay>()\r\n\r\n  let settingsServiceRef = React.useRef<SettingsService | null>(null)\r\n\r\n  let navigation = useNavigation()\r\n  const currentRouteName = navigation.getId()\r\n\r\n  useEffect(() => {\r\n    async function init() {\r\n      let scheduleLoaderInstance = await ScheduleLoaderService.GetInstance()\r\n      let schedule = new ScheduleModel(\"groupname_groupyear\", \"groupname\", 5)\r\n\r\n      // TODO: Fix warning about undefined\r\n\r\n      let firstScheduleFile = scheduleLoaderInstance.scheduleFiles[0]\r\n      let firstScheduleFilename = firstScheduleFile.filename\r\n      console.log(\"first schedule filename:\", firstScheduleFilename)\r\n\r\n      await schedule.getScheduleFromScheduleLoader(firstScheduleFilename)\r\n\r\n      let settingsService = await SettingsService.GetInstance()\r\n      settingsServiceRef.current = settingsService\r\n\r\n      setSampleDay(schedule.scheduleDays[0])\r\n      setIsReady(true)\r\n    }\r\n\r\n    init()\r\n  }, [])\r\n\r\n  let [data, setData] = useState([\r\n    { key: \"1\", title: \"Item 1\", isSlot: true },\r\n    { key: \"2\", title: \"Item 2\", isSlot: true },\r\n    { key: \"3\", title: \"Item 3\", isSlot: false },\r\n    // { key: \"4\", title: \"Item 4\", isSlot: false },\r\n    // { key: \"5\", title: \"Item 5\", isSlot: false },\r\n    // { key: \"6\", title: \"Item 6\", isSlot: false },\r\n    // { key: \"7\", title: \"Item 7\", isSlot: true },\r\n    // { key: \"8\", title: \"Item 8\", isSlot: false },\r\n    // { key: \"9\", title: \"Item 9\", isSlot: false },\r\n    // { key: \"10\", title: \"Item 10\", isSlot: false },\r\n  ])\r\n\r\n  if (!isReady) {\r\n    return (\r\n      <View>\r\n        <Text>Loading...</Text>\r\n      </View>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <View>\r\n        <Text>Редактор</Text>\r\n        <Text> ({currentRouteName})</Text>\r\n        <View style={[{ flexDirection: \"row\", justifyContent: \"space-around\" }]}>\r\n          <Button title=\"Save\" />\r\n          <Button title=\"Cancel\" />\r\n          <Button title=\"Reset\" />\r\n        </View>\r\n        <FlatList\r\n          scrollEnabled={true}\r\n          nestedScrollEnabled={false}\r\n          data={[data, data, data, data]}\r\n          keyExtractor={(item) => Math.random().toString()}\r\n          renderItem={({ item }) => {\r\n            let dataElem = item\r\n            return (\r\n              <FlatList\r\n                // scrollEnabled={false}\r\n                // nestedScrollEnabled={true}\r\n                // prop\r\n                data={dataElem}\r\n                key={Math.random().toString()}\r\n                keyExtractor={(item) => _.random(0, 100000, false).toString()}\r\n                onDragEnd={({ data }) => console.log(\"[drag end] data:\", data)}\r\n                renderItem={({ item: draggable, drag, isActive }) => {\r\n                  return (\r\n                    <TouchableOpacity\r\n                      style={[\r\n                        { backgroundColor: isActive ? \"orange\" : \"red\" },\r\n                        { margin: 10 },\r\n                        draggable.isSlot ? { backgroundColor: \"gray\" } : {},\r\n                      ]}\r\n                      onLongPress={drag}\r\n                      onPress={() => {\r\n                        navigation.push(EditorStackRoutes.SCHEDULE_CLASS_FORM, {\r\n                          scheduleClass: draggable,\r\n                          onFormDataUpdated: (updatedClass) => {\r\n                            console.log(\"updated class:\", updatedClass)\r\n\r\n                            let isNewEntry = updatedClass.title != \"\"\r\n                            let isSlot = !isNewEntry\r\n\r\n                            setData(\r\n                              dataElem.map((class_) =>\r\n                                class_.key === draggable.key ? { ...class_, ...updatedClass, isSlot } : class_\r\n                              )\r\n                            )\r\n                          },\r\n                        })\r\n                      }}\r\n                    >\r\n                      {/* <SwipeableItem\r\n                        key={draggable.key}\r\n                        // item={item}\r\n                        renderUnderlayLeft={() => <UnderlayRightSide />}\r\n                        // renderUnderlayRight={() => <UnderlayLeft />}\r\n                        snapPointsLeft={[!draggable.isSlot ? 50 : 0]} // snap points for right side underlay\r\n                        snapPointsRight={[0]} // disable left side underlay\r\n                        activationThreshold={10}\r\n                      > */}\r\n                      <View style={[styles.reorderable]}>\r\n                        <Text>{draggable.title}</Text>\r\n                      </View>\r\n                      {/* </SwipeableItem> */}\r\n                    </TouchableOpacity>\r\n                  )\r\n                }}\r\n              />\r\n            )\r\n          }}\r\n          style={{ padding: 20 }}\r\n        ></FlatList>\r\n      </View>\r\n    </SafeAreaView>\r\n  )\r\n}\r\n\r\nconst UnderlayRightSide = () => {\r\n  const { close } = useSwipeableItemParams<Item>()\r\n  function openClassEditScreen(): void {}\r\n\r\n  return (\r\n    <View\r\n      style={[\r\n        styles.row,\r\n        styles.underlayLeft,\r\n        {\r\n          // alignSelf: \"center\",\r\n        },\r\n      ]}\r\n    >\r\n      <View>\r\n        <TouchableOpacity onPress={() => close()}>\r\n          <Text style={styles.text}>Del</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n\r\n  reorderable: {\r\n    height: 20,\r\n    width: \"95%\",\r\n    ...globalStyles.centered,\r\n    marginVertical: 5,\r\n  },\r\n\r\n  row: {\r\n    flexDirection: \"row\",\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: 15,\r\n  },\r\n\r\n  underlayLeft: {\r\n    flex: 1,\r\n    backgroundColor: \"lime\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n\r\n  text: {\r\n    fontWeight: \"bold\",\r\n    color: \"white\",\r\n    fontSize: 32,\r\n  },\r\n})\r\n","import { createStackNavigator } from \"@react-navigation/stack\"\r\nimport * as React from \"react\"\r\nimport ScheduleEditor from \"../screens/TestTabsScreens/ScheduleEditor\"\r\nimport { View } from \"react-native\"\r\nimport StackHeader from \"../components/StackHeader\"\r\nimport ScheduleClassForm from \"../screens/TestTabsScreens/scheduleEditorStack/ScheduleClassForm\"\r\nimport { EditorStackRoutes } from \"./EditorStackRoutes\"\r\n\r\nconst Stack = createStackNavigator()\r\n\r\nexport default function TestEditorStack() {\r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={\r\n        {\r\n          // headerShown: false,\r\n        }\r\n      }\r\n    >\r\n      <Stack.Screen\r\n        name={EditorStackRoutes.EDITOR}\r\n        component={ScheduleEditor}\r\n        options={{\r\n          header: () => <View />,\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name={EditorStackRoutes.SCHEDULE_CLASS_FORM}\r\n        component={ScheduleClassForm}\r\n        options={{\r\n          header: (props) => <StackHeader title={\"Пара\"} />,\r\n        }}\r\n      />\r\n    </Stack.Navigator>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { View, Text, StyleSheet, Button, Linking } from \"react-native\"\r\nimport OptionPickerModal from \"../../components/OptionPickerModal\"\r\nimport { globalStyles, palette } from \"../../styles/global\"\r\nimport { imageIcons } from \"../../constants/Images\"\r\nimport { FontAwesome, Ionicons, MaterialIcons } from \"@expo/vector-icons\"\r\nimport { SafeAreaView } from \"react-native-safe-area-context\"\r\nimport AppText from \"../../components/shared/AppText\"\r\nimport { useNavigation } from \"@react-navigation/native\"\r\nimport { ContactsStackRoutes } from \"../../routes/ContactsStackRoutes\"\r\nimport { Image } from \"react-native-elements\"\r\nimport { isMail } from \"../../utilities/utilities\"\r\n\r\ntype ModalItem = {\r\n  icon: JSX.Element\r\n  text: string\r\n  isPhone?: boolean\r\n  isLink?: boolean\r\n  linkName?: string\r\n}\r\n\r\nexport default function ContactsModalTestScreen() {\r\n  let navigation = useNavigation()\r\n\r\n  let [corpsModalIsOpen, setCorpsModalIsOpen] = React.useState(false)\r\n  let [rectorateModalIsOpen, setRectorateModalIsOpen] = React.useState(false)\r\n  let [preparationDepartmentModalIsOpen, setPreparationDepartmentModalIsOpen] = React.useState(false)\r\n  let [\r\n    internationalAffairsAndInformationDepartmentModalIsOpen,\r\n    setInternationalAffairsAndInformationDepartmentModalIsOpen,\r\n  ] = React.useState(false)\r\n  let [admissionCommitteeModalIsOpen, setAdmissionCommitteeModalIsOpen] = React.useState(false)\r\n  let [studentCouncilModalIsOpen, setStudentCouncilModalIsOpen] = React.useState(false)\r\n  let [socialMediaModalIsOpen, setSocialMediaModalIsOpen] = React.useState(false)\r\n\r\n  let academyCorps = [\r\n    \"вул. Під Голоском, 19\",\r\n    \"вул. Підвальна, 17\",\r\n    \"вул. Личаківська, 3\",\r\n    \"вул. Коцюбинського, 21\",\r\n    \"вул. Винниченка, 12\",\r\n  ]\r\n\r\n  // Корпуси академії\r\n  let corpsModalItems = academyCorps.map((corps) => {\r\n    return {\r\n      text: corps,\r\n      icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n    }\r\n  })\r\n\r\n  // Ректорат\r\n  let rectorateModalItems: ModalItem[] = [\r\n    {\r\n      icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n      text: \"вул. Під Голоском, 19, ауд. 234\",\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n      text: \"(032) 242 23 77\",\r\n      isPhone: true,\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n      text: \"uad@uad.edu.ua\",\r\n      isLink: true,\r\n    },\r\n  ]\r\n\r\n  // Підготовче відділення\r\n  let preparationDepartmentModalItems: ModalItem[] = [\r\n    {\r\n      icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n      text: \"вул. Під Голоском, 19, ауд. 218\",\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n      text: \"(032) 242 23 78\",\r\n      isPhone: true,\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n      text: \"pv@uad.edu.ua\",\r\n      isLink: true,\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"globe\" color={palette.grayedOut} size={16} />,\r\n      text: \"http://www.uad-pv.pp.ua/\",\r\n      isLink: true,\r\n    },\r\n  ]\r\n\r\n  // Відділ міжнародних звʼязків та інформаційного забезпечення\r\n  let internationalAffairsAndInformationDepartmentModalItems: ModalItem[] = [\r\n    {\r\n      icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n      text: \"вул. Під Голоском, 19\",\r\n    },\r\n\r\n    {\r\n      icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n      text: \"(032) 259 94 21\",\r\n      isPhone: true,\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n      text: \"ird@uad.lviv.ua\",\r\n      isLink: true,\r\n    },\r\n  ]\r\n\r\n  // Приймальна комісія\r\n  let admissionsCommitteeModalItems: ModalItem[] = [\r\n    {\r\n      icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n      text: \"вул. Під Голоском, 19, каб. 417, 200\",\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n      text: \"(067) 149 14 00\",\r\n      isPhone: true,\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n      text: \"pk@uad.edu.ua\",\r\n      isLink: true,\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n      text: \"pk.uad.lviv@gmail.com\",\r\n      isLink: true,\r\n    },\r\n  ]\r\n\r\n  // Бухгалтерія\r\n  let accountingModalItems: ModalItem[] = [\r\n    {\r\n      icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n      text: \"вул. Під Голоском, 19, ауд. 213\",\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n      text: \"(032) 242 23 46\",\r\n      isPhone: true,\r\n    },\r\n  ]\r\n\r\n  // Відділ платної форми навчання\r\n  let contractEducationDepartmentModalItems: ModalItem[] = [\r\n    {\r\n      icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n      text: \"вул. Під Голоском, 19, ауд. 234а\",\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n      text: \"(032) 242 23 80\",\r\n      isPhone: true,\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n      text: \"vpn_uad@ukr.net\",\r\n      isLink: true,\r\n    },\r\n  ]\r\n\r\n  // Профком студентів\r\n  let studentUnionModalItems: ModalItem[] = [\r\n    {\r\n      icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n      text: \"вул. Під Голоском, 19, ауд. 311\",\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n      text: \"(032) 242 23 79\",\r\n      isPhone: true,\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n      text: \"(067) 67 23 173\",\r\n      isPhone: true,\r\n    },\r\n  ]\r\n\r\n  // Студентська рада\r\n  let studentCouncilModalItems: ModalItem[] = [\r\n    {\r\n      icon: <FontAwesome name=\"instagram\" color={palette.grayedOut} size={16} />,\r\n      text: \"https://www.instagram.com/uad_lviv/\",\r\n      isLink: true,\r\n      linkName: \"uad_lviv\",\r\n    },\r\n  ]\r\n\r\n  // Соц. мережі академії\r\n  let socialMediaModalItems: ModalItem[] = [\r\n    {\r\n      icon: <FontAwesome name=\"instagram\" color={palette.grayedOut} size={16} />,\r\n      text: \"https://www.instagram.com/uad_lviv/\",\r\n      isLink: true,\r\n      linkName: \"@uad_lviv\",\r\n    },\r\n    {\r\n      icon: <FontAwesome name=\"telegram\" color={palette.grayedOut} size={16} />,\r\n      text: \"https://t.me/uad_live\",\r\n      isLink: true,\r\n      linkName: \"@uad_live\",\r\n    },\r\n    {\r\n      icon: <FontAwesome name=\"youtube-play\" color={palette.grayedOut} size={16} />,\r\n      text: \"https://www.youtube.com/user/UADtelevision\",\r\n      isLink: true,\r\n      linkName: \"UADtelevision\",\r\n    },\r\n    {\r\n      icon: <FontAwesome name=\"facebook-official\" color={palette.grayedOut} size={16} />,\r\n      text: \"https://www.facebook.com/uadlv\",\r\n      isLink: true,\r\n    },\r\n    {\r\n      icon: (\r\n        <Image\r\n          source={imageIcons.tiktok}\r\n          // color={palette.grayedOut}\r\n          style={{\r\n            width: 16,\r\n            height: 18,\r\n          }}\r\n        />\r\n      ),\r\n      text: \"https://www.tiktok.com/@uad.lviv\",\r\n      isLink: true,\r\n      linkName: \"@uad.lviv\",\r\n    },\r\n  ]\r\n\r\n  const constructModalItem = (item: ModalItem, idx) => {\r\n    return (\r\n      <View\r\n        style={{\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          marginVertical: 6,\r\n        }}\r\n      >\r\n        {item.icon}\r\n        <AppText\r\n          onPress={() => {\r\n            if (item.isLink) {\r\n              if (isMail(item.text)) Linking.openURL(`mailto:${item.text}`)\r\n              else Linking.openURL(item.text)\r\n            } else if (item.isPhone) Linking.openURL(`tel:${item.text}`)\r\n          }}\r\n          style={[styles.optionText, item.isLink ? globalStyles.underlinedLink : {}]}\r\n        >\r\n          {item.linkName ? item.linkName : item.text}\r\n        </AppText>\r\n      </View>\r\n    )\r\n  }\r\n\r\n  const constructContentPresenterModal = (\r\n    headerText: string,\r\n    isOpen: boolean,\r\n    onCloseModal: () => void,\r\n    initialOptions: typeof rectorateModalItems,\r\n    displaySeparators = false\r\n  ) => {\r\n    return (\r\n      <OptionPickerModal\r\n        headerText={headerText}\r\n        isOpen={isOpen}\r\n        hasSearchBar={false}\r\n        displaySeparators={displaySeparators}\r\n        closeModal={onCloseModal}\r\n        initialOptions={initialOptions}\r\n        renderItem={constructModalItem}\r\n        isOptionSelectable={false}\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <View>\r\n        <Button title=\"Корпуси академії\" onPress={() => setCorpsModalIsOpen(true)} />\r\n        {constructContentPresenterModal(\r\n          \"Корпуси академії\",\r\n          corpsModalIsOpen,\r\n          () => setCorpsModalIsOpen(false),\r\n          corpsModalItems,\r\n          true\r\n        )}\r\n      </View>\r\n      <View>\r\n        <Button title=\"Ректорат\" onPress={() => setRectorateModalIsOpen(true)} />\r\n        {constructContentPresenterModal(\r\n          \"Ректорат\",\r\n          rectorateModalIsOpen,\r\n          () => setRectorateModalIsOpen(false),\r\n          rectorateModalItems\r\n        )}\r\n      </View>\r\n\r\n      <View>\r\n        <Button title=\"Підготовче відділення\" onPress={() => setPreparationDepartmentModalIsOpen(true)} />\r\n        {constructContentPresenterModal(\r\n          \"Підготовче відділення\",\r\n          preparationDepartmentModalIsOpen,\r\n          () => setPreparationDepartmentModalIsOpen(false),\r\n          preparationDepartmentModalItems\r\n        )}\r\n      </View>\r\n      <View>\r\n        {/* push Faculties Screen on top of stack */}\r\n        <Button title=\"Факультети академії\" onPress={() => navigation.push(ContactsStackRoutes.FACULTIES)} />\r\n      </View>\r\n\r\n      <View>\r\n        <Button\r\n          title=\"Відділ міжнародних звʼязків та інформаційного забезпечення\"\r\n          onPress={() => setInternationalAffairsAndInformationDepartmentModalIsOpen(true)}\r\n        />\r\n        {constructContentPresenterModal(\r\n          \"Відділ міжнародних звʼязків та інформаційного забезпечення\",\r\n          internationalAffairsAndInformationDepartmentModalIsOpen,\r\n          () => setInternationalAffairsAndInformationDepartmentModalIsOpen(false),\r\n          internationalAffairsAndInformationDepartmentModalItems\r\n        )}\r\n      </View>\r\n      <View>\r\n        <Button title=\"Приймальна комісія\" onPress={() => setAdmissionCommitteeModalIsOpen(true)} />\r\n        {constructContentPresenterModal(\r\n          \"Приймальна комісія\",\r\n          admissionCommitteeModalIsOpen,\r\n          () => setAdmissionCommitteeModalIsOpen(false),\r\n          admissionsCommitteeModalItems\r\n        )}\r\n      </View>\r\n\r\n      <View>\r\n        <Button title=\"Студентська рада\" onPress={() => setStudentCouncilModalIsOpen(true)} />\r\n        {constructContentPresenterModal(\r\n          \"Студентська рада\",\r\n          studentCouncilModalIsOpen,\r\n          () => setStudentCouncilModalIsOpen(false),\r\n          studentCouncilModalItems\r\n        )}\r\n      </View>\r\n\r\n      <View>\r\n        <Button title=\"Соц. мережі академії\" onPress={() => setSocialMediaModalIsOpen(true)} />\r\n        {constructContentPresenterModal(\r\n          \"Соц. мережі академії\",\r\n          socialMediaModalIsOpen,\r\n          () => setSocialMediaModalIsOpen(false),\r\n          socialMediaModalItems\r\n        )}\r\n      </View>\r\n    </SafeAreaView>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    margin: 20,\r\n    justifyContent: \"space-around\",\r\n  },\r\n  optionText: {\r\n    marginLeft: 10,\r\n    fontSize: 16,\r\n  },\r\n})\r\n","import * as React from \"react\"\r\n\r\nimport { createStackNavigator } from \"@react-navigation/stack\"\r\nimport FacultiesTestScreen from \"../screens/TestTabsScreens/FacultiesTestScreen\"\r\nimport ContactsModalTestScreen from \"../screens/TestTabsScreens/ContactsModalsTestScreen\"\r\nimport { View } from \"react-native\"\r\nimport { ContactsStackRoutes } from \"./ContactsStackRoutes\"\r\nimport StackHeader from \"../components/StackHeader\"\r\n\r\nconst Stack = createStackNavigator()\r\n\r\nexport default function ContactsTestStack() {\r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={\r\n        {\r\n          // headerShown: false,\r\n        }\r\n      }\r\n    >\r\n      <Stack.Screen\r\n        name={ContactsStackRoutes.CONTACTS_MENU}\r\n        component={ContactsModalTestScreen}\r\n        options={{\r\n          header: () => <View />,\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name={ContactsStackRoutes.FACULTIES}\r\n        component={FacultiesTestScreen}\r\n        options={{\r\n          header: (props) => <StackHeader title={\"Факультети академії\"} />,\r\n        }}\r\n      />\r\n    </Stack.Navigator>\r\n  )\r\n}\r\n","import * as React from \"react\"\r\nimport { PixelRatio, Text, View, useWindowDimensions } from \"react-native\"\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\"\r\nimport { Ionicons } from \"@expo/vector-icons\"\r\nimport NotificationTestsScreen from \"../screens/TestTabsScreens/NotificationTests\"\r\nimport ScheduledNotificationsScreen from \"../screens/TestTabsScreens/ScheduledNotificationsScreen\"\r\nimport InroductoryCarouselScreen from \"../screens/IntroductoryCarousel/IntroductoryCarousel\"\r\nimport FileSystemScreen from \"../screens/TestTabsScreens/FileSystemScreen\"\r\nimport TestEditorStack from \"./testEditorStack\"\r\nimport ContactsTestStack from \"./ContactsTestStack\"\r\n\r\nfunction DeviceInfoScreen() {\r\n  const { height, width } = useWindowDimensions()\r\n  const aspectRatio = height / width\r\n  let pixelRatio = PixelRatio.get()\r\n  let dpi = 160 * pixelRatio\r\n\r\n  return (\r\n    <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\r\n      <Text>Інформація про пристрій</Text>\r\n      <Text>Ширина вікна: {width}</Text>\r\n      <Text>Висота вікна: {height}</Text>\r\n      <Text>Pixel ratio: {pixelRatio}</Text>\r\n      <Text>Aspect ratio: {aspectRatio}</Text>\r\n      <Text>DPI: {dpi}</Text>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst Tab = createBottomTabNavigator()\r\n\r\nexport default function TestTabs() {\r\n  return (\r\n    <Tab.Navigator\r\n      screenOptions={{\r\n        headerShown: false,\r\n        tabBarStyle: {\r\n          // display: \"none\",\r\n        },\r\n      }}\r\n      initialRouteName=\"Модальні вікна\"\r\n    >\r\n      <Tab.Screen\r\n        name=\"Заплановані Сповіщення\"\r\n        component={ScheduledNotificationsScreen}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => <Ionicons name=\"notifications-circle\" color={color} size={size} />,\r\n        }}\r\n      />\r\n\r\n      <Tab.Screen\r\n        name=\"Сповіщення\"\r\n        component={NotificationTestsScreen}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => <Ionicons name=\"notifications\" color={color} size={size} />,\r\n        }}\r\n      />\r\n\r\n      <Tab.Screen\r\n        name=\"Вступне Вікно\"\r\n        component={InroductoryCarouselScreen}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => <Ionicons name=\"enter\" color={color} size={size} />,\r\n        }}\r\n      />\r\n\r\n      <Tab.Screen\r\n        name=\"Файлова Система\"\r\n        component={FileSystemScreen}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => <Ionicons name=\"folder\" color={color} size={size} />,\r\n        }}\r\n      />\r\n\r\n      <Tab.Screen\r\n        name=\"Редактор\"\r\n        component={TestEditorStack}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => <Ionicons name=\"options\" color={color} size={size} />,\r\n        }}\r\n      />\r\n\r\n      <Tab.Screen\r\n        name=\"Модальні вікна\"\r\n        component={ContactsTestStack}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => <Ionicons name=\"md-file-tray-stacked\" color={color} size={size} />,\r\n        }}\r\n      />\r\n\r\n      <Tab.Screen\r\n        name=\"Інше\"\r\n        component={DeviceInfoScreen}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => <Ionicons name=\"ellipsis-horizontal\" color={color} size={size} />,\r\n        }}\r\n      />\r\n    </Tab.Navigator>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { StyleSheet, View, Text, ActivityIndicator } from \"react-native\"\r\nimport FontAwesomeIcon from \"react-native-vector-icons/FontAwesome\"\r\nimport EntypoIcon from \"react-native-vector-icons/Entypo\"\r\nimport { ScrollView } from \"react-native\"\r\nimport CustomSwitch from \"../components/shared/Switch\"\r\nimport SettingsService from \"../services/SettingsService/SettingsService\"\r\nimport { DisplayEmptyDaysMode, DisplayTeacherMode } from \"../services/SettingsService/Types\"\r\nimport { globalStyles, palette } from \"../styles/global\"\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport OptionPickerModal from \"../components/OptionPickerModal\"\r\nimport ScheduleNotificationsService from \"../services/ScheduleNotificationsService\"\r\nimport ScheduleModel from \"../models/ScheduleModel\"\r\nimport ScheduleLoaderService from \"../services/ScheduleLoaderService/ScheduleLoaderService\"\r\nimport { ensureExtension, ensureNoExtension, isRunningInBrowser } from \"../utilities/utilities\"\r\nimport AppText from \"../components/shared/AppText\"\r\nimport { Ionicons } from \"@expo/vector-icons\"\r\nimport { FontName } from \"../constants/Fonts\"\r\n\r\n// TODO: Fix settings page visually spazzing out on mount\r\n// it's not the switches\r\n// it's not the effect that saves updated settings to disk\r\n// it's not notification events updating state\r\n// it's not other setters\r\n// this is something that only happens when the main content is rendered\r\n// removing activity indicator as alternative layout breaks settings service integration and makes schedule picker fail to load options\r\n// hell. Let's start with simply refactoring the layout into components\r\n\r\nexport default function Settings() {\r\n  let [schedulePickerData, setSchedulePickerData] = useState<string[]>([])\r\n\r\n  const settingsServiceRef = React.useRef<SettingsService | null>(null)\r\n\r\n  // Note: Update place 0\r\n  let [settingsValues, setSettingsValues] = useState({\r\n    selectedSchedule: \"\",\r\n    displayRoomNumber: false,\r\n    notifyBeforeClass: false,\r\n    displayEmptyDays: \"...\",\r\n    displayTeacherName: \"...\",\r\n    notifyBeforeClassOffsetMinutes: 0,\r\n  })\r\n\r\n  let [schedulePickerModalVisible, setSchedulePickerModalVisible] = useState(false)\r\n  let [schedulePickerModalDisabled, setSchedulePickerModalDisabled] = useState(false)\r\n\r\n  let [emptyDayDisplayModalVisible, setEmptyDayDisplayModalVisible] = useState(false)\r\n\r\n  let [displayTeacherModeModalVisible, setDisplayTeacherModeModalVisible] = useState(false)\r\n  let [notifyBeforehandModalVisible, setNotifyBeforehandModalVisible] = useState(false)\r\n\r\n  const [isReady, setIsReady] = useState(false)\r\n\r\n  useEffect(() => {\r\n    async function onMount() {\r\n      const settingsService = await SettingsService.GetInstance()\r\n      settingsServiceRef.current = settingsService\r\n\r\n      // Note: Update place 1\r\n\r\n      let {\r\n        currentScheduleName,\r\n        displayRoomNumber,\r\n        notifyBeforeClass,\r\n        displayEmptyDays,\r\n        displayTeacherName,\r\n        notifyBeforeClassOffsetMinutes,\r\n      } = settingsServiceRef.current\r\n\r\n      setSettingsValues({\r\n        selectedSchedule: ensureNoExtension(currentScheduleName, \".json\"),\r\n        displayRoomNumber,\r\n        notifyBeforeClass,\r\n        displayEmptyDays,\r\n        displayTeacherName,\r\n        notifyBeforeClassOffsetMinutes,\r\n      })\r\n\r\n      console.log(\"[settings screen init] settingsService.currentSchedule:\", settingsService.currentScheduleName)\r\n\r\n      // disable schedule picker modal when notifications are being configured\r\n      const notifService = await ScheduleNotificationsService.GetInstance()\r\n\r\n      notifService.onConfigureNotificationsForScheduleStart = () => {\r\n        setSchedulePickerModalDisabled(true)\r\n        // ToastAndroid.show(\"Configuring notifications...\", ToastAndroid.SHORT)\r\n      }\r\n      notifService.onConfigureNotificationsForScheduleEnd = () => {\r\n        setSchedulePickerModalDisabled(false)\r\n\r\n        // ToastAndroid.show(\"Notifications have been configured\", ToastAndroid.SHORT)\r\n      }\r\n\r\n      let scheduleLodaderInstance = await ScheduleLoaderService.GetInstance()\r\n\r\n      let schedulePickerData = scheduleLodaderInstance.scheduleFiles.map((f) => ensureNoExtension(f.filename, \".json\"))\r\n      setSchedulePickerData(schedulePickerData)\r\n\r\n      setIsReady(true)\r\n    }\r\n    onMount()\r\n  }, [])\r\n\r\n  // write settings to disk on each update to make sure they aren't lost\r\n  useEffect(() => {\r\n    if (!isReady) return\r\n\r\n    // Note: Update place 2\r\n    let {\r\n      selectedSchedule,\r\n      displayRoomNumber,\r\n      notifyBeforeClass,\r\n      displayEmptyDays,\r\n      displayTeacherName,\r\n      notifyBeforeClassOffsetMinutes,\r\n    } = settingsValues\r\n\r\n    // TODO: Refactor this\r\n    let settingsService = settingsServiceRef.current!\r\n    settingsService.currentScheduleName = ensureExtension(selectedSchedule, \".json\")\r\n    settingsService.displayRoomNumber = displayRoomNumber\r\n    settingsService.notifyBeforeClass = notifyBeforeClass\r\n    settingsService.displayEmptyDays = displayEmptyDays as DisplayEmptyDaysMode\r\n    settingsService.displayTeacherName = displayTeacherName as DisplayTeacherMode\r\n    settingsService.notifyBeforeClassOffsetMinutes = notifyBeforeClassOffsetMinutes\r\n\r\n    settingsService.saveToStorage()\r\n  }, [settingsValues])\r\n  async function toggleNotifs(enable: boolean) {\r\n    let scheduleNotifService = await ScheduleNotificationsService.GetInstance()\r\n    if (enable) {\r\n      // TODO: Refactor. Find a way to reference currently selected schedule in ScheduleScreen\r\n      let schedule = new ScheduleModel(\"foo\", \"bar\", 99)\r\n      schedule.getScheduleFromScheduleLoader(settingsServiceRef.current!.currentScheduleName)\r\n      scheduleNotifService.configureNotificationsForSchedule(schedule)\r\n    } else {\r\n      await scheduleNotifService.cancelAllScheduledNotificationsAsync()\r\n    }\r\n  }\r\n\r\n  function constructCategoryHeader(categoryName: string, categoryIcon: JSX.Element) {\r\n    return (\r\n      <View style={styles.categoryHeader}>\r\n        {categoryIcon}\r\n        <AppText style={styles.settingsSectionName}>{categoryName}</AppText>\r\n      </View>\r\n    )\r\n  }\r\n\r\n  function constructSettingsRow(settingDescription: string, changeSettingComponent: JSX.Element) {\r\n    return (\r\n      <View style={styles.settingRow}>\r\n        <AppText style={styles.settingName}>{settingDescription}</AppText>\r\n        {changeSettingComponent}\r\n      </View>\r\n    )\r\n  }\r\n\r\n  if (!isReady) {\r\n    return (\r\n      <View\r\n        style={[\r\n          { flex: 1, justifyContent: \"center\", alignItems: \"center\" },\r\n          styles.loadingIndicatorOverlay,\r\n          isReady ? globalStyles.noDisplay : {},\r\n        ]}\r\n      >\r\n        <ActivityIndicator size=\"large\" color={palette.navigationBackground} />\r\n      </View>\r\n    )\r\n  }\r\n\r\n  // setTimeout(() => {\r\n  //   setIsReady(true)\r\n  // }, 500)\r\n\r\n  let notificationsSection = !isRunningInBrowser() ? (\r\n    <View>\r\n      {constructCategoryHeader(\r\n        \"Сповіщення\",\r\n        <FontAwesomeIcon name=\"bell-o\" style={styles.settingsSectionIcon}></FontAwesomeIcon>\r\n      )}\r\n\r\n      <View style={styles.settingsCategory}>\r\n        {constructSettingsRow(\r\n          \"Нагадувати про початок пари\",\r\n          <CustomSwitch\r\n            onValueChange={(nv) => {\r\n              setSettingsValues({\r\n                ...settingsValues,\r\n                notifyBeforeClass: nv,\r\n              })\r\n\r\n              toggleNotifs(nv)\r\n            }}\r\n            initVal={settingsValues.notifyBeforeClass}\r\n            disabled={false}\r\n          />\r\n        )}\r\n        <View style={styles.separator}></View>\r\n\r\n        {constructSettingsRow(\r\n          \"Сповіщати заздалегідь\",\r\n          <View>\r\n            <TouchableOpacity onPress={() => setNotifyBeforehandModalVisible(true)}>\r\n              <View style={styles.settingValueContainer}>\r\n                <AppText style={styles.settingValue}>{settingsValues.notifyBeforeClassOffsetMinutes + \" хв.\"}</AppText>\r\n                <EntypoIcon name=\"chevron-small-right\" style={styles.grayIcon}></EntypoIcon>\r\n              </View>\r\n            </TouchableOpacity>\r\n\r\n            <OptionPickerModal\r\n              hasSearchBar={false}\r\n              isOpen={notifyBeforehandModalVisible}\r\n              initialOptions={[0, 5, 10, 15, 20].map((n) => n + \" хв.\")}\r\n              initialSelectedOption={settingsValues.notifyBeforeClassOffsetMinutes + \" хв.\"}\r\n              closeModal={() => setNotifyBeforehandModalVisible(false)}\r\n              onSelected={(selected) => {\r\n                let selectedInt = parseInt(selected)\r\n                setSettingsValues({\r\n                  ...settingsValues,\r\n                  notifyBeforeClassOffsetMinutes: selectedInt,\r\n                })\r\n\r\n                toggleNotifs(settingsValues.notifyBeforeClass)\r\n              }}\r\n            />\r\n          </View>\r\n        )}\r\n\r\n        <View style={styles.separator}></View>\r\n\r\n        {constructSettingsRow(\r\n          \"Звук, місце появи сповіщення та ін.\",\r\n          <View style={[styles.settingValueContainer, { marginRight: 3 }]}>\r\n            {/* TODO: Unhardcode margin right */}\r\n\r\n            <TouchableOpacity onPress={settingsServiceRef.current?.openAndroidSystemSettingsForNotifications}>\r\n              <Ionicons name=\"open\" size={14} color={palette.navigationBackground} />\r\n            </TouchableOpacity>\r\n          </View>\r\n        )}\r\n      </View>\r\n    </View>\r\n  ) : null\r\n\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <ScrollView style={styles.scrollViewDirect} contentContainerStyle={styles.scrollViewContentContainer}>\r\n        <View style={styles.pageBackground}>\r\n          {notificationsSection}\r\n\r\n          {constructCategoryHeader(\r\n            \"Розклад\",\r\n            <FontAwesomeIcon name=\"calendar-o\" style={styles.settingsSectionIcon}></FontAwesomeIcon>\r\n          )}\r\n          <View style={styles.settingsCategory}>\r\n            <View>\r\n              <View>\r\n                <View style={styles.settingRow}>\r\n                  <AppText style={styles.settingName}>Мій розклад</AppText>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => {\r\n                      console.log(\"selected schedule before toggling modal:\", settingsValues.selectedSchedule)\r\n                      setSchedulePickerModalVisible(true)\r\n                    }}\r\n                    disabled={schedulePickerModalDisabled}\r\n                    style={styles.centeredTextAndIcon}\r\n                  >\r\n                    {/* TODO: Remove hardcoded margins. Those were set to make activity indicator and actual content to have same size */}\r\n\r\n                    {schedulePickerModalDisabled ? (\r\n                      <ActivityIndicator\r\n                        style={{ marginRight: 10, marginVertical: 3.5 }}\r\n                        size=\"small\"\r\n                        color={palette.navigationBackground}\r\n                      />\r\n                    ) : (\r\n                      <View\r\n                        style={{\r\n                          flexDirection: \"row\",\r\n                          alignItems: \"center\",\r\n                        }}\r\n                      >\r\n                        <AppText style={styles.settingValue}>\r\n                          {ensureNoExtension(settingsValues.selectedSchedule, \".json\")}\r\n                        </AppText>\r\n                        <EntypoIcon name=\"chevron-small-right\" style={styles.grayIcon}></EntypoIcon>\r\n                      </View>\r\n                    )}\r\n\r\n                    {/* TODO: remove the temp fix. The issue is that I don't know why updated prop doesn't rerender the modal */}\r\n                    {settingsValues.selectedSchedule != \"\" ? (\r\n                      <OptionPickerModal\r\n                        headerText=\"Вибери свою групу\"\r\n                        isOpen={schedulePickerModalVisible}\r\n                        initialOptions={schedulePickerData}\r\n                        initialSelectedOption={settingsValues.selectedSchedule}\r\n                        closeModal={() => setSchedulePickerModalVisible(false)}\r\n                        onSelected={(selected) => {\r\n                          setSettingsValues({\r\n                            ...settingsValues,\r\n                            selectedSchedule: ensureExtension(selected, \".json\"),\r\n                          })\r\n                        }}\r\n                      />\r\n                    ) : (\r\n                      <View style={globalStyles.noDisplay} />\r\n                    )}\r\n                  </TouchableOpacity>\r\n                </View>\r\n\r\n                <View style={styles.separator} />\r\n\r\n                {constructSettingsRow(\r\n                  \"Відображати номер аудиторії\",\r\n                  <CustomSwitch\r\n                    initVal={settingsValues.displayRoomNumber}\r\n                    onValueChange={(nv) => {\r\n                      setSettingsValues({\r\n                        ...settingsValues,\r\n                        displayRoomNumber: nv,\r\n                      })\r\n                    }}\r\n                  />\r\n                )}\r\n\r\n                <View style={styles.separator} />\r\n\r\n                {constructSettingsRow(\r\n                  \"Відображати викладача\",\r\n                  <View>\r\n                    <TouchableOpacity\r\n                      onPress={() => setDisplayTeacherModeModalVisible(true)}\r\n                      style={styles.centeredTextAndIcon}\r\n                    >\r\n                      <AppText style={styles.settingValue}>{settingsValues.displayTeacherName}</AppText>\r\n                      <EntypoIcon name=\"chevron-small-right\" style={styles.grayIcon}></EntypoIcon>\r\n                    </TouchableOpacity>\r\n                    <OptionPickerModal\r\n                      hasSearchBar={false}\r\n                      isOpen={displayTeacherModeModalVisible}\r\n                      initialOptions={[\r\n                        DisplayTeacherMode.Full,\r\n                        DisplayTeacherMode.SurnameAndInitials,\r\n                        DisplayTeacherMode.Hide,\r\n                      ]}\r\n                      initialSelectedOption={settingsValues.displayTeacherName}\r\n                      closeModal={() => setDisplayTeacherModeModalVisible(false)}\r\n                      onSelected={(selected) => {\r\n                        setSettingsValues({\r\n                          ...settingsValues,\r\n                          displayTeacherName: selected,\r\n                        })\r\n                      }}\r\n                    />\r\n                  </View>\r\n                )}\r\n\r\n                <View style={styles.separator}></View>\r\n\r\n                {constructSettingsRow(\r\n                  \"Порожні дні\",\r\n                  <View>\r\n                    <TouchableOpacity\r\n                      onPress={() => setEmptyDayDisplayModalVisible(true)}\r\n                      style={styles.centeredTextAndIcon}\r\n                    >\r\n                      <AppText style={styles.settingValue}>{settingsValues.displayEmptyDays}</AppText>\r\n                      <EntypoIcon name=\"chevron-small-right\" style={styles.grayIcon}></EntypoIcon>\r\n                    </TouchableOpacity>\r\n                    <OptionPickerModal\r\n                      hasSearchBar={false}\r\n                      isOpen={emptyDayDisplayModalVisible}\r\n                      initialOptions={[\r\n                        DisplayEmptyDaysMode.Display,\r\n                        DisplayEmptyDaysMode.Darken,\r\n                        DisplayEmptyDaysMode.Hide,\r\n                      ]}\r\n                      initialSelectedOption={settingsValues.displayEmptyDays}\r\n                      closeModal={() => setEmptyDayDisplayModalVisible(false)}\r\n                      onSelected={(selected) => {\r\n                        setSettingsValues({\r\n                          ...settingsValues,\r\n                          displayEmptyDays: selected,\r\n                        })\r\n                      }}\r\n                    />\r\n                  </View>\r\n                )}\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </ScrollView>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport const styles = StyleSheet.create({\r\n  scrollViewContentContainer: {\r\n    // backgroundColor: \"green\",\r\n  },\r\n\r\n  loadingIndicatorOverlay: {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    backgroundColor: palette.background,\r\n\r\n    zIndex: 9999,\r\n  },\r\n\r\n  scrollViewDirect: {\r\n    ...globalStyles.screen,\r\n    paddingBottom: 24,\r\n  },\r\n\r\n  pageBackground: {\r\n    // minHeight: \"100%\",\r\n  },\r\n\r\n  settingValueContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  categoryHeader: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginTop: 24,\r\n    marginLeft: 24,\r\n  },\r\n  settingsSectionName: {\r\n    fontFamily: FontName.Raleway600,\r\n    color: \"rgba(90,90,90,1)\",\r\n    fontSize: 14,\r\n\r\n    marginLeft: 6,\r\n  },\r\n\r\n  settingsCategory: {\r\n    padding: 10,\r\n    paddingBottom: 5,\r\n    margin: 11,\r\n\r\n    backgroundColor: \"rgba(255,255,255,1)\",\r\n    borderRadius: 9,\r\n  },\r\n\r\n  separator: {\r\n    width: \"100%\",\r\n    height: 1,\r\n    borderWidth: 0,\r\n    borderTopWidth: 1,\r\n    borderColor: \"rgba(242,242,242,1)\",\r\n  },\r\n\r\n  centeredTextAndIcon: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  settingName: {\r\n    fontFamily: FontName.Raleway500,\r\n    color: \"rgba(82,82,82,1)\",\r\n    fontSize: 15,\r\n  },\r\n  settingValue: {\r\n    fontFamily: FontName.MontserratMedium,\r\n    color: \"rgba(136,136,136,1)\",\r\n    height: 17,\r\n    textAlign: \"right\",\r\n    fontSize: 12,\r\n  },\r\n  grayIcon: {\r\n    ...globalStyles.grayIcon,\r\n  },\r\n\r\n  settingsSectionIcon: {\r\n    color: \"rgba(90,90,90,1)\",\r\n    fontSize: 15,\r\n  },\r\n  settingRow: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n\r\n    marginVertical: 10,\r\n  },\r\n})\r\n","import React from \"react\"\r\nimport { View, Image, StyleSheet, TouchableOpacity, Linking } from \"react-native\"\r\nimport { globalStyles, palette } from \"../styles/global\"\r\nimport { teamMemberImages } from \"../constants/Images\"\r\nimport { images } from \"../constants/Images\"\r\nimport { FontAwesome5, Ionicons } from \"@expo/vector-icons\"\r\nimport AppText from \"../components/shared/AppText\"\r\nimport { ScrollView } from \"react-native-gesture-handler\"\r\nimport { useNavigation } from \"@react-navigation/native\"\r\nimport { DrawerRoutes } from \"../routes/DrawerRoutes\"\r\nimport { FontName } from \"../constants/Fonts\"\r\n\r\nexport default function AboutScreen() {\r\n  const appVersion = \"1.1.0\"\r\n  const navigation = useNavigation()\r\n\r\n  return (\r\n    <ScrollView style={globalStyles.screen}>\r\n      <View style={styles.card}>\r\n        <View style={[styles.row]}>\r\n          <AppText style={{ color: \"#333333\", letterSpacing: 0 }}>Перший в історії УАД</AppText>\r\n          {/* <SvgUri source={images.uad_logo_text} width=\"200\" height={\"200\"} /> */}\r\n          <Image\r\n            style={{\r\n              width: 73,\r\n              height: 34,\r\n              resizeMode: \"contain\",\r\n\r\n              // backgroundColor: \"red\",\r\n            }}\r\n            source={images.uad_logo_text_not_vector_hires}\r\n          />\r\n        </View>\r\n        <View style={[styles.row, { alignItems: \"flex-end\", marginTop: 45 }]}>\r\n          <AppText style={styles.header}>Інтерактивний {\"\\n\"}розклад</AppText>\r\n          <AppText\r\n            style={{\r\n              color: palette.textOnBackground,\r\n              fontStyle: \"italic\",\r\n              fontSize: 10,\r\n              letterSpacing: 0,\r\n            }}\r\n          >\r\n            і не тільки\r\n          </AppText>\r\n        </View>\r\n      </View>\r\n      <View style={[globalStyles.centered]}>\r\n        <View\r\n          style={[\r\n            styles.card,\r\n            globalStyles.centered,\r\n\r\n            {\r\n              flexDirection: \"row\",\r\n              // justifyContent: \"space-between\",\r\n              width: 110 * 2 + 20,\r\n            },\r\n          ]}\r\n        >\r\n          <TouchableOpacity\r\n            style={[\r\n              {\r\n                width: 110,\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            onPress={() => {\r\n              navigation.navigate(DrawerRoutes.VIEWER)\r\n            }}\r\n          >\r\n            <Ionicons name=\"calendar\" color={palette.textOnBackground} size={48} />\r\n            <AppText style={styles.tileText}>Розклад</AppText>\r\n          </TouchableOpacity>\r\n\r\n          <View\r\n            style={[\r\n              {\r\n                justifyContent: \"center\",\r\n                alignSelf: \"center\",\r\n              },\r\n            ]}\r\n          >\r\n            <Ionicons name=\"add-sharp\" color={palette.textOnBackground} size={32} />\r\n          </View>\r\n\r\n          <TouchableOpacity\r\n            style={[\r\n              {\r\n                alignItems: \"center\",\r\n                width: 110,\r\n              },\r\n            ]}\r\n            onPress={() => {\r\n              navigation.navigate(DrawerRoutes.EDITOR)\r\n            }}\r\n          >\r\n            <Ionicons name=\"options\" color={palette.textOnBackground} size={48} />\r\n            <AppText style={styles.tileText}>Редактор</AppText>\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            style={[styles.card, styles.tile]}\r\n            onPress={() => {\r\n              navigation.navigate(DrawerRoutes.REGLAMENT)\r\n            }}\r\n          >\r\n            <Ionicons name=\"time-sharp\" color={palette.textOnBackground} size={48} />\r\n            <AppText style={styles.tileText}>Регламент</AppText>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity\r\n            style={[styles.card, styles.tile]}\r\n            onPress={() => {\r\n              navigation.navigate(DrawerRoutes.TEACHERS)\r\n            }}\r\n          >\r\n            <FontAwesome5 name=\"user-graduate\" color={palette.textOnBackground} size={48} />\r\n            <AppText style={styles.tileText}>Викладачі</AppText>\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            style={[styles.card, styles.tile]}\r\n            onPress={() => {\r\n              navigation.navigate(DrawerRoutes.CONTACTS)\r\n            }}\r\n          >\r\n            <Ionicons name=\"call\" color={palette.textOnBackground} size={48} />\r\n            <AppText style={styles.tileText}>Контакти</AppText>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity\r\n            style={[styles.card, styles.tile]}\r\n            onPress={() => {\r\n              navigation.navigate(DrawerRoutes.NEWS)\r\n            }}\r\n          >\r\n            <Ionicons name=\"chatbox-ellipses\" color={palette.textOnBackground} size={48} />\r\n            <AppText style={styles.tileText}>Новини</AppText>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n\r\n      <View style={[styles.card]}>\r\n        <AppText style={[styles.teamSectionHeader]}>Команда проекту</AppText>\r\n        <View style={[styles.tilesContainer]}>\r\n          <View style={[styles.row]}>\r\n            <View style={[styles.teamMemberTile]}>\r\n              {/* image container */}\r\n              <View style={styles.teamMemberImageWrapper}>\r\n                <Image style={styles.teamMemberImage} source={teamMemberImages.senchyk_andrii} />\r\n              </View>\r\n              {/* team member description */}\r\n              <View style={styles.teamMemberDescription}>\r\n                <AppText style={[styles.teamMemberName, styles.regularLetterSpacing]}>Сенчик Андрій</AppText>\r\n                <AppText style={[styles.teamMemberDetails]}>Програмування{\"\\n\"}</AppText>\r\n              </View>\r\n            </View>\r\n\r\n            <View style={[styles.teamMemberTile]}>\r\n              {/* image container */}\r\n              <View style={styles.teamMemberImageWrapper}>\r\n                <Image style={styles.teamMemberImage} source={teamMemberImages.zakharova_zarina} />\r\n              </View>\r\n              {/* team member description */}\r\n              <View style={styles.teamMemberDescription}>\r\n                <AppText style={[styles.teamMemberName, styles.regularLetterSpacing]}>Захарова Заріна</AppText>\r\n                <AppText style={[styles.teamMemberDetails]}>\r\n                  Керування проектом{\"\\n\"}\r\n                  Дизайн\r\n                </AppText>\r\n              </View>\r\n            </View>\r\n          </View>\r\n          <View\r\n            style={[\r\n              styles.row,\r\n              {\r\n                marginTop: 40,\r\n              },\r\n            ]}\r\n          >\r\n            <View style={[styles.teamMemberTile]}>\r\n              {/* image container */}\r\n              <View style={styles.teamMemberImageWrapper}>\r\n                <Image style={styles.teamMemberImage} source={teamMemberImages.shepita_julia} />\r\n              </View>\r\n              {/* team member description */}\r\n              <View style={styles.teamMemberDescription}>\r\n                <AppText style={[styles.teamMemberName, styles.regularLetterSpacing]}>Шепіта Юлія</AppText>\r\n                <AppText style={[styles.teamMemberDetails]}>Робота з контентом</AppText>\r\n              </View>\r\n            </View>\r\n\r\n            <View style={[styles.teamMemberTile]}>\r\n              {/* image container */}\r\n              <View style={styles.teamMemberImageWrapper}>\r\n                <Image style={styles.teamMemberImage} source={teamMemberImages.ivanov_mykhailo} />\r\n              </View>\r\n              {/* team member description */}\r\n              <View style={styles.teamMemberDescription}>\r\n                <AppText style={[styles.teamMemberName, styles.regularLetterSpacing]}>Іванов Михайло</AppText>\r\n                <AppText style={[styles.teamMemberDetails]}>Тестування</AppText>\r\n              </View>\r\n            </View>\r\n          </View>\r\n          <View>\r\n            <AppText\r\n              style={{\r\n                fontFamily: FontName.Montserrat600,\r\n                fontSize: 16,\r\n                marginVertical: 10,\r\n                marginTop: 25,\r\n                alignSelf: \"center\",\r\n              }}\r\n            >\r\n              Бета-тестувальники\r\n            </AppText>\r\n\r\n            <AppText style={styles.testerName}>Іваськів Роман</AppText>\r\n            <AppText style={styles.testerName}>Беницький Степан</AppText>\r\n            <AppText style={styles.testerName}>Астафурова Наталя</AppText>\r\n            <AppText style={styles.testerName}>Цюпа Вікторія</AppText>\r\n            <AppText style={styles.testerName}>Ступак Марко</AppText>\r\n          </View>\r\n        </View>\r\n      </View>\r\n\r\n      <View style={[styles.card]}>\r\n        <AppText style={[styles.teamSectionHeader, { marginBottom: 10 }]}>Зворотній зв'язок</AppText>\r\n        <AppText style={[{ fontSize: 13, fontFamily: FontName.Montserrat600, marginBottom: 5 }]}>\r\n          Виникли запитання або ідеї як покращити наш застосунок? Напиши нам!\r\n        </AppText>\r\n        <View style={[globalStyles.centered, { flexDirection: \"row\" }]}>\r\n          <Ionicons name=\"mail\" color={palette.navigationBackground} size={19} style={{ marginRight: 5 }} />\r\n          <AppText\r\n            onPress={() => {\r\n              Linking.openURL(\"mailto:schedule.uad@gmail.com\")\r\n            }}\r\n            style={styles.contactsEmail}\r\n          >\r\n            schedule.uad@gmail.com\r\n          </AppText>\r\n        </View>\r\n      </View>\r\n\r\n      <View style={[styles.card]}>\r\n        <AppText style={[styles.teamSectionHeader, { marginBottom: 10 }]}>Розвиток проекту</AppText>\r\n        <AppText style={[{ fontSize: 13, fontFamily: FontName.Montserrat600, marginBottom: 5 }]}>\r\n          Якщо у тебе є досвід роботи з React Native та бажаєш розвивати проект, залишаємо посилання на код застосунку:\r\n        </AppText>\r\n        <View style={[globalStyles.centered, { flexDirection: \"row\", alignItems: \"center\" }]}>\r\n          <Ionicons name=\"logo-github\" color={palette.navigationBackground} size={22} style={{ marginRight: 5 }} />\r\n          <AppText\r\n            onPress={() => {\r\n              Linking.openURL(\"https://github.com/Seagullie/InteractiveScheduleUAD\")\r\n            }}\r\n            style={[styles.contactsEmail, { textDecorationLine: \"none\", marginBottom: 0 }]}\r\n          >\r\n            Репозиторій на GitHub\r\n          </AppText>\r\n        </View>\r\n      </View>\r\n\r\n      <View style={[styles.copyrightContainer]}>\r\n        <AppText style={[{ textAlign: \"center\", fontFamily: FontName.CenturyGothic }]}>\r\n          Авторські права 2023 © Українська Академія Друкарства. Усі права захищені\r\n        </AppText>\r\n      </View>\r\n\r\n      <View style={[styles.appVersionContainer]}>\r\n        <AppText style={[{ fontFamily: FontName.CenturyGothic, color: \"#5A5A5A\" }]}>{appVersion} </AppText>\r\n      </View>\r\n    </ScrollView>\r\n  )\r\n}\r\n\r\nconst teamMemberImageWidth = 110\r\n\r\nconst styles = StyleSheet.create({\r\n  header: {\r\n    fontSize: 26,\r\n    color: palette.navigationBackground,\r\n    fontFamily: FontName.CenturyGothic,\r\n  },\r\n\r\n  row: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n\r\n  tile: {\r\n    borderRadius: 18,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    alignSelf: \"flex-start\",\r\n\r\n    width: 110,\r\n\r\n    padding: 15,\r\n  },\r\n\r\n  tilesContainer: {\r\n    // width: \"100%\",\r\n  },\r\n\r\n  teamMemberTile: {\r\n    width: \"50%\",\r\n    ...globalStyles.centered,\r\n  },\r\n\r\n  teamSectionHeader: {\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    letterSpacing: 0,\r\n    marginBottom: 20,\r\n  },\r\n\r\n  teamMemberName: {\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n    color: palette.navigationBackground,\r\n  },\r\n\r\n  teamMemberDetails: {\r\n    letterSpacing: 0,\r\n    fontFamily: FontName.Raleway600,\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  regularLetterSpacing: {\r\n    letterSpacing: 0,\r\n  },\r\n\r\n  teamMemberDescription: {\r\n    marginTop: 15,\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  teamMemberImage: {\r\n    width: teamMemberImageWidth,\r\n    height: teamMemberImageWidth,\r\n    borderRadius: 999,\r\n    resizeMode: \"contain\",\r\n  },\r\n\r\n  teamMemberImageWrapper: {\r\n    backgroundColor: \"gray\",\r\n\r\n    borderRadius: 999,\r\n\r\n    elevation: 3,\r\n    shadowOffset: { width: 1, height: 1 },\r\n    shadowColor: \"#333\",\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 2,\r\n  },\r\n\r\n  tileText: {\r\n    fontFamily: FontName.CenturyGothic,\r\n    fontSize: 14,\r\n  },\r\n\r\n  testerName: {\r\n    fontFamily: FontName.Montserrat500,\r\n    fontSize: 13,\r\n    color: palette.navigationBackground,\r\n    alignSelf: \"center\",\r\n  },\r\n\r\n  card: {\r\n    // marginVertical: 5,\r\n    // marginHorizontal: 10,\r\n    padding: 15,\r\n    margin: 10,\r\n    // paddingVertical: 12,\r\n    borderRadius: 10,\r\n    backgroundColor: \"white\",\r\n\r\n    elevation: 1,\r\n    shadowOffset: { width: 1, height: 1 },\r\n    shadowColor: \"#333\",\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 2,\r\n  },\r\n\r\n  contactsEmail: {\r\n    color: palette.navigationBackground,\r\n    fontSize: 16,\r\n    fontFamily: FontName.CenturyGothic,\r\n    textAlign: \"center\",\r\n    textDecorationLine: \"underline\",\r\n    marginBottom: 3,\r\n  },\r\n\r\n  copyrightContainer: {\r\n    marginTop: 5,\r\n\r\n    backgroundColor: palette.background,\r\n    paddingHorizontal: 50,\r\n    paddingVertical: 7,\r\n  },\r\n\r\n  appVersionContainer: {\r\n    backgroundColor: \"white\",\r\n    alignItems: \"flex-end\",\r\n    paddingVertical: 2,\r\n    paddingRight: 5,\r\n  },\r\n})\r\n","import React from \"react\"\r\nimport { View, Text, StyleSheet } from \"react-native\"\r\nimport AppText from \"./shared/AppText\"\r\nimport { FontName } from \"../constants/Fonts\"\r\n\r\ninterface TableProps {\r\n  headers: string[]\r\n  data: string[][]\r\n  columnWidths: number | string[]\r\n}\r\n\r\nconst Table: React.FC<TableProps> = ({ headers, data, columnWidths }) => {\r\n  const colsN = data[0].length\r\n  const rowsN = data.length\r\n\r\n  return (\r\n    <View style={styles.table}>\r\n      <View style={styles.tableRow}>\r\n        {headers.map((header, index) => (\r\n          <View\r\n            key={index}\r\n            style={[\r\n              styles.tableHeaderCell,\r\n              { maxWidth: columnWidths[index], minWidth: columnWidths[index] },\r\n              index === colsN - 1 ? { borderRightWidth: 0 } : {},\r\n            ]}\r\n          >\r\n            <AppText>{header}</AppText>\r\n          </View>\r\n        ))}\r\n      </View>\r\n      {data.map((row, rowIndex) => (\r\n        <View key={rowIndex} style={styles.tableRow}>\r\n          {row.map((cell, cellIndex) => (\r\n            <View\r\n              key={cellIndex}\r\n              style={[\r\n                styles.tableCell,\r\n                {\r\n                  maxWidth: columnWidths[cellIndex],\r\n                  minWidth: columnWidths[cellIndex],\r\n                },\r\n                cellIndex === colsN - 1 ? { borderRightWidth: 0 } : {},\r\n              ]}\r\n            >\r\n              <AppText\r\n                style={{\r\n                  fontFamily: FontName.MontserratRegular,\r\n                }}\r\n              >\r\n                {cell}\r\n              </AppText>\r\n            </View>\r\n          ))}\r\n        </View>\r\n      ))}\r\n    </View>\r\n  )\r\n}\r\n\r\nconst tableBorderColor = \"#B9B9B9\"\r\nconst tableBorderWidth = 1\r\n\r\nconst sharedCellStyle = {\r\n  padding: 10,\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  textAlign: \"center\",\r\n  //   height: \"100%\",\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  table: {\r\n    borderWidth: tableBorderWidth,\r\n    // borderRightWidth: 2,\r\n    borderRadius: 7,\r\n    borderColor: tableBorderColor,\r\n    // margin: 10,\r\n\r\n    overflow: \"hidden\",\r\n  },\r\n  tableRow: {\r\n    flexDirection: \"row\",\r\n    borderColor: tableBorderColor,\r\n  },\r\n\r\n  tableHeaderCell: {\r\n    ...sharedCellStyle, // Include shared cell styles\r\n    // fontWeight: \"bold\",\r\n    fontFamily: FontName.MontserratMedium,\r\n    fontSize: 12,\r\n    borderRightWidth: tableBorderWidth,\r\n    borderColor: tableBorderColor,\r\n\r\n    backgroundColor: \"rgba(0,0,0,0.06)\",\r\n  },\r\n  tableCell: {\r\n    ...sharedCellStyle, // Include shared cell styles\r\n    borderWidth: 0,\r\n    borderTopWidth: tableBorderWidth,\r\n    borderRightWidth: tableBorderWidth,\r\n    borderColor: tableBorderColor,\r\n    // backgroundColor: \"orange\",\r\n  },\r\n})\r\n\r\nexport default Table\r\n","import { useState } from \"react\"\r\nimport { View, TouchableOpacity, StyleSheet } from \"react-native\"\r\nimport AppText from \"./shared/AppText\"\r\nimport { globalStyles, palette } from \"../styles/global\"\r\nimport { FontName } from \"../constants/Fonts\"\r\n\r\nexport default function UnfoldableCard({ title, bodyComponent }: { title: string; bodyComponent: JSX.Element }) {\r\n  let [isBodyRevealed, setIsBodyRevealed] = useState(false)\r\n\r\n  return (\r\n    <View style={{ marginBottom: 12 }}>\r\n      <View style={UCStyles.unfoldableCard}>\r\n        {/* title | question */}\r\n\r\n        <View style={[globalStyles.horizontalCenteredFlex]}>\r\n          <AppText style={{ fontFamily: FontName.RalewayMedium, fontSize: 15, flex: 1, lineHeight: 20 }}>\r\n            {title}\r\n          </AppText>\r\n\r\n          {/* reveal button */}\r\n          <TouchableOpacity onPress={() => setIsBodyRevealed(!isBodyRevealed)} style={UCStyles.revealButton}>\r\n            <AppText style={{ fontFamily: FontName.CenturyGothic, color: palette.textOnBackground, fontSize: 36 }}>\r\n              {!isBodyRevealed ? \"+\" : \"-\"}\r\n            </AppText>\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n        {/* answer */}\r\n\r\n        {isBodyRevealed ? bodyComponent : <></>}\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport const UCStyles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: palette.backgroundLight,\r\n    padding: 10,\r\n    paddingTop: 16,\r\n  },\r\n\r\n  unfoldableCard: {\r\n    ...globalStyles.card,\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 10,\r\n  },\r\n\r\n  unfoldableCardText: {\r\n    marginVertical: 15,\r\n    fontFamily: FontName.RalewayRegular,\r\n    fontSize: 14,\r\n    lineHeight: 1.3 * 14,\r\n  },\r\n\r\n  revealButton: {\r\n    ...globalStyles.navigationButton,\r\n    width: 30,\r\n    borderColor: \"transparent\", // TODO: create separate reveal button instead of transforming navigation button to desired shape\r\n    paddingVertical: 0,\r\n  },\r\n})\r\n","import { View, StyleSheet, TouchableOpacity, Linking } from \"react-native\"\r\nimport { globalStyles, palette } from \"../styles/global\"\r\nimport AppText from \"../components/shared/AppText\"\r\nimport { useState } from \"react\"\r\nimport Table from \"../components/Table\"\r\nimport { ScrollView } from \"react-native-gesture-handler\"\r\nimport UnfoldableCard, { UCStyles } from \"../components/UnfoldableCard\"\r\n\r\nexport default function QnAScreen() {\r\n  return (\r\n    <ScrollView style={UCStyles.container}>\r\n      <UnfoldableCard\r\n        bodyComponent={\r\n          <View style={{ marginTop: 15 }}>\r\n            <Table\r\n              headers={[\"Адреса корпусу УАД\", \"Позначення аудиторії в розкладі\"]}\r\n              data={[\r\n                [\"вул. Під Голоском 19\", \"а. ХХХ\"],\r\n                [\"вул. Підвальна 17\", \"a. Х або а. XX\"],\r\n                [\"вул. Личаківська 3\", \"Л. Х\"],\r\n                [\"вул. Коцюбинського 21\", \"К. Х\"],\r\n                [\"вул. Винниченка 12\", \"В. Х\"],\r\n              ]}\r\n              columnWidths={[\"50%\", \"50%\"]}\r\n            />\r\n\r\n            <AppText style={UCStyles.unfoldableCardText}>\r\n              де ХХХ – трицифровий номер аудиторії,{\"\\n\"}Х та ХХ – одно- та двоцифровий номери{\"\\n\"}а Л, К, В – перші\r\n              літери адрес корпусів\r\n            </AppText>\r\n          </View>\r\n        }\r\n        title={\"Як зрозуміти, в якому корпусі буде проходити пара?\"}\r\n      />\r\n\r\n      <UnfoldableCard\r\n        bodyComponent={\r\n          <AppText style={UCStyles.unfoldableCardText}>\r\n            Для швидкого скасування всіх змін, що ви внесли в редакторі, видаліть та повторно завантажте застосунок з\r\n            Google Play.\r\n          </AppText>\r\n        }\r\n        title={\"Як анулювати всі зміни, які я зробив у редакторі розкладу?\"}\r\n      />\r\n\r\n      <UnfoldableCard\r\n        bodyComponent={\r\n          <AppText style={UCStyles.unfoldableCardText}>\r\n            Спробуйте поміняти розклад на суміжній, наприклад: КСГ-33 на КСГ-33_2\r\n          </AppText>\r\n        }\r\n        title={\"Багато невідповідностей в розкладі, що робити?\"}\r\n      />\r\n\r\n      <UnfoldableCard\r\n        bodyComponent={\r\n          <AppText style={UCStyles.unfoldableCardText}>\r\n            🙀. Напишіть про це нам на\r\n            <AppText\r\n              onPress={() => {\r\n                Linking.openURL(\"mailto:schedule.uad@gmail.com\")\r\n              }}\r\n            >\r\n              {\" \"}\r\n              schedule.uad@gmail.com\r\n            </AppText>{\" \"}\r\n            . А доки ми це фіксим, можна скористатись редактором й вписати туди правильний ПІБ.\r\n          </AppText>\r\n        }\r\n        title={\"Я помітив, що в розкладі зазначений не той викладач.\"}\r\n      />\r\n\r\n      <UnfoldableCard\r\n        bodyComponent={\r\n          <AppText style={UCStyles.unfoldableCardText}>\r\n            Усі розклади беруться зі сайту Академії й автоматично перетворюються в формат, сумісний зі застосунком. Таке\r\n            перетворення не завжди проходить правильно 🫠... тож для цього (й не тільки) було створено редактор, де\r\n            розклад можна підправити.\r\n          </AppText>\r\n        }\r\n        title={\"Звідки беруться розклади?\"}\r\n      />\r\n\r\n      <UnfoldableCard\r\n        bodyComponent={\r\n          <AppText style={UCStyles.unfoldableCardText}>\r\n            Переконайтесь, що в налаштуваннях застосунку у вас: {\"\\n\"}- Увімкнений перемикач «нагадувати про початок\r\n            пари» {\"\\n\"}- Налаштований необхідний час, за який вас застосунок має заздалегідь сповіщати про початок\r\n            пари. {\"\\n\\n\"}\r\n            Якщо все так, проте сповіщення все одно не приходять, перевірте налаштування телефону, а саме чи наданий\r\n            дозвіл на сповіщення застосунку «Розклад УАД».{\"\\n\\n\"}\r\n            Якщо і ця порада вам не допомогла, напишіть нам на schedule.uad@gmail.com\r\n          </AppText>\r\n        }\r\n        title={\"Що робити, якщо мені не приходять сповіщення про початок пар?\"}\r\n      />\r\n\r\n      <UnfoldableCard\r\n        bodyComponent={\r\n          <AppText style={UCStyles.unfoldableCardText}>\r\n            Якщо коротко: ще не знаєм.{\"\\n\\n\"}Зі iOS версією маємо наступні складнощі: публікація в App Store коштує\r\n            $100 на рік й потребує незначної адаптації застосунку (потрібен окремий іOS розробник).{\"\\n\\n\"}\r\n            Альтернативою iOS версії є веб версія:{\" \"}\r\n            <AppText\r\n              onPress={() => {\r\n                Linking.openURL(\"https://schedule-uad.live\")\r\n              }}\r\n            >\r\n              {\" \"}\r\n              schedule-uad.live\r\n            </AppText>\r\n          </AppText>\r\n        }\r\n        title={\"Чи є/буде версія для iOS?\"}\r\n      />\r\n    </ScrollView>\r\n  )\r\n}\r\n","import { init, trackEvent } from \"@aptabase/web\"\r\nimport { AptabaseAppKey } from \"../../constants/Keys\"\r\n\r\ninit(AptabaseAppKey)\r\n\r\nexport class AnalyticsService {\r\n  static async trackEvent(eventName: string, props?: Record<string, string | number | boolean>) {\r\n    return trackEvent(eventName, props)\r\n  }\r\n}\r\n","import * as SplashScreen from \"expo-splash-screen\"\n// Keep the splash screen visible while we fetch resources\nSplashScreen.preventAutoHideAsync()\n\nimport \"react-native-gesture-handler\"\nimport { Text, View, StyleSheet } from \"react-native\"\nimport React, { useEffect, useState } from \"react\"\n\nimport { NavigationContainer } from \"@react-navigation/native\"\n\nimport { useFonts } from \"expo-font\"\nimport * as Font from \"expo-font\"\n\nimport { Drawer } from \"./routes/globalDrawer\"\nimport Header from \"./components/Header\"\n\nimport { ErrorBoundary, FallbackProps } from \"react-error-boundary\"\nimport { ScrollView } from \"react-native-gesture-handler\"\nimport DrawerMenu from \"./components/DrawerMenu\"\nimport { DrawerRoutes } from \"./routes/DrawerRoutes\"\n\n// screens\n\nimport ScheduleScreen from \"./screens/ScheduleScreen\"\nimport ReglamentScreen from \"./screens/ReglamentScreen\"\nimport TeachersScreen from \"./screens/TeachersScreen\"\nimport EditorStack from \"./routes/EditorStack\"\nimport ContactsStack from \"./routes/ContactsStack\"\nimport NewsScreen from \"./screens/NewsScreen\"\nimport TestTabs from \"./routes/testTabs\"\nimport SettingsScreen from \"./screens/SettingsScreen\"\nimport AboutScreen from \"./screens/AboutScreen\"\nimport { isLandscapeWeb, isRunningInBrowser } from \"./utilities/utilities\"\nimport { Entypo, FontAwesome, Ionicons, Octicons } from \"@expo/vector-icons\"\nimport QnAScreen from \"./screens/QnAScreen\"\n;(\"use client\")\n\nimport \"react-native-url-polyfill/auto\"\n\nimport { GetAllAppFonts } from \"./constants/Fonts\"\nimport { AnalyticsService } from \"./services/AnalyticsService/AnalyticsService\"\n\nfunction fallbackRender({ error, resetErrorBoundary }: FallbackProps) {\n  // Call resetErrorBoundary() to reset the error boundary and retry the render.\n\n  return (\n    <ScrollView>\n      <Text>Something went wrong:</Text>\n      <Text style={{ color: \"red\" }}>{JSON.stringify(error.message)}</Text>\n      <Text style={{ color: \"red\" }}>{JSON.stringify(error.stack)}</Text>\n    </ScrollView>\n  )\n}\n\nexport default function App() {\n  try {\n    const [appIsReady, setAppIsReady] = useState(false)\n    const [fontsLoaded] = useFonts(GetAllAppFonts())\n\n    // preload icons to prevent text flicker effect on navigating to another page\n    if (isRunningInBrowser()) {\n      Font.loadAsync(FontAwesome.font)\n      Font.loadAsync(Entypo.font)\n      Font.loadAsync(Ionicons.font)\n      Font.loadAsync(Octicons.font)\n    }\n\n    useEffect(() => {\n      if (fontsLoaded) {\n        SplashScreen.hideAsync().then(() => setAppIsReady(true))\n      }\n    }, [fontsLoaded])\n\n    if (!appIsReady) {\n      return null\n    }\n\n    AnalyticsService.trackEvent(\"app\", { event: \"app started\" })\n\n    const markdown = (\n      <ErrorBoundary fallbackRender={fallbackRender}>\n        <NavigationContainer>\n          <View style={styles.root}>\n            <Drawer.Navigator\n              screenOptions={{\n                header: (props) => <Header navigation={props.navigation} title={props.route.name} />,\n              }}\n              drawerContent={(props) => <DrawerMenu {...props} />}\n            >\n              <Drawer.Screen\n                name={DrawerRoutes.VIEWER}\n                component={ScheduleScreen}\n                options={{\n                  header: (props) => <View />,\n                }}\n              />\n\n              <Drawer.Screen name={DrawerRoutes.REGLAMENT} component={ReglamentScreen} />\n\n              <Drawer.Screen name={DrawerRoutes.TEACHERS} component={TeachersScreen} />\n\n              <Drawer.Screen name={DrawerRoutes.CONTACTS} component={ContactsStack} />\n\n              <Drawer.Screen name={DrawerRoutes.NEWS} component={NewsScreen} />\n\n              <Drawer.Screen name={DrawerRoutes.QnA} component={QnAScreen} />\n\n              <Drawer.Screen\n                name={DrawerRoutes.EDITOR}\n                options={{\n                  header: (props) => <View />,\n                }}\n                component={EditorStack}\n              />\n\n              <Drawer.Screen\n                name={DrawerRoutes.TESTS}\n                component={TestTabs}\n                options={{\n                  header: (props) => <View />,\n                }}\n              />\n\n              <Drawer.Screen name={DrawerRoutes.SETTINGS} component={SettingsScreen} />\n\n              <Drawer.Screen name={DrawerRoutes.ABOUT} component={AboutScreen} />\n            </Drawer.Navigator>\n          </View>\n        </NavigationContainer>\n      </ErrorBoundary>\n    )\n\n    return markdown\n  } catch (e) {\n    console.log(e)\n    return (\n      <ScrollView>\n        <Text>\n          Something went wrong. Something went wrong. Something went wrong. Something went wrong. Something went wrong.\n          Something went wrong.\n        </Text>\n        <Text>\n          Something went wrong. Something went wrong. Something went wrong. Something went wrong. Something went wrong.\n          Something went wrong.\n        </Text>\n        <Text>\n          Something went wrong. Something went wrong. Something went wrong. Something went wrong. Something went wrong.\n          Something went wrong.\n        </Text>\n        <Text>\n          {JSON.stringify(e.message, null, 4)}\n          {JSON.stringify(e.stack, null, 4)}\n        </Text>\n      </ScrollView>\n    )\n  }\n}\n\n// const drawerMenuWidthPx = 320\n\nconst landscapeWebStyles = StyleSheet.create({\n  root: {\n    width: \"50%\",\n    minWidth: \"50%\",\n    maxWidth: \"50%\",\n\n    maxHeight: \"100%\",\n\n    flexGrow: 1,\n    marginLeft: \"33%\", // free space divided by two and + drawerMenuWidthPx in % * 0.5\n    // TODO: unhardcode the percentage\n  },\n})\n\nconst nativeStyles = StyleSheet.create({\n  root: {\n    width: \"100%\",\n    flex: 1,\n  },\n})\n\nconst styles = isLandscapeWeb() ? landscapeWebStyles : nativeStyles\n","import { registerRootComponent } from \"expo\"\n\nimport App from \"./App\"\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App)\n","var map = {\n\t\"./af\": 94506,\n\t\"./af.js\": 94506,\n\t\"./ar\": 59687,\n\t\"./ar-dz\": 62887,\n\t\"./ar-dz.js\": 62887,\n\t\"./ar-kw\": 66307,\n\t\"./ar-kw.js\": 66307,\n\t\"./ar-ly\": 51664,\n\t\"./ar-ly.js\": 51664,\n\t\"./ar-ma\": 89926,\n\t\"./ar-ma.js\": 89926,\n\t\"./ar-sa\": 85207,\n\t\"./ar-sa.js\": 85207,\n\t\"./ar-tn\": 52912,\n\t\"./ar-tn.js\": 52912,\n\t\"./ar.js\": 59687,\n\t\"./az\": 5011,\n\t\"./az.js\": 5011,\n\t\"./be\": 25997,\n\t\"./be.js\": 25997,\n\t\"./bg\": 4427,\n\t\"./bg.js\": 4427,\n\t\"./bm\": 85385,\n\t\"./bm.js\": 85385,\n\t\"./bn\": 67703,\n\t\"./bn-bd\": 57002,\n\t\"./bn-bd.js\": 57002,\n\t\"./bn.js\": 67703,\n\t\"./bo\": 39841,\n\t\"./bo.js\": 39841,\n\t\"./br\": 45642,\n\t\"./br.js\": 45642,\n\t\"./bs\": 69038,\n\t\"./bs.js\": 69038,\n\t\"./ca\": 53512,\n\t\"./ca.js\": 53512,\n\t\"./cs\": 39497,\n\t\"./cs.js\": 39497,\n\t\"./cv\": 6479,\n\t\"./cv.js\": 6479,\n\t\"./cy\": 89318,\n\t\"./cy.js\": 89318,\n\t\"./da\": 97229,\n\t\"./da.js\": 97229,\n\t\"./de\": 63460,\n\t\"./de-at\": 51044,\n\t\"./de-at.js\": 51044,\n\t\"./de-ch\": 26445,\n\t\"./de-ch.js\": 26445,\n\t\"./de.js\": 63460,\n\t\"./dv\": 32096,\n\t\"./dv.js\": 32096,\n\t\"./el\": 16048,\n\t\"./el.js\": 16048,\n\t\"./en-au\": 74301,\n\t\"./en-au.js\": 74301,\n\t\"./en-ca\": 66855,\n\t\"./en-ca.js\": 66855,\n\t\"./en-gb\": 761,\n\t\"./en-gb.js\": 761,\n\t\"./en-ie\": 46127,\n\t\"./en-ie.js\": 46127,\n\t\"./en-il\": 49157,\n\t\"./en-il.js\": 49157,\n\t\"./en-in\": 37199,\n\t\"./en-in.js\": 37199,\n\t\"./en-nz\": 31511,\n\t\"./en-nz.js\": 31511,\n\t\"./en-sg\": 47309,\n\t\"./en-sg.js\": 47309,\n\t\"./eo\": 92160,\n\t\"./eo.js\": 92160,\n\t\"./es\": 68582,\n\t\"./es-do\": 71885,\n\t\"./es-do.js\": 71885,\n\t\"./es-mx\": 2553,\n\t\"./es-mx.js\": 2553,\n\t\"./es-us\": 16962,\n\t\"./es-us.js\": 16962,\n\t\"./es.js\": 68582,\n\t\"./et\": 98890,\n\t\"./et.js\": 98890,\n\t\"./eu\": 37704,\n\t\"./eu.js\": 37704,\n\t\"./fa\": 22562,\n\t\"./fa.js\": 22562,\n\t\"./fi\": 70877,\n\t\"./fi.js\": 70877,\n\t\"./fil\": 34246,\n\t\"./fil.js\": 34246,\n\t\"./fo\": 78341,\n\t\"./fo.js\": 78341,\n\t\"./fr\": 19867,\n\t\"./fr-ca\": 82347,\n\t\"./fr-ca.js\": 82347,\n\t\"./fr-ch\": 17683,\n\t\"./fr-ch.js\": 17683,\n\t\"./fr.js\": 19867,\n\t\"./fy\": 21982,\n\t\"./fy.js\": 21982,\n\t\"./ga\": 13905,\n\t\"./ga.js\": 13905,\n\t\"./gd\": 13443,\n\t\"./gd.js\": 13443,\n\t\"./gl\": 66905,\n\t\"./gl.js\": 66905,\n\t\"./gom-deva\": 91324,\n\t\"./gom-deva.js\": 91324,\n\t\"./gom-latn\": 41890,\n\t\"./gom-latn.js\": 41890,\n\t\"./gu\": 37134,\n\t\"./gu.js\": 37134,\n\t\"./he\": 96835,\n\t\"./he.js\": 96835,\n\t\"./hi\": 81394,\n\t\"./hi.js\": 81394,\n\t\"./hr\": 13564,\n\t\"./hr.js\": 13564,\n\t\"./hu\": 46269,\n\t\"./hu.js\": 46269,\n\t\"./hy-am\": 57269,\n\t\"./hy-am.js\": 57269,\n\t\"./id\": 44254,\n\t\"./id.js\": 44254,\n\t\"./is\": 8699,\n\t\"./is.js\": 8699,\n\t\"./it\": 28301,\n\t\"./it-ch\": 92887,\n\t\"./it-ch.js\": 92887,\n\t\"./it.js\": 28301,\n\t\"./ja\": 64642,\n\t\"./ja.js\": 64642,\n\t\"./jv\": 62168,\n\t\"./jv.js\": 62168,\n\t\"./ka\": 94501,\n\t\"./ka.js\": 94501,\n\t\"./kk\": 49537,\n\t\"./kk.js\": 49537,\n\t\"./km\": 45808,\n\t\"./km.js\": 45808,\n\t\"./kn\": 34881,\n\t\"./kn.js\": 34881,\n\t\"./ko\": 62951,\n\t\"./ko.js\": 62951,\n\t\"./ku\": 92452,\n\t\"./ku.js\": 92452,\n\t\"./ky\": 1853,\n\t\"./ky.js\": 1853,\n\t\"./lb\": 77639,\n\t\"./lb.js\": 77639,\n\t\"./lo\": 34502,\n\t\"./lo.js\": 34502,\n\t\"./lt\": 60874,\n\t\"./lt.js\": 60874,\n\t\"./lv\": 18237,\n\t\"./lv.js\": 18237,\n\t\"./me\": 87878,\n\t\"./me.js\": 87878,\n\t\"./mi\": 64234,\n\t\"./mi.js\": 64234,\n\t\"./mk\": 17535,\n\t\"./mk.js\": 17535,\n\t\"./ml\": 43896,\n\t\"./ml.js\": 43896,\n\t\"./mn\": 63046,\n\t\"./mn.js\": 63046,\n\t\"./mr\": 80927,\n\t\"./mr.js\": 80927,\n\t\"./ms\": 37224,\n\t\"./ms-my\": 66332,\n\t\"./ms-my.js\": 66332,\n\t\"./ms.js\": 37224,\n\t\"./mt\": 24866,\n\t\"./mt.js\": 24866,\n\t\"./my\": 24206,\n\t\"./my.js\": 24206,\n\t\"./nb\": 66723,\n\t\"./nb.js\": 66723,\n\t\"./ne\": 45097,\n\t\"./ne.js\": 45097,\n\t\"./nl\": 37529,\n\t\"./nl-be\": 1355,\n\t\"./nl-be.js\": 1355,\n\t\"./nl.js\": 37529,\n\t\"./nn\": 30296,\n\t\"./nn.js\": 30296,\n\t\"./oc-lnc\": 4802,\n\t\"./oc-lnc.js\": 4802,\n\t\"./pa-in\": 77057,\n\t\"./pa-in.js\": 77057,\n\t\"./pl\": 69850,\n\t\"./pl.js\": 69850,\n\t\"./pt\": 15552,\n\t\"./pt-br\": 83726,\n\t\"./pt-br.js\": 83726,\n\t\"./pt.js\": 15552,\n\t\"./ro\": 1717,\n\t\"./ro.js\": 1717,\n\t\"./ru\": 79117,\n\t\"./ru.js\": 79117,\n\t\"./sd\": 61742,\n\t\"./sd.js\": 61742,\n\t\"./se\": 92049,\n\t\"./se.js\": 92049,\n\t\"./si\": 83329,\n\t\"./si.js\": 83329,\n\t\"./sk\": 27619,\n\t\"./sk.js\": 27619,\n\t\"./sl\": 76707,\n\t\"./sl.js\": 76707,\n\t\"./sq\": 84281,\n\t\"./sq.js\": 84281,\n\t\"./sr\": 60436,\n\t\"./sr-cyrl\": 13408,\n\t\"./sr-cyrl.js\": 13408,\n\t\"./sr.js\": 60436,\n\t\"./ss\": 27500,\n\t\"./ss.js\": 27500,\n\t\"./sv\": 6950,\n\t\"./sv.js\": 6950,\n\t\"./sw\": 54222,\n\t\"./sw.js\": 54222,\n\t\"./ta\": 73746,\n\t\"./ta.js\": 73746,\n\t\"./te\": 1130,\n\t\"./te.js\": 1130,\n\t\"./tet\": 34740,\n\t\"./tet.js\": 34740,\n\t\"./tg\": 13378,\n\t\"./tg.js\": 13378,\n\t\"./th\": 20628,\n\t\"./th.js\": 20628,\n\t\"./tk\": 92622,\n\t\"./tk.js\": 92622,\n\t\"./tl-ph\": 30100,\n\t\"./tl-ph.js\": 30100,\n\t\"./tlh\": 22871,\n\t\"./tlh.js\": 22871,\n\t\"./tr\": 33600,\n\t\"./tr.js\": 33600,\n\t\"./tzl\": 18985,\n\t\"./tzl.js\": 18985,\n\t\"./tzm\": 3627,\n\t\"./tzm-latn\": 51145,\n\t\"./tzm-latn.js\": 51145,\n\t\"./tzm.js\": 3627,\n\t\"./ug-cn\": 4790,\n\t\"./ug-cn.js\": 4790,\n\t\"./uk\": 97712,\n\t\"./uk.js\": 97712,\n\t\"./ur\": 99529,\n\t\"./ur.js\": 99529,\n\t\"./uz\": 99141,\n\t\"./uz-latn\": 61737,\n\t\"./uz-latn.js\": 61737,\n\t\"./uz.js\": 99141,\n\t\"./vi\": 98205,\n\t\"./vi.js\": 98205,\n\t\"./x-pseudo\": 20697,\n\t\"./x-pseudo.js\": 20697,\n\t\"./yo\": 37826,\n\t\"./yo.js\": 37826,\n\t\"./zh-cn\": 83994,\n\t\"./zh-cn.js\": 83994,\n\t\"./zh-hk\": 36892,\n\t\"./zh-hk.js\": 36892,\n\t\"./zh-mo\": 43884,\n\t\"./zh-mo.js\": 43884,\n\t\"./zh-tw\": 85136,\n\t\"./zh-tw.js\": 85136\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [31], () => (__webpack_require__(64817)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["Drawer","createDrawerNavigator","REGLAMENT_DATA","NOTIFICATIONS_CHANNEL_ID","STORAGE_KEY","GetTimeDifference","earlier","later","momentA","moment","momentB","hourDifference","diff","minuteDifference","hours","minutes","seconds","determineInterval","timepoint","arguments","length","undefined","Date","interval","forEach","class_","value","start","hourAndMinuteStart","hourStart","split","minuteStart","hourAndMinuteEnd","hourEnd","minuteEnd","now","getFullYear","getMonth","getDate","parseInt","getContentfulClient","createClient","space","environment","accessToken","ensureExtension","filename","extension","endsWith","ensureNoExtension","slice","isMail","text","includes","isRunningInBrowser","Platform","OS","isLandscapeWeb","window","innerWidth","innerHeight","constants","platform","ios","interfaceOrientation","android","_ref","_asyncToGenerator","pathToJSONFile","fileName","filePath","FileSystem","documentDirectory","fileContents","readAsStringAsync","JSON","parse","e","FontName","palette","background","backgroundLight","textOnBackground","navigationBackground","numbers","grayedOut","grayishBlue","ongoingClass","globalStyles","StyleSheet","create","container","padding","scrollView","marginBottom","screen","flex","backgroundColor","centered","justifyContent","alignItems","fontFamily","CinzelRegular","fontSize","paragraph","marginVertical","lineHeight","sectionHeader","marginLeft","input","borderWidth","borderColor","borderRadius","errorText","color","fontWeight","marginTop","textAlign","navIcon","paddingHorizontal","paddingRight","separator","height","width","noDisplay","display","margin","zIndex","invisible","opacity","row","flexDirection","grayIcon","card","paddingVertical","elevation","shadowOffset","shadowColor","shadowOpacity","shadowRadius","link","underlinedLink","textDecorationLine","captionWithIcon","navigationButton","modalContentContainer","position","top","marginHorizontal","searchBar","Montserrat500","horizontalCenteredFlex","DrawerRoutes","_RouteIcons","_defineProperty","VIEWER","_jsx","Ionicons","name","size","REGLAMENT","TEACHERS","FontAwesome5","CONTACTS","NEWS","QnA","FontAwesome","TESTS","EDITOR","SETTINGS","ABOUT","getIcon","navigation","headerText","RouteIconConstructor","RouteIcons","type","RouteIcon","_objectSpread","props","style","MaterialIcons","onPress","openDrawer","BaseHeader","title","icon","_jsxs","View","styles","headerContentContainer","children","TouchableOpacity","Text","GlobalHeader","_ref2","headerContentElement","headerContent","SafeAreaView","header","CenturyGothic","previewImagesFull","require","schedule","reglamentPreview","editorPreview","settingsPreview","images","uad_logo_text","uad_logo_text_not_vector","uad_logo_text_not_vector_hires","teamMemberImages","senchyk_andrii","zakharova_zarina","shepita_julia","ivanov_mykhailo","editorImages","lightbulb","drawerMenuImages","uad_logo_white_outline","imageIcons","museum","tiktok","EXAMPLE_NEWS","body","createdAt","NewsLoaderService","_classCallCheck","_newsCached","_createClass","key","_init","apply","_getNewsFromContentful","this","news","fetchContentfulEntries","items","map","entry","fields","sys","sort","a","b","getTime","_fetchContentfulEntries","client","getEntries","content_type","_getNewestArticleDate","getNewsFromContentful","_GetInstance","instance","init","YellowCircle","_ref$filled","filled","alignSelf","shouldDisplayYellowCircle","DrawerMenu","routeNameToIconRef","useRef","useNavigation","routesContainer","useNavigationState","state","routes","isRunningInExpoGo_","executionEnvironment","ExecutionEnvironment","StoreClient","breakpoint","topRoutes","bottomRoutes","_","route","currentRoute","index","RouteButton","routeName","isCurrentRoute","isNewsRoute","yellowCircle","screenName","AsyncStorage","setItem","toString","navigate","pageLinkContainer","activePageLink","current","pageLink","drawerContainer","drawerContainerHeader","Image","marginRight","source","drawerContainerBottom","ActivityIndicator","GetInstance","then","newestArticleDate","getNewestArticleDate","lastSeenArticle","getItem","lastSeenArticleDate","_x","paddingTop","paddingBottom","borderBottomColor","borderBottomWidth","WeekType","SEMESTER_START","SEMESTER_START_TYPE","Denominator","GetWeekType","timeDifferenceInDays","Math","trunc","Nominator","getStrict","array","Error","workDays","workDaysEn","workDaysEnLower","day","toLowerCase","CLASS_TYPE","CLASS_TYPE_SHORT","_CLASS_TYPE_SHORT","LECTURE","PRACTICE","LAB","ScheduleClass","data","_data$isBiweekly","_data$classType","weekName","isBiweekly","teacher","room","isSharedClass","classType","setWeek","week","getDay","isInCurrentTimeSlot","isMatchingWeekType","sampleName","sampleRoom","sampleTeacher","TeacherModel","teachers","teachersJson","teachersFuse","Fuse","keys","threshold","surname","match","search","item","getTeacherBySurname","teacherFullNameBits","patronymic","DisplayEmptyDaysMode","DisplayTeacherMode","SettingsContext","React","AppText","android_hyphenationFrequency","appText","ScheduleText","MontserratMedium","letterSpacing","WeekTypeContext","formatRoomName","scheduleClassInstance","unfoldClassText","join","replace","formatTeacherName","isEditable","settings","teacherTable","teacherSurname","getFullNameBySurname","sn","getSurnameAndInitialsBySurname","displayTeacherNameMode","Full","displayTeacherName","SurnameAndInitials","ScheduleClassComponent","idx","displayRoomNumber","_ref$isEditable","_ref$highlightAsOngoi","highlightAsOngoing","_React$useState","_React$useState2","_slicedToArray","setState","isCurrentClassRef","isCurrent","_React$useState3","_React$useState4","setUnfoldClassText","_React$useState5","_React$useState6","unfoldTeacherText","setUnfoldTeacherText","_useWindowDimensions","useWindowDimensions","useContext","selectedWeekType","_useState","useState","_useState2","isOngoingClass","setIsOngoingClass","className","shouldDisplayTeacher","Hide","_useState3","_useState4","isReady","setIsReady","useEffect","rerenderInterval","setInterval","isCurrentClass","clearInterval","reglamentClass","classStart","classEnd","classContainer","testID","startAndEndTimesContainer","classStartText","classEndText","classAndTeacherBlock","onLongPress","Clipboard","setStringAsync","ToastAndroid","show","SHORT","classNameText","flexGrow","ellipsizeMode","numberOfLines","teacherNameText","classTypeAndRoomNumberContainer","roomNumberContainer","roomNumberText","MontserratRegular","flexBasis","Separator","upperElement","lowerElement","_ref$width","localStyles","UnderlayRightSide","onDeleteButtonPress","close","useSwipeableItemParams","underlayLeft","EditedSchedulesStorageService","_this","results","ScheduleLoaderService","scheduleFiles","scheduleFile","isOutdated","removeEditedSchedule","Promise","all","_createVersionForEdits","saveEditedSchedule","_x2","_saveEditedSchedule","scheduleLoader","jsonToDump","metadata","getScheduleFileMetadata","getScheduleFileByFileName","scheduleDays","stringify","_x3","_loadEditedSchedule","scheduleFileName","scheduleWithMetadata","_x4","_isOutdated","contentfulScheduleFile","editVer","loadEditedSchedule","editVerMetadata","contentfulVerMetadata","_x5","scheduleName","removeItem","_hasEditedVersion","_x6","_ScheduleLoaderServic","_inherits","_super","_createSuper","getSchedulesFromContentful","replaceContentfulSchedulesWithEditedVersions","sf","_replaceContentfulSchedulesWithEditedVersions","editedSchedulesStorage","editedCounterpartsPromises","editedSchedule","json_parsed","editedCounterparts","_dumpSchedule","editedScheduleStorage","resolve","ScheduleLoaderServiceBase","pathToScheduleFolder","getInfoAsync","exists","getSchedulesFromFileSystem","checkForUpdatesAsync","getExampleSchedules","makeDirectoryAsync","intermediates","_getSchedulesFromFileSystem","allScheduleFileNames","readDirectoryAsync","file","json","revision","updatedAt","_getSchedulesFromContentful","_this2","assets","getAssets","limit","scheduleClassesJson","linkToFile","url","linkToDestFile","res","fetch","blob","downloadAsync","writeAsStringAsync","ExampleScheduleKN","ExampleScheduleIST","ExampleScheduleTE","find","_checkForUpdatesAsync","_this3","netInfo","NetInfo","isConnected","isInternetReachable","scheduleFileMetadatas","_ref3","updatedScheduleFiles","_ref4","sfm","oldSchedule","LocalNotificationsService","exampleNotificationContent","subtitle","someData","notificationChannelId","identifier","Notifications","handleNotification","_handleNotification","shouldShowAlert","priority","MAX","shouldPlaySound","shouldSetBadge","registerNotificationsChannel","checkPermissionsAsync","granted","_registerNotificationsChannel","importance","vibrationPattern","lightColor","lockscreenVisibility","PUBLIC","_sendNotification","content","message","trigger","channelId","catch","_scheduleNotification","nextTriggerDate","date","_sendExampleNotification","sendNotification","_scheduleExampleNotificationViaDate","secondsFromNow","scheduleNotification","_scheduleRepeatableExampleNotification","repeats","_scheduleRepeatableDailyExampleNotification","hour","minute","Event","SettingsService","displayEmptyDays","Display","currentScheduleName","notifyBeforeClass","notifyBeforeClassOffsetMinutes","displayEmptyRows","SettingsEventEmitter","EventEmitter","fetchedSettings","readFromStorage","Object","entries","settingsObject","_saveToStorage","constructSettingsObjectFromProperties","jsonValue","emit","SETTINGS_UPDATED","_readFromStorage","_openAndroidSystemSettingsForNotifications","pkg","Constants","expoConfig","package","IntentLauncher","startActivityAsync","extra","ClassNotificationBuilder","notificationsService","negativeOffsetInMins","teachersTable","signature","getUniqueStringSignature","hourAndMinute","scheduleDay","monthDay","notificationDate","distance","setDate","setDayOnDate","dayNames","indexOf","twoWeeksInSeconds","offset","sequenceSize","spacingInSeconds","sequence","next","push","createEvenlySpacedTimeSequence","SEMESTER_MONTHS","notifDate","teacherName","hourPadded","minutePadded","weekday","ScheduleNotificationsService","_LocalNotificationsSe","_len","args","Array","_key","call","concat","onConfigureNotificationsForScheduleStart","onConfigureNotificationsForScheduleEnd","_configureNotificationsForSchedule","_this$onConfigureNoti","_this$onConfigureNoti2","settingsService","cancelAllScheduledNotificationsAsync","configureDays","configureDayClasses","classes","notifBuilder","weeklyNotif","constructWeeklyNotification","notifications","constructBiweeklyNotificationsSequence","notif","EditorStackRoutes","NoClassesText","ScheduleDayComponent","classesCollection","scheduleObject","dayName","_ref$weekType","weekType","fade","SDstyles","scheduleDayCard","dayNameHeader","configureNotificationsCallback","useCallback","updatedSchedule","configureNotificationsForSchedule","setClasses","dayNameEnRef","d","mapUkrWorkDayToEnWorkDay","saveEditedClasses","classesWithoutPlaceholders","filter","isSampleClass","thisDay","biweeklyClassesOfOtherWeek","_toConsumableArray","dumpSchedule","addPlaceholders","extendedContainer","GetPlaceholder","placeholderClasses","sortedClasses","ListComponent","DraggableFlatList","FlatList","Darken","fadedDayContainerView","keyExtractor","onDragEnd","ListEmptyComponent","noClassesText","scrollEnabled","nestedScrollEnabled","ItemSeparatorComponent","renderItem","drag","isActive","scheduleClassComponent","noTeacherText","editableScheduleClassWrapper","SwipeableItem","renderUnderlayLeft","filteredClasses","filteredClassesWithPlaceholders","onDeleteButtonPressed","snapPointsLeft","snapPointsRight","activationThreshold","SCHEDULE_CLASS_FORM","scheduleClass","currentlyViewedWeek","onFormDataUpdated","values","updatedClasses","t","trim","r","Montserrat600","ScheduleDay","currentWeekType","otherWeek","matchingClass","ScheduleModel","specialtyName","year","weekendDays","dayClasses","objectName","_getScheduleFromScheduleLoader","startsWith","setSchedule","_getScheduleFromEditedSchedulesStorage","editedScheduleService","dayIndex","todayClasses","currentClass","OptionPickerModal","_ref$hasSearchBar","hasSearchBar","_ref$headerText","_ref$isOpen","isOpen","_ref$displaySeparator","displaySeparators","initialOptions","initialSelectedOption","closeModalCallback","closeModal","onSelected","optionIcon","_ref$isOptionSelectab","isOptionSelectable","options","searchQuery","setSearchQuery","filteredOptions","option","selectedOption","setSelectedOption","Modal","animationType","transparent","modal","visible","overlay","horizontalFlex","searchBarContainer","TextInput","onChangeText","placeholder","ScrollView","Pressable","checkIcon","closeButton","closeButtonText","left","MontserratBold","right","page","pageTitle","imageContainer","overflow","previewImage","objectFit","objectPosition","centeredDescriptionText","pageDescriptionText","documentHeight","swiperWidth","InroductoryCarouselScreen","onClose","currentPage","setCurrentPage","swiperRef","setIsVisible","_useState5","_useState6","schedulePickerModalVisible","setSchedulePickerModalVisible","_useState7","_useState8","schedulePickerData","setSchedulePickerData","f","slideTo","paginationCircles","lastPageIndex","i","circle","circleActive","Swiper","initialSlide","onSwiper","swiper","onSlideChange","activeIndex","SwiperSlide","src","pagerNavigation","accessibilityLabel","selected","saveToStorage","newCurrentPage","backButton","setStatusBarHidden","carouselContainer","viewPager","pageBody","maxHeight","halfImageContainer","forwardButton","ScheduleHeader","onWeekTypeChanged","navigation_","setWeekType","weekTypeInUkrainian","useRoute","scheduleHeaderStyles","weekTextContainer","selectedContainer","weekTypeText","selectedText","baseStyles","backroundImage","sideMenuIcon","currentlyViewedDay","EditActionsExplanatoryCard","paddingLeft","DateOverviewCard","currentDayString","toLocaleDateString","currentDayDate","month","currentWorkWeekInterval","currentDate","currentDayOfWeek","currentMonth","currentYear","mondayDate","fridayDate","upperRowText","lowerRowText","verticalSeparator","ScheduleScreen","closeDrawer","todayIndex","isFirstTimeLaunch","setIsFirstTimeLaunch","scheduleRef","scheduleFileRef","settingsServiceRef","scrollViewContainerRef","scheduleLoaded","setScheduleLoaded","setScheduleName","_useState9","_useState10","dataSourceCords","setDataSourceCords","scheduleNameRef","onSettingsUpdated","_$cloneDeep","newSchedule","getScheduleFromScheduleLoader","notifService","_onMount","scheduleLoaderInstance","firstScheduleFile","nameOfScheduleToLoad","on","isFirstimeLaunch","onMount","removeListener","LONG","useFocusEffect","currentScheduleFile","_$cloneDeep2","IntroductoryCarousel","Provider","rootContainer","contentContainerStyle","ref","isEmpty","getNominatorClasses","getDenominatorClasses","shouldDisplayEmptyDay","cardContainer","onLayout","event","layout","nativeEvent","y","scrolledToToday","scrollTo","x","animated","showSeparator","animating","modalToggle","modalClose","modalContent","placeholderView","scheduleDaySelector","ReglamentScreen","reglamentContainer","ReglamentClass","classData","getReglamentClass","currentTimeInterval","wasCurrent","reglamentClassContainer","reglamentClassIndex","timeDataCard","timePointText","timePointDate","head","borderRightWidth","headText","TeachersScreen","filteredTeachers","userSelect","teacherCard","teacherDataText","selectable","Кваліфікаця","Linking","openURL","StackHeader","_ref$useSafeAreaView","useSafeAreaView","_ref$hasBackground","hasBackground","_ref$captionStyles","captionStyles","ViewComponent","headerTitle","goBack","CustomSwitch","onValueChange","_ref$initVal","initVal","_ref$disabled","disabled","otherProps","_objectWithoutProperties","_excluded","isEnabled","setIsEnabled","Switch","switch","trackColor","false","true","thumbColor","activeThumbColor","newValue","previousState","BlueCircle","RadioButtonGroup","onOptionSelected","_ref$selectedOptionIn","selectedOptionIndex","selectedIndex","setIndex","CheckBox","checked","checkedIcon","uncheckedIcon","optionTitle","containerStyle","checkboxContainer","AutoSubmitFormData","_useFormikContext","useFormikContext","initialValues","submitFormCallback","isSubmitting","submitForm","FormTextInput","formField","fieldCaption","captionText","cursorColor","textInputText","underline","noteText","ScheduleClassForm","_scheduleClass$teache","params","dayUkrIndex","findIndex","dayUkr","weekTypeUkr","initialFormikValues","Formik","onSubmit","handleChange","handleBlur","headerTextPrimary","headerTextSecondary","autoCapitalize","code_name","o","autocompleteContainer","ScheduleEditorScreen","Stack","createStackNavigator","EditorStack","Navigator","screenOptions","Screen","component","FacultiesTestScreen","renderFacultyCard","nameAbbreviation","nameFull","address","phone","mail","facultyCard","ContactsStackRoutes","corpsModalItems","corps","rectorateModalItems","isPhone","isLink","preparationDepartmentModalItems","internationalAffairsAndInformationDepartmentModalItems","admissionsCommitteeModalItems","accountingModalItems","contractEducationDepartmentModalItems","studentUnionModalItems","studentCouncilModalItems","linkName","socialMediaModalItems","Category","titleIcon","subcategories","category","categoryTitle","itemOnPress","ItemType","itemWithoutOnPress","subcategoryButtonContainer","EntypoIcon","constructModalItem","optionText","constructContentPresenterModal","onCloseModal","ContactsScreen","corpsModalIsOpen","setCorpsModalIsOpen","rectorateModalIsOpen","setRectorateModalIsOpen","admissionCommitteeModalIsOpen","setAdmissionCommitteeModalIsOpen","_React$useState7","_React$useState8","preparationDepartmentModalIsOpen","setPreparationDepartmentModalIsOpen","_React$useState9","_React$useState10","internationalAffairsAndInformationDepartmentModalIsOpen","setInternationalAffairsAndInformationDepartmentModalIsOpen","_React$useState11","_React$useState12","accountingModalIsOpen","setAccountingModalIsOpen","_React$useState13","_React$useState14","contractEducationModalIsOpen","setContractEducationModalIsOpen","_React$useState15","_React$useState16","studentUnionModalIsOpen","setStudentUnionModalIsOpen","_React$useState17","_React$useState18","studentCouncilModalIsOpen","setStudentCouncilModalIsOpen","_React$useState19","_React$useState20","socialMediaModalIsOpen","setSocialMediaModalIsOpen","subcategoryTitle","Octicons","navigateToSubcategoryButton","ContactsStack","CONTACTS_MENU","FACULTIES","NewsCard","dateObj","maxLength","isBodyExpanded","setIsBodyExpanded","newsArticleCard","moreButton","MontserratSemiBold","NewsScreen","setNews","fetchedNews","newsLoaderService","getExampleNews","Card","_ref$shadows","shadows","cardContentStyle","noShadow","cardContent","NotificationTestsScreen","ready","setReady","permission","setPermission","setScheduledNotifications","delayForExampleNotificationViaDate","setDelayForExampleNotificationViaDate","notification","setNotification","localNotificationsServiceRef","notificationListener","responseListener","requestConfigurePermissions","manifest","response","registeredNotifications","getAllScheduledNotificationsAsync","permissions","status","request","Button","sendExampleNotification","Input","keyboardType","defaultValue","scheduleExampleNotificationViaDate","scheduleRepeatableExampleNotification","scheduleRepeatableDailyExampleNotification","Expander","collapsed","setCollapsed","Collapsible","ScheduledNotificationsScreen","showRegularClasses","setShowRegularClasses","showBiweeklyClasses","setShowBiweeklyClasses","filterQuery","setFilterQuery","scheduledNotifications","filteredScheduledNotifications","n","toUTCString","sortedScheduledNotifications","minHeight","horizontal","onBlur","cancelScheduledNotificationAsync","ContentViewModal","modalChildren","FlatButton","button","FileSystemScreen","fileContentModalVisible","setFileContentModalVisible","selectedFileContent","setSelectedFileContent","currentDir","setCurrentDir","allFiles","setAllFiles","firstFieldText","setFirstFieldText","secondFieldText","setSecondFieldText","contentfulSchedule","setContentfulSchedule","contentfulScheduleAsAsset","setContentfulScheduleAsAsset","contentfulScheduleAsDownloadedAsset","setContentfulScheduleAsDownloadedAsset","_React$useState21","_React$useState22","allContentfulAssets","setAllContentfulAssets","saveToFile","path","initFields","_initFields","lines","getEntry","getAsset","asset","uri","assetNames","deleteAsync","isDirectory","ScheduleEditor","setSampleDay","currentRouteName","getId","firstScheduleFilename","isSlot","setData","random","dataElem","draggable","updatedClass","reorderable","TestEditorStack","ContactsModalTestScreen","ContactsTestStack","DeviceInfoScreen","aspectRatio","pixelRatio","PixelRatio","get","dpi","Tab","createBottomTabNavigator","TestTabs","headerShown","tabBarStyle","initialRouteName","tabBarIcon","_ref5","_ref6","_ref7","Settings","_settingsServiceRef$c2","selectedSchedule","settingsValues","setSettingsValues","schedulePickerModalDisabled","setSchedulePickerModalDisabled","emptyDayDisplayModalVisible","setEmptyDayDisplayModalVisible","_useState11","_useState12","displayTeacherModeModalVisible","setDisplayTeacherModeModalVisible","_useState13","_useState14","notifyBeforehandModalVisible","setNotifyBeforehandModalVisible","_useState15","_useState16","toggleNotifs","_toggleNotifs","enable","scheduleNotifService","constructCategoryHeader","categoryName","categoryIcon","categoryHeader","settingsSectionName","constructSettingsRow","settingDescription","changeSettingComponent","settingRow","settingName","_settingsServiceRef$c","loadingIndicatorOverlay","notificationsSection","FontAwesomeIcon","settingsSectionIcon","settingsCategory","nv","settingValueContainer","settingValue","selectedInt","openAndroidSystemSettingsForNotifications","scrollViewDirect","scrollViewContentContainer","pageBackground","centeredTextAndIcon","Raleway600","borderTopWidth","Raleway500","AboutScreen","resizeMode","fontStyle","tileText","tile","teamSectionHeader","tilesContainer","teamMemberTile","teamMemberImageWrapper","teamMemberImage","teamMemberDescription","teamMemberName","regularLetterSpacing","teamMemberDetails","testerName","contactsEmail","copyrightContainer","appVersionContainer","tableBorderColor","sharedCellStyle","table","tableRow","tableHeaderCell","tableCell","headers","columnWidths","colsN","maxWidth","minWidth","rowIndex","cell","cellIndex","UnfoldableCard","bodyComponent","isBodyRevealed","setIsBodyRevealed","UCStyles","unfoldableCard","RalewayMedium","revealButton","_Fragment","unfoldableCardText","RalewayRegular","QnAScreen","Table","AnalyticsService","_trackEvent2","eventName","trackEvent","fallbackRender","error","resetErrorBoundary","stack","SplashScreen","landscapeWebStyles","root","nativeStyles","registerRootComponent","appIsReady","setAppIsReady","_useFonts","useFonts","_FONTS","LatoRegular","LatoBold","CenturyGothicBold","CenturyGothicItalic","GetAllAppFonts","fontsLoaded","Font","loadAsync","font","Entypo","markdown","ErrorBoundary","NavigationContainer","Header","drawerContent","SettingsScreen","webpackContext","req","id","webpackContextResolve","__webpack_require__","code","module","exports","__webpack_module_cache__","moduleId","cachedModule","loaded","__webpack_modules__","m","deferred","O","result","chunkIds","fn","notFulfilled","Infinity","fulfilled","j","every","splice","getter","__esModule","leafPrototypes","getProto","getPrototypeOf","obj","mode","ns","def","getOwnPropertyNames","definition","defineProperty","enumerable","g","globalThis","Function","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}