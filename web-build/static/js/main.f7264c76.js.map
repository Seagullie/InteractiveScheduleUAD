{"version":3,"file":"static/js/main.f7264c76.js","mappings":"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","sources":["constants/Keys.ts","constants/Constants.ts","utilities/utilities.ts","constants/Fonts.ts","styles/global.ts","constants/Images.ts","routes/DrawerRoutes.ts","constants/ExampleData.ts","services/NewsLoaderService/NewsLoaderService.ts","constants/RouteIcons.tsx","components/YellowCircle.tsx","components/DrawerMenuComponent/Styles.ts","services/NewsLoaderService/Constants.ts","components/DrawerMenuComponent/DrawerMenu.tsx","routes/globalDrawer.ts","components/Header.tsx","utilities/getWeekType.ts","utilities/getStrict.ts","constants/Days.ts","models/ScheduleClass/Types.ts","models/ScheduleClass/ScheduleClass.ts","services/SettingsService/Types.ts","contexts/settingsContext.ts","components/shared/AppText.tsx","components/ScheduleComponents/ScheduleText.tsx","contexts/weekTypeContext.ts","components/ScheduleComponents/ScheduleClassComponent/Style.ts","models/TeacherModel/Constants.ts","models/TeacherModel/TeacherModel.ts","components/ScheduleComponents/ScheduleClassComponent/Formatters.ts","components/ScheduleComponents/ScheduleClassComponent/ScheduleClass.tsx","components/shared/Separator.tsx","components/ScheduleEditorComponents/ScheduleClassUnderlay.tsx","services/EditedScheduleStorageService/EditedScheduleStorageService.ts","services/ScheduleLoaderService/ScheduleLoaderService.ts","services/ScheduleLoaderService/ScheduleLoaderServiceBase.ts","services/LocalNotificationsService/LocalNotificationsService.ts","constants/Events.ts","services/SettingsService/SettingsService.ts","services/ClassNotificationBuilder.ts","services/ScheduleNotificationsService.ts","routes/EditorStackRoutes.ts","constants/Descriptions.ts","components/ScheduleComponents/ScheduleDayComponent/Styles.ts","components/ScheduleComponents/ScheduleDayComponent/ScheduleDay.tsx","models/ScheduleDay/ScheduleDay.ts","models/ScheduleModel/ScheduleModel.ts","components/OptionPickerModalComponent/Styles.ts","components/OptionPickerModalComponent/OptionPickerModal.tsx","screens/IntroductoryCarousel/Pages.tsx","screens/IntroductoryCarousel/IntroductoryCarouselWebStyles.ts","screens/IntroductoryCarousel/IntroductoryCarousel.tsx","components/ScheduleComponents/ScheduleHeaderComponent/Styles.ts","components/ScheduleComponents/ScheduleHeaderComponent/ScheduleHeader.tsx","components/ScheduleEditorComponents/EditActionsExplanatoryCard.tsx","components/ScheduleComponents/DateOverviewCard.tsx","screens/ScheduleScreen/Styles.ts","constants/AsyncStorageKeys.ts","screens/ScheduleScreen/ScheduleScreen.tsx","screens/ReglamentScreen/Styles.ts","screens/ReglamentScreen/ReglamentClassComponent.tsx","screens/ReglamentScreen/ReglamentScreen.tsx","screens/TeachersScreen.tsx","components/StackHeader.tsx","components/shared/Switch.tsx","components/shared/RadioButtonGroup.tsx","screens/TestTabsScreens/scheduleEditorStack/ScheduleClassForm.tsx","screens/ScheduleEditorScreen.tsx","routes/EditorStack.tsx","screens/TestTabsScreens/FacultiesTestScreen.tsx","routes/ContactsStackRoutes.ts","constants/Contacts.tsx","screens/ContactsScreen/Styles.ts","components/WarningBar.tsx","screens/ContactsScreen/ContactsScreen.tsx","routes/ContactsStack.tsx","screens/NewsScreen/Styles.ts","components/shared/ExtendedAutoLink.tsx","screens/NewsScreen/NewsCard.tsx","screens/NewsScreen/NewsScreen.tsx","components/shared/card.tsx","screens/TestTabsScreens/NotificationTests.tsx","components/shared/Expander.tsx","screens/TestTabsScreens/ScheduledNotificationsScreen.tsx","components/ContentViewModal.tsx","components/shared/Button.tsx","screens/TestTabsScreens/FileSystemScreen.tsx","screens/TestTabsScreens/ScheduleEditor.tsx","routes/testEditorStack.tsx","screens/TestTabsScreens/ContactsModalsTestScreen.tsx","routes/ContactsTestStack.tsx","routes/testTabs.tsx","screens/SettingsScreen/Styles.ts","screens/SettingsScreen/SettingsScreen.tsx","screens/AboutScreen.tsx","components/Table.tsx","components/UnfoldableCard.tsx","screens/QnAScreen.tsx","services/AnalyticsService/AnalyticsService.ts","components/shared/FailureView.tsx","styles/AppStyles.ts","App.tsx","index.ts","node_modules/moment/locale|sync|/^/.*$","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { CONTENTFUL_SPACE, CONTENTFUL_CONTENT_DELIVERY_ACCESS_TOKEN, APTABASE_APP_KEY } from \"@env\"\r\nimport Aptabase from \"@aptabase/react-native\"\r\n\r\nexport const ContentfulSpace = CONTENTFUL_SPACE\r\nexport const ContentfulContentDeliveryAccessToken = CONTENTFUL_CONTENT_DELIVERY_ACCESS_TOKEN\r\n\r\n// async-storage key udner which the app settings are stored. Can be whatever and is not confidential\r\nexport const STORAGE_KEY = \"@noid_schedule_app_settings103\"\r\n\r\nexport const AptabaseAppKey = APTABASE_APP_KEY\r\n","export type REGLAMENT_DATA_ELEM_TYPE = [number, string, string]\r\nexport type REGLAMENT_DATA_TYPE = REGLAMENT_DATA_ELEM_TYPE[]\r\n\r\n// export const REGLAMENT_DATA_OLD: REGLAMENT_DATA_TYPE = [\r\n//   [1, \"8:30\", \"10:05\", \"9:15 – 9:20\"],\r\n//   [2, \"10:15\", \"11:50\", \"11:00 – 11:05\"],\r\n//   [3, \"12:20\", \"13:55\", \"13:05 – 13:10\"],\r\n//   [4, \"14:05\", \"15:40\", \"14:50 – 14:55\"],\r\n//   [5, \"15:50\", \"17:25\", \"16:35 – 16:40\"],\r\n//   [6, \"17:35\", \"19:10\", \"18:20 – 18:25\"],\r\n// ]\r\n\r\nexport const REGLAMENT_DATA: REGLAMENT_DATA_TYPE = [\r\n  [1, \"08:30\", \"09:50\"],\r\n  [2, \"10:05\", \"11:25\"],\r\n  [3, \"11:40\", \"13:00\"],\r\n  [4, \"13:15\", \"14:35\"],\r\n  [5, \"14:50\", \"16:10\"],\r\n  [6, \"16:25\", \"17:45\"],\r\n  [7, \"18:00\", \"19:20\"],\r\n  [8, \"19:30\", \"20:50\"],\r\n]\r\n\r\nexport const suffixesForNumbers = {\r\n  1: \"-ша\",\r\n  2: \"-га\",\r\n  3: \"-тя\",\r\n  4: \"-та\",\r\n  5: \"-та\",\r\n  6: \"-та\",\r\n}\r\n\r\nexport const SEMESTER_MONTHS = 6\r\nexport const MAX_CLASSES_PER_DAY = 6\r\n\r\nexport const NOTIFICATIONS_CHANNEL_ID = \"interactive-schedule-notifications\"\r\n\r\nexport const WEB_VERSION_NAME = \"scheduleuad.live\"\r\nexport const LINK_TO_WEB_VERSION = `https://${WEB_VERSION_NAME}`\r\n","import moment from \"moment\"\r\n\r\nimport constants, { ExecutionEnvironment } from \"expo-constants\"\r\n\r\n// @ts-ignore\r\nimport contentful from \"contentful/dist/contentful.browser.min.js\"\r\n// @ts-ignore\r\nimport { createClient } from \"contentful/dist/contentful.browser.min.js\"\r\nimport { ContentfulClientApi } from \"contentful\"\r\nimport { Platform } from \"react-native\"\r\nimport * as FileSystem from \"expo-file-system\"\r\n\r\nimport { ContentfulContentDeliveryAccessToken, ContentfulSpace } from \"../constants/Keys\"\r\n\r\nimport { REGLAMENT_DATA_ELEM_TYPE, REGLAMENT_DATA } from \"../constants/Constants\"\r\n\r\nexport const GetTimeDifference = (earlier: Date, later: Date) => {\r\n  let momentA = moment(earlier)\r\n  let momentB = moment(later)\r\n  let hourDifference = momentB.diff(momentA, \"hours\") as number\r\n  let minuteDifference = momentB.diff(momentA, \"minutes\") - hourDifference * 60\r\n  let secondDifference = momentB.diff(momentA, \"seconds\") - hourDifference * 60 * 60 - minuteDifference * 60\r\n\r\n  return {\r\n    hours: hourDifference,\r\n    minutes: minuteDifference,\r\n    seconds: secondDifference,\r\n  }\r\n}\r\n\r\nexport function createEvenlySpacedTimeSequence(sequenceSize: number, spacingInSeconds: number, start: Date): Date[] {\r\n  const sequence = []\r\n  let next = start\r\n\r\n  let index = 0\r\n  while (index < sequenceSize) {\r\n    sequence.push(next)\r\n    next = new Date(next.getTime() + spacingInSeconds * 1000)\r\n\r\n    index += 1\r\n  }\r\n\r\n  return sequence\r\n}\r\n\r\nexport function setDayOnDate(date: Date, day: number): Date {\r\n  const currentDay = date.getDay()\r\n  const distance = day - currentDay\r\n  date.setDate(date.getDate() + distance)\r\n\r\n  return date\r\n}\r\n\r\nfunction isInRange(value: Date, start: Date, end: Date) {\r\n  return value <= end && value >= start\r\n}\r\n\r\n// get time slot of a timepoint\r\nexport function determineInterval(timepoint = new Date()): false | REGLAMENT_DATA_ELEM_TYPE {\r\n  let interval: false | REGLAMENT_DATA_ELEM_TYPE = false\r\n\r\n  REGLAMENT_DATA.forEach((class_) => {\r\n    let hourAndMinuteStart = class_[1]\r\n    let hourStart = hourAndMinuteStart.split(\":\")[0]\r\n    let minuteStart = hourAndMinuteStart.split(\":\")[1]\r\n\r\n    let hourAndMinuteEnd = class_[2]\r\n    let hourEnd = hourAndMinuteEnd.split(\":\")[0]\r\n    let minuteEnd = hourAndMinuteEnd.split(\":\")[1]\r\n\r\n    let now = new Date()\r\n    // TODO: annotate\r\n    let earlier = new Date(now.getFullYear(), now.getMonth(), now.getDate(), parseInt(hourStart), parseInt(minuteStart))\r\n    let later = new Date(now.getFullYear(), now.getMonth(), now.getDate(), parseInt(hourEnd), parseInt(minuteEnd))\r\n\r\n    if (isInRange(timepoint, earlier, later)) {\r\n      interval = class_\r\n    }\r\n  })\r\n\r\n  return interval\r\n}\r\n\r\nconsole.log(\"[utilities] current interval is \", determineInterval())\r\n\r\nexport function getContentfulClient() {\r\n  console.log(\"contentful module: \", contentful)\r\n  console.log(\"create contentful client: \", createClient)\r\n\r\n  const client: ContentfulClientApi = createClient({\r\n    space: ContentfulSpace,\r\n    environment: \"master\", // defaults to 'master' if not set\r\n    accessToken: ContentfulContentDeliveryAccessToken,\r\n  })\r\n\r\n  return client\r\n}\r\n\r\nexport function ensureExtension(filename: string, extension: string) {\r\n  if (filename.endsWith(extension)) return filename\r\n\r\n  return filename + extension\r\n}\r\n\r\nexport function ensureNoExtension(filename: string, extension: string) {\r\n  if (!filename.endsWith(extension)) return filename\r\n\r\n  return filename.slice(0, -extension.length)\r\n}\r\n\r\nexport function ensureEnding(text: string, ending: string) {\r\n  if (text.endsWith(ending)) return text\r\n\r\n  return text + ending\r\n}\r\n\r\nexport const isMail = (text: string) => {\r\n  return text.includes(\"@\") && !text.includes(\"http\")\r\n}\r\n\r\nexport function isRunningInExpoGo() {\r\n  const isRunningInExpo = constants.executionEnvironment == ExecutionEnvironment.StoreClient\r\n  return isRunningInExpo\r\n}\r\n\r\nexport function isRunningInBrowser() {\r\n  // const isRunningInBrowser = constants.executionEnvironment == ExecutionEnvironment.Bare\r\n\r\n  // debugger\r\n\r\n  const isRunningInBrowser = Platform.OS === \"web\"\r\n  return isRunningInBrowser\r\n}\r\n\r\nexport function isHorizontalOrientation() {\r\n  if (isRunningInBrowser()) {\r\n    return window.innerWidth > window.innerHeight\r\n  }\r\n\r\n  return (\r\n    constants.platform.ios.interfaceOrientation === \"landscape\" ||\r\n    constants.platform.android.interfaceOrientation === \"landscape\"\r\n  )\r\n}\r\n\r\nexport function isLandscapeWeb() {\r\n  return isRunningInBrowser() && isHorizontalOrientation()\r\n}\r\n\r\nexport const loadJSON = async (pathToJSONFile: string) => {\r\n  const fileName = pathToJSONFile // Replace with the name of your JSON file\r\n  const filePath =\r\n    Platform.OS === \"android\" ? FileSystem.documentDirectory + fileName : FileSystem.documentDirectory + \"/\" + fileName\r\n\r\n  try {\r\n    const fileContents = await FileSystem.readAsStringAsync(filePath)\r\n\r\n    const data = JSON.parse(fileContents)\r\n    return data\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nexport function truncateText(text: string, maxLength: number) {\r\n  if (text.length > maxLength) {\r\n    return text.slice(0, maxLength) + \"...\"\r\n  } else {\r\n    return text\r\n  }\r\n}\r\n","export enum FontName {\r\n  LatoRegular = \"lato-regular\",\r\n  LatoBold = \"lato-bold\",\r\n  CinzelRegular = \"cinzel-regular\",\r\n\r\n  MontserratRegular = \"montserrat-regular\",\r\n  MontserratMedium = \"montserrat-medium\",\r\n  MontserratSemiBold = \"montserrat-semibold\",\r\n\r\n  RalewayRegular = \"raleway-regular\",\r\n  RalewayMedium = \"raleway-medium\",\r\n\r\n  Montserrat500 = \"montserrat-500\",\r\n  Montserrat600 = \"montserrat-600\",\r\n\r\n  MontserratBold = \"montserrat-bold\",\r\n  Raleway500 = \"raleway-500\",\r\n  Raleway600 = \"raleway-600\",\r\n\r\n  CenturyGothic = \"century-gothic\",\r\n  CenturyGothicBold = \"century-gothic-bold\",\r\n  CenturyGothicItalic = \"century-gothic-italic\",\r\n}\r\n\r\nexport function GetAllAppFonts() {\r\n  //   const pathToFontsFolder = \"../assets/fonts/\"\r\n  //  path to fonts folder is hardcoded  because  require() doesn't work with interpolated strings\r\n\r\n  const FONTS = {\r\n    [FontName.LatoRegular]: require(\"../assets/fonts/Lato-Regular.ttf\"),\r\n    [FontName.LatoBold]: require(\"../assets/fonts/Lato-Bold.ttf\"),\r\n    [FontName.CinzelRegular]: require(\"../assets/fonts/CinzelDecorative-Regular.ttf\"),\r\n\r\n    [FontName.MontserratRegular]: require(\"../assets/fonts/Montserrat-Regular.ttf\"),\r\n    [FontName.MontserratMedium]: require(\"../assets/fonts/Montserrat-Medium.ttf\"),\r\n    [FontName.MontserratSemiBold]: require(\"../assets/fonts/Montserrat-SemiBold.ttf\"),\r\n\r\n    [FontName.RalewayRegular]: require(\"../assets/fonts/Raleway-Regular.ttf\"),\r\n    [FontName.RalewayMedium]: require(\"../assets/fonts/Raleway-Medium.ttf\"),\r\n    [FontName.Raleway500]: require(\"../assets/fonts/Raleway-Regular.ttf\"),\r\n    [FontName.Raleway600]: require(\"../assets/fonts/Raleway-Medium.ttf\"),\r\n\r\n    [FontName.Montserrat500]: require(\"../assets/fonts/Montserrat-Medium.ttf\"),\r\n    [FontName.Montserrat600]: require(\"../assets/fonts/Montserrat-SemiBold.ttf\"),\r\n    [FontName.MontserratBold]: require(\"../assets/fonts/Montserrat-Bold.ttf\"),\r\n\r\n    [FontName.CenturyGothic]: require(\"../assets/fonts/CenturyGothic.ttf\"),\r\n    [FontName.CenturyGothicBold]: require(\"../assets/fonts/GOTHICB.ttf\"),\r\n    [FontName.CenturyGothicItalic]: require(\"../assets/fonts/GOTHICI.ttf\"),\r\n  }\r\n\r\n  return FONTS\r\n}\r\n","import { StyleSheet } from \"react-native\"\r\nimport { isLandscapeWeb } from \"../utilities/utilities\"\r\nimport { FontName } from \"../constants/Fonts\"\r\n\r\nexport const palette = {\r\n  background: \"#E6E6E6\",\r\n  backgroundLight: \"#F5F5F5\",\r\n  textOnBackground: \"#5A5A5A\",\r\n  navigationBackground: \"#1C5D8F\",\r\n  text: \"#525252\",\r\n  numbers: \"#888888\",\r\n  grayedOut: \"#888888\",\r\n  grayishBlue: \"#4A6172\",\r\n  ongoingClass: \"rgb(227, 239, 249)\",\r\n}\r\n\r\nexport const globalStyles = StyleSheet.create({\r\n  container: {\r\n    padding: 20,\r\n  },\r\n\r\n  scrollView: {\r\n    marginBottom: 80, // to make sure last item is visible.\r\n    // there is other way to do that: via flex\r\n  },\r\n\r\n  screen: {\r\n    flex: 1,\r\n    // backgroundColor: \"#E6E6E6\",\r\n    backgroundColor: palette.backgroundLight,\r\n    padding: 0, // I don't know what's a sensible value for this. Will figure out later\r\n  },\r\n\r\n  centered: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  text: {\r\n    fontFamily: FontName.CinzelRegular,\r\n    fontSize: 18,\r\n  },\r\n\r\n  paragraph: {\r\n    marginVertical: 8,\r\n    lineHeight: 20,\r\n  },\r\n\r\n  sectionHeader: {\r\n    marginLeft: 24,\r\n  },\r\n\r\n  input: {\r\n    borderWidth: 1,\r\n    borderColor: \"#ddd\",\r\n    padding: 10,\r\n    fontSize: 18,\r\n    borderRadius: 6,\r\n    marginBottom: 10,\r\n  },\r\n\r\n  errorText: {\r\n    color: \"crimson\",\r\n    fontWeight: \"bold\",\r\n    marginBottom: 10,\r\n    marginTop: 6,\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  navIcon: {\r\n    color: \"white\",\r\n    paddingHorizontal: 16,\r\n    paddingRight: 10,\r\n  },\r\n\r\n  separator: {\r\n    height: 1, // haha\r\n    width: \"100%\",\r\n    backgroundColor: \"#E6E6E6\",\r\n  },\r\n\r\n  noDisplay: {\r\n    display: \"none\",\r\n    margin: 0,\r\n    padding: 0,\r\n    width: 0,\r\n    height: 0,\r\n    zIndex: -1,\r\n  },\r\n\r\n  invisible: {\r\n    opacity: 0,\r\n  },\r\n\r\n  row: {\r\n    flexDirection: \"row\",\r\n  },\r\n\r\n  grayIcon: {\r\n    color: \"rgba(136,136,136,1)\",\r\n    fontSize: 26,\r\n  },\r\n\r\n  card: {\r\n    borderRadius: 6,\r\n    backgroundColor: \"white\",\r\n\r\n    paddingVertical: 2,\r\n    paddingHorizontal: 5,\r\n\r\n    elevation: 1,\r\n    shadowOffset: { width: 1, height: 1 },\r\n    shadowColor: \"#333\",\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 2,\r\n  },\r\n\r\n  link: {\r\n    color: palette.navigationBackground,\r\n  },\r\n\r\n  underlinedLink: {\r\n    color: palette.navigationBackground,\r\n    textDecorationLine: \"underline\",\r\n  },\r\n\r\n  captionWithIcon: {\r\n    marginLeft: -3,\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  navigationButton: {\r\n    borderColor: palette.navigationBackground,\r\n    borderWidth: 1,\r\n    borderRadius: 10,\r\n\r\n    // paddingHorizontal: 15,\r\n    paddingVertical: 5,\r\n    width: 75,\r\n\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  modalContentContainer: {\r\n    position: \"absolute\",\r\n    top: \"10%\",\r\n\r\n    margin: 30,\r\n    marginHorizontal: isLandscapeWeb() ? \"35%\" : \"2%\", // 27 + 8 for sidebar\r\n    padding: 20,\r\n    borderRadius: 10,\r\n    backgroundColor: \"white\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: isLandscapeWeb() ? \"45%\" : \"95%\",\r\n  },\r\n\r\n  searchBar: {\r\n    fontSize: 12,\r\n    flex: 1,\r\n    fontFamily: FontName.Montserrat500,\r\n    paddingVertical: 2,\r\n  },\r\n\r\n  horizontalCenteredFlex: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n})\r\n","export const previewImages = {\r\n  schedule: require(\"../assets/images/previews/schedule-preview.png\"),\r\n  scheduleCropped: require(\"../assets/images/previews/schedule-view-cropped-preview-3.png\"),\r\n  reglamentPreview: require(\"../assets/images/previews/reglament-preview.png\"),\r\n  settingsPreview: require(\"../assets/images/previews/settings-preview.png\"),\r\n  editorPreview: require(\"../assets/images/previews/editor-preview.png\"),\r\n}\r\n\r\nexport const previewImagesFull = {\r\n  schedule: require(\"../assets/images/previews/previews-full/schedule-view-highlight.png\"),\r\n  reglamentPreview: require(\"../assets/images/previews/previews-full/reglament.png\"),\r\n  editorPreview: require(\"../assets/images/previews/previews-full/editor-view-preview.png\"),\r\n  settingsPreview: require(\"../assets/images/previews/previews-full/settings.png\"),\r\n}\r\n\r\nexport const images = {\r\n  // uad_logo_text: require(\"../assets/images/uad_logo_text.svg\"),\r\n  uad_logo_text_not_vector: require(\"../assets/images/uad_logo_text_not_vector.png\"),\r\n  uad_logo_text_not_vector_hires: require(\"../assets/images/uad_logo_text_not_vector_hires.png\"),\r\n}\r\n\r\nexport const teamMemberImages = {\r\n  senchyk_andrii: require(\"../assets/images/team/senchyk_andrii.png\"),\r\n  zakharova_zarina: require(\"../assets/images/team/zakharova_zarina.png\"),\r\n  shepita_julia: require(\"../assets/images/team/shepita_julia.png\"),\r\n  ivanov_mykhailo: require(\"../assets/images/team/ivanov_mykhailo.png\"),\r\n}\r\n\r\nexport const editorImages = {\r\n  lightbulb: require(\"../assets/images/editor/lightbulb-nontrasparent-fixed.png\"),\r\n}\r\n\r\nexport const drawerMenuImages = {\r\n  uad_logo_white_outline: require(\"../assets/images/uad-logo-white-outline.png\"),\r\n}\r\n\r\nexport const imageIcons = {\r\n  museum: require(\"../assets/image_icons/museum.png\"),\r\n  tiktok: require(\"../assets/image_icons/tiktok.png\"),\r\n  warning_triangle: require(\"../assets/image_icons/warning-triangle.png\"),\r\n}\r\n","export enum DrawerRoutes {\r\n  VIEWER = \"Мій Розклад\",\r\n  REGLAMENT = \"Регламент\",\r\n  TEACHERS = \"Викладачі\",\r\n  CONTACTS = \"Контакти\",\r\n  NEWS = \"Новини\",\r\n\r\n  TESTS = \"Тести\",\r\n  QnA = \"Q&A\",\r\n  EDITOR = \"Редактор\",\r\n  SETTINGS = \"Налаштування\",\r\n  ABOUT = \"Про Застосунок\",\r\n}\r\n","export const EXAMPLE_NEWS = [\r\n    {\r\n      title: \"Новина 1\",\r\n      body: \"Текст новини 1\",\r\n      createdAt: \"2021-06-01T00:00:00.000Z\",\r\n    },\r\n    {\r\n      title: \"Новина 2\",\r\n      body: \"Текст новини 2\",\r\n      createdAt: \"2022-06-02T00:00:00.000Z\",\r\n    },\r\n    {\r\n      title: \"Новина 3\",\r\n      body: \"Текст новини 3\",\r\n      createdAt: \"2023-06-03T00:00:00.000Z\",\r\n    },\r\n  ]","// This is a singleton service that loads news from contenful and provides it to the rest of the application\r\n\r\nimport { EXAMPLE_NEWS } from \"../../constants/ExampleData\"\r\nimport { getContentfulClient } from \"../../utilities/utilities\"\r\nimport { NewsArticle, ContentfulNewsArticleFields } from \"./Types\"\r\n\r\nexport default class NewsLoaderService {\r\n  protected static instance: NewsLoaderService\r\n\r\n  protected _newsCached: NewsArticle[] = []\r\n\r\n  static async GetInstance(): Promise<NewsLoaderService> {\r\n    if (!this.instance) {\r\n      this.instance = new this()\r\n      await this.instance.init()\r\n\r\n      console.log(`[${this.name}] news loader service instance constructed successfully`)\r\n    }\r\n\r\n    return this.instance\r\n  }\r\n\r\n  protected constructor() {}\r\n\r\n  protected async init() {}\r\n\r\n  async getNewsFromContentful(): Promise<NewsArticle[]> {\r\n    // retrieve schedules from contentful\r\n    console.log(`[News Loader] retrieving news from contentful`)\r\n\r\n    if (this._newsCached.length > 0) {\r\n      console.log(`[News Loader] returning cached news`)\r\n      return this._newsCached\r\n    }\r\n\r\n    const entries = await this.fetchContentfulEntries()\r\n\r\n    let news = entries.items.map((entry) => {\r\n      const { title, body } = entry.fields as ContentfulNewsArticleFields\r\n      const createdAt = entry.sys.createdAt\r\n      return {\r\n        title,\r\n        body,\r\n        createdAt,\r\n      }\r\n    })\r\n\r\n    // sort news by date\r\n    news = news.sort((a, b) => {\r\n      return new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()\r\n    })\r\n\r\n    console.log(`[News Loader] entries: ${JSON.stringify(news)}`)\r\n\r\n    this._newsCached = news\r\n    return news\r\n  }\r\n\r\n  async fetchContentfulEntries() {\r\n    const client = getContentfulClient()\r\n\r\n    const content_type = \"newsArticle\"\r\n    const entries = await client.getEntries({\r\n      content_type,\r\n    })\r\n\r\n    return entries\r\n  }\r\n\r\n  getExampleNews(): NewsArticle[] {\r\n    return EXAMPLE_NEWS\r\n  }\r\n\r\n  // TODO: move to utilities\r\n  async getNewestArticleDate(): Promise<Date> {\r\n    let news = await this.getNewsFromContentful()\r\n    return new Date(news[0].createdAt)\r\n  }\r\n}\r\n","import { Ionicons, FontAwesome5, FontAwesome } from \"@expo/vector-icons\"\r\nimport { DrawerRoutes } from \"../routes/DrawerRoutes\"\r\n\r\ntype RouteIconsType = {\r\n  [key in DrawerRoutes]: JSX.Element\r\n}\r\n\r\nconst RouteIcons: RouteIconsType = {\r\n  [DrawerRoutes.VIEWER]: <Ionicons name=\"calendar\" color={\"white\"} size={18} />,\r\n  [DrawerRoutes.REGLAMENT]: <Ionicons name=\"time-sharp\" color={\"white\"} size={18} />,\r\n  [DrawerRoutes.TEACHERS]: <FontAwesome5 name=\"user-graduate\" color={\"white\"} size={18} />,\r\n  [DrawerRoutes.CONTACTS]: <Ionicons name=\"call\" color={\"white\"} size={18} />,\r\n  [DrawerRoutes.NEWS]: <Ionicons name=\"chatbox-ellipses\" color={\"white\"} size={18} />,\r\n  [DrawerRoutes.QnA]: <FontAwesome name=\"comments\" color={\"white\"} size={18} />,\r\n\r\n  [DrawerRoutes.TESTS]: <Ionicons name=\"flask\" color={\"white\"} size={18} />,\r\n  [DrawerRoutes.EDITOR]: <Ionicons name=\"options\" color={\"white\"} size={18} />,\r\n  [DrawerRoutes.SETTINGS]: <FontAwesome5 name=\"cog\" color={\"white\"} size={18} />,\r\n  [DrawerRoutes.ABOUT]: <Ionicons name=\"information-circle\" color={\"white\"} size={18} />,\r\n}\r\n\r\nexport default RouteIcons\r\n","import React from \"react\"\r\nimport { View } from \"react-native\"\r\nimport { palette } from \"../styles/global\"\r\n\r\nexport function YellowCircle({ filled = true }: { filled?: boolean }) {\r\n  return (\r\n    <View\r\n      style={{\r\n        marginLeft: 10,\r\n        marginTop: 5,\r\n\r\n        alignSelf: \"flex-start\",\r\n\r\n        width: 5,\r\n        height: 5,\r\n        borderRadius: 10,\r\n        backgroundColor: filled ? \"#FFE600\" : \"transparent\",\r\n        borderWidth: 1,\r\n        borderColor: !filled ? palette.grayedOut : \"transparent\",\r\n      }}\r\n    />\r\n  )\r\n}\r\n","import { StyleSheet } from \"react-native\"\r\n\r\nimport { FontName } from \"../../constants/Fonts\"\r\n\r\nexport const styles = StyleSheet.create({\r\n  pageLinkContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 20,\r\n  },\r\n  pageLink: {\r\n    fontSize: 18,\r\n    marginLeft: 10,\r\n    color: \"white\",\r\n    fontFamily: FontName.CenturyGothic,\r\n  },\r\n\r\n  drawerContainer: {\r\n    flex: 1,\r\n    justifyContent: \"space-between\",\r\n\r\n    backgroundColor: \"#1C5D8F\",\r\n    paddingTop: 35,\r\n    paddingBottom: 25,\r\n  },\r\n\r\n  drawerContainerBottom: {},\r\n\r\n  activePageLink: {\r\n    // backgroundColor: \"lightblue\",\r\n    backgroundColor: \"rgba(37, 150, 190, 0.7)\",\r\n    // opacity: 0.5,\r\n  },\r\n\r\n  drawerContainerHeader: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n\r\n    marginBottom: 25,\r\n    paddingBottom: 15,\r\n\r\n    paddingHorizontal: 20,\r\n\r\n    borderBottomColor: \"rgba(0,0,0,0.1)\",\r\n    borderBottomWidth: 1,\r\n  },\r\n})\r\n","export const ASYNC_STORAGE_KEY_NEWS_CHECKED_DATE = \"newsChecked\"\r\n","// EXTERNAL DEPENDENCIES\r\n\r\nimport React, { useRef } from \"react\"\r\nimport { ActivityIndicator, Text, View, Image } from \"react-native\"\r\nimport { useNavigation, useNavigationState } from \"@react-navigation/native\"\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\"\r\nimport _ from \"lodash\"\r\n\r\n// INTERNAL DEPENDENCIES\r\n\r\nimport { globalStyles, palette } from \"../../styles/global\"\r\nimport { drawerMenuImages } from \"../../constants/Images\"\r\nimport { DrawerRoutes } from \"../../routes/DrawerRoutes\"\r\nimport NewsLoaderService from \"../../services/NewsLoaderService/NewsLoaderService\"\r\nimport { isRunningInExpoGo } from \"../../utilities/utilities\"\r\nimport RouteIcons from \"../../constants/RouteIcons\"\r\nimport { YellowCircle } from \"../YellowCircle\"\r\nimport { FontName } from \"../../constants/Fonts\"\r\nimport { styles } from \"./Styles\"\r\nimport { ASYNC_STORAGE_KEY_NEWS_CHECKED_DATE } from \"../../services/NewsLoaderService/Constants\"\r\n\r\n// let allIcons = Object.keys(Ionicons.getRawGlyphMap())\r\n// console.log(allIcons)\r\n\r\nlet shouldDisplayYellowCircle = true\r\n\r\n// yellow circle is displayed if there are new news\r\nfunction determineIfShouldDisplayYellowCircle() {\r\n  NewsLoaderService.GetInstance().then(async (instance) => {\r\n    let newestArticleDate = await instance.getNewestArticleDate()\r\n    let lastSeenArticle = await AsyncStorage.getItem(ASYNC_STORAGE_KEY_NEWS_CHECKED_DATE)\r\n    let lastSeenArticleDate = lastSeenArticle ? new Date(lastSeenArticle) : null\r\n\r\n    console.log(\"newestArticleDate\", newestArticleDate)\r\n    console.log(\"lastSeenArticleDate\", lastSeenArticleDate)\r\n\r\n    if (!lastSeenArticleDate || newestArticleDate.getTime() > lastSeenArticleDate.getTime()) {\r\n      shouldDisplayYellowCircle = true\r\n    } else {\r\n      shouldDisplayYellowCircle = false\r\n    }\r\n\r\n    console.log(\"shouldDisplayYellowCircle: \", shouldDisplayYellowCircle)\r\n  })\r\n}\r\ndetermineIfShouldDisplayYellowCircle()\r\n\r\n// TODO: do something with types on function signature hover\r\n/**\r\n * Creates RouteButton with additional parameters in its definition scope for it to memorize\r\n */\r\nfunction RouteButtonFactory(\r\n  currentRoute: { name: string },\r\n  // handleNavigationButtonPress: (screenName: DrawerRoutes) => void,\r\n  routeNameToIconRef: React.MutableRefObject<typeof RouteIcons>\r\n) {\r\n  const RouteButton = ({ route, index }: { route: typeof currentRoute; index: number }) => {\r\n    const navigation = useNavigation()\r\n    // console.log(\"navigation\", navigation)\r\n\r\n    // handler for onPress of navigation button\r\n    const handleNavigationButtonPress = (screenName: DrawerRoutes) => {\r\n      console.log(\"handlePageLinkPress\", screenName)\r\n      // @ts-ignore (signature of .navigate doesn't make sense)\r\n      navigation.navigate(screenName)\r\n    }\r\n\r\n    const routeName = route.name as DrawerRoutes\r\n\r\n    const isCurrentRoute = routeName == currentRoute.name\r\n    const isNewsRoute = routeName == DrawerRoutes.NEWS\r\n\r\n    const yellowCircle =\r\n      shouldDisplayYellowCircle && isNewsRoute ? <YellowCircle /> : <View style={globalStyles.noDisplay} />\r\n\r\n    return (\r\n      <TouchableOpacity\r\n        key={index}\r\n        onPress={() => {\r\n          if (isNewsRoute) {\r\n            shouldDisplayYellowCircle = false\r\n            AsyncStorage.setItem(ASYNC_STORAGE_KEY_NEWS_CHECKED_DATE, new Date().toString())\r\n          }\r\n\r\n          handleNavigationButtonPress(routeName)\r\n        }}\r\n      >\r\n        <View\r\n          style={{\r\n            ...styles.pageLinkContainer,\r\n            ...(isCurrentRoute ? styles.activePageLink : {}),\r\n          }}\r\n        >\r\n          {routeNameToIconRef.current[routeName]}\r\n          <Text style={styles.pageLink}>{route.name}</Text>\r\n          {yellowCircle}\r\n        </View>\r\n      </TouchableOpacity>\r\n    )\r\n  }\r\n\r\n  return RouteButton\r\n}\r\n\r\nexport default function DrawerMenu() {\r\n  // Get mapping of route names to icons\r\n  const routeNameToIconRef = useRef(RouteIcons)\r\n\r\n  // Get all routes from the navigation state\r\n  let routesContainer = useNavigationState((state) => state)\r\n  //   console.log(\"routes\", routesContainer)\r\n\r\n  if (routesContainer && routesContainer.routes) {\r\n    const isRunningInExpoGo_ = isRunningInExpoGo()\r\n\r\n    let routes = routesContainer.routes\r\n\r\n    // Split routes by breakpoint into top and bottom parts\r\n    let breakpoint = routes.length - 5\r\n    let topRoutes = routes.slice(0, breakpoint)\r\n    let bottomRoutes = routes.slice(breakpoint, routes.length)\r\n\r\n    // Remove tests route if app is running outside Expo Go\r\n    if (!isRunningInExpoGo_) {\r\n      _.remove(bottomRoutes, (route) => route.name == DrawerRoutes.TESTS)\r\n    }\r\n\r\n    // get current route\r\n    let currentRouteIndex = routesContainer.index\r\n    let currentRoute = routes[currentRouteIndex]\r\n\r\n    // create RouteButton component\r\n    const RouteButton = RouteButtonFactory(currentRoute, routeNameToIconRef)\r\n\r\n    return (\r\n      <View style={styles.drawerContainer}>\r\n        <View>\r\n          <View style={styles.drawerContainerHeader}>\r\n            <Image\r\n              style={{ width: 35, height: 40, marginRight: 15 }}\r\n              source={drawerMenuImages.uad_logo_white_outline}\r\n            />\r\n            {/* caption at the very top of the drawer */}\r\n            <Text style={{ fontSize: 24, fontFamily: FontName.CenturyGothic, color: \"white\" }}>Розклад</Text>\r\n          </View>\r\n          {/* render top routes */}\r\n          {topRoutes.map((route, index: number) => {\r\n            return <RouteButton key={index} route={route} index={index} />\r\n          })}\r\n        </View>\r\n\r\n        {/* render bottom routes */}\r\n        <View style={styles.drawerContainerBottom}>\r\n          {bottomRoutes.map((route, index: number) => {\r\n            return <RouteButton key={index + topRoutes.length} route={route} index={index + topRoutes.length} />\r\n          })}\r\n        </View>\r\n      </View>\r\n    )\r\n  } else {\r\n    // otherwise return spinner\r\n    return (\r\n      <View style={{ ...styles.drawerContainer, ...globalStyles.centered }}>\r\n        <ActivityIndicator size={\"large\"} color={palette.navigationBackground} />\r\n      </View>\r\n    )\r\n  }\r\n}\r\n","import { createDrawerNavigator } from \"@react-navigation/drawer\"\r\n\r\nexport const Drawer = createDrawerNavigator()\r\n","import React from \"react\"\r\nimport { StyleSheet, Text, View } from \"react-native\"\r\nimport { MaterialIcons } from \"@expo/vector-icons\"\r\nimport { SafeAreaView } from \"react-native-safe-area-context\"\r\nimport { globalStyles } from \"../styles/global\"\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport { isLandscapeWeb } from \"../utilities/utilities\"\r\nimport RouteIcons from \"../constants/RouteIcons\"\r\nimport { FontName } from \"../constants/Fonts\"\r\nimport { DrawerRoutes } from \"../routes/DrawerRoutes\"\r\n\r\n//@ts-expect-error\r\nexport function getRouteIcon(navigation, headerText: DrawerRoutes) {\r\n  const RouteIconConstructor = RouteIcons[headerText].type\r\n  const RouteIcon = <RouteIconConstructor {...RouteIcons[headerText].props} style={globalStyles.navIcon} />\r\n\r\n  const iconOnPress = () => navigation.openDrawer()\r\n\r\n  const icon = isLandscapeWeb() ? (\r\n    RouteIcon\r\n  ) : (\r\n    <MaterialIcons onPress={iconOnPress} name=\"menu\" size={24} style={globalStyles.navIcon} />\r\n  )\r\n\r\n  return icon\r\n}\r\n\r\nfunction BaseHeader({ title, navigation }: { title: DrawerRoutes; navigation: any }) {\r\n  // extract current screen name from navigation state\r\n  const headerText = title\r\n\r\n  const icon = getRouteIcon(navigation, headerText)\r\n\r\n  return (\r\n    <View style={styles.headerContentContainer}>\r\n      <TouchableOpacity>{icon}</TouchableOpacity>\r\n\r\n      <Text style={styles.headerText}>{headerText}</Text>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default function GlobalHeader({\r\n  title,\r\n  navigation,\r\n  headerContent: headerContentElement,\r\n}: {\r\n  title: DrawerRoutes\r\n  navigation: any\r\n  headerContent?: React.ReactNode\r\n}) {\r\n  return (\r\n    <SafeAreaView style={styles.header}>\r\n      {headerContentElement ? headerContentElement : <BaseHeader title={title} navigation={navigation} />}\r\n    </SafeAreaView>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  header: {\r\n    paddingVertical: 15,\r\n    width: \"100%\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#1C5D8F\",\r\n  },\r\n\r\n  headerText: {\r\n    fontSize: 20,\r\n    color: \"white\",\r\n    fontFamily: FontName.CenturyGothic,\r\n  },\r\n\r\n  headerContentContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n  },\r\n})\r\n","import { GetTimeDifference } from \"./utilities\"\r\n\r\nexport enum WeekType {\r\n  Nominator,\r\n  Denominator,\r\n}\r\n\r\n// month/day/year\r\n// const SEMESTER_START = new Date(\"10/3/2022\") // such string notation doesn't work in react native\r\nconst SEMESTER_START = new Date(2022, 9, 3) // month is 0-based\r\nconst SEMESTER_START_TYPE = WeekType.Denominator\r\n\r\nexport default function GetWeekType(timepoint = new Date()): WeekType {\r\n  // let timepoint = new Date()\r\n  let timeDifferenceInHours = GetTimeDifference(SEMESTER_START, timepoint).hours\r\n  let timeDifferenceInDays = timeDifferenceInHours / 24\r\n  let timeDifferenceInWeeks = Math.trunc(timeDifferenceInDays / 7)\r\n\r\n  if (timeDifferenceInWeeks % 2 == 0) {\r\n    if (SEMESTER_START_TYPE === WeekType.Denominator) {\r\n      return WeekType.Denominator\r\n    }\r\n    return WeekType.Nominator\r\n  } else {\r\n    if (SEMESTER_START_TYPE === WeekType.Denominator) {\r\n      return WeekType.Nominator\r\n    }\r\n    return WeekType.Denominator\r\n  }\r\n}\r\n","// checks whether index is not out of bounds and throws an error if it is\r\n// TODO: deprecate maybe\r\nexport default function getStrict(array: Array<any>, index: number) {\r\n  if (index >= array.length || index < 0) {\r\n    throw new Error(`[Array Indexing] Index out of bounds: ${index} (length: ${array.length})`)\r\n  }\r\n  return array[index]\r\n}\r\n","export const daysInShortenedForm = [\"Пн\", \"Вт\", \"Ср\", \"Чт\", \"Пт\"]\r\nexport const localizedDays = [\"Неділя\", \"Понеділок\", \"Вівторок\", \"Середа\", \"Четвер\", \"П'ятниця\", \"Субота\"]\r\n\r\nexport const workDays = [\"Понеділок\", \"Вівторок\", \"Середа\", \"Четвер\", \"П'ятниця\"]\r\nexport const workDaysEn = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"]\r\nexport const workDaysEnLower = workDaysEn.map((day) => day.toLowerCase())\r\n\r\nexport function mapEnWorkDayToUkrWorkDay(day: string): string {\r\n  let index = workDaysEnLower.indexOf(day.toLowerCase())\r\n  return workDays[index]\r\n}\r\n\r\nexport function mapUkrWorkDayToEnWorkDay(day: string): string {\r\n  day = day.toLowerCase()\r\n  let workDaysLower = workDays.map((d) => d.toLowerCase())\r\n\r\n  let index = workDaysLower.indexOf(day)\r\n  return workDaysEn[index]\r\n}\r\n","export enum CLASS_TYPE {\r\n  LECTURE = \"Лекція\",\r\n  PRACTICE = \"Практична\",\r\n  LAB = \"Лабораторна\",\r\n}\r\n\r\nexport const CLASS_TYPE_SHORT = {\r\n  [CLASS_TYPE.LECTURE]: \"Лек\",\r\n  [CLASS_TYPE.PRACTICE]: \"Прак\",\r\n  [CLASS_TYPE.LAB]: \"Лаб\",\r\n}\r\n\r\nexport type ScheduleClassFields = {\r\n  index: number\r\n  isBiweekly: boolean\r\n  week: 1 | 2\r\n  name: string\r\n  teacher: string | string[]\r\n  room: string | string[]\r\n  isSharedClass: boolean\r\n\r\n  classType?: CLASS_TYPE\r\n}\r\nexport interface IScheduleClass extends ScheduleClassFields {\r\n  getUniqueStringSignature(): string\r\n}\r\n","import GetWeekType from \"../../utilities/getWeekType\"\r\nimport { determineInterval } from \"../../utilities/utilities\"\r\nimport getStrict from \"../../utilities/getStrict\"\r\nimport { workDaysEnLower } from \"../../constants/Days\"\r\nimport { REGLAMENT_DATA } from \"../../constants/Constants\"\r\nimport { IScheduleClass, CLASS_TYPE, ScheduleClassFields } from \"./Types\"\r\n\r\nexport class ScheduleClass implements IScheduleClass {\r\n  index: number\r\n  isBiweekly: boolean\r\n  week: 1 | 2 // 1 or 2, 1 - чисельник, 2 - знаменник\r\n  name: string\r\n  teacher: string | string[]\r\n  room: string | string[]\r\n  isSharedClass: boolean\r\n\r\n  day: string\r\n  weekName: string = \"\"\r\n\r\n  classType: CLASS_TYPE\r\n\r\n  constructor(data: ScheduleClassFields, day: string) {\r\n    this.index = data.index\r\n    this.isBiweekly = data.isBiweekly ?? false\r\n    this.name = data.name\r\n\r\n    // here you make assumptions as you parse the data (that separator character is pipe).\r\n    // Perhaps that's not the right place for such things\r\n    let teacherSeparator = \"|\"\r\n    if (typeof data.teacher == \"string\" && data.teacher.includes(teacherSeparator)) {\r\n      this.teacher = data.teacher.split(teacherSeparator)\r\n    } else {\r\n      this.teacher = data.teacher\r\n    }\r\n\r\n    let roomSeparator = \"|\"\r\n    if (typeof data.room == \"string\" && data.room.includes(roomSeparator)) {\r\n      this.room = data.room.split(roomSeparator)\r\n    } else {\r\n      this.room = data.room\r\n    }\r\n\r\n    this.isSharedClass = data.isSharedClass\r\n    this.day = day\r\n\r\n    this.classType = data.classType ?? CLASS_TYPE.LECTURE\r\n\r\n    this.setWeek(data.week)\r\n  }\r\n\r\n  static sampleName = \"Редагувати\"\r\n  static sampleTeacher = \"Викладач не зазначений\"\r\n  static sampleRoom = \"...\"\r\n\r\n  static GetPlaceholder(day: string, index: number, week: 1 | 2) {\r\n    return new ScheduleClass(\r\n      {\r\n        index,\r\n        isBiweekly: true,\r\n        week,\r\n        name: this.sampleName,\r\n        teacher: this.sampleTeacher,\r\n        room: this.sampleRoom,\r\n        isSharedClass: false,\r\n      },\r\n      day\r\n    )\r\n  }\r\n\r\n  setWeek(week: 1 | 2) {\r\n    this.week = week\r\n    this.weekName = this.isBiweekly ? (this.week === 1 ? \"Чисельник\" : \"Знаменник\") : \"\"\r\n  }\r\n\r\n  getUniqueStringSignature(): string {\r\n    return `[${this.day} * ${this.index}] ${this.name} * ${this.teacher} * ${this.room} <${this.weekName}>})`\r\n  }\r\n\r\n  isCurrent() {\r\n    // debugger\r\n    // return this.index == 3\r\n    let isInCurrentDay = this.day == workDaysEnLower[new Date().getDay() - 1]\r\n\r\n    if (!isInCurrentDay) return false\r\n\r\n    let isInCurrentTimeSlot = determineInterval() == getStrict(REGLAMENT_DATA, this.index - 1)\r\n    let isMatchingWeekType = GetWeekType() + 1 == this.week\r\n    let isOngoingClass = isInCurrentTimeSlot && (!this.isBiweekly || isMatchingWeekType)\r\n\r\n    return isOngoingClass\r\n  }\r\n\r\n  isSampleClass() {\r\n    // TODO: find better way to compare lists\r\n    let isSample =\r\n      this.name == ScheduleClass.sampleName &&\r\n      this.room == ScheduleClass.sampleRoom &&\r\n      this.teacher.toString() == [ScheduleClass.sampleTeacher].toString()\r\n\r\n    return isSample\r\n  }\r\n}\r\n","export enum DisplayEmptyDaysMode {\r\n  Display = \"Відображати\",\r\n  Darken = \"Затемняти\",\r\n  Hide = \"Приховати\",\r\n}\r\n\r\nexport enum DisplayTeacherMode {\r\n  Full = \"ПІБ\",\r\n  SurnameAndInitials = \"Прізвище та ініціали\",\r\n  Hide = \"Приховати\",\r\n}\r\n// update place 1 for new setting\r\n\r\nexport type ScheduleAppSettings = {\r\n  currentScheduleName: string\r\n  notifyBeforeClass: boolean\r\n  notifyBeforeClassOffsetMinutes: number\r\n  displayRoomNumber: boolean\r\n  displayTeacherName: DisplayTeacherMode\r\n\r\n  // displayEmptyRows: boolean // TODO: use enum here\r\n  displayEmptyDays: DisplayEmptyDaysMode\r\n}\r\nexport interface ISettingsService extends ScheduleAppSettings {\r\n  saveToStorage: () => Promise<void>\r\n  readFromStorage: () => Promise<ScheduleAppSettings | null>\r\n}\r\n","import React from \"react\"\r\nimport SettingsService from \"../services/SettingsService/SettingsService\"\r\n\r\nexport const SettingsContext = React.createContext<SettingsService | null>(null)\r\n","import React from \"react\"\r\nimport { View, Text, StyleSheet } from \"react-native\"\r\nimport { TextProps } from \"react-native-elements\"\r\nimport { palette } from \"../../styles/global\"\r\n\r\n// export default class AppText extends Text {\r\n\r\n//     render(){\r\n//         return <Text style={[styles.appText, this.props.style]}>{this.props.children}</Text>\r\n//     }\r\n\r\n// }\r\n\r\nexport default function AppText(props: TextProps) {\r\n  return (\r\n    <Text android_hyphenationFrequency=\"full\" {...props} style={[styles.appText, props.style]}>\r\n      {props.children}\r\n    </Text>\r\n  )\r\n}\r\n\r\n// AppText.propTypes = {\r\n//   ...Text.propTypes,\r\n//   // add any additional propTypes here\r\n// }\r\n\r\nconst styles = StyleSheet.create({\r\n  appText: {\r\n    fontFamily: \"montserrat-medium\",\r\n    fontSize: 12,\r\n    // letterSpacing: -0.5,\r\n    color: palette.text,\r\n  },\r\n})\r\n","import React from \"react\"\r\nimport { StyleSheet } from \"react-native\"\r\nimport { TextProps } from \"react-native-elements\"\r\nimport { palette } from \"../../styles/global\"\r\nimport AppText from \"../shared/AppText\"\r\nimport { FontName } from \"../../constants/Fonts\"\r\n\r\nexport default function ScheduleText(props: TextProps) {\r\n  return (\r\n    //     backgroundColor: \"rgb(227, 239, 249)\",\r\n\r\n    <AppText\r\n      // selectionColor={\"rgb(227, 239, 249)\"}\r\n      // selectable={true}\r\n      android_hyphenationFrequency=\"full\"\r\n      {...props}\r\n      style={[styles.appText, props.style]}\r\n    >\r\n      {props.children}\r\n    </AppText>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  appText: {\r\n    fontFamily: FontName.MontserratMedium,\r\n    fontSize: 12,\r\n    letterSpacing: -0.5,\r\n    color: palette.text,\r\n  },\r\n})\r\n","import React from \"react\"\r\nimport { WeekType } from \"../utilities/getWeekType\"\r\n\r\nexport const WeekTypeContext = React.createContext<WeekType | null>(null)\r\n","import { FontName } from \"../../../constants/Fonts\"\r\nimport { globalStyles, palette } from \"../../../styles/global\"\r\nimport { StyleSheet } from \"react-native\"\r\n\r\nexport const styles = StyleSheet.create({\r\n  ongoingClass: {\r\n    // backgroundColor: \"rgba(28, 93, 143, 0.1)\",\r\n    backgroundColor: \"rgb(227, 239, 249)\",\r\n  },\r\n\r\n  classContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginVertical: 5,\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 3,\r\n    borderRadius: 5,\r\n  },\r\n\r\n  startAndEndTimesContainer: {\r\n    alignItems: \"flex-start\",\r\n    width: \"11%\",\r\n    marginRight: \"4%\",\r\n  },\r\n\r\n  separator: {\r\n    ...globalStyles.separator,\r\n\r\n    backgroundColor: \"rgba(217, 217, 217, 0.4)\",\r\n  },\r\n\r\n  text: {\r\n    fontFamily: FontName.MontserratRegular,\r\n    color: palette.text,\r\n  },\r\n\r\n  classStartText: {\r\n    fontFamily: FontName.MontserratRegular,\r\n    color: palette.text,\r\n    alignSelf: \"center\",\r\n  },\r\n\r\n  classEndText: {\r\n    fontFamily: FontName.MontserratRegular,\r\n    color: palette.text,\r\n    alignSelf: \"center\",\r\n  },\r\n\r\n  classNameText: {\r\n    fontFamily: FontName.MontserratMedium,\r\n    color: palette.text,\r\n    alignSelf: \"flex-start\",\r\n    textAlign: \"left\",\r\n    flexGrow: 0.5,\r\n  },\r\n\r\n  teacherNameText: {\r\n    fontFamily: FontName.MontserratRegular,\r\n    color: palette.grayedOut,\r\n  },\r\n\r\n  roomNumberText: {\r\n    fontFamily: FontName.MontserratRegular,\r\n    color: palette.text,\r\n    textAlign: \"right\",\r\n  },\r\n\r\n  classTypeAndRoomNumberContainer: {\r\n    width: \"12%\",\r\n  },\r\n\r\n  roomNumberContainer: {\r\n    // flexGrow: 0.12,\r\n    alignItems: \"flex-end\",\r\n    textAlign: \"right\",\r\n  },\r\n\r\n  classAndTeacherBlock: {\r\n    // width: \"74%\",\r\n    flexBasis: \"74%\",\r\n    flexGrow: 1,\r\n    // flexGrow: 0.74,\r\n    // flexGrow: 1,\r\n    alignItems: \"flex-start\",\r\n    textAlign: \"left\",\r\n  },\r\n})\r\n","export const TEACHER_NOT_FOUND_STRING = \"Викладача не знайдено\"\r\n","import teachersJson from \"../../assets/teachers.json\"\r\n\r\nimport Fuse from \"fuse.js\"\r\nimport { Teacher } from \"./Types\"\r\nimport { TEACHER_NOT_FOUND_STRING } from \"./Constants\"\r\nimport { ensureEnding } from \"../../utilities/utilities\"\r\n\r\nexport default class TeacherModel {\r\n  teachers = teachersJson\r\n  teachersFuse = new Fuse(this.teachers, {\r\n    keys: [\"ПІБ викладача\"],\r\n    threshold: 0.3,\r\n  })\r\n\r\n  private static instance: TeacherModel\r\n\r\n  static GetInstance(): TeacherModel {\r\n    if (!TeacherModel.instance) {\r\n      TeacherModel.instance = new TeacherModel()\r\n    }\r\n\r\n    return TeacherModel.instance\r\n  }\r\n\r\n  private constructor() {\r\n    console.log(\"teacher table model constructed successfully\")\r\n  }\r\n\r\n  getTeacherBySurname(surname: string): Teacher | string {\r\n    if (typeof surname != \"string\") return TEACHER_NOT_FOUND_STRING\r\n\r\n    let match = this.teachersFuse.search(surname)\r\n\r\n    if (match.length == 0) return TEACHER_NOT_FOUND_STRING\r\n\r\n    return match[0].item\r\n  }\r\n\r\n  getFullNameBySurname(surname: string): string {\r\n    let teacher = this.getTeacherBySurname(surname)\r\n    if (teacher == TEACHER_NOT_FOUND_STRING) return surname\r\n\r\n    if (typeof teacher == \"string\") return teacher\r\n    return teacher[\"ПІБ викладача\"]\r\n  }\r\n\r\n  getSurnameAndInitialsBySurname(surname: string): string {\r\n    let teacher = this.getTeacherBySurname(surname)\r\n\r\n    // handle case of user-provided teacher name (via editor)\r\n    let teacherFullNameBits: string[]\r\n    if (teacher == TEACHER_NOT_FOUND_STRING) {\r\n      teacherFullNameBits = surname.split(\" \")\r\n    } else {\r\n      teacherFullNameBits = (teacher as Teacher)[\"ПІБ викладача\"].split(\" \")\r\n    }\r\n\r\n    surname = teacherFullNameBits[0]\r\n    let name = teacherFullNameBits[1]\r\n    let patronymic = teacherFullNameBits[2]\r\n\r\n    // sometimes data is not consistent, e.g. Kolosivska O.V. instead of full name, so additional checks are needed\r\n    let nameInitial = name ? ensureEnding(name[0], \".\") : \"\"\r\n    let patronymicInitial = patronymic ? ensureEnding(patronymic[0], \".\") : \"\"\r\n\r\n    return `${surname} ${nameInitial} ${patronymicInitial}`\r\n  }\r\n}\r\n","import { isArray } from \"lodash\"\r\nimport { ScheduleClass } from \"../../../models/ScheduleClass/ScheduleClass\"\r\nimport TeacherModel from \"../../../models/TeacherModel/TeacherModel\"\r\nimport SettingsService from \"../../../services/SettingsService/SettingsService\"\r\nimport { DisplayTeacherMode } from \"../../../services/SettingsService/Types\"\r\n\r\nexport const formatRoomName = (scheduleClassInstance: ScheduleClass, unfoldClassText: boolean) => {\r\n  let room = \"\"\r\n\r\n  if (\r\n    scheduleClassInstance.room == \"\" ||\r\n    scheduleClassInstance.room == null ||\r\n    scheduleClassInstance.room == undefined\r\n  ) {\r\n    // collapse all kinds of missing values into empty string\r\n    room = \"\"\r\n  } else {\r\n    if (typeof scheduleClassInstance.room == \"string\") {\r\n      room = scheduleClassInstance.room\r\n    } else if (scheduleClassInstance.room.length != undefined) {\r\n      // array check\r\n      room = scheduleClassInstance.room.join(\"\\n\")\r\n    }\r\n  }\r\n\r\n  // pad dots with spaces\r\n  room = room.replace(/\\.(?!\\s)/g, \". \")\r\n\r\n  if (!unfoldClassText) {\r\n    room = room.split(\"\\n\")[0]\r\n  }\r\n\r\n  return room\r\n}\r\n\r\n// TODO: annotate\r\nexport const formatTeacherName = (\r\n  scheduleClassInstance: ScheduleClass,\r\n  isEditable: boolean,\r\n  settings: SettingsService | null // can be null if isEditable is true\r\n) => {\r\n  let teacher = \"\"\r\n\r\n  let teacherTable = TeacherModel.GetInstance()\r\n  let teacherSurname = scheduleClassInstance.teacher\r\n\r\n  let surnameIsNull = teacherSurname == null\r\n  let surnameIsArray = isArray(teacherSurname)\r\n\r\n  if (surnameIsNull) {\r\n    teacher = \"...\"\r\n  } else if (surnameIsArray) {\r\n    teacherSurname = teacherSurname as string[]\r\n\r\n    if (teacherSurname.length == 1) {\r\n      let firstEl = teacherSurname[0]\r\n      //   if (typeof firstEl == \"string\" && firstEl.includes(\"Білик Оксана Петрівна\")) {\r\n      //     debugger\r\n      //   }\r\n      teacher = _formatTeacherString(firstEl, isEditable, settings, teacherTable)\r\n    } else {\r\n      let teachers = teacherSurname.map((sn) => teacherTable.getSurnameAndInitialsBySurname(sn))\r\n      teacher = teachers.join(\", \")\r\n    }\r\n  } else {\r\n    // surname is string\r\n    teacher = _formatTeacherString(teacherSurname as string, isEditable, settings, teacherTable)\r\n  }\r\n\r\n  return teacher\r\n}\r\n\r\nfunction _formatTeacherString(\r\n  teacherSurname: string,\r\n  isEditable: boolean,\r\n  settings: SettingsService,\r\n  teacherTable: TeacherModel\r\n) {\r\n  let teacher: string\r\n\r\n  let displayTeacherNameMode = isEditable ? DisplayTeacherMode.Full : settings!.displayTeacherName\r\n\r\n  if (displayTeacherNameMode == DisplayTeacherMode.Full) {\r\n    teacher = teacherTable.getFullNameBySurname(teacherSurname)\r\n  } else if (displayTeacherNameMode == DisplayTeacherMode.SurnameAndInitials) {\r\n    teacher = teacherTable.getSurnameAndInitialsBySurname(teacherSurname)\r\n  }\r\n  return teacher\r\n}\r\n","// EXTERNAL DEPENDENCIES\r\n\r\nimport React, { useContext, useEffect, useState } from \"react\"\r\nimport { View, ActivityIndicator, ToastAndroid } from \"react-native\"\r\nimport _ from \"lodash\"\r\nimport * as Clipboard from \"expo-clipboard\"\r\n\r\n// INTERNAL DEPENDENCIES\r\n\r\nimport { CLASS_TYPE_SHORT, CLASS_TYPE } from \"../../../models/ScheduleClass/Types\"\r\nimport { globalStyles, palette } from \"../../../styles/global\"\r\nimport getStrict from \"../../../utilities/getStrict\"\r\nimport { REGLAMENT_DATA } from \"../../../constants/Constants\"\r\nimport { DisplayTeacherMode } from \"../../../services/SettingsService/Types\"\r\nimport { SettingsContext } from \"../../../contexts/settingsContext\"\r\nimport ScheduleText from \"../ScheduleText\"\r\nimport { isRunningInBrowser } from \"../../../utilities/utilities\"\r\nimport { WeekTypeContext } from \"../../../contexts/weekTypeContext\"\r\nimport GetWeekType from \"../../../utilities/getWeekType\"\r\nimport { styles } from \"./Style\"\r\nimport { formatRoomName, formatTeacherName } from \"./Formatters\"\r\nimport { ScheduleClassComponentProps } from \"./Types\"\r\n\r\nexport default function ScheduleClassComponent({\r\n  scheduleClassInstance,\r\n  idx,\r\n  displayRoomNumber,\r\n  isEditable = false,\r\n  highlightAsOngoing = false,\r\n}: ScheduleClassComponentProps) {\r\n  let [_, setState] = React.useState({})\r\n  let isCurrentClassRef = React.useRef(scheduleClassInstance.isCurrent())\r\n\r\n  const [unfoldClassText, setUnfoldClassText] = React.useState(isEditable)\r\n  const [unfoldTeacherText, setUnfoldTeacherText] = React.useState(isEditable)\r\n\r\n  // const { height, width } = useWindowDimensions()\r\n  const settings = useContext(SettingsContext)\r\n  const selectedWeekType = useContext(WeekTypeContext)\r\n\r\n  let [isOngoingClass, setIsOngoingClass] = useState(false)\r\n  let className = scheduleClassInstance.name\r\n  let room = formatRoomName(scheduleClassInstance, unfoldClassText)\r\n  let teacher = formatTeacherName(scheduleClassInstance, isEditable, settings) // need to run this on every rerender because teacher name could have changed in settings\r\n\r\n  let shouldDisplayTeacher = isEditable || settings!.displayTeacherName != DisplayTeacherMode.Hide\r\n\r\n  const [isReady, setIsReady] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const rerenderInterval = setInterval(() => {\r\n      // periodically re-render component to update ongoing class\r\n\r\n      let isCurrentClass = scheduleClassInstance.isCurrent()\r\n      let wasCurrent = isCurrentClassRef.current\r\n\r\n      if (isCurrentClass != wasCurrent) {\r\n        isCurrentClassRef.current = isCurrentClass\r\n        setState({})\r\n      }\r\n    }, 15000)\r\n\r\n    async function init() {\r\n      let isOngoingClass = scheduleClassInstance.isCurrent() && selectedWeekType == GetWeekType()\r\n\r\n      setIsOngoingClass(isOngoingClass)\r\n      setIsReady(true)\r\n    }\r\n\r\n    init()\r\n\r\n    return () => clearInterval(rerenderInterval)\r\n  }, [])\r\n\r\n  let reglamentClass = getStrict(REGLAMENT_DATA, scheduleClassInstance.index - 1)\r\n\r\n  let classStart: string = reglamentClass[1]\r\n  if (classStart.length == 4) classStart = \"0\" + classStart\r\n\r\n  const classEnd: string = reglamentClass[2]\r\n\r\n  if (!isReady) {\r\n    return (\r\n      <View style={[{ paddingVertical: 10 }]}>\r\n        <ActivityIndicator size=\"small\" color={palette.navigationBackground} />\r\n      </View>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <View key={idx}>\r\n      <View\r\n        style={{ ...styles.classContainer, ...(isOngoingClass || highlightAsOngoing ? styles.ongoingClass : {}) }}\r\n        testID=\"schedule-class\"\r\n      >\r\n        <View style={styles.startAndEndTimesContainer}>\r\n          <ScheduleText style={[styles.text, styles.classStartText]}>{classStart}</ScheduleText>\r\n          <ScheduleText style={[styles.text, styles.classEndText]}>{classEnd} </ScheduleText>\r\n        </View>\r\n        <View style={styles.classAndTeacherBlock}>\r\n          <ScheduleText\r\n            onPress={() => {\r\n              if (isEditable) return\r\n              setUnfoldClassText(!unfoldClassText)\r\n            }}\r\n            // onLongPress={() => null} // necessary for text to be selectable on long press (otherwise onPress will rerender the component in attempt to expand it)\r\n\r\n            onLongPress={() => {\r\n              if (isEditable) return\r\n              Clipboard.setStringAsync(className).then(() => {\r\n                if (isRunningInBrowser()) return\r\n                ToastAndroid.show(\"Скопійовано: предмет\", ToastAndroid.SHORT)\r\n              })\r\n            }}\r\n            style={[styles.classNameText, teacher == \"...\" ? { flexGrow: 0 } : {}]}\r\n            ellipsizeMode=\"tail\"\r\n            numberOfLines={!unfoldClassText ? 1 : 0}\r\n          >\r\n            {className}\r\n          </ScheduleText>\r\n          <ScheduleText\r\n            onPress={() => {\r\n              if (isEditable) return\r\n\r\n              setUnfoldTeacherText(!unfoldTeacherText)\r\n            }}\r\n            // onLongPress={() => null} // necessary for text to be selectable on long press (otherwise onPress will rerender the component in attempt to expand it)\r\n\r\n            onLongPress={() => {\r\n              if (isEditable) return\r\n              Clipboard.setStringAsync(teacher).then(() => {\r\n                if (isRunningInBrowser()) return\r\n                ToastAndroid.show(\"Скопійовано: викладач\", ToastAndroid.SHORT)\r\n              })\r\n            }}\r\n            style={[styles.teacherNameText, !shouldDisplayTeacher || teacher == \"...\" ? globalStyles.noDisplay : {}]}\r\n            ellipsizeMode=\"tail\"\r\n            numberOfLines={!unfoldTeacherText ? 1 : 0}\r\n            testID=\"teacher-text\"\r\n          >\r\n            {teacher}\r\n          </ScheduleText>\r\n        </View>\r\n        <View style={styles.classTypeAndRoomNumberContainer}>\r\n          <View\r\n            style={\r\n              scheduleClassInstance.classType != CLASS_TYPE.LECTURE && !unfoldClassText\r\n                ? styles.roomNumberContainer\r\n                : globalStyles.noDisplay\r\n            }\r\n          >\r\n            <ScheduleText style={styles.roomNumberText}>\r\n              {CLASS_TYPE_SHORT[scheduleClassInstance.classType]}\r\n            </ScheduleText>\r\n          </View>\r\n\r\n          <View style={displayRoomNumber ? styles.roomNumberContainer : globalStyles.noDisplay}>\r\n            <ScheduleText\r\n              onLongPress={() => {\r\n                if (isEditable) return\r\n\r\n                Clipboard.setStringAsync(room).then(() => {\r\n                  if (isRunningInBrowser()) return\r\n                  ToastAndroid.show(\"Скопійовано: аудиторія\", ToastAndroid.SHORT)\r\n                })\r\n              }}\r\n              style={styles.roomNumberText}\r\n            >\r\n              {room}\r\n            </ScheduleText>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { View, Text, StyleSheet } from \"react-native\"\r\nimport { globalStyles } from \"../../styles/global\"\r\n\r\nexport default function Separator({\r\n  upperElement,\r\n  lowerElement,\r\n  color,\r\n  width = \"100%\",\r\n}: {\r\n  upperElement: any\r\n  lowerElement: any\r\n  color?: string\r\n  width?: string\r\n}) {\r\n  const localStyles = StyleSheet.create({\r\n    separator: {\r\n      ...globalStyles.separator,\r\n      backgroundColor: color || globalStyles.separator.backgroundColor,\r\n      width: width,\r\n      alignSelf: \"center\",\r\n    },\r\n  })\r\n\r\n  if (upperElement && lowerElement) {\r\n    return <View style={localStyles.separator} />\r\n  }\r\n\r\n  return <View style={globalStyles.noDisplay} />\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n})\r\n","import React from \"react\"\r\nimport { useSwipeableItemParams } from \"react-native-swipeable-item\"\r\nimport { TouchableOpacity, View, StyleSheet } from \"react-native\"\r\nimport { Ionicons } from \"@expo/vector-icons\"\r\nimport { globalStyles, palette } from \"../../styles/global\"\r\n\r\n// TODO: hide this component children right when hide animation starts\r\n// TODO: make sure that class start and class end block gets completely hidden when main content is shifted to the side\r\n\r\nexport default function UnderlayRightSide({\r\n  onDeleteButtonPress: onDeleteButtonPress,\r\n}: {\r\n  onDeleteButtonPress: () => void\r\n}) {\r\n  // @ts-ignore\r\n  const { close } = useSwipeableItemParams()\r\n\r\n  return (\r\n    <View style={[globalStyles.row, styles.underlayLeft]}>\r\n      <View>\r\n        <TouchableOpacity\r\n          onPress={(e) => {\r\n            onDeleteButtonPress()\r\n            close()\r\n          }}\r\n        >\r\n          <Ionicons name=\"trash-outline\" size={14} color={palette.grayedOut} />\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  underlayLeft: {\r\n    flex: 1,\r\n    backgroundColor: palette.ongoingClass,\r\n    justifyContent: \"flex-end\",\r\n    alignItems: \"center\",\r\n    marginVertical: 2,\r\n    padding: 10,\r\n    borderRadius: 10,\r\n  },\r\n})\r\n","// web only.\r\n// service for saving edited schedules to local storage\r\n\r\n// TODO: resolve require cycle: EditedScheduleStorageService.ts -> services\\ScheduleLoaderService.ts -> EditedScheduleStorageService.ts\r\n\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\"\r\n\r\nimport { workDaysEnLower } from \"../../constants/Days\"\r\nimport ScheduleLoaderService from \"../ScheduleLoaderService/ScheduleLoaderService\"\r\nimport _ from \"lodash\"\r\nimport { ensureExtension } from \"../../utilities/utilities\"\r\nimport { IEditedScheduleStorageService, ScheduleWithMetadata } from \"./Types\"\r\nimport { IScheduleModel } from \"../../models/ScheduleModel/Types\"\r\n\r\n// singleton service\r\nexport default class EditedSchedulesStorageService implements IEditedScheduleStorageService {\r\n  private static instance: EditedSchedulesStorageService\r\n\r\n  static async GetInstance(): Promise<EditedSchedulesStorageService> {\r\n    if (!EditedSchedulesStorageService.instance) {\r\n      EditedSchedulesStorageService.instance = new EditedSchedulesStorageService()\r\n\r\n      await EditedSchedulesStorageService.instance.init()\r\n\r\n      console.log(\"EditedScheduleStorageService instance constructed successfully\")\r\n    }\r\n\r\n    return EditedSchedulesStorageService.instance\r\n  }\r\n\r\n  async init() {\r\n    let scheduleLoader = await ScheduleLoaderService.GetInstance()\r\n    // invalidate outdated edited schedules\r\n    const results = scheduleLoader.scheduleFiles.map(async (scheduleFile) => {\r\n      if (await this.isOutdated(scheduleFile.filename)) {\r\n        await this.removeEditedSchedule(scheduleFile.filename)\r\n      }\r\n    })\r\n\r\n    await Promise.all(results)\r\n  }\r\n\r\n  // copies regular schedule to local storage\r\n  async createVersionForEdits(schedule: IScheduleModel) {\r\n    // I wonder if this is enough\r\n    await this.saveEditedSchedule(schedule)\r\n    return schedule\r\n  }\r\n\r\n  // saves schedule with its metadata to local storage\r\n  async saveEditedSchedule(schedule: IScheduleModel): Promise<void> {\r\n    const scheduleLoader = await ScheduleLoaderService.GetInstance()\r\n    const scheduleMetadata = scheduleLoader.getScheduleFileMetadata(\r\n      scheduleLoader.getScheduleFileByFileName(ensureExtension(schedule.name, \".json\"))\r\n    )\r\n\r\n    let jsonToDump: ScheduleWithMetadata = {\r\n      metadata: scheduleMetadata,\r\n      scheduleDays: {},\r\n    }\r\n\r\n    workDaysEnLower.forEach((day, idx) => {\r\n      jsonToDump[\"scheduleDays\"][day] = schedule.scheduleDays[idx]\r\n    })\r\n\r\n    await AsyncStorage.setItem(ensureExtension(schedule.name, \".json\"), JSON.stringify(jsonToDump))\r\n  }\r\n\r\n  // gets edited schedule from local storage\r\n  async loadEditedSchedule(scheduleFileName: string): Promise<ScheduleWithMetadata | null> {\r\n    const scheduleWithMetadata = await AsyncStorage.getItem(scheduleFileName)\r\n\r\n    if (!scheduleWithMetadata) return null\r\n\r\n    const scheduleWithMetadataJSON: ScheduleWithMetadata = JSON.parse(scheduleWithMetadata)\r\n\r\n    return scheduleWithMetadataJSON\r\n  }\r\n\r\n  async isOutdated(scheduleFileName: string) {\r\n    let scheduleLoader = await ScheduleLoaderService.GetInstance()\r\n    let contentfulScheduleFile = scheduleLoader.getScheduleFileByFileName(scheduleFileName)\r\n\r\n    let editVer = await this.loadEditedSchedule(scheduleFileName)\r\n    if (!editVer) return false\r\n\r\n    // debugger\r\n\r\n    let editVerMetadata = editVer.metadata\r\n\r\n    let contentfulVerMetadata = scheduleLoader.getScheduleFileMetadata(contentfulScheduleFile)\r\n\r\n    return !_.isEqual(editVerMetadata, contentfulVerMetadata)\r\n  }\r\n\r\n  removeEditedSchedule(scheduleName: string) {\r\n    return AsyncStorage.removeItem(scheduleName)\r\n  }\r\n\r\n  async hasEditedVersion(scheduleName: string) {\r\n    const editedVersion = await this.loadEditedSchedule(scheduleName)\r\n    return editedVersion != null\r\n  }\r\n}\r\n","import _ from \"lodash\"\r\nimport { workDaysEnLower } from \"../../constants/Days\"\r\nimport { ScheduleDay } from \"../../models/ScheduleDay/ScheduleDay\"\r\nimport { ensureExtension } from \"../../utilities/utilities\"\r\nimport EditedSchedulesStorageService from \"../EditedScheduleStorageService/EditedScheduleStorageService\"\r\nimport ScheduleLoaderServiceBase from \"./ScheduleLoaderServiceBase\"\r\nimport { IScheduleModel } from \"../../models/ScheduleModel/Types\"\r\n\r\n/**\r\n * Web version of the ScheduleLoaderService\r\n */\r\nexport default class ScheduleLoaderService extends ScheduleLoaderServiceBase {\r\n  protected override async init() {\r\n    await this.getSchedulesFromContentful()\r\n    // replace contentful schedules with their user edited versions\r\n    await this.replaceContentfulSchedulesWithEditedVersions()\r\n\r\n    this.scheduleFiles = _.sortBy(this.scheduleFiles, (sf) => sf.filename)\r\n  }\r\n\r\n  async replaceContentfulSchedulesWithEditedVersions() {\r\n    const editedSchedulesStorage = await EditedSchedulesStorageService.GetInstance()\r\n\r\n    let editedCounterpartsPromises = this.scheduleFiles.map(async (sf) => {\r\n      // patch contentful schedules with edited versions\r\n      const editedSchedule = await editedSchedulesStorage.loadEditedSchedule(sf.filename)\r\n      if (editedSchedule) {\r\n        sf.json_parsed = editedSchedule.scheduleDays\r\n      }\r\n\r\n      return sf\r\n    })\r\n\r\n    let editedCounterparts = await Promise.all(editedCounterpartsPromises)\r\n\r\n    this.scheduleFiles = editedCounterparts\r\n  }\r\n\r\n  // persists schedule model into file\r\n  override async dumpSchedule(schedule: IScheduleModel) {\r\n    // get corresponding schedule file\r\n    let scheduleFile = this.getScheduleFileByFileName(ensureExtension(schedule.name, \".json\"))\r\n\r\n    let jsonToDump: {\r\n      [key: string]: ScheduleDay\r\n    } = {}\r\n\r\n    workDaysEnLower.forEach((day, idx) => {\r\n      jsonToDump[day] = schedule.scheduleDays[idx]\r\n    })\r\n\r\n    // replace .json_parsed with schedule contents\r\n    scheduleFile!.json_parsed = jsonToDump\r\n\r\n    const editedScheduleStorage = await EditedSchedulesStorageService.GetInstance()\r\n    await editedScheduleStorage.saveEditedSchedule(schedule)\r\n\r\n    return Promise.resolve()\r\n  }\r\n}\r\n","import * as FileSystem from \"expo-file-system\"\r\nimport _ from \"lodash\"\r\nimport NetInfo from \"@react-native-community/netinfo\"\r\n\r\nimport { workDaysEnLower } from \"../../constants/Days\"\r\nimport { ensureExtension, getContentfulClient, isRunningInBrowser } from \"../../utilities/utilities\"\r\nimport ExampleScheduleKN from \"../../assets/example_schedules/КН-example.json\"\r\nimport ExampleScheduleIST from \"../../assets/example_schedules/ІСТ-example.json\"\r\nimport ExampleScheduleTE from \"../../assets/example_schedules/ТЕ-example.json\"\r\n\r\nimport { ScheduleDay } from \"../../models/ScheduleDay/ScheduleDay\"\r\nimport { ScheduleFile, ScheduleFileMetadata } from \"./Types\"\r\nimport { IScheduleModel } from \"../../models/ScheduleModel/Types\"\r\n\r\n// This is a singleton service that loads schedules from local storage / contentful and provides them to the rest of the application\r\n// if no schedules are available (no schedules folder), it should retrieve them from contentful and store them locally\r\n// if schedules are indeed available, we gotta check whether they are up to date or not\r\n// for that we will have to rely on some additional field. Perhaps revision or perhaps creactedAt.\r\n// or perhaps both\r\n\r\n/**\r\n * Singleton service that loads schedules from Local Storage / Contentful and provides them to the rest of the application.\r\n */\r\nexport default class ScheduleLoaderServiceBase {\r\n  protected static instance: ScheduleLoaderServiceBase\r\n\r\n  scheduleFiles: ScheduleFile[] = []\r\n\r\n  pathToScheduleFolder = `${FileSystem.documentDirectory}schedules/`\r\n\r\n  // this function also properly returns child instance in child classes as well via dynamic access of class (.this is class here)\r\n  static async GetInstance(): Promise<ScheduleLoaderServiceBase> {\r\n    if (!this.instance) {\r\n      console.log(`[ScheduleLoader] Constructing instance of class ${this.name}`)\r\n\r\n      this.instance = new this()\r\n      await this.instance.init()\r\n\r\n      // log loaded schedule files\r\n      console.log(`[${this.name}] schedule loader service instance constructed successfully`)\r\n      console.log(`[${this.name}] schedule loader files:`)\r\n      this.instance.scheduleFiles.forEach((file) => console.log(`[${this.name}] file: ${file.filename}`))\r\n    }\r\n\r\n    return this.instance\r\n  }\r\n\r\n  protected constructor() {}\r\n\r\n  protected async init() {\r\n    // check whether schedules are available locally\r\n    const schedulesAvailableLocally = (await FileSystem.getInfoAsync(this.pathToScheduleFolder)).exists\r\n\r\n    // TODO: refactor try catches into one hoisted try catch\r\n    if (schedulesAvailableLocally) {\r\n      await this.getSchedulesFromFileSystem()\r\n\r\n      // check for updates\r\n      try {\r\n        await this.checkForUpdatesAsync()\r\n      } catch (e) {\r\n        this.getExampleSchedules()\r\n      }\r\n    } else {\r\n      // create schedules folder\r\n      await FileSystem.makeDirectoryAsync(this.pathToScheduleFolder, {\r\n        intermediates: true,\r\n      })\r\n\r\n      try {\r\n        await this.getSchedulesFromContentful()\r\n      } catch (e) {\r\n        this.getExampleSchedules()\r\n      }\r\n    }\r\n\r\n    this.scheduleFiles = _.sortBy(this.scheduleFiles, (sf) => sf.filename)\r\n  }\r\n\r\n  async getSchedulesFromFileSystem() {\r\n    console.log(`[Schedule Loader] schedules are available locally. loading...`)\r\n    let allScheduleFileNames = await FileSystem.readDirectoryAsync(this.pathToScheduleFolder)\r\n    // sort the filenames alphabetically\r\n    allScheduleFileNames.sort()\r\n\r\n    console.log(`[Schedule Loader] allScheduleFileNames: ${allScheduleFileNames}`)\r\n    const scheduleFiles: ScheduleFile[] = await Promise.all(\r\n      allScheduleFileNames.map(async (filename) => {\r\n        let file = await FileSystem.readAsStringAsync(`${this.pathToScheduleFolder}${filename}`)\r\n        let json = JSON.parse(file)\r\n        let { revision, createdAt, updatedAt, json_parsed } = json\r\n        return {\r\n          filename,\r\n          revision,\r\n          createdAt,\r\n          updatedAt,\r\n          json_parsed,\r\n        }\r\n      })\r\n    )\r\n\r\n    this.scheduleFiles = scheduleFiles\r\n    return scheduleFiles\r\n  }\r\n\r\n  /**\r\n   * Downloads schedules from contentful and sets them to .scheduleFiles.\r\n   * Also saves them to schedules folder (android only).\r\n   */\r\n  async getSchedulesFromContentful() {\r\n    // retrieve schedules from contentful\r\n    console.log(`[Schedule Loader] retrieving schedules from contentful`)\r\n\r\n    try {\r\n      var client = getContentfulClient()\r\n    } catch (e) {\r\n      return this.getExampleSchedules()\r\n    }\r\n    const assets = await client.getAssets({\r\n      limit: 1000,\r\n    })\r\n    console.log(`[Schedule Loader] retrieved ${assets.items.length} schedule assets from Contentful`)\r\n\r\n    // iterate over assets and download them\r\n\r\n    const scheduleFiles: ScheduleFile[] = await Promise.all(\r\n      assets.items.map(async (a) => {\r\n        const file = a.fields.file\r\n\r\n        const protocol = \"https:\"\r\n        const linkToFile = protocol + file.url\r\n\r\n        // get file located at url and temporarily store it in .json file as I don't know how to download it in memory\r\n        const linkToDestFile = `${this.pathToScheduleFolder}${file.fileName}`\r\n\r\n        var scheduleClassesJson: string\r\n\r\n        if (!isRunningInBrowser()) {\r\n          await FileSystem.downloadAsync(linkToFile, linkToDestFile)\r\n          scheduleClassesJson = await FileSystem.readAsStringAsync(linkToDestFile)\r\n        } else {\r\n          let res = await fetch(linkToFile)\r\n\r\n          const blob = await res.blob()\r\n          const data = await blob.text()\r\n\r\n          scheduleClassesJson = data\r\n        }\r\n\r\n        let scheduleFile: ScheduleFile = {\r\n          filename: file.fileName,\r\n          revision: a.sys.revision,\r\n          createdAt: a.sys.createdAt,\r\n          updatedAt: a.sys.updatedAt,\r\n          json_parsed: JSON.parse(scheduleClassesJson),\r\n        }\r\n\r\n        if (!isRunningInBrowser()) {\r\n          // save schedule classes json together with metadata to schedules folder\r\n          await FileSystem.writeAsStringAsync(linkToDestFile, JSON.stringify(scheduleFile))\r\n        }\r\n\r\n        return scheduleFile\r\n      })\r\n    )\r\n\r\n    this.scheduleFiles = scheduleFiles\r\n  }\r\n\r\n  getExampleSchedules() {\r\n    console.log(`[Schedule Loader] retrieving example schedules`)\r\n\r\n    const scheduleFiles: ScheduleFile[] = [\r\n      {\r\n        filename: \"КН-example.json\",\r\n        revision: 0,\r\n        createdAt: \"\",\r\n        updatedAt: \"\",\r\n        json_parsed: ExampleScheduleKN,\r\n      },\r\n      {\r\n        filename: \"ІСТ-example.json\",\r\n        revision: 0,\r\n        createdAt: \"\",\r\n        updatedAt: \"\",\r\n        json_parsed: ExampleScheduleIST,\r\n      },\r\n\r\n      {\r\n        filename: \"ТЕ-example.json\",\r\n        revision: 0,\r\n        createdAt: \"\",\r\n        updatedAt: \"\",\r\n        json_parsed: ExampleScheduleTE,\r\n      },\r\n    ]\r\n\r\n    this.scheduleFiles = scheduleFiles\r\n\r\n    return scheduleFiles\r\n  }\r\n\r\n  getScheduleFileByFileName(fileName: string): ScheduleFile | undefined {\r\n    return this.scheduleFiles.find((sf) => sf.filename === fileName)\r\n  }\r\n\r\n  // checks for updates and updates schedules if they are outdated\r\n  async checkForUpdatesAsync() {\r\n    let netInfo = await NetInfo.fetch()\r\n\r\n    if (!netInfo.isConnected || !netInfo.isInternetReachable) {\r\n      console.log(`[Schedule Loader] no internet connection. skipping update check`)\r\n      return\r\n    }\r\n\r\n    const client = getContentfulClient()\r\n\r\n    const assets = await client.getAssets({\r\n      limit: 1000,\r\n    })\r\n    console.log(`[Schedule Loader] retrieved ${assets.items.length} schedule assets from contentful`)\r\n\r\n    // iterate over assets and download their metadata\r\n    // TODO: dry up the duplicate\r\n\r\n    const scheduleFileMetadatas: (ScheduleFileMetadata & {\r\n      linkToFile: string\r\n    })[] = await Promise.all(\r\n      assets.items.map(async (item) => {\r\n        const file: AssetFile = item.fields.file\r\n\r\n        const protocol = \"https:\"\r\n        const linkToFile = protocol + file.url\r\n\r\n        let scheduleFileMetadata: ScheduleFileMetadata & {\r\n          linkToFile: string\r\n        } = {\r\n          filename: file.fileName,\r\n          revision: item.sys.revision,\r\n          createdAt: item.sys.createdAt,\r\n          updatedAt: item.sys.updatedAt,\r\n          linkToFile,\r\n        }\r\n\r\n        return scheduleFileMetadata\r\n      })\r\n    )\r\n\r\n    // update whatever schedules are outdated\r\n    const updatedScheduleFiles: ScheduleFile[] = await Promise.all(\r\n      scheduleFileMetadatas.map(async (sfm) => {\r\n        let oldSchedule = this.getScheduleFileByFileName(sfm.filename)\r\n        if (!oldSchedule) {\r\n          // schedule is new, download it\r\n          const linkToDestFile = `${this.pathToScheduleFolder}${sfm.filename}`\r\n          await FileSystem.downloadAsync(sfm.linkToFile, linkToDestFile)\r\n\r\n          let scheduleFile: ScheduleFile = {\r\n            filename: sfm.filename,\r\n            revision: sfm.revision,\r\n            createdAt: sfm.createdAt,\r\n            updatedAt: sfm.updatedAt,\r\n            json_parsed: JSON.parse(await FileSystem.readAsStringAsync(linkToDestFile)),\r\n          }\r\n\r\n          // write newly downloaded schedule to schedules folder\r\n          await FileSystem.writeAsStringAsync(linkToDestFile, JSON.stringify(scheduleFile))\r\n\r\n          return scheduleFile\r\n        } else {\r\n          // schedule exists, check if it's outdated\r\n          const isOutdated =\r\n            oldSchedule.revision < sfm.revision ||\r\n            new Date(oldSchedule.updatedAt) < new Date(sfm.updatedAt) ||\r\n            new Date(oldSchedule.createdAt) < new Date(sfm.createdAt)\r\n\r\n          //   console.log(`old schedule created at (date constructed from string): ${new Date(oldSchedule.createdAt)}`) // works\r\n          console.log(`[Schedule Loader] schedule ${sfm.filename} is outdated: ${isOutdated}`)\r\n          if (isOutdated) {\r\n            // schedule is outdated, download it\r\n            const linkToDestFile = `${this.pathToScheduleFolder}${sfm.filename}`\r\n            await FileSystem.downloadAsync(sfm.linkToFile, linkToDestFile)\r\n\r\n            let scheduleFile: ScheduleFile = {\r\n              json_parsed: JSON.parse(await FileSystem.readAsStringAsync(linkToDestFile)),\r\n              filename: sfm.filename,\r\n              revision: sfm.revision,\r\n              createdAt: sfm.createdAt,\r\n              updatedAt: sfm.updatedAt,\r\n            }\r\n\r\n            // write newly downloaded schedule to schedules folder (important)\r\n            await FileSystem.writeAsStringAsync(linkToDestFile, JSON.stringify(scheduleFile))\r\n\r\n            return scheduleFile\r\n          } else {\r\n            // schedule is up to date, do nothing\r\n            return oldSchedule\r\n          }\r\n        }\r\n      })\r\n    )\r\n\r\n    this.scheduleFiles = updatedScheduleFiles\r\n  }\r\n\r\n  getScheduleFileMetadata(scheduleFile: ScheduleFile): ScheduleFileMetadata | undefined {\r\n    if (!scheduleFile) {\r\n      return undefined\r\n    }\r\n\r\n    return {\r\n      filename: scheduleFile.filename,\r\n      revision: scheduleFile.revision,\r\n      createdAt: scheduleFile.createdAt,\r\n      updatedAt: scheduleFile.updatedAt,\r\n    }\r\n  }\r\n\r\n  // persists schedule model into file\r\n  async dumpSchedule(schedule: IScheduleModel) {\r\n    // get corresponding schedule file\r\n    let scheduleFile = this.getScheduleFileByFileName(ensureExtension(schedule.name, \".json\"))\r\n\r\n    let jsonToDump: {\r\n      [key: string]: ScheduleDay\r\n    } = {}\r\n\r\n    workDaysEnLower.forEach((day, idx) => {\r\n      jsonToDump[day] = schedule.scheduleDays[idx]\r\n    })\r\n\r\n    // replace .json_parsed with schedule contents\r\n    scheduleFile!.json_parsed = jsonToDump\r\n\r\n    // if (isRunningInBrowser()) {\r\n    //   const editedScheduleStorage = await EditedSchedulesStorageService.GetInstance()\r\n    //   await editedScheduleStorage.saveEditedSchedule(schedule)\r\n\r\n    //   return Promise.resolve()\r\n    // }\r\n\r\n    console.log(`[Schedule Loader] dumping schedule ${scheduleFile?.filename} to file`)\r\n    // write to file\r\n    return FileSystem.writeAsStringAsync(\r\n      `${this.pathToScheduleFolder}${scheduleFile!.filename}`,\r\n      JSON.stringify(scheduleFile)\r\n    )\r\n  }\r\n}\r\n","import * as Notifications from \"expo-notifications\"\r\nimport { Platform } from \"react-native\"\r\nimport { isRunningInBrowser } from \"../../utilities/utilities\"\r\nimport { ILocalNotificationsService } from \"./Types\"\r\n\r\n// expo notifications docs: https://docs.expo.dev/versions/latest/sdk/notifications/\r\n// Expo's Push Notification Tool: https://expo.dev/notifications\r\n\r\n// singleton\r\nexport default class LocalNotificationsService implements ILocalNotificationsService {\r\n  protected static instance: LocalNotificationsService\r\n  exampleNotificationContent: Notifications.NotificationContentInput = {\r\n    title: \"Мультимедійне видавництво\",\r\n    body: \"Миклушка І. З.\",\r\n    subtitle: \"[10:15] Пара починається\",\r\n    data: { someData: \"додаткова інформація тут\" },\r\n  }\r\n  notificationChannelId = \"interactive-schedule-notifications\"\r\n\r\n  static async GetInstance(): Promise<LocalNotificationsService> {\r\n    if (!this.instance) {\r\n      this.instance = new this()\r\n      await this.instance.init()\r\n      console.log(`[${this.name}] local notifications service instance constructed successfully`)\r\n    }\r\n\r\n    return this.instance\r\n  }\r\n\r\n  protected constructor() {}\r\n  cancelScheduledNotificationAsync(identifier: string): Promise<void> {\r\n    return Notifications.cancelScheduledNotificationAsync(identifier)\r\n  }\r\n\r\n  cancelAllScheduledNotificationsAsync(): Promise<void> {\r\n    return Notifications.cancelAllScheduledNotificationsAsync()\r\n  }\r\n  getAllScheduledNotificationsAsync(): Promise<Notifications.NotificationRequest[]> {\r\n    return Notifications.getAllScheduledNotificationsAsync()\r\n  }\r\n  checkPermissionsAsync(): Promise<Notifications.NotificationPermissionsStatus> {\r\n    return Notifications.getPermissionsAsync()\r\n  }\r\n\r\n  protected async init() {\r\n    Notifications.setNotificationHandler({\r\n      handleNotification: async () => ({\r\n        shouldShowAlert: true,\r\n        priority: Notifications.AndroidNotificationPriority.MAX,\r\n        shouldPlaySound: true,\r\n        shouldSetBadge: true,\r\n      }),\r\n    })\r\n    await this.registerNotificationsChannel()\r\n\r\n    if (!isRunningInBrowser()) {\r\n      let permissionsGranted = (await this.checkPermissionsAsync()).granted\r\n      if (!permissionsGranted) await Notifications.requestPermissionsAsync()\r\n\r\n      console.log(`[Local Notifications] permissions granted: ${permissionsGranted}`)\r\n    }\r\n\r\n    console.log(\"local notifications service initialized\")\r\n  }\r\n\r\n  async registerNotificationsChannel() {\r\n    if (Platform.OS === \"android\") {\r\n      // delete default notification channel that expo creates for you\r\n      await Notifications.deleteNotificationChannelAsync(\"default\")\r\n\r\n      Notifications.setNotificationChannelAsync(this.notificationChannelId, {\r\n        name: \"Сповіщення про початок пари\",\r\n        importance: Notifications.AndroidImportance.MAX,\r\n        vibrationPattern: [0, 250, 250, 250],\r\n        lightColor: \"#FF231F7C\",\r\n        lockscreenVisibility: Notifications.AndroidNotificationVisibility.PUBLIC,\r\n      })\r\n    }\r\n  }\r\n\r\n  async sendNotification(content: Notifications.NotificationContentInput) {\r\n    const message: Notifications.NotificationRequestInput = {\r\n      identifier: this.notificationChannelId,\r\n      content: {\r\n        ...content,\r\n        priority: \"high\",\r\n      },\r\n      // I have to set seconds to 1, otherwise the notification is not shown.\r\n      // I don't know whether it's a bug or something else\r\n      trigger: {\r\n        seconds: 1,\r\n        channelId: this.notificationChannelId,\r\n      },\r\n    }\r\n\r\n    Notifications.scheduleNotificationAsync(message).catch((e) => {\r\n      console.error(\"error while sending notification\")\r\n      console.log(\"...this is the notification that was supposed to be sent:\")\r\n      console.log(message)\r\n    })\r\n  }\r\n\r\n  async scheduleNotification(\r\n    content: Notifications.NotificationContentInput,\r\n    trigger: Notifications.NotificationTriggerInput\r\n  ) {\r\n    // TODO: narrow down types\r\n    if (trigger == null || typeof trigger != \"object\") {\r\n      throw new Error(\"trigger is not an object\")\r\n    }\r\n\r\n    // TODO: pass channel id to trigger\r\n\r\n    // random unique identifier will be generated if not specified\r\n    let notificationId = undefined\r\n\r\n    const message: Notifications.NotificationRequestInput = {\r\n      identifier: notificationId,\r\n      content: {\r\n        ...content,\r\n        priority: \"high\",\r\n      },\r\n      trigger: trigger,\r\n    }\r\n\r\n    let nextTriggerDate = await Notifications.getNextTriggerDateAsync(trigger)\r\n    let now = new Date()\r\n\r\n    if (nextTriggerDate == null && trigger.date >= now) {\r\n      throw new Error(\"nextTriggerDate is null for this notification: \" + trigger.date)\r\n    }\r\n\r\n    Notifications.scheduleNotificationAsync(message)\r\n  }\r\n\r\n  // - - - methods for testing - - -\r\n  // TODO: move to separate class\r\n\r\n  async sendExampleNotification() {\r\n    this.sendNotification(this.exampleNotificationContent)\r\n  }\r\n\r\n  async scheduleExampleNotificationViaDate(secondsFromNow = 5) {\r\n    let trigger: Notifications.NotificationTriggerInput = {\r\n      date: new Date(Date.now() + secondsFromNow * 1000),\r\n      channelId: this.notificationChannelId,\r\n    }\r\n\r\n    this.scheduleNotification(this.exampleNotificationContent, trigger)\r\n  }\r\n\r\n  async scheduleRepeatableExampleNotification() {\r\n    let trigger: Notifications.NotificationTriggerInput = {\r\n      seconds: 5,\r\n      repeats: true,\r\n      channelId: this.notificationChannelId,\r\n    }\r\n\r\n    this.scheduleNotification(this.exampleNotificationContent, trigger)\r\n  }\r\n\r\n  async scheduleRepeatableDailyExampleNotification() {\r\n    let trigger: Notifications.DailyTriggerInput = {\r\n      hour: 14,\r\n      minute: 41,\r\n      repeats: true,\r\n      channelId: this.notificationChannelId,\r\n    }\r\n\r\n    this.scheduleNotification(this.exampleNotificationContent, trigger)\r\n  }\r\n}\r\n","export enum Event {\r\n  SETTINGS_UPDATED = \"settings updated\",\r\n}\r\n","import AsyncStorage from \"@react-native-async-storage/async-storage\"\r\nimport EventEmitter from \"events\"\r\nimport ScheduleLoaderService from \"../ScheduleLoaderService/ScheduleLoaderService\"\r\nimport Constants from \"expo-constants\"\r\nimport * as Notifications from \"expo-notifications\"\r\nimport * as IntentLauncher from \"expo-intent-launcher\"\r\nimport { NOTIFICATIONS_CHANNEL_ID } from \"../../constants/Constants\"\r\nimport { STORAGE_KEY } from \"../../constants/Keys\"\r\nimport { Event } from \"../../constants/Events\"\r\nimport { ISettingsService, DisplayEmptyDaysMode, DisplayTeacherMode, ScheduleAppSettings } from \"./Types\"\r\n\r\n// update place 2 for new setting\r\n// as of now in order to add a new setting you have to modify 2 places\r\n// that doesn't sound great.\r\n// make sure you start with ScheduleAppSettings type\r\n\r\n/**\r\n * Represents a service for managing settings in the application.\r\n * Loads and saves settings to async storage. Provides a way to subscribe to settings change event.\r\n */\r\nexport default class SettingsService implements ISettingsService {\r\n  displayEmptyDays: DisplayEmptyDaysMode = DisplayEmptyDaysMode.Display\r\n  currentScheduleName = \"\" // Object.keys(scheduleFilesJSON)[0] // this has to match the name of the file in assets/schedules\r\n  notifyBeforeClass = true\r\n  notifyBeforeClassOffsetMinutes = 0\r\n  displayRoomNumber = true\r\n  displayTeacherName = DisplayTeacherMode.Full\r\n  // displayEmptyRows = true\r\n\r\n  private static instance: SettingsService\r\n\r\n  SettingsEventEmitter: EventEmitter = new EventEmitter()\r\n\r\n  static async GetInstance(): Promise<SettingsService> {\r\n    if (!SettingsService.instance) {\r\n      SettingsService.instance = new SettingsService()\r\n      await SettingsService.instance.init()\r\n      console.log(\"settings service instance constructed successfully\")\r\n    }\r\n\r\n    return SettingsService.instance\r\n  }\r\n\r\n  private async init() {\r\n    // get first schedule from ScheduleLoaderService and use it as default\r\n\r\n    let scheduleLoader = await ScheduleLoaderService.GetInstance()\r\n    this.currentScheduleName = scheduleLoader.scheduleFiles[0].filename\r\n\r\n    const fetchedSettings = await this.readFromStorage()\r\n    if (!fetchedSettings) return\r\n\r\n    // gotta make sure that each and every property is set\r\n\r\n    console.log(\"[SettingsService] fetched settings:\")\r\n    console.log(fetchedSettings)\r\n\r\n    console.log(\"settings fetched. Populating properties...\")\r\n    for (const [key, value] of Object.entries(fetchedSettings)) {\r\n      console.log(`[fetched settings] ${key}: ${value}`)\r\n      let key_ = key as keyof ScheduleAppSettings\r\n      ;(this[key_] as any) = value\r\n    }\r\n\r\n    console.log(`[SettingsService] current schedule name: ${this.currentScheduleName}`)\r\n    if (this.currentScheduleName == \"\" || this.currentScheduleName == \".json\") {\r\n      console.log(\"current schedule name is empty. setting it to default...\")\r\n      this.currentScheduleName = scheduleLoader.scheduleFiles[0].filename\r\n    }\r\n\r\n    // TODO: remove this before next publish\r\n    this.SettingsEventEmitter = new EventEmitter()\r\n  }\r\n\r\n  // TODO: move all settings to separate object\r\n  constructSettingsObjectFromProperties(): ScheduleAppSettings {\r\n    let settingsObject = { ...this }\r\n\r\n    // exclude event emitter from settings object\r\n\r\n    delete settingsObject.SettingsEventEmitter\r\n\r\n    return settingsObject\r\n  }\r\n\r\n  // TODO: Refactor\r\n  // \"settings updated\" event should be emmitted every time they're updated, but not necessarily saved to storage\r\n  async saveToStorage() {\r\n    try {\r\n      const settingsObject = this.constructSettingsObjectFromProperties()\r\n      const jsonValue = JSON.stringify(settingsObject)\r\n      await AsyncStorage.setItem(STORAGE_KEY, jsonValue)\r\n\r\n      this.SettingsEventEmitter.emit(Event.SETTINGS_UPDATED, this)\r\n    } catch (e) {\r\n      // saving error\r\n      console.error(e)\r\n    }\r\n  }\r\n\r\n  async readFromStorage(): Promise<ScheduleAppSettings | null> {\r\n    try {\r\n      console.log(\"trying to read settings from storage... storage key is: \", STORAGE_KEY)\r\n      const jsonValue = await AsyncStorage.getItem(STORAGE_KEY)\r\n      return jsonValue != null ? JSON.parse(jsonValue) : null\r\n    } catch (e) {\r\n      console.log(\"failed to parse whatever was read from settings. returning null...\")\r\n      // error reading value\r\n      console.error(e)\r\n      return null\r\n    }\r\n  }\r\n\r\n  async openAndroidSystemSettingsForNotifications() {\r\n    // const pkg = Constants.manifest.android.package\r\n    const pkg = Constants.expoConfig.android.package\r\n\r\n    const channel = await Notifications.getNotificationChannelAsync(NOTIFICATIONS_CHANNEL_ID)\r\n    const allChannels = await Notifications.getNotificationChannelsAsync()\r\n    console.log(\"[Notification Tests] All channels of this app: \")\r\n    console.log(allChannels)\r\n    console.log(\"[Notification Tests] Channel id for main channel: \" + channel?.id)\r\n\r\n    // TODO: fix expo go notification settings not opening when the code is running in expo go\r\n\r\n    IntentLauncher.startActivityAsync(\"android.settings.CHANNEL_NOTIFICATION_SETTINGS\", {\r\n      // data: \"package:\" + pkg,\r\n      extra: {\r\n        \"android.provider.extra.CHANNEL_ID\": pkg == \"host.exp.exponent\" ? \"expo-experience\" : NOTIFICATIONS_CHANNEL_ID,\r\n        \"android.provider.extra.APP_PACKAGE\": pkg,\r\n      },\r\n    })\r\n  }\r\n}\r\n","import { DateTriggerInput, NotificationContentInput, WeeklyTriggerInput } from \"expo-notifications\"\r\nimport ScheduleModel from \"../models/ScheduleModel/ScheduleModel\"\r\nimport { ScheduleDay } from \"../models/ScheduleDay/ScheduleDay\"\r\nimport { ScheduleClass } from \"../models/ScheduleClass/ScheduleClass\"\r\nimport GetWeekType from \"../utilities/getWeekType\"\r\nimport { createEvenlySpacedTimeSequence, setDayOnDate } from \"../utilities/utilities\"\r\nimport LocalNotificationsService from \"./LocalNotificationsService/LocalNotificationsService\"\r\nimport { REGLAMENT_DATA, SEMESTER_MONTHS } from \"../constants/Constants\"\r\nimport TeacherModel from \"../models/TeacherModel/TeacherModel\"\r\n\r\nexport default class ClassNotificationBuilder {\r\n  signature: string\r\n\r\n  hour: number\r\n  minute: number\r\n\r\n  notificationsService: LocalNotificationsService\r\n  schedule: ScheduleModel\r\n  class_: ScheduleClass\r\n\r\n  teachersTable = TeacherModel.GetInstance()\r\n\r\n  constructor(\r\n    schedule: ScheduleModel,\r\n    class_: ScheduleClass,\r\n    notificationsService: LocalNotificationsService,\r\n    negativeOffsetInMins: number\r\n  ) {\r\n    this.notificationsService = notificationsService\r\n\r\n    this.schedule = schedule\r\n    this.class_ = class_\r\n\r\n    this.signature = class_.getUniqueStringSignature()\r\n\r\n    // use reglament to determine hour and minute\r\n    let hourAndMinute = REGLAMENT_DATA[class_.index - 1][1]\r\n\r\n    this.hour = parseInt(hourAndMinute.split(\":\")[0])\r\n    this.minute = parseInt(hourAndMinute.split(\":\")[1])\r\n\r\n    this.minute -= negativeOffsetInMins\r\n    if (this.minute < 0) {\r\n      this.minute += 60\r\n      this.hour -= 1\r\n    }\r\n  }\r\n\r\n  constructBiweeklyNotificationsSequence(scheduleDay: ScheduleDay) {\r\n    // we need to generate lots of periodic biweekly notifications. Here a period is two weeks\r\n    // we need approx this number of notifications: n of months in semester * 2. n of months in semester = ~6\r\n\r\n    // construct notification date\r\n    let now = new Date()\r\n\r\n    let monthDay = now.getDate()\r\n    let notificationDate = new Date(now.getFullYear(), now.getMonth(), monthDay, this.hour, this.minute)\r\n    notificationDate = setDayOnDate(notificationDate, this.schedule.dayNames.indexOf(scheduleDay.name))\r\n\r\n    // construct future notification dates\r\n    let twoWeeksInSeconds = 60 * 60 * 24 * 7 * 2\r\n    // add additional week of offset if week types don't match. It's important to add 1 to week type enum returned by GetWeekType() because it's 0-indexed\r\n    let offset = GetWeekType() + 1 == this.class_.week ? 0 : twoWeeksInSeconds / 2\r\n    let offsetInMillis = offset * 1000\r\n    notificationDate = new Date(offsetInMillis + notificationDate.getTime())\r\n\r\n    let notificationDates = createEvenlySpacedTimeSequence(SEMESTER_MONTHS * 2, twoWeeksInSeconds, notificationDate)\r\n\r\n    // construct future notification objects for expo-notifications\r\n    let notificationObjects = notificationDates.map((notifDate) => {\r\n      let trigger: DateTriggerInput = {\r\n        date: notifDate,\r\n        channelId: this.notificationsService.notificationChannelId,\r\n      }\r\n\r\n      // format teacher name\r\n      let teacherName = this.class_.teacher\r\n      if (teacherName) {\r\n        teacherName =\r\n          typeof teacherName == \"string\" ? this.teachersTable.getFullNameBySurname(teacherName) : teacherName.join(\", \")\r\n      } else {\r\n        teacherName = \"\"\r\n      }\r\n\r\n      // pad hour and minute with 0 if they consist of only one digit\r\n      let hourPadded = this.hour < 10 ? \"0\" + this.hour : this.hour\r\n      let minutePadded = this.minute < 10 ? \"0\" + this.minute : this.minute\r\n\r\n      // construct notification object that will be passed to expo-notifications\r\n      let content: NotificationContentInput = {\r\n        title: this.class_.name,\r\n        body: teacherName,\r\n        subtitle: `[${hourPadded}:${minutePadded}] Пара починається`,\r\n      }\r\n\r\n      return { content: content, trigger: trigger }\r\n    })\r\n\r\n    return notificationObjects\r\n  }\r\n\r\n  constructWeeklyNotification(scheduleDay: ScheduleDay) {\r\n    // construct trigger object that will be passed to expo-notifications\r\n    let trigger: WeeklyTriggerInput = {\r\n      weekday: this.schedule.dayNames.indexOf(scheduleDay.name) + 1, // why do we add + 1 here? because weekday is 1-indexed, but dayNames is 0-indexed\r\n      hour: this.hour,\r\n      minute: this.minute,\r\n\r\n      repeats: true,\r\n      channelId: this.notificationsService.notificationChannelId,\r\n    }\r\n\r\n    // format teacher name\r\n    let teacherName = this.class_.teacher\r\n    if (teacherName) {\r\n      teacherName =\r\n        typeof teacherName == \"string\" ? this.teachersTable.getFullNameBySurname(teacherName) : teacherName.join(\", \")\r\n    } else {\r\n      teacherName = \"\"\r\n    }\r\n\r\n    // pad hour and minute with 0 if they consist of only one digit\r\n    let hourPadded = this.hour < 10 ? \"0\" + this.hour : this.hour\r\n    let minutePadded = this.minute < 10 ? \"0\" + this.minute : this.minute\r\n\r\n    // construct notification object that will be passed to expo-notifications\r\n    const weeklyNotif = {\r\n      content: {\r\n        title: this.class_.name,\r\n        body: teacherName,\r\n        subtitle: `[${hourPadded}:${minutePadded}] Пара починається`,\r\n      },\r\n      trigger: trigger,\r\n    }\r\n\r\n    return weeklyNotif\r\n  }\r\n}\r\n","import ScheduleModel from \"../models/ScheduleModel/ScheduleModel\"\r\nimport LocalNotificationsService from \"./LocalNotificationsService/LocalNotificationsService\"\r\nimport SettingsService from \"./SettingsService/SettingsService\"\r\nimport ClassNotificationBuilder from \"./ClassNotificationBuilder\"\r\nimport { isRunningInBrowser } from \"../utilities/utilities\"\r\n\r\n// TODO: Read about override keyword in TypeScript\r\n\r\n//\r\n/**\r\n * Singleton service. Main function is constructing and registering notifications for entire schedule.\r\n */\r\nexport default class ScheduleNotificationsService extends LocalNotificationsService {\r\n  onConfigureNotificationsForScheduleStart: null | (() => void) = null\r\n  onConfigureNotificationsForScheduleEnd: null | (() => void) = null\r\n\r\n  protected static instance: ScheduleNotificationsService\r\n\r\n  static async GetInstance(): Promise<ScheduleNotificationsService> {\r\n    if (!this.instance) {\r\n      this.instance = new ScheduleNotificationsService()\r\n      await this.instance.init()\r\n      console.log(`[${this.name}] service instance constructed successfully`)\r\n    }\r\n\r\n    return this.instance\r\n  }\r\n\r\n  async configureNotificationsForSchedule(schedule: ScheduleModel) {\r\n    console.log(`[configure notifications] configuring notifications for schedule ${schedule.name}`)\r\n    this.onConfigureNotificationsForScheduleStart?.call(this)\r\n\r\n    // get notifications service and settings service\r\n    const notificationsService = await LocalNotificationsService.GetInstance()\r\n    const settingsService = await SettingsService.GetInstance()\r\n\r\n    // check whether notifications are enabled\r\n    if (!isRunningInBrowser() && settingsService.notifyBeforeClass) {\r\n      // if notifications are enabled, then schedule notifications for each class\r\n      // make sure to not register duplicate notifications by either checking for duplicates or deleting all notifications before setting any\r\n      await notificationsService.cancelAllScheduledNotificationsAsync()\r\n\r\n      const configureDays = schedule.scheduleDays.map(async (day) => {\r\n        const configureDayClasses = day.classes.map(async (class_) => {\r\n          let notifBuilder = new ClassNotificationBuilder(\r\n            schedule,\r\n            class_,\r\n            notificationsService,\r\n            settingsService.notifyBeforeClassOffsetMinutes\r\n          )\r\n\r\n          if (class_.isBiweekly) {\r\n            let notifications = notifBuilder.constructBiweeklyNotificationsSequence(day)\r\n\r\n            await Promise.all(\r\n              notifications.map((notif) => {\r\n                return notificationsService.scheduleNotification(notif.content, notif.trigger)\r\n              })\r\n            )\r\n          } else {\r\n            let weeklyNotif = notifBuilder.constructWeeklyNotification(day)\r\n\r\n            return await notificationsService.scheduleNotification(weeklyNotif.content, weeklyNotif.trigger)\r\n          }\r\n        })\r\n\r\n        await Promise.all(configureDayClasses)\r\n      })\r\n\r\n      await Promise.all(configureDays)\r\n    }\r\n\r\n    this.onConfigureNotificationsForScheduleEnd?.call(this)\r\n  }\r\n}\r\n","export enum EditorStackRoutes {\r\n  EDITOR = \"Editor\",\r\n  SCHEDULE_CLASS_FORM = \"ScheduleClassForm\",\r\n}\r\n","export const NoClassesText = [\r\n  \"Пар немає\",\r\n  \"Чудовий день (бо пар нема)\",\r\n  \"Просили передати, що пар не буде\",\r\n  \"Пар не буде, сьогодні чілимо\",\r\n  \"Академ. вихідний\",\r\n]\r\n","import { StyleSheet } from \"react-native\"\r\n\r\nimport { FontName } from \"../../../constants/Fonts\"\r\nimport { palette, globalStyles } from \"../../../styles/global\"\r\n\r\nexport const SDstyles = StyleSheet.create({\r\n  noClassesText: {\r\n    fontSize: 14,\r\n    marginVertical: 10,\r\n    justifyContent: \"center\",\r\n    alignSelf: \"center\",\r\n\r\n    fontFamily: FontName.Montserrat600,\r\n\r\n    color: palette.grayedOut,\r\n  },\r\n\r\n  fadedDayContainerView: {\r\n    opacity: 0.5,\r\n  },\r\n\r\n  dayNameHeader: {\r\n    fontFamily: FontName.Montserrat600,\r\n    fontSize: 14,\r\n    ...globalStyles.sectionHeader,\r\n    color: palette.text,\r\n  },\r\n\r\n  scheduleDayCard: {\r\n    marginTop: 5,\r\n    marginBottom: 15,\r\n    marginHorizontal: 5,\r\n    borderRadius: 6,\r\n    backgroundColor: \"white\",\r\n\r\n    paddingVertical: 2,\r\n    paddingHorizontal: 5,\r\n\r\n    elevation: 1,\r\n    shadowOffset: { width: 1, height: 1 },\r\n    shadowColor: \"#333\",\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 2,\r\n  },\r\n\r\n  row: {\r\n    flexDirection: \"row\",\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: 15,\r\n  },\r\n})\r\n","import React, { useCallback, useContext, useEffect, useRef, useState } from \"react\"\r\nimport { Text, View, ActivityIndicator } from \"react-native\"\r\nimport { globalStyles, palette } from \"../../../styles/global\"\r\nimport { ScheduleClassFields } from \"../../../models/ScheduleClass/Types\"\r\nimport { ScheduleClass } from \"../../../models/ScheduleClass/ScheduleClass\"\r\nimport _ from \"lodash\"\r\nimport ScheduleClassComponent from \"../ScheduleClassComponent/ScheduleClass\"\r\nimport Separator from \"../../shared/Separator\"\r\nimport GetWeekType from \"../../../utilities/getWeekType\"\r\nimport { FlatList, TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport { useNavigation } from \"@react-navigation/native\"\r\nimport SwipeableItem from \"react-native-swipeable-item\"\r\nimport UnderlayRightSide from \"../../ScheduleEditorComponents/ScheduleClassUnderlay\"\r\nimport DraggableFlatList from \"react-native-draggable-flatlist\"\r\nimport AppText from \"../../shared/AppText\"\r\nimport { mapUkrWorkDayToEnWorkDay } from \"../../../constants/Days\"\r\nimport ScheduleLoaderService from \"../../../services/ScheduleLoaderService/ScheduleLoaderService\"\r\nimport ScheduleNotificationsService from \"../../../services/ScheduleNotificationsService\"\r\nimport SettingsService from \"../../../services/SettingsService/SettingsService\"\r\nimport { DisplayEmptyDaysMode } from \"../../../services/SettingsService/Types\"\r\nimport { EditorStackRoutes } from \"../../../routes/EditorStackRoutes\"\r\nimport { SettingsContext } from \"../../../contexts/settingsContext\"\r\nimport { NoClassesText } from \"../../../constants/Descriptions\"\r\nimport { SDstyles } from \"./Styles\"\r\nimport { MAX_CLASSES_PER_DAY } from \"../../../constants/Constants\"\r\nimport { ScheduleDayComponentProps } from \"./Types\"\r\n\r\n// TODO: accelerate disengage time once an item gets dropped into new slot\r\n\r\nexport default function ScheduleDayComponent({\r\n  classesCollection,\r\n  scheduleObject,\r\n  dayName,\r\n  scheduleDay,\r\n  displayRoomNumber,\r\n  weekType = GetWeekType(),\r\n  fade,\r\n  isEditable = false,\r\n}: ScheduleDayComponentProps): JSX.Element {\r\n  if (scheduleDay == undefined) {\r\n    // if schedule day is not loaded yet, display loading indicator\r\n    return (\r\n      <View style={SDstyles.scheduleDayCard}>\r\n        <Text style={globalStyles.dayNameHeader}>{dayName}</Text>\r\n        <View>\r\n          <View style={globalStyles.centered}>\r\n            <ActivityIndicator size=\"large\" color={palette.navigationBackground} />\r\n          </View>\r\n        </View>\r\n      </View>\r\n    )\r\n  }\r\n\r\n  const settings = useContext(SettingsContext)\r\n\r\n  const configureNotificationsCallback = useCallback(\r\n    // debounce to prevent multiple calls in short period of time\r\n    _.debounce(async (updatedSchedule) => {\r\n      let scheduleNotificationService = await ScheduleNotificationsService.GetInstance()\r\n      scheduleNotificationService.configureNotificationsForSchedule(updatedSchedule)\r\n    }, 3000),\r\n    []\r\n  )\r\n\r\n  let navigation = useNavigation()\r\n\r\n  let [classes, setClasses] = useState<ScheduleClass[]>([])\r\n  let dayNameEnRef = useRef(mapUkrWorkDayToEnWorkDay(dayName).toLowerCase())\r\n\r\n  function saveEditedClasses(classes: ScheduleClass[]) {\r\n    console.log(\"saving edited classes\")\r\n    let updatedSchedule = scheduleObject\r\n    let classesWithoutPlaceholders = classes.filter((class_) => !class_.isSampleClass())\r\n\r\n    let thisDay = updatedSchedule.scheduleDays.find((day) => day.name == dayNameEnRef.current)\r\n    // construct new classes array with classes of other week preserved\r\n\r\n    let biweeklyClassesOfOtherWeek = thisDay!.classes.filter(\r\n      (class_) => class_.isBiweekly && class_.week != weekType + 1\r\n    )\r\n\r\n    thisDay!.classes = [...classesWithoutPlaceholders, ...biweeklyClassesOfOtherWeek]\r\n\r\n    ScheduleLoaderService.GetInstance().then((instance) => {\r\n      instance.dumpSchedule(updatedSchedule)\r\n    })\r\n\r\n    SettingsService.GetInstance().then((instance) => {\r\n      if (instance.notifyBeforeClass) {\r\n        configureNotificationsCallback(updatedSchedule)\r\n      }\r\n    })\r\n  }\r\n\r\n  // any time new updated classes collection prop is passed, add placeholders to it and update state\r\n  // it also initializes classes state on first render\r\n  useEffect(() => {\r\n    let placeholderClasses = addPlaceholders(classesCollection)\r\n    // sort by index in ascending order\r\n    let sortedClasses = _.sortBy(placeholderClasses, (class_) => class_.index)\r\n\r\n    setClasses(sortedClasses)\r\n  }, [classesCollection])\r\n\r\n  useEffect(() => {\r\n    console.log(\"mounting schedule day component\")\r\n  }, [])\r\n\r\n  // pads classes array with placeholder classes in order to have MAX_CLASSES_PER_DAY classes total for editing purposes\r\n  function addPlaceholders(classes: ScheduleClass[]) {\r\n    if (!isEditable) {\r\n      return classes\r\n    }\r\n\r\n    let extendedContainer: ScheduleClass[] = new Array(MAX_CLASSES_PER_DAY).fill(undefined)\r\n    extendedContainer = extendedContainer.map((_, idx) => {\r\n      let class_ = classes.find((class_) => class_.index == idx + 1)\r\n      const shouldCreatePlaceholderClass = class_ == undefined\r\n\r\n      if (shouldCreatePlaceholderClass) {\r\n        return ScheduleClass.GetPlaceholder(dayNameEnRef.current, idx + 1, (weekType + 1) as 1 | 2)\r\n      } else {\r\n        return class_\r\n      }\r\n    })\r\n\r\n    return extendedContainer\r\n  }\r\n\r\n  // flat list doesn't suppress scroll events while nested inside ScrollView. Flat list is preferrable if component is not editable\r\n  const ListComponent = isEditable ? DraggableFlatList : FlatList\r\n\r\n  return (\r\n    <View key={dayName + weekType}>\r\n      <Text style={SDstyles.dayNameHeader}>{dayName}</Text>\r\n      <View\r\n        style={[\r\n          SDstyles.scheduleDayCard,\r\n          classes.length == 0 && settings?.displayEmptyDays == DisplayEmptyDaysMode.Darken\r\n            ? SDstyles.fadedDayContainerView\r\n            : {},\r\n        ]}\r\n      >\r\n        <ListComponent\r\n          data={classes}\r\n          keyExtractor={(item) => item.index + \"\" + item.week}\r\n          onDragEnd={({ data }) => {\r\n            // reindex\r\n            data = data.map((class_, idx) => {\r\n              class_.index = idx + 1\r\n              return class_\r\n            })\r\n\r\n            // TODO: Refactor into one function\r\n            setClasses(data)\r\n            saveEditedClasses(data)\r\n          }}\r\n          ListEmptyComponent={() => {\r\n            return (\r\n              <AppText style={SDstyles.noClassesText} testID=\"noClassesText\">\r\n                {_.sample(NoClassesText)}\r\n              </AppText>\r\n            )\r\n          }}\r\n          scrollEnabled={false}\r\n          nestedScrollEnabled={false}\r\n          ItemSeparatorComponent={() => {\r\n            return <Separator width=\"97%\" color=\"rgba(217, 217, 217, 0.4)\" upperElement={true} lowerElement={true} /> // TODO: Refactor\r\n          }}\r\n          // @ts-ignore\r\n          renderItem={({ item, drag, isActive }) => {\r\n            let class_ = item\r\n            let idx = item.index - 1\r\n\r\n            // normal class component\r\n            let scheduleClassComponent = (\r\n              <ScheduleClassComponent\r\n                displayRoomNumber={displayRoomNumber}\r\n                idx={idx}\r\n                key={idx + \"\" + class_.week}\r\n                scheduleClassInstance={class_}\r\n                isEditable={isEditable}\r\n                highlightAsOngoing={isActive}\r\n              />\r\n            )\r\n\r\n            const onDeleteButtonPressed = () => {\r\n              let filteredClasses = classes.filter((class_) => class_.index != idx + 1)\r\n              let filteredClassesWithPlaceholders = addPlaceholders(filteredClasses)\r\n              setClasses(filteredClassesWithPlaceholders)\r\n              saveEditedClasses(filteredClassesWithPlaceholders)\r\n            }\r\n\r\n            // editable class component\r\n            let editableScheduleClassWrapper = (\r\n              <SwipeableItem\r\n                key={idx + \"\" + class_.week}\r\n                // item={item}\r\n                renderUnderlayLeft={() => (\r\n                  <UnderlayRightSide\r\n                    onDeleteButtonPress={() => {\r\n                      onDeleteButtonPressed()\r\n                    }}\r\n                  />\r\n                )}\r\n                // renderUnderlayRight={() => <UnderlayLeft />}\r\n                snapPointsLeft={[50]} // snap points for right side underlay\r\n                snapPointsRight={[0]} // disable left side underlay\r\n                activationThreshold={10}\r\n              >\r\n                <TouchableOpacity\r\n                  onPress={(e) => {\r\n                    navigation.push(EditorStackRoutes.SCHEDULE_CLASS_FORM, {\r\n                      scheduleClass: class_,\r\n                      currentlyViewedWeek: weekType,\r\n                      onFormDataUpdated: (values: ScheduleClassFields) => {\r\n                        let updatedClasses = classes.map((class_) => {\r\n                          if (class_.index == idx + 1) {\r\n                            // process the values\r\n                            let teacher = values.teacher.split(\",\").map((t: string) => t.trim())\r\n                            let room = values.room.split(\",\").map((r: string) => r.trim())\r\n                            let isBiweekly =\r\n                              typeof values.isBiweekly == \"string\" ? JSON.parse(values.isBiweekly) : values.isBiweekly\r\n\r\n                            let wasBiweekly = class_.isBiweekly\r\n\r\n                            // if class wasn't biweekly and now it is, update week to currently viewed week\r\n                            if (!wasBiweekly && isBiweekly) {\r\n                              console.log(\"wasn't biweekly and now it is\")\r\n                              console.log(\"new weekType will be:\", weekType + 1)\r\n                              class_.isBiweekly = isBiweekly\r\n\r\n                              class_.setWeek((weekType + 1) as 1 | 2)\r\n                            }\r\n\r\n                            return new ScheduleClass(\r\n                              { ...class_, ...values, teacher, room, isBiweekly },\r\n                              dayNameEnRef.current\r\n                            )\r\n                          } else {\r\n                            return class_\r\n                          }\r\n                        })\r\n\r\n                        setClasses(updatedClasses)\r\n                        saveEditedClasses(updatedClasses)\r\n                      },\r\n                    })\r\n                  }}\r\n                  onLongPress={drag}\r\n                >\r\n                  {scheduleClassComponent}\r\n                </TouchableOpacity>\r\n              </SwipeableItem>\r\n            )\r\n\r\n            return <View>{isEditable ? editableScheduleClassWrapper : scheduleClassComponent}</View>\r\n          }}\r\n        />\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n","import GetWeekType from \"../../utilities/getWeekType\"\r\nimport { ScheduleClass } from \"../ScheduleClass/ScheduleClass\"\r\nimport { IScheduleClass } from \"../ScheduleClass/Types\"\r\nimport { IScheduleDay } from \"./Types\"\r\n\r\nexport class ScheduleDay implements IScheduleDay {\r\n  classes: ScheduleClass[]\r\n  name: string\r\n\r\n  constructor(name: string, classes: IScheduleClass[]) {\r\n    this.classes = classes.map((class_) => new ScheduleClass(class_, name))\r\n    this.name = name\r\n  }\r\n\r\n  getCurrentWeekClasses(): ScheduleClass[] {\r\n    let currentWeekType = GetWeekType() + 1\r\n    let currentWeekClasses = this.classes.filter((class_) => !class_.isBiweekly || class_.week == currentWeekType)\r\n    return currentWeekClasses\r\n  }\r\n\r\n  // пари по чисельнику\r\n  getNominatorClasses(): ScheduleClass[] {\r\n    let nominatorClasses = this.classes.filter((class_) => !class_.isBiweekly || class_.week == 1)\r\n    return nominatorClasses\r\n  }\r\n\r\n  // пари по знаменнику\r\n  getDenominatorClasses(): ScheduleClass[] {\r\n    let denominatorClasses = this.classes.filter((class_) => !class_.isBiweekly || class_.week == 2)\r\n    return denominatorClasses\r\n  }\r\n\r\n  getMatchingClassOfOtherWeek(class_: ScheduleClass) {\r\n    if (!class_.isBiweekly) return null\r\n\r\n    let otherWeek = class_.week == 1 ? 2 : 1\r\n    let index = class_.index\r\n\r\n    let matchingClass = this.classes.find((class_) => class_.index == index && class_.week == otherWeek)\r\n\r\n    return matchingClass\r\n  }\r\n}\r\n","import { ensureNoExtension } from \"../../utilities/utilities\"\r\nimport ScheduleLoaderService from \"../../services/ScheduleLoaderService/ScheduleLoaderService\"\r\nimport EditedSchedulesStorageService from \"../../services/EditedScheduleStorageService/EditedScheduleStorageService\"\r\nimport { ScheduleClass } from \"../ScheduleClass/ScheduleClass\"\r\nimport { IScheduleClass } from \"../ScheduleClass/Types\"\r\nimport { ScheduleDay } from \"../ScheduleDay/ScheduleDay\"\r\nimport { IScheduleModel, ScheduleDaysJson } from \"./Types\"\r\n\r\nexport default class ScheduleModel implements IScheduleModel {\r\n  name: string\r\n  specialtyName: string\r\n  year: number\r\n\r\n  // TODO: move to constants\r\n  dayNames = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"].map((day) =>\r\n    day.toLowerCase()\r\n  )\r\n  weekendDays = [\"saturday\", \"sunday\"]\r\n  scheduleDays = new Array<ScheduleDay>()\r\n\r\n  constructor(name: string, specialtyName: string, year: number) {\r\n    this.name = name\r\n    this.specialtyName = specialtyName\r\n    this.year = year\r\n  }\r\n\r\n  setSchedule(data: ScheduleDaysJson) {\r\n    // console.log(\"[Schedule Model] processing raw schedule data \", data)\r\n\r\n    console.log(`[Schedule Model] setting schedule from the object:`)\r\n    console.log(data)\r\n\r\n    this.dayNames.forEach((day) => {\r\n      if (this.weekendDays.includes(day)) return\r\n\r\n      let dayClasses: IScheduleClass[] = data[day].classes\r\n      let scheduleDay = new ScheduleDay(day, dayClasses)\r\n      this.scheduleDays.push(scheduleDay)\r\n    })\r\n\r\n    console.log(\"[Schedule Model] loaded schedule from imported object\")\r\n  }\r\n\r\n  loadScheduleFromJSONFile() {}\r\n  loadScheduleFromImportedObject(objectName: string) {\r\n    throw new Error(\"Method not supported.\")\r\n  }\r\n\r\n  async getScheduleFromScheduleLoader(scheduleFileName: string) {\r\n    let scheduleLoader = await ScheduleLoaderService.GetInstance()\r\n    let scheduleFile = scheduleLoader.scheduleFiles.find((file) => file.filename.startsWith(scheduleFileName))\r\n\r\n    if (!scheduleFile) {\r\n      console.log(`[Schedule Model] schedule file ${scheduleFileName} not found`)\r\n      // TODO: move out of the model and to UI\r\n      // ToastAndroid.show(\"Не вдалось завантажити розклад\", ToastAndroid.SHORT)\r\n\r\n      return\r\n    }\r\n\r\n    this.name = ensureNoExtension(scheduleFile.filename, \".json\")\r\n\r\n    console.log(`[Schedule Model] loading schedule from Schedule Loader: ${this.name}`)\r\n\r\n    // @ts-expect-error\r\n    let data: ScheduleDaysJson = scheduleFile.json_parsed\r\n\r\n    this.setSchedule(data)\r\n  }\r\n\r\n  async getScheduleFromEditedSchedulesStorage(scheduleFileName: string) {\r\n    let editedScheduleService = await EditedSchedulesStorageService.GetInstance()\r\n    let schedule = await editedScheduleService.loadEditedSchedule(scheduleFileName)\r\n\r\n    if (!schedule) {\r\n      console.log(`[Schedule Model] schedule file ${scheduleFileName} not found`)\r\n      return\r\n    }\r\n\r\n    this.name = ensureNoExtension(schedule.metadata.filename, \".json\")\r\n    this.setSchedule(schedule.scheduleDays)\r\n  }\r\n\r\n  getCurrentClass(): ScheduleClass | null {\r\n    const dayIndex = new Date().getDay()\r\n    const isWeekEnd = dayIndex == 0 || dayIndex == 6\r\n\r\n    if (isWeekEnd) return null\r\n\r\n    const todayClasses = this.scheduleDays[dayIndex - 1].classes\r\n    if (todayClasses.length == 0) return null\r\n\r\n    let currentClass = null\r\n\r\n    todayClasses.forEach((class_) => {\r\n      if (class_.isCurrent()) {\r\n        currentClass = class_\r\n      }\r\n    })\r\n\r\n    return currentClass\r\n  }\r\n}\r\n","import { StyleSheet } from \"react-native\"\r\n\r\nimport { FontName } from \"../../constants/Fonts\"\r\nimport { globalStyles, palette } from \"../../styles/global\"\r\n\r\nexport const styles = StyleSheet.create({\r\n  modal: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"red\", // not gonna work cause it's transparent\r\n  },\r\n\r\n  horizontalFlex: {\r\n    ...globalStyles.horizontalCenteredFlex,\r\n  },\r\n\r\n  searchBarContainer: {\r\n    marginLeft: -4,\r\n    marginVertical: 10,\r\n    backgroundColor: \"#F2F2F2\",\r\n    borderRadius: 7,\r\n    padding: 5,\r\n    paddingVertical: 2,\r\n  },\r\n\r\n  searchBar: {\r\n    ...globalStyles.searchBar,\r\n  },\r\n\r\n  modalContentContainer: {\r\n    ...globalStyles.modalContentContainer,\r\n    // top: \"5%\",\r\n  },\r\n\r\n  overlay: {\r\n    backgroundColor: \"rgba(0, 0, 0, 0.25)\",\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n\r\n  option: {\r\n    fontFamily: FontName.Montserrat500,\r\n    color: palette.text,\r\n    width: \"100%\",\r\n    marginVertical: 10,\r\n  },\r\n\r\n  selectedOption: {\r\n    fontFamily: FontName.Montserrat600,\r\n  },\r\n\r\n  separator: {\r\n    height: 1, // haha\r\n    width: \"100%\",\r\n    marginVertical: 6,\r\n    backgroundColor: \"#E6E6E6\",\r\n  },\r\n\r\n  header: {\r\n    fontFamily: FontName.MontserratBold,\r\n    fontSize: 20,\r\n    marginBottom: 10,\r\n    color: palette.text,\r\n  },\r\n\r\n  closeButton: {\r\n    backgroundColor: \"#FFFFFF\",\r\n    borderWidth: 1,\r\n    borderColor: \"#E6E6E6\",\r\n    padding: 10,\r\n    paddingHorizontal: 30,\r\n    marginTop: 10,\r\n    // borderRadius: 10,\r\n    shadowColor: \"rgba(0,0,0,1)\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 1,\r\n    },\r\n    elevation: 0.2,\r\n    shadowOpacity: 0.0,\r\n    shadowRadius: 0,\r\n    borderRadius: 10,\r\n  },\r\n\r\n  closeButtonText: {\r\n    fontFamily: FontName.Montserrat600,\r\n    color: palette.grayedOut,\r\n    fontSize: 16,\r\n  },\r\n\r\n  checkIcon: {\r\n    position: \"absolute\",\r\n    right: 0,\r\n  },\r\n})\r\n","import React, { useEffect } from \"react\"\r\nimport { View, Text, Modal, Pressable, ScrollView, useWindowDimensions } from \"react-native\"\r\nimport { globalStyles, palette } from \"../../styles/global\"\r\nimport { TextInput } from \"react-native-gesture-handler\"\r\nimport { Ionicons } from \"@expo/vector-icons\"\r\nimport AppText from \"../shared/AppText\"\r\nimport { styles } from \"./Styles\"\r\nimport { OptionPickerModalProps } from \"./Types\"\r\nimport { render } from \"@testing-library/react-native\"\r\n\r\n// TODO: fix modal content overflowing when keyboard is shown\r\n// TODO: refactor onClose to something more understandable\r\n\r\n/**\r\n * Filters options based on search query. Case insensitive.\r\n */\r\nfunction FilterOptions(options: string[], searchQuery: string) {\r\n  searchQuery = searchQuery.trim().toLowerCase()\r\n\r\n  return options.filter((option) => option.toLowerCase().includes(searchQuery))\r\n}\r\n\r\nexport default function OptionPickerModal<OptionT = string>({\r\n  hasSearchBar = true,\r\n  headerText = \"\",\r\n  isOpen = false,\r\n  displaySeparators = true,\r\n  options: optionsParam,\r\n  selectedOption: selectedOptionParam,\r\n  renderItem,\r\n  onCloseModal: onCloseModalCallback,\r\n  onSelected,\r\n  optionIcon,\r\n  isOptionSelectable = true,\r\n}: OptionPickerModalProps<OptionT>) {\r\n  const { height: windowHeight } = useWindowDimensions()\r\n\r\n  const [options, _] = React.useState<OptionT[]>(optionsParam)\r\n  const [searchQuery, setSearchQuery] = React.useState<string>(\"\")\r\n\r\n  // filter options if search bar is present\r\n  const filteredOptions =\r\n    hasSearchBar && typeof options[0] == \"string\" ? FilterOptions(options as string[], searchQuery) : options\r\n\r\n  const [selectedOption, setSelectedOption] = React.useState<OptionT>(selectedOptionParam)\r\n\r\n  console.log(\"selectedOption in schedule picker modal:\", selectedOption)\r\n\r\n  const closeModal = () => {\r\n    setSearchQuery(\"\")\r\n    onCloseModalCallback()\r\n    console.log(\"cleared search query and closed schedule picker modal\")\r\n  }\r\n\r\n  useEffect(() => {\r\n    // return umount callback\r\n    return () => {\r\n      console.log(\"unmounting schedule picker modal\")\r\n      setSearchQuery(\"\")\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <Modal animationType=\"fade\" transparent={true} style={styles.modal} visible={isOpen}>\r\n      <View style={styles.overlay} />\r\n      <View style={styles.modalContentContainer}>\r\n        <View style={{ width: \"100%\" }}>\r\n          <Text style={styles.header}>{headerText ?? \"\"}</Text>\r\n          <View style={[styles.horizontalFlex, styles.searchBarContainer, !hasSearchBar ? globalStyles.noDisplay : {}]}>\r\n            <Ionicons name=\"search-outline\" size={14} style={{ marginHorizontal: 5 }} color={palette.grayedOut} />\r\n            <TextInput style={styles.searchBar} onChangeText={setSearchQuery} placeholder=\"Пошук групи\" />\r\n          </View>\r\n        </View>\r\n        <ScrollView style={{ width: \"100%\", height: 0.4 * windowHeight }}>\r\n          {filteredOptions.map((option, idx) => (\r\n            <View key={idx}>\r\n              {renderItem ? (\r\n                renderItem(option as OptionT, idx)\r\n              ) : (\r\n                <Pressable\r\n                  onPress={() => {\r\n                    if (!isOptionSelectable) return\r\n\r\n                    setSelectedOption(option as OptionT)\r\n                    onSelected(option as OptionT)\r\n                    closeModal()\r\n                  }}\r\n                >\r\n                  <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n                    <View\r\n                      style={{\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                      }}\r\n                    >\r\n                      {optionIcon}\r\n\r\n                      <AppText style={{ ...styles.option, ...(selectedOption == option ? styles.selectedOption : {}) }}>\r\n                        {option as string}\r\n                      </AppText>\r\n                    </View>\r\n\r\n                    {selectedOption == option ? (\r\n                      <Ionicons style={styles.checkIcon} name=\"checkmark-outline\" color={\"#1C5D8FCC\"} size={24} />\r\n                    ) : (\r\n                      <View />\r\n                    )}\r\n                  </View>\r\n                </Pressable>\r\n              )}\r\n\r\n              {displaySeparators && idx != options.length - 1 ? <View style={styles.separator}></View> : <View />}\r\n            </View>\r\n          ))}\r\n        </ScrollView>\r\n\r\n        <Pressable onPress={() => closeModal()}>\r\n          <View style={styles.closeButton}>\r\n            <Text style={styles.closeButtonText}>Закрити</Text>\r\n          </View>\r\n        </Pressable>\r\n      </View>\r\n    </Modal>\r\n  )\r\n}\r\n","import { View, Text, StyleSheet } from \"react-native\"\r\nimport AppText from \"../../components/shared/AppText\"\r\nimport { palette } from \"../../styles/global\"\r\nimport { previewImagesFull } from \"../../constants/Images\"\r\nimport { isRunningInBrowser } from \"../../utilities/utilities\"\r\n\r\n// Import Swiper React components\r\nimport { SwiperSlide } from \"swiper/react\"\r\n\r\n// Import Swiper styles\r\nimport \"swiper/css\"\r\n\r\n// TODO: integrate with native carousel (it uses cropped preview images)\r\n// TODO: adapt settings page to web\r\n\r\nexport function getPageOne() {\r\n  const pageOne = (\r\n    <SwiperSlide style={styles.page} key=\"1\">\r\n      <View style={styles.imageContainer}>\r\n        <img style={styles.previewImage} src={previewImagesFull.schedule} />\r\n      </View>\r\n      <AppText style={styles.pageTitle}>Розклад</AppText>\r\n      <View style={styles.pageDescriptionText}>\r\n        <AppText style={styles.centeredDescriptionText}>\r\n          Розклад занять в академії чергується тижнями: чисельник, знаменник.\r\n        </AppText>\r\n        <br />\r\n        <AppText style={styles.centeredDescriptionText}>\r\n          Якщо цього тижня – чисельник, то перемикач <Text style={{ color: palette.navigationBackground }}>Чис</Text>{\" \"}\r\n          буде активним.\r\n        </AppText>\r\n      </View>\r\n    </SwiperSlide>\r\n  )\r\n\r\n  return pageOne\r\n}\r\n\r\nexport function getPageTwo() {\r\n  const pageTwo = (\r\n    <SwiperSlide style={styles.page} key=\"2\">\r\n      <View style={{ ...styles.imageContainer }}>\r\n        <img style={styles.previewImage} src={previewImagesFull.reglamentPreview} />\r\n      </View>\r\n      <AppText style={styles.pageTitle}>Регламент</AppText>\r\n      <View style={styles.pageDescriptionText}>\r\n        <AppText style={styles.centeredDescriptionText}>\r\n          Звичайний регламент... Але з{\" \"}\r\n          <AppText style={{ color: palette.navigationBackground }}>підсвіткою поточної пари </AppText>✨\r\n        </AppText>\r\n      </View>\r\n    </SwiperSlide>\r\n  )\r\n\r\n  return pageTwo\r\n}\r\n\r\nexport function getPageThree() {\r\n  const pageThree = (\r\n    <SwiperSlide style={styles.page} key=\"3\">\r\n      <View style={styles.imageContainer}>\r\n        <img style={styles.previewImage} src={previewImagesFull.editorPreview} />\r\n      </View>\r\n      <AppText style={styles.pageTitle}>Редактор</AppText>\r\n      <View style={styles.pageDescriptionText}>\r\n        <AppText style={styles.centeredDescriptionText}>\r\n          Дозволяє виправити чи змінити розклад за власними побажаннями.\r\n        </AppText>\r\n      </View>\r\n    </SwiperSlide>\r\n  )\r\n\r\n  return pageThree\r\n}\r\n\r\nexport function getPageFour() {\r\n  const pageFour = (\r\n    <SwiperSlide style={styles.page} key=\"4\">\r\n      <View style={styles.imageContainer}>\r\n        <img style={styles.previewImage} src={previewImagesFull.settingsPreview} />\r\n      </View>\r\n      <AppText style={styles.pageTitle}>Налаштування</AppText>\r\n      <View style={styles.pageDescriptionText}>\r\n        <AppText style={styles.centeredDescriptionText}>Вигляд розкладу та сповіщення можна налаштувати тут.</AppText>\r\n      </View>\r\n    </SwiperSlide>\r\n  )\r\n\r\n  return pageFour\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  page: {\r\n    // height: \"80vh\",\r\n    // width: \"100vw\",\r\n    // alignSelf: \"stretch\",\r\n\r\n    // marginHorizontal: \"5%\",\r\n    // marginLeft: \"5%\",\r\n    marginBottom: 20,\r\n    marginHorizontal: 20,\r\n\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n\r\n  pageTitle: {\r\n    fontSize: 24,\r\n    color: palette.navigationBackground,\r\n    textAlign: \"center\",\r\n    marginVertical: isRunningInBrowser() ? 20 : 10,\r\n    marginTop: isRunningInBrowser() ? 40 : 20,\r\n  },\r\n\r\n  imageContainer: {\r\n    borderRadius: 10,\r\n    // bump to 65% on web. Not sure if it's okay to do so on mobile\r\n    height: isRunningInBrowser() ? \"65%\" : \"55%\",\r\n    // width: \"100%\",\r\n    // flex: 1,\r\n    alignSelf: \"stretch\",\r\n\r\n    overflow: \"hidden\",\r\n    flexDirection: \"row\",\r\n\r\n    // backgroundColor: \"orange\",\r\n  },\r\n\r\n  previewImage: {\r\n    borderRadius: 10,\r\n\r\n    width: \"100%\",\r\n\r\n    objectFit: \"cover\",\r\n    objectPosition: \"top\",\r\n  },\r\n\r\n  centeredDescriptionText: {\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  pageDescriptionText: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n})\r\n","import { StyleSheet } from \"react-native\"\r\nimport { palette, globalStyles } from \"../../styles/global\"\r\nimport { isLandscapeWeb } from \"../../utilities/utilities\"\r\nimport { FontName } from \"../../constants/Fonts\"\r\n\r\nconst documentHeight = window.innerHeight\r\nexport const swiperWidth = isLandscapeWeb() ? `${documentHeight / 2}px` : \"95%\"\r\n\r\nexport const styles = StyleSheet.create({\r\n  carouselContainer: {\r\n    backgroundColor: \"#F5F5F5\",\r\n    // backgroundColor: \"red\",\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    flex: 1,\r\n    zIndex: 9999,\r\n\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  container: {\r\n    flex: 1,\r\n    height: \"100%\",\r\n  },\r\n\r\n  viewPager: {\r\n    flex: 1,\r\n    padding: 0,\r\n    marginHorizontal: 30,\r\n  },\r\n  page: {\r\n    // height: \"100%\",\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  paginationCircles: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginVertical: 20,\r\n\r\n    width: \"100%\",\r\n\r\n    // height: \"10%\",\r\n  },\r\n\r\n  circle: {\r\n    width: 5,\r\n    height: 5,\r\n    margin: 5,\r\n    borderRadius: 123,\r\n    backgroundColor: \"#D9D9D9\",\r\n    flexDirection: \"row\",\r\n  },\r\n\r\n  circleActive: {\r\n    backgroundColor: \"#7B7B7B\",\r\n  },\r\n\r\n  pageBody: {\r\n    marginBottom: 20,\r\n    // flex: 1,\r\n    // height: \"100%\",\r\n  },\r\n\r\n  overlay: {\r\n    backgroundColor: \"#F5F5F5\",\r\n    // backgroundColor: \"red\",\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    flex: 1,\r\n    zIndex: 9998,\r\n  },\r\n\r\n  pagerNavigation: {\r\n    flexGrow: 0,\r\n    // height: \"5%\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: 20,\r\n    alignSelf: \"center\",\r\n    width: swiperWidth,\r\n  },\r\n\r\n  pageTitle: {\r\n    fontSize: 24,\r\n    color: palette.navigationBackground,\r\n    textAlign: \"center\",\r\n    marginVertical: 10,\r\n    marginTop: 20,\r\n  },\r\n\r\n  imageContainer: {\r\n    borderRadius: 10,\r\n    height: \"65%\",\r\n    maxHeight: \"65%\",\r\n    width: \"90%\",\r\n    // backgroundColor: \"green\",\r\n    overflow: \"auto\",\r\n\r\n    alignItems: \"flex-start\",\r\n    justifyContent: \"flex-start\",\r\n    flexDirection: \"row\",\r\n  },\r\n\r\n  previewImage: {\r\n    borderRadius: 10,\r\n  },\r\n\r\n  halfImageContainer: {\r\n    height: \"30%\",\r\n  },\r\n\r\n  navigationButton: {\r\n    flexGrow: 0,\r\n    flexShrink: 1,\r\n\r\n    ...globalStyles.navigationButton,\r\n  },\r\n\r\n  backButton: {\r\n    borderColor: palette.grayedOut,\r\n  },\r\n\r\n  forwardButton: {\r\n    borderColor: palette.navigationBackground,\r\n    borderWidth: 1,\r\n  },\r\n\r\n  centeredDescriptionText: {\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  pageDescriptionText: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  selectScheduleText: {\r\n    color: palette.navigationBackground,\r\n    fontFamily: FontName.Montserrat600,\r\n  },\r\n})\r\n","import React, { useEffect, useRef, useState } from \"react\"\r\n\r\nimport { View, TouchableOpacity, ActivityIndicator, DimensionValue } from \"react-native\"\r\nimport { palette } from \"../../styles/global\"\r\nimport AppText from \"../../components/shared/AppText\"\r\n\r\n// Import Swiper React components\r\nimport { Swiper } from \"swiper/react\"\r\n\r\n// Import Swiper styles\r\nimport \"swiper/css\"\r\n\r\nimport _ from \"lodash\"\r\nimport { setStatusBarHidden } from \"expo-status-bar\"\r\nimport OptionPickerModal from \"../../components/OptionPickerModalComponent/OptionPickerModal\"\r\nimport { DrawerRoutes } from \"../../routes/DrawerRoutes\"\r\nimport SettingsService from \"../../services/SettingsService/SettingsService\"\r\nimport { ensureExtension, ensureNoExtension, isLandscapeWeb } from \"../../utilities/utilities\"\r\nimport { useNavigation } from \"@react-navigation/native\"\r\nimport ScheduleLoaderService from \"../../services/ScheduleLoaderService/ScheduleLoaderService\"\r\nimport { getPageFour, getPageOne, getPageThree, getPageTwo } from \"./Pages\"\r\nimport { Swiper as SwiperType } from \"swiper/types\"\r\nimport { FontName } from \"../../constants/Fonts\"\r\nimport { styles, swiperWidth } from \"./IntroductoryCarouselWebStyles\"\r\n\r\n// TODO: move shared logic to a separate file. As of now, lots if it is a copypaste from IntroductoryCarousel.native.tsx\r\n// TODO: fix navigation falling out of viewport on firefox\r\n\r\n// TODO: get replace document height with viewport height\r\n\r\n/**\r\n * Web version of Introductory Carousel Screen\r\n */\r\nexport default function InroductoryCarouselScreen({ onClose }: { onClose?: () => void }) {\r\n  const [currentPage, setCurrentPage] = React.useState(0)\r\n  const swiperRef = useRef<SwiperType>()\r\n\r\n  let [isVisible, setIsVisible] = useState(true)\r\n  let [isReady, setIsReady] = useState(false)\r\n\r\n  let [schedulePickerModalVisible, setSchedulePickerModalVisible] = useState(false)\r\n\r\n  let [schedulePickerData, setSchedulePickerData] = useState<string[]>([])\r\n\r\n  const navigation = useNavigation()\r\n\r\n  const lastPageIndex = 3\r\n\r\n  // mount effect\r\n  useEffect(() => {\r\n    async function init() {\r\n      let scheduleLodaderInstance = await ScheduleLoaderService.GetInstance()\r\n\r\n      let schedulePickerData = scheduleLodaderInstance.scheduleFiles.map((f) => ensureNoExtension(f.filename, \".json\"))\r\n      setSchedulePickerData(schedulePickerData)\r\n\r\n      setIsReady(true)\r\n    }\r\n\r\n    init()\r\n  }, [])\r\n\r\n  // current page change effect\r\n  useEffect(() => {\r\n    if (swiperRef.current) {\r\n      swiperRef.current.slideTo(currentPage)\r\n    }\r\n  }, [currentPage])\r\n\r\n  if (!isReady) {\r\n    // return spinner\r\n    return (\r\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\r\n        <ActivityIndicator size=\"large\" color={palette.navigationBackground} />\r\n      </View>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <View style={{ ...styles.overlay }}>\r\n      <View style={styles.paginationCircles}>\r\n        {_.times(lastPageIndex + 1, (i) => (\r\n          <View key={i} style={[styles.circle, currentPage == i ? styles.circleActive : {}]} />\r\n        ))}\r\n      </View>\r\n\r\n      <Swiper\r\n        initialSlide={currentPage}\r\n        style={{ display: \"flex\", width: swiperWidth, flexGrow: 0, maxHeight: \"85%\" }}\r\n        onSwiper={(swiper) => (swiperRef.current = swiper)}\r\n        onSlideChange={(swiper) => {\r\n          setCurrentPage(swiper.activeIndex)\r\n        }}\r\n      >\r\n        {getPageOne()}\r\n        {getPageTwo()}\r\n\r\n        {getPageThree()}\r\n        {getPageFour()}\r\n      </Swiper>\r\n      {/* pager navigation (page 1 has different buttons) */}\r\n      {currentPage == 0 ? (\r\n        <View style={[styles.pagerNavigation, { justifyContent: \"center\" }]}>\r\n          <TouchableOpacity\r\n            style={[styles.navigationButton, { width: 150 }]}\r\n            onPress={() => {\r\n              setSchedulePickerModalVisible(true)\r\n            }}\r\n          >\r\n            <AppText accessibilityLabel=\"selectSchedule\" style={styles.selectScheduleText}>\r\n              Обрати розклад\r\n            </AppText>\r\n          </TouchableOpacity>\r\n          <OptionPickerModal\r\n            headerText=\"Вибери свою групу\"\r\n            isOpen={schedulePickerModalVisible}\r\n            options={schedulePickerData}\r\n            selectedOption={\"\"}\r\n            onCloseModal={() => setSchedulePickerModalVisible(false)}\r\n            onSelected={(selected) => {\r\n              SettingsService.GetInstance().then((i) => {\r\n                i.currentScheduleName = ensureExtension(selected, \".json\")\r\n                i.saveToStorage()\r\n\r\n                let newCurrentPage = _.clamp(currentPage + 1, 0, lastPageIndex)\r\n                setCurrentPage(newCurrentPage)\r\n              })\r\n            }}\r\n          />\r\n        </View>\r\n      ) : (\r\n        <View style={styles.pagerNavigation}>\r\n          <TouchableOpacity\r\n            style={[styles.navigationButton, styles.backButton]}\r\n            onPress={() => {\r\n              let newCurrentPage = _.clamp(currentPage - 1, 0, 999)\r\n\r\n              setCurrentPage(newCurrentPage)\r\n            }}\r\n          >\r\n            <AppText\r\n              style={{\r\n                // color: palette.navigationBackground,\r\n                fontFamily: FontName.Montserrat600,\r\n                color: palette.grayedOut,\r\n              }}\r\n            >\r\n              Назад\r\n            </AppText>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            style={styles.navigationButton}\r\n            onPress={() => {\r\n              let isCloseButton = currentPage == lastPageIndex\r\n\r\n              if (isCloseButton) {\r\n                setStatusBarHidden(false, \"fade\")\r\n                setIsVisible(false)\r\n                onClose?.()\r\n                // @ts-expect-error\r\n                navigation.navigate(DrawerRoutes.VIEWER)\r\n              }\r\n\r\n              let newCurrentPage = _.clamp(currentPage + 1, 0, lastPageIndex)\r\n              setCurrentPage(newCurrentPage)\r\n            }}\r\n          >\r\n            <AppText style={{ color: palette.navigationBackground, fontFamily: FontName.Montserrat600 }}>\r\n              {currentPage != lastPageIndex ? \"Далі\" : \"Закрити\"}\r\n            </AppText>\r\n          </TouchableOpacity>\r\n        </View>\r\n      )}\r\n    </View>\r\n  )\r\n}\r\n","import { StyleSheet } from \"react-native\"\r\n\r\nimport { FontName } from \"../../../constants/Fonts\"\r\nimport { palette } from \"../../../styles/global\"\r\n\r\nconst baseStyles = StyleSheet.create({\r\n  text: {\r\n    color: \"white\",\r\n    fontFamily: \"century-gothic\",\r\n  },\r\n})\r\n\r\nexport const scheduleHeaderStyles = StyleSheet.create({\r\n  header: {\r\n    paddingVertical: 15,\r\n    width: \"100%\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#1C5D8F\",\r\n  },\r\n\r\n  backroundImage: {\r\n    width: \"100%\",\r\n  },\r\n\r\n  headerText: {\r\n    fontSize: 20,\r\n    // color: \"#333\",\r\n    color: \"white\",\r\n    fontFamily: FontName.CenturyGothic,\r\n  },\r\n  sideMenuIcon: {\r\n    color: \"white\",\r\n    marginHorizontal: 16,\r\n    marginRight: 10,\r\n    zIndex: 8888,\r\n  },\r\n\r\n  headerContentContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    width: \"100%\",\r\n  },\r\n\r\n  currentlyViewedDay: {\r\n    fontSize: 14,\r\n    ...baseStyles.text,\r\n    marginLeft: 10,\r\n    marginHorizontal: 16,\r\n  },\r\n\r\n  weekTypeText: {\r\n    fontSize: 16,\r\n    ...baseStyles.text,\r\n  },\r\n\r\n  weekTextContainer: {\r\n    paddingHorizontal: 5,\r\n    paddingVertical: 4,\r\n  },\r\n\r\n  selectedContainer: {\r\n    borderRadius: 5,\r\n    backgroundColor: \"white\",\r\n  },\r\n\r\n  selectedText: {\r\n    color: palette.navigationBackground,\r\n  },\r\n})\r\n","// EXTERNAL DEPENDENCIES\r\n\r\nimport React from \"react\"\r\nimport { Text, View } from \"react-native\"\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport { useNavigation } from \"@react-navigation/native\"\r\nimport { useRoute } from \"@react-navigation/native\"\r\nimport { SafeAreaView } from \"react-native-safe-area-context\"\r\n\r\n// INTERNAL DEPENDENCIES\r\n\r\nimport GetWeekType, { WeekType } from \"../../../utilities/getWeekType\"\r\nimport { getRouteIcon } from \"../../Header\"\r\nimport { scheduleHeaderStyles } from \"./Styles\"\r\nimport { DrawerRoutes } from \"../../../routes/DrawerRoutes\"\r\n\r\n// TODO: Dry up. I simply copypasted this code from Header.tsx\r\n// TODO: Display activity indicator during changing week type\r\nexport default function ScheduleHeader({\r\n  title,\r\n  onWeekTypeChanged,\r\n}: {\r\n  title: string\r\n  onWeekTypeChanged: (weekType: WeekType) => void\r\n}) {\r\n  const navigation_ = useNavigation()\r\n\r\n  const [weekType, setWeekType] = React.useState<WeekType>(GetWeekType())\r\n  const weekTypeInUkrainian = weekType === WeekType.Nominator ? \"Чисельник\" : \"Знаменник\"\r\n  console.log(\"[Schedule Header] weekType: \", weekType)\r\n  console.log(\"[Schedule Header] weekType in Ukrainian: \", weekTypeInUkrainian)\r\n\r\n  // extract current screen name from navigation state\r\n  const headerText = title.split(\".\")[0]\r\n\r\n  const routeName = useRoute().name as DrawerRoutes\r\n  console.log(\"[Schedule Header] routeName: \", routeName)\r\n\r\n  const icon = getRouteIcon(navigation_, routeName)\r\n\r\n  return (\r\n    <SafeAreaView style={scheduleHeaderStyles.header}>\r\n      <View style={scheduleHeaderStyles.headerContentContainer}>\r\n        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n          <TouchableOpacity>{icon}</TouchableOpacity>\r\n\r\n          <Text style={scheduleHeaderStyles.headerText}>{headerText}</Text>\r\n        </View>\r\n        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n          <View style={[{ flexDirection: \"row\", alignItems: \"center\", marginRight: 12 }]}>\r\n            <View\r\n              style={[\r\n                scheduleHeaderStyles.weekTextContainer,\r\n                weekTypeInUkrainian == \"Чисельник\" ? scheduleHeaderStyles.selectedContainer : {},\r\n                { marginRight: 5 },\r\n              ]}\r\n            >\r\n              <Text\r\n                style={[\r\n                  scheduleHeaderStyles.weekTypeText,\r\n                  weekTypeInUkrainian == \"Чисельник\" ? scheduleHeaderStyles.selectedText : {},\r\n                ]}\r\n                onPress={() => {\r\n                  onWeekTypeChanged(0)\r\n                  setWeekType(0)\r\n                }}\r\n              >\r\n                Чис\r\n              </Text>\r\n            </View>\r\n\r\n            <View\r\n              style={[\r\n                scheduleHeaderStyles.weekTextContainer,\r\n                weekTypeInUkrainian == \"Знаменник\" ? scheduleHeaderStyles.selectedContainer : {},\r\n              ]}\r\n            >\r\n              <Text\r\n                onPress={() => {\r\n                  // debugger\r\n                  onWeekTypeChanged(1)\r\n                  setWeekType(1)\r\n                }}\r\n                style={[\r\n                  scheduleHeaderStyles.weekTypeText,\r\n                  weekTypeInUkrainian == \"Знаменник\" ? scheduleHeaderStyles.selectedText : {},\r\n                ]}\r\n              >\r\n                Знам\r\n              </Text>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </SafeAreaView>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { View, StyleSheet, Image } from \"react-native\"\r\nimport AppText from \"../shared/AppText\"\r\nimport { editorImages } from \"../../constants/Images\"\r\nimport { SDstyles } from \"../ScheduleComponents/ScheduleDayComponent/Styles\"\r\n\r\nexport default function EditActionsExplanatoryCard() {\r\n  return (\r\n    <View\r\n      style={[\r\n        styles.scheduleDayCard,\r\n        {\r\n          marginHorizontal: 10,\r\n        },\r\n      ]}\r\n    >\r\n      <View\r\n        style={[\r\n          {\r\n            marginVertical: 5,\r\n            paddingHorizontal: 10,\r\n            paddingLeft: 5,\r\n            paddingVertical: 3,\r\n          },\r\n          { flexDirection: \"row\" },\r\n        ]}\r\n      >\r\n        <View\r\n          style={[\r\n            {\r\n              marginRight: 5,\r\n            },\r\n          ]}\r\n        >\r\n          <Image source={editorImages.lightbulb} style={{ height: 50, width: 50 }} />\r\n        </View>\r\n        <View>\r\n          {/* TODO: bolden the action words */}\r\n          <AppText style={{ fontFamily: \"century-gothic\", fontSize: 13, letterSpacing: 0.1 }}>\r\n            Перемістити: затиснути та перетягнути\r\n          </AppText>\r\n\r\n          <AppText style={{ fontFamily: \"century-gothic\", fontSize: 13, letterSpacing: 0.1 }}>\r\n            Видалити: свайп ліворуч\r\n          </AppText>\r\n\r\n          <AppText style={{ fontFamily: \"century-gothic\", fontSize: 13, letterSpacing: 0.1 }}>\r\n            Редагувати: натиснути на пару\r\n          </AppText>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n\r\n  scheduleDayCard: {\r\n    ...SDstyles.scheduleDayCard,\r\n  },\r\n})\r\n","import React from \"react\"\r\nimport { View, StyleSheet } from \"react-native\"\r\nimport AppText from \"../shared/AppText\"\r\nimport { palette } from \"../../styles/global\"\r\nimport { SDstyles } from \"./ScheduleDayComponent/Styles\"\r\nimport GetWeekType from \"../../utilities/getWeekType\"\r\nimport _ from \"lodash\"\r\nimport { isRunningInBrowser } from \"../../utilities/utilities\"\r\nimport { FontName } from \"../../constants/Fonts\"\r\n\r\nexport default function DateOverviewCard() {\r\n  // current day of the week, in this format: \"Понеділок\" and nothing else\r\n  let currentDayString = new Date()\r\n    .toLocaleDateString(\"uk-UA\", {\r\n      weekday: \"long\",\r\n    })\r\n    .split(\",\")[0]\r\n\r\n  currentDayString = _.capitalize(currentDayString)\r\n\r\n  const currentDayDate = new Date().toLocaleDateString(\"uk-UA\", {\r\n    day: \"numeric\",\r\n    month: \"long\",\r\n  })\r\n\r\n  // current work week interval, in this format: \"12.04.2021 - 18.04.2021\", where start date is monday and end date is friday\r\n  const currentWorkWeekInterval = (() => {\r\n    const currentDate = new Date()\r\n    // starts with sunday by default, so we need to subtract 1 for it to start with monday\r\n    let currentDayOfWeek = currentDate.getDay() - 1\r\n    if (currentDayOfWeek == -1) {\r\n      currentDayOfWeek = 6\r\n    }\r\n    const currentMonth = currentDate.getMonth()\r\n    const currentYear = currentDate.getFullYear()\r\n\r\n    const mondayDate = new Date(currentYear, currentMonth, currentDate.getDate() - currentDayOfWeek)\r\n    const fridayDate = new Date(currentYear, currentMonth, currentDate.getDate() - currentDayOfWeek + 4)\r\n\r\n    return `${mondayDate.toLocaleDateString(\"uk-UA\", {\r\n      day: \"numeric\",\r\n      month: \"numeric\",\r\n      year: \"numeric\",\r\n    })} – ${fridayDate.toLocaleDateString(\"uk-UA\", {\r\n      day: \"numeric\",\r\n      month: \"numeric\",\r\n      year: \"numeric\",\r\n    })}`\r\n  })()\r\n\r\n  const currentWeekType = GetWeekType() == 0 ? \"Чисельник\" : \"Знаменник\"\r\n\r\n  return (\r\n    <View\r\n      style={[\r\n        styles.scheduleDayCard,\r\n        {\r\n          marginHorizontal: 10,\r\n        },\r\n      ]}\r\n    >\r\n      <View\r\n        style={[\r\n          {\r\n            marginVertical: 5,\r\n            paddingHorizontal: 10,\r\n            paddingLeft: 5,\r\n            paddingVertical: 3,\r\n          },\r\n          { flexDirection: \"row\" },\r\n        ]}\r\n      >\r\n        <View style={{ flex: 1 }}>\r\n          <AppText style={styles.upperRowText}>{currentWeekType}</AppText>\r\n          <AppText style={styles.lowerRowText}>{currentWorkWeekInterval}</AppText>\r\n        </View>\r\n        {isRunningInBrowser() ? <View style={styles.verticalSeparator} /> : <View />}\r\n\r\n        <View style={{ flex: 1, alignItems: \"flex-end\" }}>\r\n          <AppText style={styles.upperRowText}>{currentDayString}</AppText>\r\n          <AppText style={styles.lowerRowText}>{currentDayDate}</AppText>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n\r\n  scheduleDayCard: {\r\n    ...SDstyles.scheduleDayCard,\r\n    borderColor: \"#8FB7DA\",\r\n    borderWidth: 1,\r\n    elevation: 2,\r\n  },\r\n\r\n  verticalSeparator: {\r\n    width: 1,\r\n    height: \"100%\",\r\n    backgroundColor: palette.background,\r\n    opacity: 0.5,\r\n    marginHorizontal: 10,\r\n  },\r\n\r\n  upperRowText: {\r\n    fontFamily: FontName.MontserratMedium,\r\n    fontSize: 13,\r\n    marginBottom: 5,\r\n  },\r\n\r\n  lowerRowText: {\r\n    color: palette.grayedOut,\r\n  },\r\n})\r\n","import { StyleSheet } from \"react-native\"\r\n\r\nimport { globalStyles } from \"../../styles/global\"\r\n\r\nexport const styles = StyleSheet.create({\r\n  rootContainer: {\r\n    // width: \"70%\",\r\n    // alignSelf: \"center\",\r\n    // paddingBottom: 60,\r\n    ...globalStyles.screen,\r\n\r\n    // flex: 0,\r\n    backgroundColor: \"#F5F5F5\",\r\n  },\r\n  modalToggle: {\r\n    marginBottom: 10,\r\n    borderWidth: 1,\r\n    borderColor: \"lightgray\",\r\n    padding: 10,\r\n    borderRadius: 10,\r\n    alignSelf: \"center\",\r\n  },\r\n\r\n  modalClose: {\r\n    marginTop: 20,\r\n    marginBottom: 0,\r\n  },\r\n\r\n  modalContent: {\r\n    flex: 1,\r\n  },\r\n\r\n  selected: {\r\n    backgroundColor: \"white\",\r\n    color: \"black\",\r\n    padding: 5,\r\n    borderRadius: 10,\r\n    marginBottom: 5,\r\n  },\r\n\r\n  placeholderView: {\r\n    height: 35,\r\n  },\r\n  cardContainer: {\r\n    // height: 350,\r\n    padding: 5,\r\n  },\r\n\r\n  scheduleDaySelector: {\r\n    padding: 5,\r\n    zIndex: 9999,\r\n    position: \"absolute\",\r\n    top: 0,\r\n    right: 0,\r\n    backgroundColor: \"rgba(0,0,0,0.5)\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n})\r\n","export const IS_FIRST_TIME_LAUNCH_KEY = \"isFirstTimeLaunch\"","// EXTERNAL DEPENDENCIES\r\n\r\nimport React from \"react\"\r\nimport { useCallback, useRef, useState, useEffect } from \"react\"\r\nimport { View, ActivityIndicator, ToastAndroid } from \"react-native\"\r\nimport { ScrollView } from \"react-native-gesture-handler\"\r\nimport ldash from \"lodash\"\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\"\r\nimport { useFocusEffect, useNavigation } from \"@react-navigation/native\"\r\n\r\n// INTERNAL DEPENDENCIES\r\n\r\nimport { globalStyles, palette } from \"../../styles/global\"\r\nimport ScheduleDayComponent from \"../../components/ScheduleComponents/ScheduleDayComponent/ScheduleDay\"\r\nimport SettingsService from \"../../services/SettingsService/SettingsService\"\r\nimport { DisplayEmptyDaysMode } from \"../../services/SettingsService/Types\"\r\nimport ScheduleModel from \"../../models/ScheduleModel/ScheduleModel\"\r\nimport { workDays } from \"../../constants/Days\"\r\nimport ScheduleNotificationsService from \"../../services/ScheduleNotificationsService\"\r\nimport ScheduleLoaderService from \"../../services/ScheduleLoaderService/ScheduleLoaderService\"\r\nimport { ScheduleFile } from \"../../services/ScheduleLoaderService/Types\"\r\nimport { SettingsContext } from \"../../contexts/settingsContext\"\r\nimport { ensureExtension, ensureNoExtension, isRunningInBrowser } from \"../../utilities/utilities\"\r\nimport IntroductoryCarousel from \"../IntroductoryCarousel/IntroductoryCarousel\"\r\nimport GetWeekType, { WeekType } from \"../../utilities/getWeekType\"\r\nimport ScheduleHeader from \"../../components/ScheduleComponents/ScheduleHeaderComponent/ScheduleHeader\"\r\nimport { Event } from \"../../constants/Events\"\r\nimport EditActionsExplanatoryCard from \"../../components/ScheduleEditorComponents/EditActionsExplanatoryCard\"\r\nimport DateOverviewCard from \"../../components/ScheduleComponents/DateOverviewCard\"\r\nimport { WeekTypeContext } from \"../../contexts/weekTypeContext\"\r\nimport { styles } from \"./Styles\"\r\nimport { IS_FIRST_TIME_LAUNCH_KEY } from \"../../constants/AsyncStorageKeys\"\r\n\r\n// TODO: scroll to current day on mount only instead of doing so on every rerender?\r\n\r\nexport default function ScheduleScreen({ isEditable = false }: { isEditable: boolean }) {\r\n  // [web] a workaround to render drawer menu content without explicitly opening it\r\n  if (isRunningInBrowser()) {\r\n    const navigation = useNavigation()\r\n    // @ts-ignore\r\n    navigation.openDrawer()\r\n    // @ts-ignore\r\n    navigation.closeDrawer()\r\n  }\r\n\r\n  const todayIndex = ldash.clamp(new Date().getDay() - 1, 0, 4)\r\n\r\n  // state for unconditional rerendering\r\n  const [_, setState] = useState({})\r\n  const [isFirstTimeLaunch, setIsFirstTimeLaunch] = useState<string | null>(\"false\") // async storage can't store anything other than strings\r\n\r\n  let scheduleRef = useRef<ScheduleModel | null>(null)\r\n  let scheduleFileRef = useRef<ScheduleFile | null>(null)\r\n  let settingsServiceRef = useRef<SettingsService>(null)\r\n\r\n  let scrollViewContainerRef = useRef<ScrollView | null>(null)\r\n\r\n  const [scheduleLoaded, setScheduleLoaded] = useState(false)\r\n  const [scheduleName, setScheduleName] = useState(\"\")\r\n  const [dataSourceCords, setDataSourceCords] = useState<any[]>([])\r\n\r\n  const scheduleNameRef = useRef<string>()\r\n  scheduleNameRef.current = scheduleName\r\n\r\n  const [weekType, setWeekType] = React.useState<WeekType>(GetWeekType())\r\n\r\n  const onSettingsUpdated = useCallback(\r\n    async (settingsService: SettingsService) => {\r\n      // if schedule didn't change then there is nothing to do here\r\n      console.log(\" - - - deciding whether to update schedule or not - - -\")\r\n      let settingsScheduleName = ensureNoExtension(settingsService.currentScheduleName, \".json\")\r\n      let currentScheduleName = ensureNoExtension(scheduleNameRef.current, \".json\")\r\n      console.log(\"settings schedule name: \", settingsScheduleName)\r\n      console.log(\"schedule name: \", currentScheduleName)\r\n\r\n      const shouldUpdateSchedule = settingsScheduleName !== currentScheduleName\r\n      console.log(\" - - -\")\r\n\r\n      if (shouldUpdateSchedule) {\r\n        // construct new schedule object and setState for schedule name\r\n        const newSchedule = new ScheduleModel(\"groupname_groupyear\", \"groupname\", 5)\r\n        await newSchedule.getScheduleFromScheduleLoader(settingsService.currentScheduleName)\r\n\r\n        // configure notifications for schedule, but only if it's not in editor\r\n        if (!isEditable) {\r\n          const notifService = await ScheduleNotificationsService.GetInstance()\r\n          await notifService.configureNotificationsForSchedule(newSchedule)\r\n        }\r\n\r\n        scheduleRef.current = newSchedule\r\n        let scheduleLoaderService = await ScheduleLoaderService.GetInstance()\r\n        let updatedSchedule = scheduleLoaderService.getScheduleFileByFileName(\r\n          ensureExtension(settingsService.currentScheduleName, \".json\")\r\n        )\r\n        // TODO: Refactor XD\r\n        scheduleFileRef.current = ldash.cloneDeep(updatedSchedule) ?? null\r\n\r\n        setScheduleName(settingsService.currentScheduleName)\r\n      } else {\r\n        // assume that something else changed and we need to rerender to reflect those changes\r\n        // (in editor everything is always unfolded and there is no need to update)\r\n        if (isEditable) return\r\n        setState({})\r\n      }\r\n    },\r\n    [scheduleName]\r\n  )\r\n\r\n  useEffect(() => {\r\n    async function onMount() {\r\n      let settingsService = await SettingsService.GetInstance()\r\n      settingsServiceRef.current = settingsService\r\n\r\n      console.log(\"[Schedule.tsx] settingsService instance: \", settingsService)\r\n\r\n      let scheduleLoaderInstance = await ScheduleLoaderService.GetInstance()\r\n\r\n      let schedule = new ScheduleModel(\"groupname_groupyear\", \"groupname\", 5)\r\n\r\n      // check whether the schedule that settings service is referencing exists. Otherwise load first available schedule\r\n      let scheduleFile = scheduleLoaderInstance.getScheduleFileByFileName(settingsService.currentScheduleName)\r\n      let firstScheduleFile = scheduleLoaderInstance.scheduleFiles[0]\r\n\r\n      scheduleFileRef.current = ldash.cloneDeep(scheduleFile ?? firstScheduleFile)\r\n\r\n      const nameOfScheduleToLoad = scheduleFile ? settingsService.currentScheduleName : firstScheduleFile.filename\r\n\r\n      await schedule.getScheduleFromScheduleLoader(nameOfScheduleToLoad)\r\n\r\n      // configure notifications for schedule, but only if it's not in editor\r\n      if (!isEditable) {\r\n        ScheduleNotificationsService.GetInstance().then((i) => {\r\n          console.log(\"will call configureNotificationsForSchedule on schedule: \", schedule.name)\r\n          i.configureNotificationsForSchedule(schedule)\r\n        })\r\n      }\r\n\r\n      console.log(\"[Schedule.tsx] schedule: \", schedule)\r\n\r\n      settingsService.SettingsEventEmitter.on(Event.SETTINGS_UPDATED, onSettingsUpdated)\r\n      console.log(\"subscribed to settings updated event\")\r\n      console.log(\"n of subscribers: \", settingsService.SettingsEventEmitter.listenerCount(Event.SETTINGS_UPDATED))\r\n\r\n      scheduleRef.current = schedule\r\n\r\n      const isFirstTimeLaunch = await AsyncStorage.getItem(IS_FIRST_TIME_LAUNCH_KEY)\r\n      setIsFirstTimeLaunch(isFirstTimeLaunch)\r\n\r\n      setScheduleName(schedule.name)\r\n      setScheduleLoaded(true)\r\n    }\r\n\r\n    onMount()\r\n\r\n    // on unmount\r\n    return () => {\r\n      SettingsService.GetInstance().then((settingsService: SettingsService) => {\r\n        settingsService.SettingsEventEmitter.removeListener(Event.SETTINGS_UPDATED, onSettingsUpdated)\r\n      })\r\n    }\r\n  }, [])\r\n\r\n  const onWeekTypeChanged = (weekType: number) => {\r\n    console.log(\"week type changed to: \", weekType)\r\n    // display toast message if in editor\r\n    // the switching takes longer in editor...\r\n    if (isEditable) {\r\n      // TODO: make cross platform version of toast\r\n      if (!isRunningInBrowser()) {\r\n        ToastAndroid.show(\"Завантаження...\", ToastAndroid.LONG)\r\n      }\r\n    }\r\n    setWeekType(weekType)\r\n  }\r\n\r\n  // runs when screen gets focus\r\n  useFocusEffect(\r\n    useCallback(() => {\r\n      if (isEditable) return\r\n\r\n      // compare current schedule file with the one in loader\r\n      // if they are different, update schedule\r\n\r\n      // return if schedule or schedule file is not loaded yet\r\n      if (!scheduleRef.current || !scheduleFileRef.current) {\r\n        console.log(\"[schedule screen focus] schedule or schedule file is not loaded yet\")\r\n        return\r\n      }\r\n\r\n      let currentScheduleFile = scheduleFileRef.current\r\n      ScheduleLoaderService.GetInstance().then((instance) => {\r\n        let scheduleFile = instance.getScheduleFileByFileName(currentScheduleFile!.filename)\r\n        // debugger\r\n\r\n        // have to compare them this way because the objects themselves have different ids\r\n        if (JSON.stringify(currentScheduleFile.json_parsed) != JSON.stringify(scheduleFile!.json_parsed)) {\r\n          console.log(\"[schedule screen focus] schedule file changed, rerendering...\")\r\n          // setScheduleLoaded(false)\r\n\r\n          // update refs\r\n          scheduleFileRef.current = ldash.cloneDeep(scheduleFile) ?? null\r\n\r\n          let newSchedule = new ScheduleModel(\"groupname_groupyear\", \"groupname\", 5)\r\n          scheduleRef.current! = newSchedule\r\n          newSchedule.getScheduleFromScheduleLoader(scheduleFile!.filename).then(() => {\r\n            setState({})\r\n          })\r\n        } else {\r\n          console.log(\"[schedule screen focus] schedule file didn't change\")\r\n        }\r\n      })\r\n\r\n      // show toast\r\n      // ToastAndroid.show(\"У переглядачі\", ToastAndroid.SHORT)\r\n\r\n      return () => {\r\n        // ToastAndroid.show(\"Поза переглядачем\", ToastAndroid.SHORT)\r\n      }\r\n    }, [])\r\n  )\r\n\r\n  if (!scheduleLoaded) {\r\n    return (\r\n      <View style={styles.rootContainer}>\r\n        <ScheduleHeader title=\"Розклад\" onWeekTypeChanged={onWeekTypeChanged} />\r\n        <View style={{ justifyContent: \"center\", alignItems: \"center\", flex: 1 }}>\r\n          <ActivityIndicator\r\n            testID=\"scheduleScreenActivityIndicator\"\r\n            size=\"large\"\r\n            animating={true}\r\n            color={palette.navigationBackground}\r\n          />\r\n        </View>\r\n      </View>\r\n    )\r\n  }\r\n\r\n  if (isFirstTimeLaunch != \"false\") {\r\n    return (\r\n      <IntroductoryCarousel\r\n        onClose={() => {\r\n          setIsFirstTimeLaunch(\"false\")\r\n          AsyncStorage.setItem(\"isFirstTimeLaunch\", \"false\")\r\n        }}\r\n      />\r\n    )\r\n  }\r\n\r\n  console.log(\"[Schedule View] will render schedule screen\")\r\n\r\n  return (\r\n    <SettingsContext.Provider value={settingsServiceRef.current}>\r\n      <WeekTypeContext.Provider value={weekType}>\r\n        <View style={styles.rootContainer}>\r\n          <ScheduleHeader title={scheduleName} onWeekTypeChanged={onWeekTypeChanged} />\r\n\r\n          <ScrollView\r\n            style={\r\n              {\r\n                // flex: 1\r\n                // ^breaks it on mobile\r\n              }\r\n            }\r\n            contentContainerStyle={{ paddingBottom: 0 }}\r\n            ref={scrollViewContainerRef}\r\n            // nestedScrollEnabled={false}\r\n          >\r\n            {/* explanatory card if in editor, otherwise date overview card */}\r\n\r\n            {isEditable ? <EditActionsExplanatoryCard /> : <DateOverviewCard />}\r\n            {/* temp slice for performance reasons */}\r\n            {workDays.slice(0, 111).map((day, idx) => {\r\n              const item = day\r\n\r\n              const schedule = scheduleRef.current!\r\n              const scheduleDay = schedule.scheduleDays[idx]\r\n\r\n              const currentlySelectedWeekClasses =\r\n                weekType == 0 ? scheduleDay.getNominatorClasses() : scheduleDay.getDenominatorClasses()\r\n\r\n              const isEmpty = currentlySelectedWeekClasses.length === 0\r\n              const shouldDisplayEmptyDay = settingsServiceRef.current!.displayEmptyDays != DisplayEmptyDaysMode.Hide\r\n\r\n              if (!isEditable && isEmpty && !shouldDisplayEmptyDay) {\r\n                return <View style={globalStyles.noDisplay} key={day + weekType}></View>\r\n              }\r\n\r\n              let classes = weekType == 0 ? scheduleDay.getNominatorClasses() : scheduleDay.getDenominatorClasses()\r\n\r\n              return (\r\n                <View\r\n                  style={styles.cardContainer}\r\n                  key={day + weekType}\r\n                  onLayout={(event) => {\r\n                    const layout = event.nativeEvent.layout\r\n                    dataSourceCords[idx] = layout.y\r\n                    setDataSourceCords(dataSourceCords)\r\n                    // console.log(\"- - - component layout data (start) - - - \")\r\n                    // console.log(dataSourceCords)\r\n                    // console.log(\"height:\", layout.height)\r\n                    // console.log(\"width:\", layout.width)\r\n                    // console.log(\"x:\", layout.x)\r\n                    // console.log(\"y:\", layout.y)\r\n                    // console.log(\"- - - component layout data (end) - - - \")\r\n\r\n                    if (dataSourceCords.length < todayIndex) return\r\n                    if (this.scrolledToToday == true) return\r\n\r\n                    // this should happen only once\r\n                    scrollViewContainerRef.current!.scrollTo({\r\n                      x: 0,\r\n                      y: dataSourceCords[todayIndex],\r\n                      animated: true,\r\n                    })\r\n\r\n                    // TODO: Refactor\r\n                    if (dataSourceCords.length == 5) {\r\n                      this.scrolledToToday = true\r\n                    }\r\n                  }}\r\n                >\r\n                  <ScheduleDayComponent\r\n                    classesCollection={classes}\r\n                    scheduleObject={scheduleRef.current!}\r\n                    dayName={item}\r\n                    // dayIndex={idx}\r\n                    scheduleDay={scheduleRef.current!.scheduleDays[idx]}\r\n                    displayRoomNumber={!isEditable ? settingsServiceRef.current!.displayRoomNumber : true}\r\n                    // showSeparator={idx !== workDays.length - 1}\r\n                    weekType={weekType}\r\n                    fade={\r\n                      !isEditable\r\n                        ? isEmpty && settingsServiceRef.current!.displayEmptyDays == DisplayEmptyDaysMode.Darken\r\n                        : false\r\n                    }\r\n                    isEditable={isEditable}\r\n                  ></ScheduleDayComponent>\r\n                </View>\r\n              )\r\n            })}\r\n          </ScrollView>\r\n        </View>\r\n      </WeekTypeContext.Provider>\r\n    </SettingsContext.Provider>\r\n  )\r\n}\r\n","import { StyleSheet } from \"react-native\"\r\nimport { FontName } from \"../../constants/Fonts\"\r\nimport { palette, globalStyles } from \"../../styles/global\"\r\n\r\n// TODO: Remove unused styles\r\nexport const styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    width: \"100%\",\r\n    overflow: \"scroll\",\r\n    padding: 10,\r\n    paddingTop: 30,\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  reglamentClassIndex: {\r\n    fontSize: 14,\r\n    fontFamily: FontName.Montserrat600,\r\n    color: palette.text,\r\n\r\n    marginLeft: 10,\r\n    marginBottom: 7,\r\n  },\r\n\r\n  reglamentContainer: {\r\n    ...globalStyles.screen,\r\n    flex: 1,\r\n\r\n    backgroundColor: palette.backgroundLight,\r\n    // backgroundColor: \"red\",\r\n  },\r\n\r\n  timePointTextContainer: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    // flexGrow: 0.9,\r\n    width: \"77%\",\r\n  },\r\n\r\n  timePointText: {\r\n    // color: palette.grayishBlue,\r\n    color: \"#333333\",\r\n    fontFamily: FontName.MontserratMedium,\r\n    fontSize: 16,\r\n  },\r\n\r\n  indexTextContainer: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    // flexGrow: 0.1,\r\n    width: \"12%\",\r\n  },\r\n\r\n  indexText: {\r\n    color: palette.grayishBlue,\r\n    fontFamily: FontName.MontserratSemiBold,\r\n    fontSize: 20,\r\n  },\r\n\r\n  timePointDate: {\r\n    marginTop: 3,\r\n    fontSize: 14,\r\n    color: palette.text,\r\n  },\r\n\r\n  timeDataCard: {\r\n    borderRadius: 7,\r\n    backgroundColor: \"white\",\r\n    margin: 0,\r\n    padding: 10,\r\n\r\n    elevation: 1,\r\n    shadowOffset: { width: 1, height: 1 },\r\n    shadowColor: \"#333\",\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 2,\r\n  },\r\n\r\n  currentClass: {\r\n    // backgroundColor: \"rgb(227, 239, 249)\",\r\n    // backgroundColor: \"#CCDFF1\",\r\n    // backgroundColor: \"#E5EFF8\",\r\n    backgroundColor: \"#D8E9F9\",\r\n  },\r\n\r\n  currentClassIndexText: {\r\n    color: \"#4A6172\",\r\n  },\r\n\r\n  reglamentClassContainer: {\r\n    marginHorizontal: 8,\r\n    // marginBottom: 18,\r\n    marginBottom: 10,\r\n  },\r\n\r\n  text: { margin: 0, textAlign: \"center\", borderBottomWidth: 1, borderRightWidth: 1, padding: 12 },\r\n\r\n  head: {},\r\n  headerText: { fontWeight: \"bold\", fontSize: 14 },\r\n  headText: { margin: 6, fontWeight: \"bold\" },\r\n  row: {\r\n    flexDirection: \"row\",\r\n    // backgroundColor: \"red\",\r\n    backgroundColor: \"#f1f8ff\",\r\n  },\r\n\r\n  verticalSeparator: {\r\n    width: 1,\r\n    height: \"100%\",\r\n    backgroundColor: \"#E6E6E6\",\r\n    // opacity: 0.5,\r\n    marginHorizontal: 10,\r\n    flexGrow: 0,\r\n  },\r\n})\r\n","import React, { useEffect, useRef, useState } from \"react\"\r\nimport { View } from \"react-native\"\r\n\r\nimport AppText from \"../../components/shared/AppText\"\r\nimport { determineInterval } from \"../../utilities/utilities\"\r\nimport { styles } from \"./Styles\"\r\nimport { REGLAMENT_DATA_ELEM_TYPE, REGLAMENT_DATA } from \"../../constants/Constants\"\r\n\r\nexport const ReglamentClass = ({ index }: { index: number }) => {\r\n  const classData = getReglamentClass(index)\r\n  //   let classTimeInterval = classData[1]\r\n  let classStartTime = classData[1]\r\n  let classEndTime = classData[2]\r\n\r\n  let currentTimeInterval = determineInterval()\r\n  let isCurrentClassRef = useRef(currentTimeInterval == classData)\r\n\r\n  let [_, setState] = useState({})\r\n  // rerender component if it's not current class anymore or became current class\r\n  // mount effect\r\n  useEffect(() => {\r\n    console.log(`Rendering ReglamentClass at index ${index} for the first time...`)\r\n\r\n    // update current time slot every 15 seconds\r\n    const interval = setInterval(() => {\r\n      let wasCurrent = isCurrentClassRef.current\r\n      let isCurrent = determineInterval() == classData\r\n      if (wasCurrent != isCurrent) {\r\n        isCurrentClassRef.current = isCurrent\r\n        setState({})\r\n      }\r\n    }, 15000)\r\n\r\n    // on unmount\r\n    return () => {\r\n      clearInterval(interval)\r\n    }\r\n  }, [])\r\n\r\n  let isCurrentClass = isCurrentClassRef.current\r\n\r\n  return (\r\n    <View style={styles.reglamentClassContainer}>\r\n      <View\r\n        style={[styles.timeDataCard, isCurrentClass ? styles.currentClass : {}]}\r\n        testID={isCurrentClassRef.current ? \"currentClass\" + index : \"class\"}\r\n      >\r\n        <View style={{ flexDirection: \"row\", justifyContent: \"flex-start\" }}>\r\n          <View style={styles.indexTextContainer}>\r\n            <AppText style={[styles.indexText, isCurrentClass ? styles.currentClassIndexText : {}]}>\r\n              {index + 1}\r\n            </AppText>\r\n          </View>\r\n          <View style={[styles.verticalSeparator, isCurrentClass ? { backgroundColor: \"#D9D9D9\" } : {}]} />\r\n\r\n          <View style={styles.timePointTextContainer}>\r\n            <AppText style={styles.timePointText}>\r\n              {classStartTime} – {classEndTime}\r\n            </AppText>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport const getReglamentClass = (index: number): REGLAMENT_DATA_ELEM_TYPE => {\r\n  // console.log(`Getting class at index ${index}...`)\r\n  // throw if index is out of bounds\r\n  if (index < 0 || index > REGLAMENT_DATA.length - 1) {\r\n    throw new Error(\"Index out of bounds\")\r\n  }\r\n\r\n  return REGLAMENT_DATA[index]\r\n}\r\n","// EXTERNAL DEPENDENCIES\r\n\r\nimport React from \"react\"\r\nimport { View } from \"react-native\"\r\n\r\nimport { ScrollView } from \"react-native-gesture-handler\"\r\n\r\n// INTERNAL DEPENDENCIES\r\n\r\nimport { REGLAMENT_DATA } from \"../../constants/Constants\"\r\nimport { styles } from \"./Styles\"\r\nimport { ReglamentClass } from \"./ReglamentClassComponent\"\r\n\r\nconsole.log(\"Importing modules...\")\r\n\r\n// TODO: try to make own table component with flexbox (additional motivation here is to have builds not fail due to react-native-table-component)\r\n// or follow this article: https://rn-master.com/sortable-react-native-table-example/\r\n\r\nexport default function ReglamentScreen() {\r\n  console.log(\"Rendering ReglamentScreen...\")\r\n  return (\r\n    <View style={[styles.reglamentContainer, { paddingTop: 20 }]}>\r\n      <ScrollView>\r\n        {REGLAMENT_DATA.map((item, index) => {\r\n          return <ReglamentClass index={index} key={index} />\r\n        })}\r\n      </ScrollView>\r\n    </View>\r\n  )\r\n}\r\n","import { Ionicons } from \"@expo/vector-icons\"\r\nimport React, { useRef } from \"react\"\r\nimport { View, StyleSheet, TextInput, Linking } from \"react-native\"\r\nimport { globalStyles, palette } from \"../styles/global\"\r\n\r\nimport teachersJson from \"../assets/teachers.json\"\r\nimport { FlatList } from \"react-native-gesture-handler\"\r\nimport TeacherModel from \"../models/TeacherModel/TeacherModel\"\r\nimport AppText from \"../components/shared/AppText\"\r\nimport { FontName } from \"../constants/Fonts\"\r\n\r\n// TODO: fix scroll view intercepting select event on text\r\n\r\nexport default function TeachersScreen() {\r\n  const [searchQuery, setSearchQuery] = React.useState<string>(\"\")\r\n\r\n  const teachersTable = useRef(TeacherModel.GetInstance())\r\n\r\n  const [teachers, _] = React.useState<typeof teachersJson>(teachersTable.current.teachers)\r\n\r\n  const filteredTeachers = teachers.filter((teacher) => {\r\n    const teacherJson = JSON.stringify(teacher)\r\n    return teacherJson.toLowerCase().includes(searchQuery.toLowerCase())\r\n  })\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={{ ...globalStyles.horizontalCenteredFlex, ...styles.searchBarContainer }}>\r\n        <Ionicons name=\"search-outline\" size={14} style={{ marginHorizontal: 5 }} color={palette.grayedOut} />\r\n        <TextInput style={styles.searchBar} onChangeText={setSearchQuery} placeholder=\"Знайти викладача\" />\r\n      </View>\r\n      <View></View>\r\n      <FlatList\r\n        data={filteredTeachers}\r\n        userSelect=\"text\"\r\n        keyExtractor={(item) => item[\"ПІБ викладача\"]}\r\n        renderItem={({ item, index }) => {\r\n          const teacher = item\r\n          return (\r\n            <View key={index} style={styles.teacherCard}>\r\n              <AppText\r\n                style={{\r\n                  fontFamily: FontName.MontserratBold,\r\n                  ...styles.teacherDataText,\r\n                  fontSize: styles.teacherDataText.fontSize + 2,\r\n                }}\r\n                selectable\r\n              >\r\n                {teacher[\"ПІБ викладача\"]}\r\n              </AppText>\r\n              <AppText style={[styles.teacherDataText]} selectable>\r\n                {teacher.Кваліфікаця}\r\n              </AppText>\r\n              <AppText\r\n                style={[globalStyles.link, styles.teacherDataText]}\r\n                selectable\r\n                onPress={() => {\r\n                  console.log(\"pressed\")\r\n                  Linking.openURL(teacher[\"Кафедра Посилання\"])\r\n                }}\r\n              >\r\n                {`Кафедра ${teacher[\"Кафедра Абревіатура\"]} (${teacher[\"Кафедра Повна назва\"]})`}\r\n              </AppText>\r\n\r\n              {!teacher[\"E-mail\"].endsWith(\".ru\") ? (\r\n                <AppText\r\n                  style={[globalStyles.underlinedLink, styles.teacherDataText, { marginBottom: 0 }]}\r\n                  selectable\r\n                  onPress={() => {\r\n                    console.log(\"pressed\")\r\n                    // open email\r\n                    Linking.openURL(\"mailto:\" + teacher[\"E-mail\"])\r\n                  }}\r\n                >\r\n                  {teacher[\"E-mail\"]}\r\n                </AppText>\r\n              ) : (\r\n                <View />\r\n              )}\r\n            </View>\r\n          )\r\n        }}\r\n      />\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: palette.backgroundLight,\r\n  },\r\n\r\n  horizontalFlex: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  searchBarContainer: {\r\n    marginVertical: 10,\r\n    backgroundColor: palette.background,\r\n    borderRadius: 7,\r\n    padding: 5,\r\n    paddingVertical: 4,\r\n\r\n    marginHorizontal: 10,\r\n  },\r\n\r\n  searchBar: {\r\n    ...globalStyles.searchBar,\r\n    fontSize: 14,\r\n  },\r\n\r\n  teacherCard: {\r\n    marginVertical: 5,\r\n    marginHorizontal: 10,\r\n    padding: 14,\r\n    paddingVertical: 12,\r\n    borderRadius: 7,\r\n    backgroundColor: \"white\",\r\n\r\n    elevation: 1,\r\n    shadowOffset: { width: 1, height: 1 },\r\n    shadowColor: \"#333\",\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 2,\r\n  },\r\n\r\n  teacherDataText: {\r\n    fontSize: 14,\r\n    marginBottom: 6,\r\n  },\r\n})\r\n","import React from \"react\"\r\nimport { StyleSheet, Text, View, Image, Pressable, ImageBackground } from \"react-native\"\r\nimport { Ionicons, MaterialIcons } from \"@expo/vector-icons\"\r\nimport { SafeAreaView } from \"react-native-safe-area-context\"\r\nimport { globalStyles, palette } from \"../styles/global\"\r\nimport { useNavigation } from \"@react-navigation/native\"\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport { FontName } from \"../constants/Fonts\"\r\n\r\nexport type StackHeaderProps = {\r\n  title: string\r\n  useSafeAreaView?: boolean\r\n  hasBackground?: boolean\r\n  captionStyles?: any\r\n}\r\n\r\nexport default function StackHeader({\r\n  title,\r\n  useSafeAreaView = true,\r\n  hasBackground = true,\r\n  captionStyles = undefined,\r\n}: StackHeaderProps) {\r\n  const navigation = useNavigation()\r\n\r\n  const ViewComponent = useSafeAreaView ? SafeAreaView : View\r\n\r\n  const headerText = title\r\n  return (\r\n    <ViewComponent style={[styles.header, !hasBackground ? { backgroundColor: \"transparent\" } : {}]}>\r\n      <View style={styles.headerTitle}>\r\n        <TouchableOpacity>\r\n          <Ionicons\r\n            onPress={() => navigation.goBack()}\r\n            name=\"chevron-back-outline\"\r\n            size={24}\r\n            style={[globalStyles.navIcon, captionStyles]}\r\n          />\r\n        </TouchableOpacity>\r\n\r\n        <Text style={[styles.headerText, captionStyles]}>{headerText}</Text>\r\n      </View>\r\n    </ViewComponent>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  header: {\r\n    paddingVertical: 15,\r\n    width: \"100%\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: palette.navigationBackground,\r\n  },\r\n\r\n  headerText: {\r\n    fontSize: 20,\r\n    color: \"white\",\r\n    fontFamily: FontName.CenturyGothic,\r\n  },\r\n\r\n  headerTitle: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n  },\r\n})\r\n","import React, { useState } from \"react\"\r\nimport { Switch, StyleSheet } from \"react-native\"\r\nimport { palette } from \"../../styles/global\"\r\nimport { isRunningInBrowser } from \"../../utilities/utilities\"\r\nimport { SwitchProps } from \"react-native-elements\"\r\n\r\n// TODO: find better colors for toggled state\r\n\r\nexport default function CustomSwitch({\r\n  onValueChange,\r\n  initVal = false,\r\n  disabled = false,\r\n  ...otherProps\r\n}: {\r\n  initVal?: boolean\r\n  disabled?: boolean\r\n  onValueChange?: (newValue: boolean) => void\r\n  otherProps?: SwitchProps\r\n}): JSX.Element {\r\n  const [isEnabled, setIsEnabled] = useState(initVal)\r\n  const toggleSwitch = () => setIsEnabled((previousState) => !previousState)\r\n\r\n  // disabled = true\r\n\r\n  return (\r\n    <Switch\r\n      style={styles.switch}\r\n      trackColor={{ false: \"#767577\", true: palette.navigationBackground }}\r\n      // thumbColor={\"#eeeeee\"}\r\n      thumbColor=\"#eeeeee\"\r\n      // @ts-ignore\r\n      activeThumbColor=\"#eeeeee\" // this prop is added and used by  react-native-web\r\n      onValueChange={(newValue) => {\r\n        if (disabled) return\r\n        toggleSwitch()\r\n        onValueChange && onValueChange(newValue)\r\n      }}\r\n      value={isEnabled}\r\n      {...otherProps}\r\n    />\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  switch: {\r\n    // react-native-web sets min width to half of height\r\n    height: isRunningInBrowser() ? 20 : 24,\r\n    width: isRunningInBrowser() ? 40 : 44,\r\n  },\r\n})\r\n","import React from \"react\"\r\nimport { CheckBox } from \"react-native-elements\"\r\nimport { View, StyleSheet } from \"react-native\"\r\nimport AppText from \"./AppText\"\r\nimport { palette } from \"../../styles/global\"\r\n\r\nfunction BlueCircle(filled = true) {\r\n  return (\r\n    <View\r\n      style={{\r\n        width: 15,\r\n        height: 15,\r\n        borderRadius: 10,\r\n        backgroundColor: filled ? palette.navigationBackground : \"transparent\",\r\n        borderWidth: 1,\r\n        borderColor: !filled ? palette.grayedOut : \"transparent\",\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\ntype Option = {\r\n  title: string\r\n  code_name: string\r\n}\r\n\r\nexport function RadioButtonGroup({\r\n  options,\r\n  onOptionSelected,\r\n  selectedOptionIndex = 0,\r\n}: {\r\n  options: Option[]\r\n  onOptionSelected: (option: Option) => void\r\n  selectedOptionIndex?: number\r\n}) {\r\n  const [selectedIndex, setIndex] = React.useState(selectedOptionIndex)\r\n\r\n  return (\r\n    <View style={{ flexGrow: 0, marginLeft: 20 }}>\r\n      {options.map((option, index) => (\r\n        <CheckBox\r\n          checked={selectedIndex === index}\r\n          onPress={() => setIndex(index) || onOptionSelected(option)}\r\n          checkedIcon={BlueCircle()}\r\n          uncheckedIcon={BlueCircle(false)}\r\n          title={<AppText style={styles.optionTitle}>{option.title}</AppText>}\r\n          containerStyle={styles.checkboxContainer}\r\n        />\r\n      ))}\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  optionTitle: {\r\n    marginLeft: 10,\r\n    fontSize: 14,\r\n  },\r\n\r\n  checkboxContainer: {\r\n    backgroundColor: \"transparent\",\r\n    borderWidth: 0,\r\n    flexGrow: 0,\r\n    marginVertical: 7,\r\n    marginLeft: 0,\r\n    padding: 0,\r\n  },\r\n})\r\n","import { useRoute } from \"@react-navigation/native\"\r\nimport React, { useCallback } from \"react\"\r\nimport AppText from \"../../../components/shared/AppText\"\r\nimport { View, StyleSheet, TextInput, Platform, TextInputProps } from \"react-native\"\r\nimport { palette } from \"../../../styles/global\"\r\nimport CustomSwitch from \"../../../components/shared/Switch\"\r\nimport { ScheduleClassFields } from \"../../../models/ScheduleClass/Types\"\r\nimport { CLASS_TYPE } from \"../../../models/ScheduleClass/Types\"\r\nimport { ScheduleClass } from \"../../../models/ScheduleClass/ScheduleClass\"\r\nimport { Formik, useFormikContext } from \"formik\"\r\nimport { REGLAMENT_DATA } from \"../../../constants/Constants\"\r\nimport getStrict from \"../../../utilities/getStrict\"\r\nimport { formatRoomName } from \"../../../components/ScheduleComponents/ScheduleClassComponent/Formatters\"\r\nimport _ from \"lodash\"\r\nimport { workDays, workDaysEnLower } from \"../../../constants/Days\"\r\nimport { WeekType } from \"../../../utilities/getWeekType\"\r\nimport { RadioButtonGroup } from \"../../../components/shared/RadioButtonGroup\"\r\n\r\n// autocomplete library: https://www.npmjs.com/package/react-native-autocomplete-input\r\n// another one: https://www.npmjs.com/package/react-native-autocomplete-dropdown\r\n\r\n// TODO: do not display all suggestions at once, but only those that match the query (unless query is empty, then display nothing)\r\n\r\ntype ScheduleClassEditables = Omit<ScheduleClassFields, \"index\" | \"isSharedClass\" | \"day\" | \"weekName\" | \"week\">\r\n\r\nconst AutoSubmitFormData = () => {\r\n  // Grab values and submitForm from context\r\n\r\n  let {\r\n    values,\r\n    initialValues,\r\n  }: {\r\n    values: ScheduleClassEditables\r\n    initialValues: ScheduleClassEditables\r\n  } = useFormikContext()\r\n\r\n  const { isSubmitting } = useFormikContext()\r\n\r\n  let submitFormCallback = useCallback(_.debounce(useFormikContext().submitForm, 1000), [])\r\n\r\n  // submitForm = _.debounce(submitForm, 1000)\r\n\r\n  React.useEffect(() => {\r\n    // values.teacher = [values.teacher]\r\n\r\n    // do not submit form if values haven't changed\r\n    if (values == initialValues) {\r\n      console.log(\"values haven't changed, won't submit\")\r\n      return\r\n    }\r\n\r\n    // Submit the form imperatively\r\n    // if (!isSubmitting) submitFormCallback()\r\n    // else console.log(\"already submitting, won't submit again\")\r\n    submitFormCallback()\r\n  }, [values])\r\n  return null\r\n}\r\n\r\n// a decorator around TextInput that adds a bottom border and styles the text\r\nconst FormTextInput = (props: TextInputProps & { captionText: string; noteText: string | undefined }) => {\r\n  return (\r\n    <View style={[styles.formField]}>\r\n      <AppText style={[styles.fieldCaption]}>{props.captionText}</AppText>\r\n\r\n      <View>\r\n        <TextInput cursorColor={palette.navigationBackground} style={styles.textInputText} {...props} />\r\n        <View style={[styles.underline]} />\r\n        {props.noteText ? (\r\n          <AppText style={[styles.fieldCaption, { fontSize: 12, fontFamily: \"montserrat-medium\" }]}>\r\n            {props.noteText}\r\n          </AppText>\r\n        ) : null}\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default function ScheduleClassForm() {\r\n  // const navigation = useNavigation()\r\n  // const options = navigation\r\n\r\n  const route = useRoute()\r\n  const data = route.params\r\n  const {\r\n    scheduleClass,\r\n    currentlyViewedWeek,\r\n    onFormDataUpdated,\r\n  }: {\r\n    scheduleClass: ScheduleClass\r\n    currentlyViewedWeek: WeekType\r\n    onFormDataUpdated: (data: ScheduleClassFields) => void\r\n  } = data\r\n\r\n  let kbAvoidingViewBehavior: \"padding\" | \"height\" | \"position\" = Platform.OS === \"ios\" ? \"padding\" : \"height\"\r\n  kbAvoidingViewBehavior = \"position\" // position seems to work better than height\r\n\r\n  let reglamentClass = getStrict(REGLAMENT_DATA, scheduleClass.index - 1)\r\n\r\n  let classStart: string = reglamentClass[1]\r\n  if (classStart.length == 4) classStart = \"0\" + classStart\r\n\r\n  const classEnd: string = reglamentClass[2]\r\n\r\n  const teacher = scheduleClass.teacher ?? \"\"\r\n\r\n  const dayUkrIndex = workDaysEnLower.findIndex((d) => scheduleClass.day == d)\r\n  console.log(\"|\" + scheduleClass.day + \"|\")\r\n  const dayUkr = workDays[dayUkrIndex]\r\n\r\n  const weekTypeUkr = currentlyViewedWeek == 0 ? \"Чисельник\" : \"Знаменник\"\r\n\r\n  const classType = scheduleClass.classType\r\n\r\n  const scheduleClassEditables = _.pick(scheduleClass, [\"isBiweekly\", \"name\", \"teacher\", \"room\", \"classType\"])\r\n\r\n  const initialFormikValues: ScheduleClassEditables = {\r\n    ...scheduleClassEditables,\r\n    teacher: typeof teacher !== \"string\" ? teacher.join(\", \") : teacher,\r\n    room: formatRoomName(scheduleClass, true),\r\n  }\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialFormikValues}\r\n      onSubmit={(values) => {\r\n        console.log(\"Submitting Formik form...\")\r\n        console.log(values)\r\n        onFormDataUpdated(values)\r\n      }}\r\n    >\r\n      {({ values, handleChange, handleBlur, submitForm }) => {\r\n        return (\r\n          <View>\r\n            <View\r\n              style={[\r\n                styles.row,\r\n                {\r\n                  justifyContent: \"space-between\",\r\n                },\r\n              ]}\r\n            >\r\n              <View>\r\n                <AppText style={[styles.headerTextPrimary]}>Пара №{scheduleClass.index}</AppText>\r\n                <AppText style={[styles.headerTextSecondary]}>\r\n                  {classStart} – {classEnd}\r\n                </AppText>\r\n              </View>\r\n\r\n              <View>\r\n                <AppText\r\n                  style={[\r\n                    {\r\n                      textAlign: \"right\",\r\n                    },\r\n                    styles.headerTextPrimary,\r\n                  ]}\r\n                >\r\n                  {weekTypeUkr}\r\n                </AppText>\r\n                <AppText\r\n                  style={[\r\n                    {\r\n                      textAlign: \"right\",\r\n                    },\r\n                    styles.headerTextSecondary,\r\n                  ]}\r\n                >\r\n                  {dayUkr}\r\n                </AppText>\r\n              </View>\r\n            </View>\r\n            <FormTextInput captionText=\"Предмет\" value={values.name} onChangeText={handleChange(\"name\")} />\r\n\r\n            <FormTextInput\r\n              autoCapitalize=\"words\"\r\n              captionText=\"Викладач\"\r\n              value={values.teacher}\r\n              noteText=\"*якщо декілька – прізвища через кому\"\r\n              onChangeText={handleChange(\"teacher\")}\r\n            />\r\n\r\n            <FormTextInput\r\n              captionText=\"Аудиторія\"\r\n              value={values.room}\r\n              noteText=\"*якщо декілька – через кому\"\r\n              onChangeText={handleChange(\"room\")}\r\n            />\r\n            {/* \r\n            <View style={[styles.row]}>\r\n              <AppText>Посилання: </AppText>\r\n              <TextInput placeholder=\"https://us04web.zoom.us/j/75735448331?pwd=4X7q7Wu5jf43QTje5BuhChQnUcL6I1.1\" />\r\n            </View> */}\r\n            <RadioButtonGroup\r\n              options={[\r\n                {\r\n                  title: CLASS_TYPE.LECTURE,\r\n                  code_name: CLASS_TYPE.LECTURE,\r\n                },\r\n                {\r\n                  title: CLASS_TYPE.LAB,\r\n                  code_name: CLASS_TYPE.LAB,\r\n                },\r\n                {\r\n                  title: CLASS_TYPE.PRACTICE,\r\n                  code_name: CLASS_TYPE.PRACTICE,\r\n                },\r\n              ]}\r\n              onOptionSelected={(o) => handleChange(\"classType\")(o.code_name)}\r\n              selectedOptionIndex={\r\n                values.classType == CLASS_TYPE.LECTURE ? 0 : values.classType == CLASS_TYPE.LAB ? 1 : 2\r\n              }\r\n            />\r\n\r\n            <View\r\n              style={[\r\n                styles.row,\r\n                {\r\n                  justifyContent: \"space-between\",\r\n                  paddingHorizontal: 20,\r\n                  paddingRight: 10,\r\n                },\r\n              ]}\r\n            >\r\n              <AppText\r\n                style={[\r\n                  {\r\n                    fontSize: 14,\r\n                    fontFamily: \"montserrat-medium\",\r\n                  },\r\n                ]}\r\n              >\r\n                Щотижнева пара\r\n              </AppText>\r\n              {/* <TextInput placeholder=\"Лекція\" /> */}\r\n\r\n              <CustomSwitch initVal={!values.isBiweekly} onValueChange={(e) => handleChange(\"isBiweekly\")(!e + \"\")} />\r\n            </View>\r\n\r\n            {/* <KeyboardAvoidingView behavior={kbAvoidingViewBehavior} style={[styles.row]}>\r\n        <AppText>KeyboardAvoidingView -1</AppText>\r\n        <Button title={\"Button\"} />\r\n      </KeyboardAvoidingView> */}\r\n            <AutoSubmitFormData />\r\n          </View>\r\n        )\r\n      }}\r\n    </Formik>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  row: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 20,\r\n  },\r\n\r\n  formField: {\r\n    marginVertical: 10,\r\n    paddingHorizontal: 20,\r\n  },\r\n\r\n  autocompleteContainer: {\r\n    flex: 1,\r\n    left: 0,\r\n    position: \"absolute\",\r\n    right: 0,\r\n    top: 0,\r\n    zIndex: 1,\r\n  },\r\n\r\n  underline: {\r\n    height: 1,\r\n    backgroundColor: \"#C6C4C4\",\r\n    width: \"100%\",\r\n\r\n    marginVertical: 1,\r\n  },\r\n\r\n  fieldCaption: {\r\n    fontFamily: \"montserrat-semibold\",\r\n    color: palette.grayedOut,\r\n  },\r\n\r\n  textInputText: {\r\n    fontSize: 14,\r\n    fontFamily: \"montserrat-semibold\",\r\n    color: palette.text,\r\n  },\r\n\r\n  headerTextPrimary: {\r\n    fontSize: 14,\r\n    fontFamily: \"montserrat-medium\",\r\n  },\r\n\r\n  headerTextSecondary: {\r\n    fontSize: 14,\r\n    fontFamily: \"montserrat-medium\",\r\n    color: palette.grayedOut,\r\n  },\r\n})\r\n","import React from \"react\"\r\nimport ScheduleScreen from \"./ScheduleScreen/ScheduleScreen\"\r\n\r\nexport default function ScheduleEditorScreen() {\r\n  return <ScheduleScreen isEditable={true} />\r\n}\r\n","import { createStackNavigator } from \"@react-navigation/stack\"\r\nimport * as React from \"react\"\r\nimport ScheduleEditor from \"../screens/TestTabsScreens/ScheduleEditor\"\r\nimport { View } from \"react-native\"\r\nimport StackHeader from \"../components/StackHeader\"\r\nimport ScheduleClassForm from \"../screens/TestTabsScreens/scheduleEditorStack/ScheduleClassForm\"\r\nimport ScheduleEditorScreen from \"../screens/ScheduleEditorScreen\"\r\n\r\nconst Stack = createStackNavigator()\r\n\r\nexport enum EditorStackRoutes {\r\n  EDITOR = \"Редактор\",\r\n  SCHEDULE_CLASS_FORM = \"ScheduleClassForm\",\r\n}\r\n\r\nexport default function EditorStack() {\r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={\r\n        {\r\n          // headerShown: false,\r\n        }\r\n      }\r\n    >\r\n      <Stack.Screen\r\n        name={EditorStackRoutes.EDITOR}\r\n        component={ScheduleEditorScreen}\r\n        options={{\r\n          header: () => <View />,\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name={EditorStackRoutes.SCHEDULE_CLASS_FORM}\r\n        component={ScheduleClassForm}\r\n        options={{\r\n          header: (props) => <StackHeader title={\"Пара\"} />,\r\n        }}\r\n      />\r\n    </Stack.Navigator>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { View, Text, StyleSheet, Linking } from \"react-native\"\r\nimport { globalStyles, palette } from \"../../styles/global\"\r\nimport AppText from \"../../components/shared/AppText\"\r\nimport { Ionicons } from \"@expo/vector-icons\"\r\nimport { ScrollView, TouchableOpacity } from \"react-native-gesture-handler\"\r\n\r\nexport default function FacultiesTestScreen() {\r\n  // TODO: perhaps, copy name and full name to clipboard on press\r\n\r\n  const renderFacultyCard = (\r\n    nameAbbreviation: string,\r\n    nameFull: string,\r\n    address: string,\r\n    phone: string,\r\n    mail: string\r\n  ) => {\r\n    return (\r\n      <View style={styles.facultyCard}>\r\n        <AppText\r\n          style={{\r\n            fontSize: 18,\r\n            fontFamily: \"montserrat-bold\",\r\n          }}\r\n        >\r\n          {nameAbbreviation}\r\n        </AppText>\r\n        <AppText style={[]}>{nameFull}</AppText>\r\n        <View style={[globalStyles.captionWithIcon, { marginVertical: 2 }]}>\r\n          <Ionicons name=\"location\" color={palette.grayedOut} size={16} />\r\n          <AppText style={{ marginLeft: 5, fontSize: 14, fontFamily: \"montserrat-semibold\" }}>{address}</AppText>\r\n        </View>\r\n        <TouchableOpacity\r\n          onPress={() => Linking.openURL(`tel:${phone}`)}\r\n          style={[globalStyles.captionWithIcon, { marginVertical: 2 }]}\r\n        >\r\n          <Ionicons name=\"call\" color={palette.grayedOut} size={16} />\r\n          <AppText style={{ marginLeft: 5, fontSize: 14, fontFamily: \"montserrat-semibold\" }}>{phone}</AppText>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity\r\n          onPress={() => Linking.openURL(`mailto:${mail}`)}\r\n          style={[globalStyles.captionWithIcon, { marginVertical: 2 }]}\r\n        >\r\n          <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />\r\n          <AppText\r\n            style={[{ marginLeft: 5, fontSize: 14, fontFamily: \"montserrat-semibold\" }, globalStyles.underlinedLink]}\r\n          >\r\n            {mail}\r\n          </AppText>\r\n        </TouchableOpacity>\r\n      </View>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      {renderFacultyCard(\r\n        \"ФВПІТ\",\r\n        \"Факультет видавничо-поліграфічних, інформаційних технологій\",\r\n        \"вул. Під Голоском, 19, ауд. 234\",\r\n        \"(032) 242 23 77\",\r\n        \"fvpit@uad.lviv.ua\"\r\n      )}\r\n\r\n      {renderFacultyCard(\r\n        \"ФКПІ\",\r\n        \"Факультет комп'ютерно-поліграфічної інженерії\",\r\n        \"вул. Під Голоском, 19, ауд. 219\",\r\n        \"(032) 242 23 76\",\r\n        \"fpu@uad.lviv.ua\"\r\n      )}\r\n\r\n      {renderFacultyCard(\r\n        \"ФМКП\",\r\n        \"Факультет медіакомунікацій та підприємництва\",\r\n        \"вул. Під Голоском, 19, ауд. 313\",\r\n        \"(032) 242 23 75\",\r\n        \"feoks@uad.lviv.ua\"\r\n      )}\r\n    </ScrollView>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 20,\r\n    paddingTop: 0,\r\n  },\r\n\r\n  facultyCard: {\r\n    ...globalStyles.card,\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 12,\r\n\r\n    marginVertical: 5,\r\n  },\r\n})\r\n","export enum ContactsStackRoutes {\r\n  CONTACTS_MENU = \"Контакти (Меню)\",\r\n  FACULTIES = \"Факультети\",\r\n}\r\n","import { FontAwesome, Ionicons } from \"@expo/vector-icons\"\r\nimport React from \"react\"\r\nimport { Image } from \"react-native-elements\"\r\nimport { palette } from \"../styles/global\"\r\nimport { imageIcons } from \"./Images\"\r\nimport AppText from \"../components/shared/AppText\"\r\nimport { View } from \"react-native\"\r\n\r\nexport type ModalItem = {\r\n  icon: JSX.Element\r\n  text: string\r\n  isPhone?: boolean\r\n  isLink?: boolean\r\n  linkName?: string\r\n}\r\n\r\nlet academyCorps = [\r\n  \"вул. Під Голоском, 19\",\r\n  \"вул. Підвальна, 17\",\r\n  \"вул. Личаківська, 3\",\r\n  \"вул. Коцюбинського, 21\",\r\n  \"вул. Винниченка, 12\",\r\n]\r\n\r\n// Корпуси академії\r\nexport const corpsModalItems = academyCorps.map((corps) => {\r\n  return {\r\n    text: corps,\r\n    icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n  }\r\n})\r\n\r\n// Ректорат\r\nexport const rectorateModalItems: ModalItem[] = [\r\n  {\r\n    icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n    text: \"вул. Під Голоском, 19, ауд. 234\",\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n    text: \"(032) 242 23 77\",\r\n    isPhone: true,\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n    text: \"uad@uad.edu.ua\",\r\n    isLink: true,\r\n  },\r\n]\r\n\r\n// Підготовче відділення\r\nexport const preparationDepartmentModalItems: ModalItem[] = [\r\n  {\r\n    icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n    text: \"вул. Під Голоском, 19, ауд. 218\",\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n    text: \"(032) 242 23 78\",\r\n    isPhone: true,\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n    text: \"pv@uad.edu.ua\",\r\n    isLink: true,\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"globe\" color={palette.grayedOut} size={16} />,\r\n    text: \"http://www.uad-pv.pp.ua/\",\r\n    isLink: true,\r\n  },\r\n]\r\n\r\n// Відділ міжнародних звʼязків та інформаційного забезпечення\r\nexport const internationalAffairsAndInformationDepartmentModalItems: ModalItem[] = [\r\n  {\r\n    icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n    text: \"вул. Під Голоском, 19\",\r\n  },\r\n\r\n  {\r\n    icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n    text: \"(032) 259 94 21\",\r\n    isPhone: true,\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n    text: \"ird@uad.lviv.ua\",\r\n    isLink: true,\r\n  },\r\n]\r\n\r\n// Приймальна комісія\r\nexport const admissionsCommitteeModalItems: ModalItem[] = [\r\n  {\r\n    icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n    text: \"вул. Під Голоском, 19, каб. 417, 200\",\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n    text: \"(067) 149 14 00\",\r\n    isPhone: true,\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n    text: \"pk@uad.edu.ua\",\r\n    isLink: true,\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n    text: \"pk.uad.lviv@gmail.com\",\r\n    isLink: true,\r\n  },\r\n]\r\n\r\n// Бухгалтерія\r\nexport const accountingModalItems: ModalItem[] = [\r\n  {\r\n    icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n    text: \"вул. Під Голоском, 19, ауд. 213\",\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n    text: \"(032) 242 23 46\",\r\n    isPhone: true,\r\n  },\r\n]\r\n\r\n// Відділ платної форми навчання\r\nexport const contractEducationDepartmentModalItems: ModalItem[] = [\r\n  {\r\n    icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n    text: \"вул. Під Голоском, 19, ауд. 234а\",\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n    text: \"(032) 242 23 80\",\r\n    isPhone: true,\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n    text: \"vpn_uad@ukr.net\",\r\n    isLink: true,\r\n  },\r\n]\r\n\r\n// Профком студентів\r\nexport const studentUnionModalItems: ModalItem[] = [\r\n  {\r\n    icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n    text: \"вул. Під Голоском, 19, ауд. 311\",\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n    text: \"(032) 242 23 79\",\r\n    isPhone: true,\r\n  },\r\n  {\r\n    icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n    text: \"(067) 67 23 173\",\r\n    isPhone: true,\r\n  },\r\n]\r\n\r\n// Студентська рада\r\nexport const studentCouncilModalItems: ModalItem[] = [\r\n  {\r\n    icon: <FontAwesome name=\"instagram\" color={palette.grayedOut} size={16} />,\r\n    text: \"https://www.instagram.com/uad_lviv/\",\r\n    isLink: true,\r\n    linkName: \"uad_lviv\",\r\n  },\r\n]\r\n\r\n// Соц. мережі академії\r\nexport const socialMediaModalItems: ModalItem[] = [\r\n  {\r\n    icon: (\r\n      <View style={{ marginLeft: 2 }}>\r\n        <FontAwesome name=\"instagram\" color={palette.grayedOut} size={16} />\r\n      </View>\r\n    ),\r\n\r\n    text: \"https://www.instagram.com/uad_lviv/\",\r\n    isLink: true,\r\n    linkName: \"@uad_lviv\",\r\n  },\r\n  {\r\n    icon: <FontAwesome name=\"telegram\" color={palette.grayedOut} size={16} />,\r\n    text: \"https://t.me/uad_live\",\r\n    isLink: true,\r\n    linkName: \"@uad_live\",\r\n  },\r\n  {\r\n    icon: <FontAwesome name=\"youtube-play\" color={palette.grayedOut} size={16} />,\r\n    text: \"https://www.youtube.com/user/UADtelevision\",\r\n    isLink: true,\r\n    linkName: \"UADtelevision\",\r\n  },\r\n  {\r\n    icon: <FontAwesome name=\"facebook-official\" color={palette.grayedOut} size={16} />,\r\n    text: \"https://www.facebook.com/uadlv\",\r\n    isLink: true,\r\n  },\r\n  {\r\n    icon: (\r\n      <Image\r\n        source={imageIcons.tiktok}\r\n        // color={palette.grayedOut}\r\n        style={{\r\n          width: 16,\r\n          height: 18,\r\n        }}\r\n      />\r\n    ),\r\n    text: \"https://www.tiktok.com/@uad.lviv\",\r\n    isLink: true,\r\n    linkName: \"@uad.lviv\",\r\n  },\r\n]\r\n","import { StyleSheet } from \"react-native\"\r\n\r\nexport const styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 10,\r\n    paddingBottom: 20,\r\n  },\r\n\r\n  screenBodyContainer: {\r\n    flex: 1,\r\n    flexGrow: 1,\r\n    // both properties are necessary for the content to scroll and be displayed correctly on android and web\r\n  },\r\n\r\n  category: {\r\n    marginVertical: 10,\r\n  },\r\n\r\n  navigateToSubcategoryButton: {},\r\n\r\n  subcategoryButtonContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    marginVertical: 8,\r\n  },\r\n\r\n  categoryTitle: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginLeft: 14,\r\n    marginBottom: 5,\r\n  },\r\n\r\n  subcategoryTitle: {\r\n    fontSize: 15,\r\n  },\r\n\r\n  optionText: {\r\n    marginLeft: 10,\r\n    fontSize: 16,\r\n  },\r\n})\r\n","import React from \"react\"\r\nimport { View, Image, StyleSheet } from \"react-native\"\r\nimport AppText from \"./shared/AppText\"\r\nimport { imageIcons } from \"../constants/Images\"\r\nimport { FontName } from \"../constants/Fonts\"\r\nimport { isRunningInBrowser } from \"../utilities/utilities\"\r\n\r\ntype WarningBarProps = {\r\n  text: string\r\n}\r\n\r\nexport default function WarningBar(props: WarningBarProps) {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Image style={styles.warningTriangleImage} source={imageIcons.warning_triangle} />\r\n      <View style={{ margin: 0, padding: 0 }}>\r\n        <AppText style={styles.warningText}>{props.text}</AppText>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexDirection: \"row\",\r\n    alignItems: isRunningInBrowser() ? \"flex-start\" : \"center\",\r\n\r\n    width: \"100%\",\r\n    backgroundColor: \"#FFDD67\",\r\n\r\n    padding: 6,\r\n    paddingLeft: 10,\r\n  },\r\n\r\n  warningTriangleImage: {\r\n    width: 13,\r\n    height: 13,\r\n    // marginHorizontal: 10,\r\n    marginRight: 7,\r\n  },\r\n\r\n  warningText: {\r\n    fontFamily: FontName.RalewayMedium,\r\n    alignSelf: \"center\",\r\n    // textAlignVertical: \"top\",\r\n    margin: 0,\r\n    padding: 0,\r\n    marginBottom: 2,\r\n  },\r\n})\r\n","import React from \"react\"\r\nimport { View, FlatList, Linking, Pressable } from \"react-native\"\r\nimport Separator from \"../../components/shared/Separator\"\r\nimport EntypoIcon from \"react-native-vector-icons/Entypo\"\r\nimport { Ionicons, Octicons } from \"@expo/vector-icons\"\r\nimport { globalStyles, palette } from \"../../styles/global\"\r\nimport { imageIcons } from \"../../constants/Images\"\r\nimport AppText from \"../../components/shared/AppText\"\r\nimport { ScrollView, TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport { Image } from \"react-native-elements\"\r\nimport OptionPickerModal from \"../../components/OptionPickerModalComponent/OptionPickerModal\"\r\nimport {\r\n  ModalItem,\r\n  accountingModalItems,\r\n  admissionsCommitteeModalItems,\r\n  contractEducationDepartmentModalItems,\r\n  corpsModalItems,\r\n  internationalAffairsAndInformationDepartmentModalItems,\r\n  preparationDepartmentModalItems,\r\n  rectorateModalItems,\r\n  socialMediaModalItems,\r\n  studentCouncilModalItems,\r\n  studentUnionModalItems,\r\n} from \"../../constants/Contacts\"\r\nimport { isMail } from \"../../utilities/utilities\"\r\nimport { useNavigation } from \"@react-navigation/native\"\r\nimport { FontName } from \"../../constants/Fonts\"\r\nimport { styles } from \"./Styles\"\r\nimport WarningBar from \"../../components/WarningBar\"\r\n\r\ntype CategoryProps = {\r\n  title: string\r\n  titleIcon: JSX.Element\r\n  subcategories?: string[]\r\n  onPress?: () => void\r\n  children?: JSX.Element[]\r\n}\r\n\r\nfunction Category({ title, titleIcon, subcategories, onPress, children }: CategoryProps) {\r\n  return (\r\n    <View style={styles.category}>\r\n      <View style={styles.categoryTitle}>\r\n        {titleIcon}\r\n        <AppText style={[{ fontSize: 14, fontFamily: FontName.Montserrat600, marginLeft: 5 }]}>{title}</AppText>\r\n      </View>\r\n      <FlatList\r\n        data={children}\r\n        style={[globalStyles.card, { paddingHorizontal: 10, paddingVertical: 10 }]}\r\n        keyExtractor={(item, index) => index.toString()}\r\n        ItemSeparatorComponent={() => {\r\n          return <Separator color=\"rgba(217, 217, 217, 0.4)\" upperElement={true} lowerElement={true} /> // TODO: Refactor\r\n        }}\r\n        renderItem={({ item }) => {\r\n          const itemOnPress = item.props.onPress\r\n          const ItemType = item.type\r\n\r\n          // @ts-expect-error\r\n          const itemWithoutOnPress = <ItemType {...item.props} onPress={() => null} />\r\n\r\n          return (\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                itemOnPress() // hoist the onPress handler to parent for larger hitbox\r\n              }}\r\n              style={styles.subcategoryButtonContainer}\r\n            >\r\n              <AppText style={[{ fontSize: 15 }]}>{itemWithoutOnPress}</AppText>\r\n              <EntypoIcon name=\"chevron-small-right\" style={globalStyles.grayIcon}></EntypoIcon>\r\n            </TouchableOpacity>\r\n          )\r\n        }}\r\n      />\r\n    </View>\r\n  )\r\n}\r\n\r\nconst constructModalItem = (item: ModalItem, idx: number) => {\r\n  return (\r\n    <View\r\n      style={{\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        marginVertical: 6,\r\n      }}\r\n    >\r\n      {item.icon}\r\n      <AppText\r\n        onPress={() => {\r\n          if (item.isLink) {\r\n            if (isMail(item.text)) Linking.openURL(`mailto:${item.text}`)\r\n            else Linking.openURL(item.text)\r\n          } else if (item.isPhone) Linking.openURL(`tel:${item.text}`)\r\n        }}\r\n        style={[styles.optionText, item.isLink ? globalStyles.underlinedLink : {}]}\r\n      >\r\n        {item.linkName ? item.linkName : item.text}\r\n      </AppText>\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction constructContentPresenterModal(\r\n  headerText: string,\r\n  isOpen: boolean,\r\n  onCloseModal: () => void,\r\n  initialOptions: ModalItem[],\r\n  displaySeparators = false\r\n) {\r\n  return (\r\n    <OptionPickerModal\r\n      headerText={headerText}\r\n      isOpen={isOpen}\r\n      hasSearchBar={false}\r\n      displaySeparators={displaySeparators}\r\n      onCloseModal={onCloseModal}\r\n      options={initialOptions}\r\n      renderItem={constructModalItem}\r\n      isOptionSelectable={false}\r\n    />\r\n  )\r\n}\r\n\r\nexport default function ContactsScreen() {\r\n  const navigation = useNavigation()\r\n\r\n  let [corpsModalIsOpen, setCorpsModalIsOpen] = React.useState(false)\r\n\r\n  let [rectorateModalIsOpen, setRectorateModalIsOpen] = React.useState(false)\r\n  let [admissionCommitteeModalIsOpen, setAdmissionCommitteeModalIsOpen] = React.useState(false)\r\n  let [preparationDepartmentModalIsOpen, setPreparationDepartmentModalIsOpen] = React.useState(false)\r\n  let [\r\n    internationalAffairsAndInformationDepartmentModalIsOpen,\r\n    setInternationalAffairsAndInformationDepartmentModalIsOpen,\r\n  ] = React.useState(false)\r\n\r\n  let [accountingModalIsOpen, setAccountingModalIsOpen] = React.useState(false)\r\n  let [contractEducationModalIsOpen, setContractEducationModalIsOpen] = React.useState(false)\r\n  let [studentUnionModalIsOpen, setStudentUnionModalIsOpen] = React.useState(false)\r\n  let [studentCouncilModalIsOpen, setStudentCouncilModalIsOpen] = React.useState(false)\r\n  let [socialMediaModalIsOpen, setSocialMediaModalIsOpen] = React.useState(false)\r\n\r\n  const structureAndSubdivisionsSubcategories = [\r\n    \"Ректорат\",\r\n    \"Приймальна комісія\",\r\n    \"Підготовче відділення\",\r\n    \"Відділ міжнародних зв'язків та інф. забезпечення\",\r\n    \"Бухгалтерія\",\r\n    \"Відділ платної форми навчання\",\r\n    \"Профком студентів\",\r\n  ]\r\n\r\n  const studentCommunitiesSubcategories = [\"Студентська рада\", \"Соц. мережі академії\"]\r\n\r\n  return (\r\n    <View style={styles.screenBodyContainer}>\r\n      {/*  */}\r\n      <WarningBar text=\"Триває оновлення даних у зв'язку з реогранізацією.\" />\r\n\r\n      <ScrollView style={styles.container}>\r\n        <Category\r\n          title=\"Корпуси та факультети\"\r\n          titleIcon={\r\n            <Image\r\n              style={{\r\n                width: 14,\r\n                height: 14,\r\n                opacity: 0.5,\r\n              }}\r\n              source={imageIcons.museum}\r\n            />\r\n          }\r\n        >\r\n          <Pressable onPress={() => setCorpsModalIsOpen(true)}>\r\n            <AppText style={styles.subcategoryTitle}>Корпуси академії</AppText>\r\n\r\n            {constructContentPresenterModal(\r\n              \"Корпуси академії\",\r\n              corpsModalIsOpen,\r\n              () => setCorpsModalIsOpen(false),\r\n              corpsModalItems\r\n            )}\r\n          </Pressable>\r\n\r\n          <AppText\r\n            onPress={(e) => {\r\n              console.log(\"executing on press handler as child\")\r\n\r\n              // @ts-expect-error\r\n              navigation.push(\"Факультети\")\r\n              // e.stopPropagation()\r\n              // e.preventDefault()\r\n\r\n              return true\r\n            }}\r\n            style={styles.subcategoryTitle}\r\n          >\r\n            Факультети академії\r\n          </AppText>\r\n        </Category>\r\n\r\n        <Category\r\n          title=\"Структура і підрозділи\"\r\n          titleIcon={<Ionicons name=\"git-merge-outline\" size={16} color={palette.text} />}\r\n          subcategories={structureAndSubdivisionsSubcategories}\r\n        >\r\n          <Pressable onPress={() => setRectorateModalIsOpen(true)}>\r\n            {constructContentPresenterModal(\r\n              \"Ректорат\",\r\n              rectorateModalIsOpen,\r\n              () => setRectorateModalIsOpen(false),\r\n              rectorateModalItems\r\n            )}\r\n            <AppText style={styles.subcategoryTitle}>Ректорат</AppText>\r\n          </Pressable>\r\n\r\n          <Pressable onPress={() => setAdmissionCommitteeModalIsOpen(true)}>\r\n            {constructContentPresenterModal(\r\n              \"Приймальна комісія\",\r\n              admissionCommitteeModalIsOpen,\r\n              () => setAdmissionCommitteeModalIsOpen(false),\r\n              admissionsCommitteeModalItems\r\n            )}\r\n            <AppText style={styles.subcategoryTitle}>Приймальна комісія</AppText>\r\n          </Pressable>\r\n\r\n          <Pressable onPress={() => setPreparationDepartmentModalIsOpen(true)}>\r\n            {constructContentPresenterModal(\r\n              \"Підготовче відділення\",\r\n              preparationDepartmentModalIsOpen,\r\n              () => setPreparationDepartmentModalIsOpen(false),\r\n              preparationDepartmentModalItems\r\n            )}\r\n            <AppText style={styles.subcategoryTitle}>Підготовче відділення</AppText>\r\n          </Pressable>\r\n\r\n          <Pressable onPress={() => setInternationalAffairsAndInformationDepartmentModalIsOpen(true)}>\r\n            {constructContentPresenterModal(\r\n              \"Відділ міжнародних звʼязків та інф. забезпечення\",\r\n              internationalAffairsAndInformationDepartmentModalIsOpen,\r\n              () => setInternationalAffairsAndInformationDepartmentModalIsOpen(false),\r\n              internationalAffairsAndInformationDepartmentModalItems\r\n            )}\r\n            <AppText style={[styles.subcategoryTitle]}>Відділ міжнародних звʼязків{\"\\n\"}та інф. забезпечення</AppText>\r\n          </Pressable>\r\n\r\n          <Pressable onPress={() => setAccountingModalIsOpen(true)}>\r\n            {constructContentPresenterModal(\r\n              \"Бухгалтерія\",\r\n              accountingModalIsOpen,\r\n              () => setAccountingModalIsOpen(false),\r\n              accountingModalItems\r\n            )}\r\n            <AppText style={styles.subcategoryTitle}>Бухгалтерія</AppText>\r\n          </Pressable>\r\n\r\n          <Pressable onPress={() => setContractEducationModalIsOpen(true)}>\r\n            {constructContentPresenterModal(\r\n              \"Відділ платної форми навчання\",\r\n              contractEducationModalIsOpen,\r\n              () => setContractEducationModalIsOpen(false),\r\n              contractEducationDepartmentModalItems\r\n            )}\r\n            <AppText style={styles.subcategoryTitle}>Відділ платної форми навчання</AppText>\r\n          </Pressable>\r\n\r\n          <Pressable onPress={() => setStudentUnionModalIsOpen(true)}>\r\n            {constructContentPresenterModal(\r\n              \"Профком студентів\",\r\n              studentUnionModalIsOpen,\r\n              () => setStudentUnionModalIsOpen(false),\r\n              studentUnionModalItems\r\n            )}\r\n            <AppText style={styles.subcategoryTitle}>Профком студентів</AppText>\r\n          </Pressable>\r\n        </Category>\r\n\r\n        <Category\r\n          title=\"Студентські спільноти\"\r\n          titleIcon={<Octicons name=\"accessibility\" size={16} color={palette.text} />}\r\n          onPress={() => {}}\r\n        >\r\n          <Pressable onPress={() => setStudentCouncilModalIsOpen(true)}>\r\n            {constructContentPresenterModal(\r\n              \"Студентська рада\",\r\n              studentCouncilModalIsOpen,\r\n              () => setStudentCouncilModalIsOpen(false),\r\n              studentCouncilModalItems\r\n            )}\r\n            <AppText style={styles.subcategoryTitle}>Студентська рада</AppText>\r\n          </Pressable>\r\n\r\n          <Pressable onPress={() => setSocialMediaModalIsOpen(true)}>\r\n            {constructContentPresenterModal(\r\n              \"Соц. мережі академії\",\r\n              socialMediaModalIsOpen,\r\n              () => setSocialMediaModalIsOpen(false),\r\n              socialMediaModalItems\r\n            )}\r\n            <AppText style={styles.subcategoryTitle}>Соц. мережі академії</AppText>\r\n          </Pressable>\r\n        </Category>\r\n      </ScrollView>\r\n    </View>\r\n  )\r\n}\r\n","import * as React from \"react\"\r\n\r\nimport { createStackNavigator } from \"@react-navigation/stack\"\r\nimport FacultiesTestScreen from \"../screens/TestTabsScreens/FacultiesTestScreen\"\r\nimport { View } from \"react-native\"\r\nimport { ContactsStackRoutes } from \"./ContactsStackRoutes\"\r\nimport StackHeader from \"../components/StackHeader\"\r\nimport ContactsScreen from \"../screens/ContactsScreen/ContactsScreen\"\r\nimport { palette } from \"../styles/global\"\r\n\r\nconst Stack = createStackNavigator()\r\n\r\nexport default function ContactsStack() {\r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={\r\n        {\r\n          // headerShown: false,\r\n        }\r\n      }\r\n    >\r\n      <Stack.Screen\r\n        name={ContactsStackRoutes.CONTACTS_MENU}\r\n        component={ContactsScreen}\r\n        options={{\r\n          header: () => <View />,\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name={ContactsStackRoutes.FACULTIES}\r\n        component={FacultiesTestScreen}\r\n        options={{\r\n          header: (props) => (\r\n            <StackHeader\r\n              title={\"Факультети академії\"}\r\n              useSafeAreaView={false}\r\n              hasBackground={false}\r\n              captionStyles={{ color: palette.text, fontFamily: \"montserrat-bold\", fontSize: 20 }}\r\n            />\r\n          ),\r\n        }}\r\n      />\r\n    </Stack.Navigator>\r\n  )\r\n}\r\n","import { StyleSheet } from \"react-native\"\r\n\r\nimport { globalStyles } from \"../../styles/global\"\r\n\r\nexport const styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 10,\r\n  },\r\n\r\n  newsArticleCard: {\r\n    ...globalStyles.card,\r\n    paddingVertical: 15,\r\n    paddingHorizontal: 15,\r\n\r\n    marginVertical: 5,\r\n  },\r\n\r\n  moreButton: {\r\n    ...globalStyles.navigationButton,\r\n    width: \"100%\",\r\n    paddingVertical: 7,\r\n  },\r\n})\r\n","import React from \"react\"\r\nimport Autolink, { AutolinkComponentProps } from \"react-native-autolink\"\r\nimport AppText from \"../../components/shared/AppText\"\r\n\r\ntype Part = { text: string; url: string }\r\n\r\n/**\r\n * CustomAutolink component. In addition to the functionality of the Autolink component, it also supports Markdown-style links.\r\n */\r\nexport const CustomAutolink = (props: AutolinkComponentProps) => {\r\n  const { text, ...rest } = props\r\n\r\n  // Regular expression to match Markdown-style links\r\n  const markdownLinkRegex = /\\[([^\\]]+)\\]\\(([^)]+)\\)/g\r\n\r\n  // Parse the text to handle Markdown-style links\r\n  const parseMarkdownLinks = (inputText: string) => {\r\n    let lastIndex = 0\r\n    const result: (Part | string)[] = []\r\n\r\n    inputText.replace(markdownLinkRegex, (match, linkText, url, offset) => {\r\n      if (offset > lastIndex) {\r\n        result.push(inputText.slice(lastIndex, offset))\r\n      }\r\n      result.push({ text: linkText, url })\r\n      lastIndex = offset + match.length\r\n\r\n      return \"\"\r\n    })\r\n\r\n    if (lastIndex < inputText.length) {\r\n      result.push(inputText.slice(lastIndex))\r\n    }\r\n\r\n    return result\r\n  }\r\n\r\n  const parsedText = parseMarkdownLinks(text)\r\n\r\n  return (\r\n    <AppText>\r\n      {parsedText.map((part, index) => {\r\n        if (typeof part === \"string\") {\r\n          return <Autolink key={index} text={part} {...rest} />\r\n        } else {\r\n          return (\r\n            <AppText key={index} style={props.linkStyle} onPress={() => props.onPress && props.onPress(part.url, null)}>\r\n              {part.text}\r\n            </AppText>\r\n          )\r\n        }\r\n      })}\r\n    </AppText>\r\n  )\r\n}\r\n\r\n// function constructLinkElement(text: string, link: string) {\r\n//   return (\r\n//     <AppText\r\n//       onPress={() => {\r\n//         Linking.openURL(link)\r\n//       }}\r\n//       style={[{ textDecorationLine: \"none\", marginBottom: 0 }]}\r\n//     >\r\n//       {text}\r\n//     </AppText>\r\n//   )\r\n// }\r\n","import React, { useState } from \"react\"\r\n\r\nimport { Linking, View } from \"react-native\"\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport AppText from \"../../components/shared/AppText\"\r\nimport { FontName } from \"../../constants/Fonts\"\r\nimport { globalStyles, palette } from \"../../styles/global\"\r\nimport { truncateText } from \"../../utilities/utilities\"\r\nimport { styles } from \"./Styles\"\r\nimport { CustomAutolink } from \"../../components/shared/ExtendedAutoLink\"\r\n\r\nexport function NewsCard({ date, title, body }: { date: string; title: string; body: string }) {\r\n  // convert date into day/month/year format\r\n  let dateObj = new Date(date)\r\n  let day = dateObj.getDate()\r\n  let month = dateObj.getMonth() + 1\r\n  let year = dateObj.getFullYear()\r\n  date = `${day}.${month}.${year}`\r\n\r\n  let [isBodyExpanded, setIsBodyExpanded] = useState(false)\r\n  let bodyStateAdjustedText = isBodyExpanded ? body : truncateText(body, 280)\r\n\r\n  let shouldShowLengthControlButton = body.length > 280\r\n  const lengthControlButton = (\r\n    <TouchableOpacity onPress={() => setIsBodyExpanded(!isBodyExpanded)} style={styles.moreButton}>\r\n      <AppText style={{ fontFamily: FontName.MontserratSemiBold, color: palette.navigationBackground }}>\r\n        {!isBodyExpanded ? \"Детальніше\" : \"Згорнути\"}\r\n      </AppText>\r\n    </TouchableOpacity>\r\n  )\r\n\r\n  return (\r\n    <View style={{ marginBottom: 15 }}>\r\n      <AppText style={{ alignSelf: \"center\" }}>{date}</AppText>\r\n      <View style={styles.newsArticleCard}>\r\n        <AppText style={{ fontFamily: FontName.MontserratBold, fontSize: 14 }}>{title}</AppText>\r\n        <AppText style={{ marginVertical: 15, fontFamily: FontName.MontserratRegular }}>\r\n          {\r\n            <CustomAutolink\r\n              onPress={(url) => Linking.openURL(url)}\r\n              text={bodyStateAdjustedText}\r\n              linkStyle={{ color: palette.navigationBackground }}\r\n            />\r\n          }\r\n          {\r\n            // \" [Детальніше](https://www.instagram.com/ntu_kpi/) \"\r\n          }\r\n        </AppText>\r\n\r\n        {shouldShowLengthControlButton ? lengthControlButton : <View style={globalStyles.invisible} />}\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { FlatList } from \"react-native-gesture-handler\"\r\nimport _ from \"lodash\"\r\nimport NewsLoaderService from \"../../services/NewsLoaderService/NewsLoaderService\"\r\nimport { NewsArticle } from \"../../services/NewsLoaderService/Types\"\r\nimport { styles } from \"./Styles\"\r\nimport { NewsCard } from \"./NewsCard\"\r\n\r\nexport default function NewsScreen() {\r\n  let [news, setNews] = useState<NewsArticle[]>([\r\n    //     {\r\n    //       //   createdAt: \"14.04.2023\",\r\n    //       createdAt: new Date().toDateString(),\r\n    //       title: \"Новий випуск журналу “Студентський MOOD”\",\r\n    //       body: `Привітики друзі! Прийшла весна і вже починає радувати нас сонечком та зеленню 🌷\r\n    // Сьогодні ж замість сонця - наш \"Студентський MOOD\"!\r\n    // Підготували вам тексти про відпочинок, війну та інше)\r\n    // Читайте, піклуйтеся про себе і близьких, і хай весна принесе всім нам лише хороші новини! 🌱`.repeat(2),\r\n    //     },\r\n  ])\r\n\r\n  // mount effect\r\n  useEffect(() => {\r\n    async function onMount() {\r\n      const newsLoaderService = await NewsLoaderService.GetInstance()\r\n      let fetchedNews\r\n      try {\r\n        fetchedNews = await newsLoaderService.getNewsFromContentful()\r\n      } catch (e) {\r\n        fetchedNews = newsLoaderService.getExampleNews()\r\n      }\r\n\r\n      setNews([...news, ...fetchedNews])\r\n    }\r\n\r\n    onMount()\r\n  }, [])\r\n\r\n  return (\r\n    <FlatList\r\n      data={news}\r\n      renderItem={({ item }) => <NewsCard date={item.createdAt} title={item.title} body={item.body} />}\r\n      style={styles.container}\r\n    />\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { View, StyleSheet } from \"react-native\"\r\n\r\nexport default function Card({\r\n  children,\r\n  shadows = true,\r\n  cardContentStyle = {},\r\n}: {\r\n  children: any\r\n  shadows?: boolean\r\n  cardContentStyle?: StyleSheet\r\n}) {\r\n  return (\r\n    <View style={{ ...styles.card, ...(!shadows ? styles.noShadow : {}) }}>\r\n      <View style={styles.cardContent}>{children}</View>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  card: {\r\n    // height: \"95%\",\r\n    // width: \"98%\",\r\n    borderRadius: 6,\r\n    elevation: 3,\r\n    backgroundColor: \"#fff\",\r\n    shadowOffset: { width: 1, height: 1 },\r\n    shadowColor: \"#333\",\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 2,\r\n    marginHorizontal: 4,\r\n    marginVertical: 6,\r\n    overflow: \"scroll\",\r\n  },\r\n\r\n  noShadow: {\r\n    elevation: 0,\r\n    shadowOpacity: 0,\r\n  },\r\n\r\n  cardContent: {\r\n    marginHorizontal: 5,\r\n    marginVertical: 20,\r\n  },\r\n})\r\n","import { useState, useEffect, useRef } from \"react\"\r\nimport { Text, View, Button } from \"react-native\"\r\nimport * as Notifications from \"expo-notifications\"\r\nimport React from \"react\"\r\nimport LocalNotificationsService from \"../../services/LocalNotificationsService/LocalNotificationsService\"\r\nimport { ScrollView } from \"react-native-gesture-handler\"\r\nimport Card from \"../../components/shared/card\"\r\nimport { Input } from \"react-native-elements\"\r\nimport Constants from \"expo-constants\"\r\nimport * as IntentLauncher from \"expo-intent-launcher\"\r\n\r\n// TODO: handle daylight savings. Perhaps ask user to reload notifications, that could be easier\r\n// this makes sense: if the user is interested in the app, they will cooperate\r\n\r\n// TODO: Test biweekly notifications\r\n\r\n// TODO: Fix package name not being resolved correctly first time the app is launched\r\n// a temp fix would be to always open notification channel settings for actual app\r\n\r\n// TODO: Configure notificatitions to appear on the lock screen\r\n\r\nexport default function NotificationTestsScreen() {\r\n  const [ready, setReady] = useState(false)\r\n\r\n  const [permission, setPermission] = useState<Notifications.PermissionStatus | null>(null)\r\n  const [scheduledNotifications, setScheduledNotifications] = useState<Notifications.NotificationRequest[]>([])\r\n  const [delayForExampleNotificationViaDate, setDelayForExampleNotificationViaDate] = useState(\"5\")\r\n\r\n  const [notification, setNotification] = useState<Notifications.Notification | null>(null)\r\n\r\n  const localNotificationsServiceRef = useRef<LocalNotificationsService | null>(null)\r\n\r\n  const notificationListener = useRef<Notifications.Subscription>()\r\n  const responseListener = useRef<Notifications.Subscription>()\r\n\r\n  // data: \"package:\" + pkg,\r\n  // \"interactive-schedule-notifications\"\r\n\r\n  // note: avoid using Constants[.manifest]\r\n\r\n  const requestConfigurePermissions = async () => {\r\n    // navigate to notification channel settings\r\n    // const pkg = Constants.manifest.releaseChannel ? Constants.manifest.android.package : \"host.exp.exponent\"\r\n\r\n    // IntentLauncher.startActivityAsync(\"android.settings.APP_NOTIFICATION_SETTINGS\", {\r\n    //   // data: \"package:\" + pkg,\r\n    //   extra: {\r\n    //     // \"android.provider.extra.CHANNEL_ID\": \"Default\",\r\n    //     \"android.provider.extra.APP_PACKAGE\": pkg,\r\n    //   },\r\n    // })\r\n\r\n    // const pkg = Constants.manifest.releaseChannel ? Constants.manifest.android.package : \"host.exp.exponent\"\r\n    const pkg = Constants.expoConfig.android.package\r\n    const allChannels = await Notifications.getNotificationChannelsAsync()\r\n    const channel = await Notifications.getNotificationChannelAsync(\"interactive-schedule-notifications\")\r\n    console.log(\"[Notification Tests] All channels of this app: \")\r\n    console.log(allChannels)\r\n    console.log(\"[Notification Tests] Channel id for main channel: \" + channel?.id)\r\n\r\n    IntentLauncher.startActivityAsync(\"android.settings.CHANNEL_NOTIFICATION_SETTINGS\", {\r\n      // data: \"package:\" + pkg,\r\n      extra: {\r\n        \"android.provider.extra.CHANNEL_ID\":\r\n          pkg == \"host.exp.exponent\" ? \"expo-experience\" : \"interactive-schedule-notifications\",\r\n        \"android.provider.extra.APP_PACKAGE\": pkg,\r\n      },\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    notificationListener.current = Notifications.addNotificationReceivedListener((notification) => {\r\n      setNotification(notification)\r\n      console.log(\"notification has beed shown\")\r\n    })\r\n\r\n    responseListener.current = Notifications.addNotificationResponseReceivedListener((response) => {\r\n      console.log(\"user responded to notification:\" + JSON.stringify(response))\r\n    })\r\n\r\n    const init = async () => {\r\n      let notifications = await LocalNotificationsService.GetInstance()\r\n      localNotificationsServiceRef.current = notifications\r\n\r\n      let registeredNotifications = await notifications.getAllScheduledNotificationsAsync()\r\n      let permissions = await notifications.checkPermissionsAsync()\r\n\r\n      setScheduledNotifications(registeredNotifications)\r\n      setPermission(permissions.status)\r\n\r\n      setReady(true)\r\n    }\r\n\r\n    init()\r\n\r\n    return () => {\r\n      Notifications.removeNotificationSubscription(notificationListener.current!)\r\n      Notifications.removeNotificationSubscription(responseListener.current!)\r\n    }\r\n  }, [])\r\n\r\n  if (!ready) {\r\n    return (\r\n      <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\r\n        <Text>Завантаження...</Text>\r\n      </View>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ScrollView contentContainerStyle={{ alignItems: \"center\" }}>\r\n      <Card style={{ backgroundColor: \"magenta\" }}>\r\n        <Text>Сповіщення дозволені: {permission}</Text>\r\n      </Card>\r\n\r\n      <View style={{ alignItems: \"center\", justifyContent: \"center\" }}>\r\n        <Text>Title: {notification && notification.request.content.title} </Text>\r\n        <Text>Body: {notification && notification.request.content.body}</Text>\r\n        <Text>Data: {notification && JSON.stringify(notification.request.content.data)}</Text>\r\n      </View>\r\n\r\n      <View>\r\n        <Text\r\n          style={{\r\n            alignSelf: \"center\",\r\n            marginBottom: 10,\r\n          }}\r\n        >\r\n          Сповіщення:\r\n        </Text>\r\n\r\n        <Button\r\n          title=\"Надіслати локальне сповіщення (приходить зі затримкою в ~3-5 секунд)\"\r\n          onPress={async () => {\r\n            localNotificationsServiceRef.current!.sendExampleNotification()\r\n          }}\r\n        />\r\n      </View>\r\n\r\n      <View style={{ marginVertical: 10 }}>\r\n        <View style={{ flexDirection: \"row\", width: \"50%\", alignItems: \"center\" }}>\r\n          <Text>Через секунд:</Text>\r\n          <Input\r\n            keyboardType=\"number-pad\"\r\n            defaultValue={delayForExampleNotificationViaDate}\r\n            onChangeText={(newValue) => setDelayForExampleNotificationViaDate(newValue)}\r\n          />\r\n        </View>\r\n\r\n        <Button\r\n          title={`Прислати сповіщення через ${delayForExampleNotificationViaDate} секунд`}\r\n          color={\"green\"}\r\n          onPress={async () => {\r\n            localNotificationsServiceRef.current!.scheduleExampleNotificationViaDate(\r\n              parseInt(delayForExampleNotificationViaDate)\r\n            )\r\n          }}\r\n        />\r\n      </View>\r\n\r\n      <View style={{ marginVertical: 10 }}>\r\n        <Text>Має показувати сповіщення кожні 5 секунд, навіть якщо додаток повністю закритий</Text>\r\n        <View style={{ marginVertical: 10 }}>\r\n          <Button\r\n            title=\"Присилати сповіщення кожнi 5 секунд\"\r\n            color={\"green\"}\r\n            onPress={async () => {\r\n              localNotificationsServiceRef.current!.scheduleRepeatableExampleNotification()\r\n            }}\r\n          />\r\n        </View>\r\n\r\n        <View style={{ marginVertical: 10 }}>\r\n          <Button\r\n            title=\"Присилати сповіщення кожного дня о 12:00\"\r\n            color={\"green\"}\r\n            onPress={async () => {\r\n              localNotificationsServiceRef.current!.scheduleRepeatableDailyExampleNotification()\r\n            }}\r\n          />\r\n        </View>\r\n\r\n        <View style={{ marginVertical: 10 }}>\r\n          <Button\r\n            title=\"Попросити дозволу на сповіщення\"\r\n            color={\"green\"}\r\n            onPress={async () => {\r\n              localNotificationsServiceRef.current!.checkPermissionsAsync\r\n            }}\r\n          />\r\n        </View>\r\n\r\n        <Button\r\n          title=\"Зупинити періодичні сповіщення\"\r\n          color={\"red\"}\r\n          onPress={async () => {\r\n            localNotificationsServiceRef.current!.cancelAllScheduledNotificationsAsync()\r\n          }}\r\n        />\r\n\r\n        <View>\r\n          <Text>Наступне Сповіщення</Text>\r\n          <Button\r\n            title=\"Попросити налаштувати сповіщення\"\r\n            onPress={() => {\r\n              requestConfigurePermissions()\r\n            }}\r\n          />\r\n        </View>\r\n      </View>\r\n    </ScrollView>\r\n  )\r\n}\r\n","import * as React from \"react\"\r\nimport { TouchableOpacity, View } from \"react-native\"\r\nimport { Ionicons } from \"@expo/vector-icons\"\r\nimport Collapsible from \"react-native-collapsible\"\r\nimport AppText from \"./AppText\"\r\n\r\nexport default function Expander({ header, children }: { header: string; children: React.ReactNode }) {\r\n  let [collapsed, setCollapsed] = React.useState(true)\r\n  //   console.log(\"[Expander] expander recieved these children:\")\r\n  //   console.log(children)\r\n\r\n  return (\r\n    <View>\r\n      <TouchableOpacity onPress={() => setCollapsed(!collapsed)}>\r\n        <AppText>\r\n          {header} <Ionicons name={collapsed ? \"arrow-down\" : \"arrow-up\"} />\r\n        </AppText>\r\n      </TouchableOpacity>\r\n\r\n      <Collapsible collapsed={collapsed}>{children}</Collapsible>\r\n    </View>\r\n  )\r\n}\r\n","import { useState, useEffect, useRef } from \"react\"\r\nimport { Text, View, Button, ToastAndroid } from \"react-native\"\r\n\r\nimport LocalNotificationsService from \"../../services/LocalNotificationsService/LocalNotificationsService\"\r\nimport * as Notifications from \"expo-notifications\"\r\nimport { FlatList, ScrollView } from \"react-native-gesture-handler\"\r\nimport React from \"react\"\r\nimport Card from \"../../components/shared/card\"\r\nimport Expander from \"../../components/shared/Expander\"\r\nimport { CheckBox, Input, SearchBar } from \"react-native-elements\"\r\nimport _ from \"lodash\"\r\n\r\n// TODO: Consider this warning:\r\n// VirtualizedList: You have a large list that is slow to update - make sure your renderItem function renders components that follow React performance best practices\r\n// like PureComponent, shouldComponentUpdate, etc. {\"contentLength\": 7060, \"dt\": 598, \"prevDt\": 859}\r\n\r\nexport default function ScheduledNotificationsScreen() {\r\n  const [ready, setReady] = useState(false)\r\n\r\n  let [showRegularClasses, setShowRegularClasses] = useState(false)\r\n  let [showBiweeklyClasses, setShowBiweeklyClasses] = useState(true)\r\n  let [filterQuery, setFilterQuery] = useState(\"\")\r\n\r\n  // fetch all scheduled nootifications\r\n  const localNotificationsServiceRef = useRef<LocalNotificationsService | null>(null)\r\n  let [scheduledNotifications, setScheduledNotifications] = useState<Notifications.NotificationRequest[]>([])\r\n\r\n  const scheduledNotificationsWithParsedTimestamp = _.cloneDeep(scheduledNotifications).map((n) => {\r\n    if (n.trigger.type === \"date\") {\r\n      n.trigger.value = new Date(n.trigger.value).toUTCString()\r\n      // n.trigger.timeZoneOffset = new Date(n.trigger.value).getTimezoneOffset()\r\n    }\r\n\r\n    return n\r\n  })\r\n  const filteredScheduledNotifications = scheduledNotificationsWithParsedTimestamp.filter((n) => {\r\n    if (n.trigger.type === \"weekly\" && !showRegularClasses) return false\r\n    if (n.trigger.type === \"date\" && !showBiweeklyClasses) return false\r\n\r\n    if (JSON.stringify(n).includes(filterQuery)) {\r\n      return true\r\n    }\r\n    return false\r\n  })\r\n\r\n  const sortedScheduledNotifications = _.sortBy(filteredScheduledNotifications, (n) => {\r\n    if (n.trigger.type === \"weekly\") {\r\n      return n.trigger.weekday * 24 * 60 + n.trigger.hour * 60 + n.trigger.minute\r\n    } else if (n.trigger.type === \"date\") {\r\n      return new Date(n.trigger.value) - 0\r\n    }\r\n  })\r\n\r\n  // display them\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      let notifications = await LocalNotificationsService.GetInstance()\r\n      localNotificationsServiceRef.current = notifications\r\n\r\n      let registeredNotifications = await notifications.getAllScheduledNotificationsAsync()\r\n\r\n      setScheduledNotifications(registeredNotifications)\r\n      setReady(true)\r\n    }\r\n\r\n    init()\r\n  }, [])\r\n\r\n  return (\r\n    <View style={{ alignItems: \"center\", marginTop: 40 }}>\r\n      <Text>Всього запланованих сповіщень: {scheduledNotifications.length}</Text>\r\n      <Button\r\n        title=\"Fetch All Scheduled Notifications\"\r\n        onPress={async () => {\r\n          // show toast\r\n          // AndroidToast.show(\"Fetching all scheduled notifications...\", AndroidToast.SHORT)\r\n\r\n          ToastAndroid.show(\"Fetching all scheduled notifications...\", ToastAndroid.SHORT)\r\n          let notifications = await localNotificationsServiceRef.current!.getAllScheduledNotificationsAsync()\r\n\r\n          setScheduledNotifications(notifications)\r\n          ToastAndroid.show(\"Fetched and set state...\", ToastAndroid.SHORT)\r\n        }}\r\n      />\r\n      <Text>Список запланованих сповіщень: </Text>\r\n      <ScrollView style={{ minHeight: 55 }} horizontal contentContainerStyle={{ flexDirection: \"row\" }}>\r\n        <CheckBox\r\n          checked={showRegularClasses}\r\n          onPress={() => setShowRegularClasses(!showRegularClasses)}\r\n          title={\"Щотижневі пари\"}\r\n        />\r\n        <CheckBox\r\n          checked={showBiweeklyClasses}\r\n          onPress={() => setShowBiweeklyClasses(!showBiweeklyClasses)}\r\n          title={\"Щодвотижневі пари (Ті, що по чисельнику/знаменнику\"}\r\n        />\r\n      </ScrollView>\r\n\r\n      <View style={{ width: \"70%\" }}>\r\n        <Input\r\n          ref={(search) => (this.search = search)}\r\n          onChangeText={(text) => setFilterQuery(text)}\r\n          placeholder=\"Filter By Text\"\r\n          onBlur={() => null}\r\n        />\r\n      </View>\r\n\r\n      <FlatList\r\n        data={sortedScheduledNotifications}\r\n        keyExtractor={(item) => item.identifier}\r\n        ListEmptyComponent={() => (\r\n          <View>\r\n            <Text>Сповіщень не знайдено</Text>\r\n          </View>\r\n        )}\r\n        renderItem={({ item, index }) => {\r\n          const notification = item\r\n\r\n          return (\r\n            <Card\r\n              key={index}\r\n              style={{\r\n                backgroundColor: \"red\",\r\n              }}\r\n            >\r\n              <Text style={{ alignSelf: \"center\" }}>Notification #{index + 1}</Text>\r\n              <Text>\r\n                Notification title: <Text style={{ fontWeight: \"bold\" }}>{notification.content.title}</Text>{\" \"}\r\n              </Text>\r\n              <Text>Notification trigger type: {notification.trigger.type}</Text>\r\n              <Expander header=\"Notification Details\">\r\n                <View>\r\n                  <Text>Details:</Text>\r\n                  <Text>Notification id: {notification.identifier} </Text>\r\n\r\n                  <Text> {JSON.stringify(notification.trigger)} </Text>\r\n                </View>\r\n              </Expander>\r\n\r\n              <View style={{ marginVertical: 10, alignItems: \"flex-end\" }}>\r\n                <Button\r\n                  onPress={() =>\r\n                    localNotificationsServiceRef.current!.cancelScheduledNotificationAsync(notification.identifier)\r\n                  }\r\n                  title=\"Cancel\"\r\n                  color={\"red\"}\r\n                />\r\n              </View>\r\n            </Card>\r\n          )\r\n        }}\r\n      />\r\n    </View>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { View, StyleSheet } from \"react-native\"\r\nimport { Modal } from \"react-native\"\r\nimport { Pressable } from \"react-native\"\r\nimport { ScrollView } from \"react-native-gesture-handler\"\r\nimport { globalStyles } from \"../styles/global\"\r\n\r\n// TODO: Manually type the ContentViewModalProps. It was auto generated by VSCode\r\ntype ContentViewModalProps = {\r\n  visible: boolean\r\n  closeModal: () => void\r\n  children:\r\n    | string\r\n    | number\r\n    | boolean\r\n    | React.ReactElement<any, string | React.JSXElementConstructor<any>>\r\n    | React.ReactFragment\r\n    | React.ReactPortal\r\n}\r\n\r\nexport default function ContentViewModal(props: ContentViewModalProps) {\r\n  return (\r\n    <Modal animationType=\"fade\" transparent={true} style={styles.modal} visible={props.visible}>\r\n      <Pressable onPress={() => props.closeModal()} style={styles.overlay}></Pressable>\r\n\r\n      <View style={styles.modalContentContainer}>\r\n        <ScrollView style={styles.modalChildren}>{props.children}</ScrollView>\r\n      </View>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  modal: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"red\", // not gonna work cause it's transparent\r\n  },\r\n\r\n  overlay: {\r\n    backgroundColor: \"rgba(0, 0, 0, 0.25)\",\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n\r\n  modalContentContainer: {\r\n    ...globalStyles.modalContentContainer,\r\n  },\r\n\r\n  modalChildren: {\r\n    height: \"100%\",\r\n  },\r\n})\r\n","import React from \"react\"\r\n\r\nimport { View } from \"react-native\"\r\nimport { StyleSheet } from \"react-native\"\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport AppText from \"./AppText\"\r\nimport { palette } from \"../../styles/global\"\r\n\r\nexport default function FlatButton({ onPress, text, color }: { onPress: () => void; text: string; color?: string }) {\r\n  return (\r\n    <TouchableOpacity style={{ alignItems: \"flex-start\" }} onPress={onPress}>\r\n      <View style={styles.button}>\r\n        <AppText style={styles.closeButtonText}>{text}</AppText>\r\n      </View>\r\n    </TouchableOpacity>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  closeButtonText: {\r\n    fontFamily: \"montserrat-600\",\r\n    color: palette.grayedOut,\r\n    fontSize: 16,\r\n  },\r\n\r\n  button: {\r\n    alignItems: \"flex-start\",\r\n    backgroundColor: \"#FFFFFF\",\r\n    borderWidth: 1,\r\n    borderColor: \"#E6E6E6\",\r\n    padding: 10,\r\n    paddingHorizontal: 30,\r\n    marginTop: 10,\r\n    // borderRadius: 10,\r\n\r\n    shadowColor: \"rgba(0,0,0,1)\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 1,\r\n    },\r\n    elevation: 0.2,\r\n    shadowOpacity: 0.0,\r\n    shadowRadius: 0,\r\n    borderRadius: 10,\r\n  },\r\n})\r\n","import { useEffect } from \"react\"\r\nimport React from \"react\"\r\n\r\nimport { View, StyleSheet } from \"react-native\"\r\nimport AppText from \"../../components/shared/AppText\"\r\n\r\nimport * as FileSystem from \"expo-file-system\"\r\nimport { Button } from \"@rneui/themed\"\r\nimport { Input } from \"react-native-elements\"\r\nimport ContentViewModal from \"../../components/ContentViewModal\"\r\nimport { ScrollView, TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport { Asset, ContentfulClientApi } from \"contentful\"\r\nimport Expander from \"../../components/shared/Expander\"\r\nimport ScheduleLoaderService from \"../../services/ScheduleLoaderService/ScheduleLoaderService\"\r\nimport FlatButton from \"../../components/shared/Button\"\r\nimport { getContentfulClient } from \"../../utilities/utilities\"\r\n\r\nconst pathToSchedules = `assets/schedules/`\r\n// const istSchedule = FileSystem.readAsStringAsync(pathToSchedules + \"IST-51M.json\")\r\n// const bundledAssetsInfo = FileSystem.getInfoAsync(\"\")\r\n\r\nexport default function FileSystemScreen() {\r\n  const [bundledAssetsInfo, setBundledAssetsInfo] = React.useState([])\r\n\r\n  const [fileContentModalVisible, setFileContentModalVisible] = React.useState(false)\r\n  const [selectedFileContent, setSelectedFileContent] = React.useState(\"selected file content\")\r\n\r\n  const [currentDir, setCurrentDir] = React.useState<string>(FileSystem.documentDirectory)\r\n  const [allFiles, setAllFiles] = React.useState<string[]>([])\r\n\r\n  const [firstFieldText, setFirstFieldText] = React.useState(\"\")\r\n  const [secondFieldText, setSecondFieldText] = React.useState(\"\")\r\n\r\n  const [contentfulSchedule, setContentfulSchedule] = React.useState(\"\")\r\n  const [contentfulScheduleAsAsset, setContentfulScheduleAsAsset] = React.useState(\"\")\r\n  const [contentfulScheduleAsDownloadedAsset, setContentfulScheduleAsDownloadedAsset] = React.useState(\"\")\r\n  const [allContentfulAssets, setAllContentfulAssets] = React.useState(\"\")\r\n\r\n  const saveToFile = async () => {\r\n    const text = firstFieldText + \"\\n\" + secondFieldText\r\n\r\n    const path = FileSystem.documentDirectory + \"test.txt\"\r\n    const content = text\r\n\r\n    await FileSystem.writeAsStringAsync(path, content)\r\n\r\n    const info = await FileSystem.getInfoAsync(path)\r\n    console.log(\"save successful. file info:\")\r\n    console.log(info)\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function init() {\r\n      // const info = await FileSystem.readDirectoryAsync(FileSystem.bundleDirectory)\r\n      // console.log(\"bundled assets info:\")\r\n      // console.log(info)\r\n\r\n      let allFiles = await FileSystem.readDirectoryAsync(currentDir)\r\n\r\n      console.log(\"all files:\")\r\n      console.log(allFiles)\r\n      setAllFiles(allFiles)\r\n\r\n      const client: ContentfulClientApi = getContentfulClient()\r\n\r\n      client\r\n        .getEntry(\"4DlBdNKIvYPma8B18WwQsJ\")\r\n        .then((entry) => {\r\n          console.log(entry)\r\n          setContentfulSchedule(JSON.stringify(entry, null, 4))\r\n        })\r\n        .catch((e) => {\r\n          console.error(\"fetching contentful schedule failed:\")\r\n          console.error(e)\r\n        })\r\n\r\n      client\r\n        .getAsset(\"2wFiyBYGXQbdRvtnSAS8Xm\")\r\n        .then((asset) => {\r\n          console.log(asset)\r\n          setContentfulScheduleAsAsset(JSON.stringify(asset, null, 4))\r\n          const file = asset.fields.file\r\n\r\n          const protocol = \"https:\"\r\n          const linkToFile = file.url\r\n          FileSystem.downloadAsync(protocol + linkToFile, FileSystem.documentDirectory + file.fileName, {}).then(\r\n            (res) => {\r\n              console.log(\"downloaded file:\")\r\n              console.log(res)\r\n\r\n              FileSystem.readAsStringAsync(res.uri).then((content) => {\r\n                setContentfulScheduleAsDownloadedAsset(content)\r\n              })\r\n            }\r\n          )\r\n        })\r\n        .catch((e) => {\r\n          console.error(\"fetching contentful schedule as asset failed:\")\r\n          console.error(e)\r\n\r\n          setContentfulScheduleAsAsset(\"failed to download the asset\")\r\n          setContentfulScheduleAsDownloadedAsset(\"failed to download the asset\")\r\n        })\r\n\r\n      client.getAssets().then((assets) => {\r\n        console.log(assets)\r\n\r\n        let assetNames: string[] = []\r\n\r\n        if (assets.items.length !== 0) {\r\n          assetNames = assets.items.map((a) => a.fields.file.fileName)\r\n        }\r\n\r\n        setAllContentfulAssets(JSON.stringify(assetNames, null, 4))\r\n      })\r\n\r\n      await initFields()\r\n\r\n      // for testing purposes:\r\n      let scheudleLoaderInstance = ScheduleLoaderService.GetInstance()\r\n    }\r\n\r\n    init()\r\n  }, [])\r\n\r\n  async function initFields() {\r\n    // read from test.txt\r\n    const path = FileSystem.documentDirectory + \"test.txt\"\r\n\r\n    let content: string\r\n\r\n    try {\r\n      content = await FileSystem.readAsStringAsync(path)\r\n    } catch (e) {\r\n      content = \"a\\nb\"\r\n    }\r\n    const lines = content.split(\"\\n\")\r\n\r\n    setFirstFieldText(lines[0])\r\n    setSecondFieldText(lines[1])\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View>\r\n        <Input onChangeText={(text) => setFirstFieldText(text)} value={firstFieldText} />\r\n        <Input onChangeText={(text) => setSecondFieldText(text)} value={secondFieldText} />\r\n      </View>\r\n      <View style={{ flexDirection: \"row\" }}>\r\n        <Button color={\"success\"} title={\"Зберегти\"} onPress={() => saveToFile()} />\r\n        <Button color={\"error\"} title={\"Скасувати\"} onPress={() => initFields()} />\r\n      </View>\r\n      <View>\r\n        <FlatButton\r\n          text={\"Усі Файли\"}\r\n          onPress={() => {\r\n            setCurrentDir(FileSystem.documentDirectory)\r\n            FileSystem.readDirectoryAsync(FileSystem.documentDirectory).then((content) => {\r\n              setAllFiles(content)\r\n            })\r\n          }}\r\n        />\r\n        <ScrollView>\r\n          {allFiles.map((f, idx) => (\r\n            <TouchableOpacity\r\n              key={idx}\r\n              onLongPress={() => {\r\n                FileSystem.deleteAsync(currentDir + f).then(() => {\r\n                  setAllFiles(allFiles.filter((file) => file !== f))\r\n                })\r\n              }}\r\n              onPress={async () => {\r\n                let isFolder = (await FileSystem.getInfoAsync(FileSystem.documentDirectory + f)).isDirectory\r\n\r\n                if (isFolder) {\r\n                  setCurrentDir(FileSystem.documentDirectory + f + \"/\")\r\n                  FileSystem.readDirectoryAsync(FileSystem.documentDirectory + f).then((content) => {\r\n                    setAllFiles(content)\r\n                  })\r\n                } else {\r\n                  FileSystem.readAsStringAsync(currentDir + f).then((content) => {\r\n                    setSelectedFileContent(content)\r\n                    setFileContentModalVisible(true)\r\n                  })\r\n                }\r\n              }}\r\n            >\r\n              <AppText>{f}</AppText>\r\n            </TouchableOpacity>\r\n          ))}\r\n        </ScrollView>\r\n      </View>\r\n      <View>\r\n        <AppText style={{ color: \"red\" }}>Файли, що йдуть разом з додатком (не працює):</AppText>\r\n        <View></View>\r\n      </View>\r\n      <View>\r\n        <Expander header=\"Contentful Entry тест\">\r\n          <ScrollView style={{ height: 500 }}>\r\n            <AppText>{contentfulSchedule}</AppText>\r\n          </ScrollView>\r\n        </Expander>\r\n      </View>\r\n      <View>\r\n        <Expander header=\"Contentful Asset Test\">\r\n          <ScrollView style={{ height: 200 }}>\r\n            <AppText>{contentfulScheduleAsAsset}</AppText>\r\n          </ScrollView>\r\n        </Expander>\r\n      </View>\r\n      <View>\r\n        <Expander header=\"Contentful Asset As Downloaded File Test\">\r\n          <ScrollView style={{ height: 200 }}>\r\n            <AppText>{contentfulScheduleAsDownloadedAsset}</AppText>\r\n          </ScrollView>\r\n        </Expander>\r\n      </View>\r\n      <View>\r\n        <Expander header=\"All Contentful Assets\">\r\n          <ScrollView style={{ height: 200 }}>\r\n            <AppText>{allContentfulAssets}</AppText>\r\n          </ScrollView>\r\n        </Expander>\r\n      </View>\r\n\r\n      <ContentViewModal visible={fileContentModalVisible} closeModal={() => setFileContentModalVisible(false)}>\r\n        <AppText>{selectedFileContent}</AppText>\r\n      </ContentViewModal>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n})\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { View, Text, StyleSheet } from \"react-native\"\r\nimport { Button } from \"react-native-elements\"\r\nimport { SafeAreaView } from \"react-native-safe-area-context\"\r\nimport ScheduleLoaderService from \"../../services/ScheduleLoaderService/ScheduleLoaderService\"\r\nimport ScheduleModel from \"../../models/ScheduleModel/ScheduleModel\"\r\nimport { ScheduleDay } from \"../../models/ScheduleDay/ScheduleDay\"\r\nimport SettingsService from \"../../services/SettingsService/SettingsService\"\r\nimport { FlatList, TouchableOpacity } from \"react-native-gesture-handler\"\r\n\r\nimport { useSwipeableItemParams } from \"react-native-swipeable-item\"\r\nimport { globalStyles } from \"../../styles/global\"\r\nimport { useNavigation } from \"@react-navigation/native\"\r\nimport _ from \"lodash\"\r\nimport { EditorStackRoutes } from \"../../routes/EditorStackRoutes\"\r\n\r\nimport \"setimmediate\"\r\n\r\n// TODO: use this library to implement swipeable items\r\n// https://github.com/computerjazz/react-native-swipeable-item\r\n\r\nexport default function ScheduleEditor() {\r\n  let [isReady, setIsReady] = useState(false)\r\n  let [sampleScheduleDay, setSampleDay] = useState<ScheduleDay>()\r\n\r\n  let settingsServiceRef = React.useRef<SettingsService | null>(null)\r\n\r\n  let navigation = useNavigation()\r\n  const currentRouteName = navigation.getId()\r\n\r\n  useEffect(() => {\r\n    async function init() {\r\n      let scheduleLoaderInstance = await ScheduleLoaderService.GetInstance()\r\n      let schedule = new ScheduleModel(\"groupname_groupyear\", \"groupname\", 5)\r\n\r\n      // TODO: Fix warning about undefined\r\n\r\n      let firstScheduleFile = scheduleLoaderInstance.scheduleFiles[0]\r\n      let firstScheduleFilename = firstScheduleFile.filename\r\n      console.log(\"first schedule filename:\", firstScheduleFilename)\r\n\r\n      await schedule.getScheduleFromScheduleLoader(firstScheduleFilename)\r\n\r\n      let settingsService = await SettingsService.GetInstance()\r\n      settingsServiceRef.current = settingsService\r\n\r\n      setSampleDay(schedule.scheduleDays[0])\r\n      setIsReady(true)\r\n    }\r\n\r\n    init()\r\n  }, [])\r\n\r\n  let [data, setData] = useState([\r\n    { key: \"1\", title: \"Item 1\", isSlot: true },\r\n    { key: \"2\", title: \"Item 2\", isSlot: true },\r\n    { key: \"3\", title: \"Item 3\", isSlot: false },\r\n    // { key: \"4\", title: \"Item 4\", isSlot: false },\r\n    // { key: \"5\", title: \"Item 5\", isSlot: false },\r\n    // { key: \"6\", title: \"Item 6\", isSlot: false },\r\n    // { key: \"7\", title: \"Item 7\", isSlot: true },\r\n    // { key: \"8\", title: \"Item 8\", isSlot: false },\r\n    // { key: \"9\", title: \"Item 9\", isSlot: false },\r\n    // { key: \"10\", title: \"Item 10\", isSlot: false },\r\n  ])\r\n\r\n  if (!isReady) {\r\n    return (\r\n      <View>\r\n        <Text>Loading...</Text>\r\n      </View>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <View>\r\n        <Text>Редактор</Text>\r\n        <Text> ({currentRouteName})</Text>\r\n        <View style={[{ flexDirection: \"row\", justifyContent: \"space-around\" }]}>\r\n          <Button title=\"Save\" />\r\n          <Button title=\"Cancel\" />\r\n          <Button title=\"Reset\" />\r\n        </View>\r\n        <FlatList\r\n          scrollEnabled={true}\r\n          nestedScrollEnabled={false}\r\n          data={[data, data, data, data]}\r\n          keyExtractor={(item) => Math.random().toString()}\r\n          renderItem={({ item }) => {\r\n            let dataElem = item\r\n            return (\r\n              <FlatList\r\n                // scrollEnabled={false}\r\n                // nestedScrollEnabled={true}\r\n                // prop\r\n                data={dataElem}\r\n                key={Math.random().toString()}\r\n                keyExtractor={(item) => _.random(0, 100000, false).toString()}\r\n                onDragEnd={({ data }) => console.log(\"[drag end] data:\", data)}\r\n                renderItem={({ item: draggable, drag, isActive }) => {\r\n                  return (\r\n                    <TouchableOpacity\r\n                      style={[\r\n                        { backgroundColor: isActive ? \"orange\" : \"red\" },\r\n                        { margin: 10 },\r\n                        draggable.isSlot ? { backgroundColor: \"gray\" } : {},\r\n                      ]}\r\n                      onLongPress={drag}\r\n                      onPress={() => {\r\n                        navigation.push(EditorStackRoutes.SCHEDULE_CLASS_FORM, {\r\n                          scheduleClass: draggable,\r\n                          onFormDataUpdated: (updatedClass) => {\r\n                            console.log(\"updated class:\", updatedClass)\r\n\r\n                            let isNewEntry = updatedClass.title != \"\"\r\n                            let isSlot = !isNewEntry\r\n\r\n                            setData(\r\n                              dataElem.map((class_) =>\r\n                                class_.key === draggable.key ? { ...class_, ...updatedClass, isSlot } : class_\r\n                              )\r\n                            )\r\n                          },\r\n                        })\r\n                      }}\r\n                    >\r\n                      {/* <SwipeableItem\r\n                        key={draggable.key}\r\n                        // item={item}\r\n                        renderUnderlayLeft={() => <UnderlayRightSide />}\r\n                        // renderUnderlayRight={() => <UnderlayLeft />}\r\n                        snapPointsLeft={[!draggable.isSlot ? 50 : 0]} // snap points for right side underlay\r\n                        snapPointsRight={[0]} // disable left side underlay\r\n                        activationThreshold={10}\r\n                      > */}\r\n                      <View style={[styles.reorderable]}>\r\n                        <Text>{draggable.title}</Text>\r\n                      </View>\r\n                      {/* </SwipeableItem> */}\r\n                    </TouchableOpacity>\r\n                  )\r\n                }}\r\n              />\r\n            )\r\n          }}\r\n          style={{ padding: 20 }}\r\n        ></FlatList>\r\n      </View>\r\n    </SafeAreaView>\r\n  )\r\n}\r\n\r\nconst UnderlayRightSide = () => {\r\n  const { close } = useSwipeableItemParams<Item>()\r\n  function openClassEditScreen(): void {}\r\n\r\n  return (\r\n    <View\r\n      style={[\r\n        styles.row,\r\n        styles.underlayLeft,\r\n        {\r\n          // alignSelf: \"center\",\r\n        },\r\n      ]}\r\n    >\r\n      <View>\r\n        <TouchableOpacity onPress={() => close()}>\r\n          <Text style={styles.text}>Del</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n\r\n  reorderable: {\r\n    height: 20,\r\n    width: \"95%\",\r\n    ...globalStyles.centered,\r\n    marginVertical: 5,\r\n  },\r\n\r\n  row: {\r\n    flexDirection: \"row\",\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: 15,\r\n  },\r\n\r\n  underlayLeft: {\r\n    flex: 1,\r\n    backgroundColor: \"lime\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n\r\n  text: {\r\n    fontWeight: \"bold\",\r\n    color: \"white\",\r\n    fontSize: 32,\r\n  },\r\n})\r\n","import { createStackNavigator } from \"@react-navigation/stack\"\r\nimport * as React from \"react\"\r\nimport ScheduleEditor from \"../screens/TestTabsScreens/ScheduleEditor\"\r\nimport { View } from \"react-native\"\r\nimport StackHeader from \"../components/StackHeader\"\r\nimport ScheduleClassForm from \"../screens/TestTabsScreens/scheduleEditorStack/ScheduleClassForm\"\r\nimport { EditorStackRoutes } from \"./EditorStackRoutes\"\r\n\r\nconst Stack = createStackNavigator()\r\n\r\nexport default function TestEditorStack() {\r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={\r\n        {\r\n          // headerShown: false,\r\n        }\r\n      }\r\n    >\r\n      <Stack.Screen\r\n        name={EditorStackRoutes.EDITOR}\r\n        component={ScheduleEditor}\r\n        options={{\r\n          header: () => <View />,\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name={EditorStackRoutes.SCHEDULE_CLASS_FORM}\r\n        component={ScheduleClassForm}\r\n        options={{\r\n          header: (props) => <StackHeader title={\"Пара\"} />,\r\n        }}\r\n      />\r\n    </Stack.Navigator>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { View, Text, StyleSheet, Button, Linking } from \"react-native\"\r\nimport OptionPickerModal from \"../../components/OptionPickerModalComponent/OptionPickerModal\"\r\nimport { globalStyles, palette } from \"../../styles/global\"\r\nimport { imageIcons } from \"../../constants/Images\"\r\nimport { FontAwesome, Ionicons, MaterialIcons } from \"@expo/vector-icons\"\r\nimport { SafeAreaView } from \"react-native-safe-area-context\"\r\nimport AppText from \"../../components/shared/AppText\"\r\nimport { useNavigation } from \"@react-navigation/native\"\r\nimport { ContactsStackRoutes } from \"../../routes/ContactsStackRoutes\"\r\nimport { Image } from \"react-native-elements\"\r\nimport { isMail } from \"../../utilities/utilities\"\r\n\r\ntype ModalItem = {\r\n  icon: JSX.Element\r\n  text: string\r\n  isPhone?: boolean\r\n  isLink?: boolean\r\n  linkName?: string\r\n}\r\n\r\nexport default function ContactsModalTestScreen() {\r\n  let navigation = useNavigation()\r\n\r\n  let [corpsModalIsOpen, setCorpsModalIsOpen] = React.useState(false)\r\n  let [rectorateModalIsOpen, setRectorateModalIsOpen] = React.useState(false)\r\n  let [preparationDepartmentModalIsOpen, setPreparationDepartmentModalIsOpen] = React.useState(false)\r\n  let [\r\n    internationalAffairsAndInformationDepartmentModalIsOpen,\r\n    setInternationalAffairsAndInformationDepartmentModalIsOpen,\r\n  ] = React.useState(false)\r\n  let [admissionCommitteeModalIsOpen, setAdmissionCommitteeModalIsOpen] = React.useState(false)\r\n  let [studentCouncilModalIsOpen, setStudentCouncilModalIsOpen] = React.useState(false)\r\n  let [socialMediaModalIsOpen, setSocialMediaModalIsOpen] = React.useState(false)\r\n\r\n  let academyCorps = [\r\n    \"вул. Під Голоском, 19\",\r\n    \"вул. Підвальна, 17\",\r\n    \"вул. Личаківська, 3\",\r\n    \"вул. Коцюбинського, 21\",\r\n    \"вул. Винниченка, 12\",\r\n  ]\r\n\r\n  // Корпуси академії\r\n  let corpsModalItems = academyCorps.map((corps) => {\r\n    return {\r\n      text: corps,\r\n      icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n    }\r\n  })\r\n\r\n  // Ректорат\r\n  let rectorateModalItems: ModalItem[] = [\r\n    {\r\n      icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n      text: \"вул. Під Голоском, 19, ауд. 234\",\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n      text: \"(032) 242 23 77\",\r\n      isPhone: true,\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n      text: \"uad@uad.edu.ua\",\r\n      isLink: true,\r\n    },\r\n  ]\r\n\r\n  // Підготовче відділення\r\n  let preparationDepartmentModalItems: ModalItem[] = [\r\n    {\r\n      icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n      text: \"вул. Під Голоском, 19, ауд. 218\",\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n      text: \"(032) 242 23 78\",\r\n      isPhone: true,\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n      text: \"pv@uad.edu.ua\",\r\n      isLink: true,\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"globe\" color={palette.grayedOut} size={16} />,\r\n      text: \"http://www.uad-pv.pp.ua/\",\r\n      isLink: true,\r\n    },\r\n  ]\r\n\r\n  // Відділ міжнародних звʼязків та інформаційного забезпечення\r\n  let internationalAffairsAndInformationDepartmentModalItems: ModalItem[] = [\r\n    {\r\n      icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n      text: \"вул. Під Голоском, 19\",\r\n    },\r\n\r\n    {\r\n      icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n      text: \"(032) 259 94 21\",\r\n      isPhone: true,\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n      text: \"ird@uad.lviv.ua\",\r\n      isLink: true,\r\n    },\r\n  ]\r\n\r\n  // Приймальна комісія\r\n  let admissionsCommitteeModalItems: ModalItem[] = [\r\n    {\r\n      icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n      text: \"вул. Під Голоском, 19, каб. 417, 200\",\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n      text: \"(067) 149 14 00\",\r\n      isPhone: true,\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n      text: \"pk@uad.edu.ua\",\r\n      isLink: true,\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n      text: \"pk.uad.lviv@gmail.com\",\r\n      isLink: true,\r\n    },\r\n  ]\r\n\r\n  // Бухгалтерія\r\n  let accountingModalItems: ModalItem[] = [\r\n    {\r\n      icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n      text: \"вул. Під Голоском, 19, ауд. 213\",\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n      text: \"(032) 242 23 46\",\r\n      isPhone: true,\r\n    },\r\n  ]\r\n\r\n  // Відділ платної форми навчання\r\n  let contractEducationDepartmentModalItems: ModalItem[] = [\r\n    {\r\n      icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n      text: \"вул. Під Голоском, 19, ауд. 234а\",\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n      text: \"(032) 242 23 80\",\r\n      isPhone: true,\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"mail\" color={palette.grayedOut} size={16} />,\r\n      text: \"vpn_uad@ukr.net\",\r\n      isLink: true,\r\n    },\r\n  ]\r\n\r\n  // Профком студентів\r\n  let studentUnionModalItems: ModalItem[] = [\r\n    {\r\n      icon: <Ionicons name=\"location\" color={palette.grayedOut} size={16} />,\r\n      text: \"вул. Під Голоском, 19, ауд. 311\",\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n      text: \"(032) 242 23 79\",\r\n      isPhone: true,\r\n    },\r\n    {\r\n      icon: <Ionicons name=\"call\" color={palette.grayedOut} size={16} />,\r\n      text: \"(067) 67 23 173\",\r\n      isPhone: true,\r\n    },\r\n  ]\r\n\r\n  // Студентська рада\r\n  let studentCouncilModalItems: ModalItem[] = [\r\n    {\r\n      icon: <FontAwesome name=\"instagram\" color={palette.grayedOut} size={16} />,\r\n      text: \"https://www.instagram.com/uad_lviv/\",\r\n      isLink: true,\r\n      linkName: \"uad_lviv\",\r\n    },\r\n  ]\r\n\r\n  // Соц. мережі академії\r\n  let socialMediaModalItems: ModalItem[] = [\r\n    {\r\n      icon: <FontAwesome name=\"instagram\" color={palette.grayedOut} size={16} />,\r\n      text: \"https://www.instagram.com/uad_lviv/\",\r\n      isLink: true,\r\n      linkName: \"@uad_lviv\",\r\n    },\r\n    {\r\n      icon: <FontAwesome name=\"telegram\" color={palette.grayedOut} size={16} />,\r\n      text: \"https://t.me/uad_live\",\r\n      isLink: true,\r\n      linkName: \"@uad_live\",\r\n    },\r\n    {\r\n      icon: <FontAwesome name=\"youtube-play\" color={palette.grayedOut} size={16} />,\r\n      text: \"https://www.youtube.com/user/UADtelevision\",\r\n      isLink: true,\r\n      linkName: \"UADtelevision\",\r\n    },\r\n    {\r\n      icon: <FontAwesome name=\"facebook-official\" color={palette.grayedOut} size={16} />,\r\n      text: \"https://www.facebook.com/uadlv\",\r\n      isLink: true,\r\n    },\r\n    {\r\n      icon: (\r\n        <Image\r\n          source={imageIcons.tiktok}\r\n          // color={palette.grayedOut}\r\n          style={{\r\n            width: 16,\r\n            height: 18,\r\n          }}\r\n        />\r\n      ),\r\n      text: \"https://www.tiktok.com/@uad.lviv\",\r\n      isLink: true,\r\n      linkName: \"@uad.lviv\",\r\n    },\r\n  ]\r\n\r\n  const constructModalItem = (item: ModalItem, idx) => {\r\n    return (\r\n      <View\r\n        style={{\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          marginVertical: 6,\r\n        }}\r\n      >\r\n        {item.icon}\r\n        <AppText\r\n          onPress={() => {\r\n            if (item.isLink) {\r\n              if (isMail(item.text)) Linking.openURL(`mailto:${item.text}`)\r\n              else Linking.openURL(item.text)\r\n            } else if (item.isPhone) Linking.openURL(`tel:${item.text}`)\r\n          }}\r\n          style={[styles.optionText, item.isLink ? globalStyles.underlinedLink : {}]}\r\n        >\r\n          {item.linkName ? item.linkName : item.text}\r\n        </AppText>\r\n      </View>\r\n    )\r\n  }\r\n\r\n  const constructContentPresenterModal = (\r\n    headerText: string,\r\n    isOpen: boolean,\r\n    onCloseModal: () => void,\r\n    initialOptions: typeof rectorateModalItems,\r\n    displaySeparators = false\r\n  ) => {\r\n    return (\r\n      <OptionPickerModal\r\n        headerText={headerText}\r\n        isOpen={isOpen}\r\n        hasSearchBar={false}\r\n        displaySeparators={displaySeparators}\r\n        onCloseModal={onCloseModal}\r\n        options={initialOptions}\r\n        renderItem={constructModalItem}\r\n        isOptionSelectable={false}\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <View>\r\n        <Button title=\"Корпуси академії\" onPress={() => setCorpsModalIsOpen(true)} />\r\n        {constructContentPresenterModal(\r\n          \"Корпуси академії\",\r\n          corpsModalIsOpen,\r\n          () => setCorpsModalIsOpen(false),\r\n          corpsModalItems,\r\n          true\r\n        )}\r\n      </View>\r\n      <View>\r\n        <Button title=\"Ректорат\" onPress={() => setRectorateModalIsOpen(true)} />\r\n        {constructContentPresenterModal(\r\n          \"Ректорат\",\r\n          rectorateModalIsOpen,\r\n          () => setRectorateModalIsOpen(false),\r\n          rectorateModalItems\r\n        )}\r\n      </View>\r\n\r\n      <View>\r\n        <Button title=\"Підготовче відділення\" onPress={() => setPreparationDepartmentModalIsOpen(true)} />\r\n        {constructContentPresenterModal(\r\n          \"Підготовче відділення\",\r\n          preparationDepartmentModalIsOpen,\r\n          () => setPreparationDepartmentModalIsOpen(false),\r\n          preparationDepartmentModalItems\r\n        )}\r\n      </View>\r\n      <View>\r\n        {/* push Faculties Screen on top of stack */}\r\n        <Button title=\"Факультети академії\" onPress={() => navigation.push(ContactsStackRoutes.FACULTIES)} />\r\n      </View>\r\n\r\n      <View>\r\n        <Button\r\n          title=\"Відділ міжнародних звʼязків та інформаційного забезпечення\"\r\n          onPress={() => setInternationalAffairsAndInformationDepartmentModalIsOpen(true)}\r\n        />\r\n        {constructContentPresenterModal(\r\n          \"Відділ міжнародних звʼязків та інформаційного забезпечення\",\r\n          internationalAffairsAndInformationDepartmentModalIsOpen,\r\n          () => setInternationalAffairsAndInformationDepartmentModalIsOpen(false),\r\n          internationalAffairsAndInformationDepartmentModalItems\r\n        )}\r\n      </View>\r\n      <View>\r\n        <Button title=\"Приймальна комісія\" onPress={() => setAdmissionCommitteeModalIsOpen(true)} />\r\n        {constructContentPresenterModal(\r\n          \"Приймальна комісія\",\r\n          admissionCommitteeModalIsOpen,\r\n          () => setAdmissionCommitteeModalIsOpen(false),\r\n          admissionsCommitteeModalItems\r\n        )}\r\n      </View>\r\n\r\n      <View>\r\n        <Button title=\"Студентська рада\" onPress={() => setStudentCouncilModalIsOpen(true)} />\r\n        {constructContentPresenterModal(\r\n          \"Студентська рада\",\r\n          studentCouncilModalIsOpen,\r\n          () => setStudentCouncilModalIsOpen(false),\r\n          studentCouncilModalItems\r\n        )}\r\n      </View>\r\n\r\n      <View>\r\n        <Button title=\"Соц. мережі академії\" onPress={() => setSocialMediaModalIsOpen(true)} />\r\n        {constructContentPresenterModal(\r\n          \"Соц. мережі академії\",\r\n          socialMediaModalIsOpen,\r\n          () => setSocialMediaModalIsOpen(false),\r\n          socialMediaModalItems\r\n        )}\r\n      </View>\r\n    </SafeAreaView>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    margin: 20,\r\n    justifyContent: \"space-around\",\r\n  },\r\n  optionText: {\r\n    marginLeft: 10,\r\n    fontSize: 16,\r\n  },\r\n})\r\n","import * as React from \"react\"\r\n\r\nimport { createStackNavigator } from \"@react-navigation/stack\"\r\nimport FacultiesTestScreen from \"../screens/TestTabsScreens/FacultiesTestScreen\"\r\nimport ContactsModalTestScreen from \"../screens/TestTabsScreens/ContactsModalsTestScreen\"\r\nimport { View } from \"react-native\"\r\nimport { ContactsStackRoutes } from \"./ContactsStackRoutes\"\r\nimport StackHeader from \"../components/StackHeader\"\r\n\r\nconst Stack = createStackNavigator()\r\n\r\nexport default function ContactsTestStack() {\r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={\r\n        {\r\n          // headerShown: false,\r\n        }\r\n      }\r\n    >\r\n      <Stack.Screen\r\n        name={ContactsStackRoutes.CONTACTS_MENU}\r\n        component={ContactsModalTestScreen}\r\n        options={{\r\n          header: () => <View />,\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name={ContactsStackRoutes.FACULTIES}\r\n        component={FacultiesTestScreen}\r\n        options={{\r\n          header: (props) => <StackHeader title={\"Факультети академії\"} />,\r\n        }}\r\n      />\r\n    </Stack.Navigator>\r\n  )\r\n}\r\n","import * as React from \"react\"\r\nimport { PixelRatio, Text, View, useWindowDimensions } from \"react-native\"\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\"\r\nimport { Ionicons } from \"@expo/vector-icons\"\r\nimport NotificationTestsScreen from \"../screens/TestTabsScreens/NotificationTests\"\r\nimport ScheduledNotificationsScreen from \"../screens/TestTabsScreens/ScheduledNotificationsScreen\"\r\nimport InroductoryCarouselScreen from \"../screens/IntroductoryCarousel/IntroductoryCarousel\"\r\nimport FileSystemScreen from \"../screens/TestTabsScreens/FileSystemScreen\"\r\nimport TestEditorStack from \"./testEditorStack\"\r\nimport ContactsTestStack from \"./ContactsTestStack\"\r\n\r\nfunction DeviceInfoScreen() {\r\n  const { height, width } = useWindowDimensions()\r\n  const aspectRatio = height / width\r\n  let pixelRatio = PixelRatio.get()\r\n  let dpi = 160 * pixelRatio\r\n\r\n  return (\r\n    <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\r\n      <Text>Інформація про пристрій</Text>\r\n      <Text>Ширина вікна: {width}</Text>\r\n      <Text>Висота вікна: {height}</Text>\r\n      <Text>Pixel ratio: {pixelRatio}</Text>\r\n      <Text>Aspect ratio: {aspectRatio}</Text>\r\n      <Text>DPI: {dpi}</Text>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst Tab = createBottomTabNavigator()\r\n\r\nexport default function TestTabs() {\r\n  return (\r\n    <Tab.Navigator\r\n      screenOptions={{\r\n        headerShown: false,\r\n        tabBarStyle: {\r\n          // display: \"none\",\r\n        },\r\n      }}\r\n      initialRouteName=\"Модальні вікна\"\r\n    >\r\n      <Tab.Screen\r\n        name=\"Заплановані Сповіщення\"\r\n        component={ScheduledNotificationsScreen}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => <Ionicons name=\"notifications-circle\" color={color} size={size} />,\r\n        }}\r\n      />\r\n\r\n      <Tab.Screen\r\n        name=\"Сповіщення\"\r\n        component={NotificationTestsScreen}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => <Ionicons name=\"notifications\" color={color} size={size} />,\r\n        }}\r\n      />\r\n\r\n      <Tab.Screen\r\n        name=\"Вступне Вікно\"\r\n        component={InroductoryCarouselScreen}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => <Ionicons name=\"enter\" color={color} size={size} />,\r\n        }}\r\n      />\r\n\r\n      <Tab.Screen\r\n        name=\"Файлова Система\"\r\n        component={FileSystemScreen}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => <Ionicons name=\"folder\" color={color} size={size} />,\r\n        }}\r\n      />\r\n\r\n      <Tab.Screen\r\n        name=\"Редактор\"\r\n        component={TestEditorStack}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => <Ionicons name=\"options\" color={color} size={size} />,\r\n        }}\r\n      />\r\n\r\n      <Tab.Screen\r\n        name=\"Модальні вікна\"\r\n        component={ContactsTestStack}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => <Ionicons name=\"md-file-tray-stacked\" color={color} size={size} />,\r\n        }}\r\n      />\r\n\r\n      <Tab.Screen\r\n        name=\"Інше\"\r\n        component={DeviceInfoScreen}\r\n        options={{\r\n          tabBarIcon: ({ color, size }) => <Ionicons name=\"ellipsis-horizontal\" color={color} size={size} />,\r\n        }}\r\n      />\r\n    </Tab.Navigator>\r\n  )\r\n}\r\n","import { StyleSheet } from \"react-native\"\r\n\r\nimport { FontName } from \"../../constants/Fonts\"\r\nimport { palette, globalStyles } from \"../../styles/global\"\r\n\r\nexport const styles = StyleSheet.create({\r\n  scrollViewContentContainer: {\r\n    // backgroundColor: \"green\",\r\n  },\r\n\r\n  loadingIndicatorOverlay: {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    backgroundColor: palette.background,\r\n\r\n    zIndex: 9999,\r\n  },\r\n\r\n  scrollViewDirect: {\r\n    ...globalStyles.screen,\r\n    paddingBottom: 24,\r\n  },\r\n\r\n  pageBackground: {\r\n    // minHeight: \"100%\",\r\n  },\r\n\r\n  settingValueContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  categoryHeader: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginTop: 24,\r\n    marginLeft: 24,\r\n  },\r\n  settingsSectionName: {\r\n    fontFamily: FontName.Raleway600,\r\n    color: \"rgba(90,90,90,1)\",\r\n    fontSize: 14,\r\n\r\n    marginLeft: 6,\r\n  },\r\n\r\n  settingsCategory: {\r\n    padding: 10,\r\n    paddingBottom: 5,\r\n    margin: 11,\r\n\r\n    backgroundColor: \"rgba(255,255,255,1)\",\r\n    borderRadius: 9,\r\n  },\r\n\r\n  separator: {\r\n    width: \"100%\",\r\n    height: 1,\r\n    borderWidth: 0,\r\n    borderTopWidth: 1,\r\n    borderColor: \"rgba(242,242,242,1)\",\r\n  },\r\n\r\n  centeredTextAndIcon: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  settingName: {\r\n    fontFamily: FontName.Raleway500,\r\n    color: \"rgba(82,82,82,1)\",\r\n    fontSize: 15,\r\n  },\r\n  settingValue: {\r\n    fontFamily: FontName.MontserratMedium,\r\n    color: \"rgba(136,136,136,1)\",\r\n    height: 17,\r\n    textAlign: \"right\",\r\n    fontSize: 12,\r\n  },\r\n  grayIcon: {\r\n    ...globalStyles.grayIcon,\r\n  },\r\n\r\n  settingsSectionIcon: {\r\n    color: \"rgba(90,90,90,1)\",\r\n    fontSize: 15,\r\n  },\r\n  settingRow: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n\r\n    marginVertical: 10,\r\n  },\r\n})\r\n","// EXTERNAL DEPENDENCIES\r\n\r\nimport React, { useEffect, useState } from \"react\"\r\nimport { View, ScrollView, ActivityIndicator } from \"react-native\"\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport FontAwesomeIcon from \"react-native-vector-icons/FontAwesome\"\r\nimport EntypoIcon from \"react-native-vector-icons/Entypo\"\r\nimport { Ionicons } from \"@expo/vector-icons\"\r\n\r\n// INTERNAL DEPENDENCIES\r\n\r\nimport CustomSwitch from \"../../components/shared/Switch\"\r\nimport SettingsService from \"../../services/SettingsService/SettingsService\"\r\nimport { DisplayEmptyDaysMode, DisplayTeacherMode, ScheduleAppSettings } from \"../../services/SettingsService/Types\"\r\nimport { globalStyles, palette } from \"../../styles/global\"\r\nimport OptionPickerModal from \"../../components/OptionPickerModalComponent/OptionPickerModal\"\r\nimport ScheduleNotificationsService from \"../../services/ScheduleNotificationsService\"\r\nimport ScheduleModel from \"../../models/ScheduleModel/ScheduleModel\"\r\nimport ScheduleLoaderService from \"../../services/ScheduleLoaderService/ScheduleLoaderService\"\r\nimport { ensureExtension, ensureNoExtension, isRunningInBrowser } from \"../../utilities/utilities\"\r\nimport AppText from \"../../components/shared/AppText\"\r\nimport { styles } from \"./Styles\"\r\n\r\n// TODO: Fix settings page visually spazzing out on mount\r\n// it's not the switches\r\n// it's not the effect that saves updated settings to disk\r\n// it's not notification events updating state\r\n// it's not other setters\r\n// this is something that only happens when the main content is rendered\r\n// removing activity indicator as alternative layout breaks settings service integration and makes schedule picker fail to load options\r\n// hell. Let's start with simply refactoring the layout into components\r\n\r\ntype ScheduleAppSettingsWithoutCurrentScheduleName = Omit<ScheduleAppSettings, \"currentScheduleName\">\r\n\r\n// settings fields are identical to ScheduleAppSettings, except for currentScheduleName. It is represented as selectedSchedule in this component\r\ntype SettingFields = Record<keyof ScheduleAppSettingsWithoutCurrentScheduleName | \"selectedSchedule\", any>\r\n\r\nexport default function Settings() {\r\n  const settingsServiceRef = React.useRef<SettingsService | null>(null)\r\n\r\n  // REACTIVE VARIABLES\r\n\r\n  let [schedulePickerData, setSchedulePickerData] = useState<string[]>([])\r\n\r\n  // Note: Update place 0\r\n  // TODO: use a type for settingsValues\r\n  let [settingsValues, setSettingsValues] = useState<SettingFields>({\r\n    selectedSchedule: \"\",\r\n    displayRoomNumber: false,\r\n    notifyBeforeClass: false,\r\n    displayEmptyDays: \"...\",\r\n    displayTeacherName: \"...\",\r\n    notifyBeforeClassOffsetMinutes: 0,\r\n  })\r\n\r\n  let [schedulePickerModalVisible, setSchedulePickerModalVisible] = useState(false)\r\n  let [schedulePickerModalDisabled, setSchedulePickerModalDisabled] = useState(false)\r\n\r\n  let [emptyDayDisplayModalVisible, setEmptyDayDisplayModalVisible] = useState(false)\r\n\r\n  let [displayTeacherModeModalVisible, setDisplayTeacherModeModalVisible] = useState(false)\r\n  let [notifyBeforehandModalVisible, setNotifyBeforehandModalVisible] = useState(false)\r\n\r\n  const [isReady, setIsReady] = useState(false)\r\n\r\n  // EFFECTS\r\n\r\n  // mount effect\r\n  useEffect(() => {\r\n    async function onMount() {\r\n      const settingsService = await SettingsService.GetInstance()\r\n      settingsServiceRef.current = settingsService\r\n\r\n      // Note: Update place 1\r\n\r\n      let {\r\n        currentScheduleName,\r\n        displayRoomNumber,\r\n        notifyBeforeClass,\r\n        displayEmptyDays,\r\n        displayTeacherName,\r\n        notifyBeforeClassOffsetMinutes,\r\n      } = settingsServiceRef.current\r\n\r\n      setSettingsValues({\r\n        selectedSchedule: ensureNoExtension(currentScheduleName, \".json\"),\r\n        displayRoomNumber,\r\n        notifyBeforeClass,\r\n        displayEmptyDays,\r\n        displayTeacherName,\r\n        notifyBeforeClassOffsetMinutes,\r\n      })\r\n\r\n      console.log(\"[settings screen init] settingsService.currentSchedule:\", settingsService.currentScheduleName)\r\n\r\n      // disable schedule picker modal when notifications are being configured\r\n      const notifService = await ScheduleNotificationsService.GetInstance()\r\n\r\n      notifService.onConfigureNotificationsForScheduleStart = () => {\r\n        setSchedulePickerModalDisabled(true)\r\n        // ToastAndroid.show(\"Configuring notifications...\", ToastAndroid.SHORT)\r\n      }\r\n      notifService.onConfigureNotificationsForScheduleEnd = () => {\r\n        setSchedulePickerModalDisabled(false)\r\n\r\n        // ToastAndroid.show(\"Notifications have been configured\", ToastAndroid.SHORT)\r\n      }\r\n\r\n      let scheduleLodaderInstance = await ScheduleLoaderService.GetInstance()\r\n\r\n      let schedulePickerData = scheduleLodaderInstance.scheduleFiles.map((f) => ensureNoExtension(f.filename, \".json\"))\r\n      setSchedulePickerData(schedulePickerData)\r\n\r\n      setIsReady(true)\r\n    }\r\n    onMount()\r\n  }, [])\r\n\r\n  // settings change effect\r\n  // write settings to disk on each update to make sure they aren't lost\r\n  useEffect(() => {\r\n    if (!isReady) return\r\n\r\n    // Note: Update place 2\r\n    let {\r\n      selectedSchedule,\r\n      displayRoomNumber,\r\n      notifyBeforeClass,\r\n      displayEmptyDays,\r\n      displayTeacherName,\r\n      notifyBeforeClassOffsetMinutes,\r\n    } = settingsValues\r\n\r\n    // TODO: Refactor this\r\n    let settingsService = settingsServiceRef.current!\r\n    settingsService.currentScheduleName = ensureExtension(selectedSchedule, \".json\")\r\n    settingsService.displayRoomNumber = displayRoomNumber\r\n    settingsService.notifyBeforeClass = notifyBeforeClass\r\n    settingsService.displayEmptyDays = displayEmptyDays as DisplayEmptyDaysMode\r\n    settingsService.displayTeacherName = displayTeacherName as DisplayTeacherMode\r\n    settingsService.notifyBeforeClassOffsetMinutes = notifyBeforeClassOffsetMinutes\r\n\r\n    settingsService.saveToStorage()\r\n  }, [settingsValues])\r\n\r\n  // Used in corresponding onPress callback. Enables or disables schedule notifications\r\n  async function toggleNotifs(enable: boolean) {\r\n    let scheduleNotifService = await ScheduleNotificationsService.GetInstance()\r\n    if (enable) {\r\n      // TODO: Refactor. Find a way to reference currently selected schedule in ScheduleScreen\r\n      let schedule = new ScheduleModel(\"foo\", \"bar\", 99)\r\n      schedule.getScheduleFromScheduleLoader(settingsServiceRef.current!.currentScheduleName)\r\n      scheduleNotifService.configureNotificationsForSchedule(schedule)\r\n    } else {\r\n      await scheduleNotifService.cancelAllScheduledNotificationsAsync()\r\n    }\r\n  }\r\n\r\n  if (!isReady) {\r\n    // return spinner\r\n    return ActivityIndicatorLarge\r\n  }\r\n\r\n  // setTimeout(() => {\r\n  //   setIsReady(true)\r\n  // }, 500)\r\n\r\n  // notifications aren't implemented in browser (although they could have been)\r\n  let notificationsSection = !isRunningInBrowser() ? (\r\n    <View>\r\n      {constructCategoryHeader(\r\n        \"Сповіщення\",\r\n        <FontAwesomeIcon name=\"bell-o\" style={styles.settingsSectionIcon}></FontAwesomeIcon>\r\n      )}\r\n\r\n      <View style={styles.settingsCategory}>\r\n        {constructSettingsRow(\r\n          \"Нагадувати про початок пари\",\r\n          <CustomSwitch\r\n            onValueChange={(nv) => {\r\n              setSettingsValues({\r\n                ...settingsValues,\r\n                notifyBeforeClass: nv,\r\n              })\r\n\r\n              toggleNotifs(nv)\r\n            }}\r\n            initVal={settingsValues.notifyBeforeClass}\r\n            disabled={false}\r\n          />\r\n        )}\r\n        <View style={styles.separator}></View>\r\n\r\n        {constructSettingsRow(\r\n          \"Сповіщати заздалегідь\",\r\n          <View>\r\n            <TouchableOpacity onPress={() => setNotifyBeforehandModalVisible(true)}>\r\n              <View style={styles.settingValueContainer}>\r\n                <AppText style={styles.settingValue}>{settingsValues.notifyBeforeClassOffsetMinutes + \" хв.\"}</AppText>\r\n                <EntypoIcon name=\"chevron-small-right\" style={styles.grayIcon}></EntypoIcon>\r\n              </View>\r\n            </TouchableOpacity>\r\n\r\n            <OptionPickerModal\r\n              hasSearchBar={false}\r\n              isOpen={notifyBeforehandModalVisible}\r\n              options={[0, 5, 10, 15, 20].map((n) => n + \" хв.\")}\r\n              selectedOption={settingsValues.notifyBeforeClassOffsetMinutes + \" хв.\"}\r\n              onCloseModal={() => setNotifyBeforehandModalVisible(false)}\r\n              onSelected={(selected) => {\r\n                let selectedInt = parseInt(selected)\r\n                setSettingsValues({\r\n                  ...settingsValues,\r\n                  notifyBeforeClassOffsetMinutes: selectedInt,\r\n                })\r\n\r\n                toggleNotifs(settingsValues.notifyBeforeClass)\r\n              }}\r\n            />\r\n          </View>\r\n        )}\r\n\r\n        <View style={styles.separator}></View>\r\n\r\n        {constructSettingsRow(\r\n          \"Звук, місце появи сповіщення та ін.\",\r\n          <View style={[styles.settingValueContainer, { marginRight: 3 }]}>\r\n            {/* TODO: Unhardcode margin right */}\r\n\r\n            <TouchableOpacity onPress={settingsServiceRef.current?.openAndroidSystemSettingsForNotifications}>\r\n              <Ionicons name=\"open\" size={14} color={palette.navigationBackground} />\r\n            </TouchableOpacity>\r\n          </View>\r\n        )}\r\n      </View>\r\n    </View>\r\n  ) : null\r\n\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <ScrollView style={styles.scrollViewDirect} contentContainerStyle={styles.scrollViewContentContainer}>\r\n        <View style={styles.pageBackground}>\r\n          {notificationsSection}\r\n\r\n          {constructCategoryHeader(\r\n            \"Розклад\",\r\n            <FontAwesomeIcon name=\"calendar-o\" style={styles.settingsSectionIcon}></FontAwesomeIcon>\r\n          )}\r\n          <View style={styles.settingsCategory}>\r\n            <View>\r\n              <View>\r\n                <View style={styles.settingRow}>\r\n                  <AppText style={styles.settingName}>Мій розклад</AppText>\r\n\r\n                  <TouchableOpacity\r\n                    onPress={() => {\r\n                      console.log(\"selected schedule before toggling modal:\", settingsValues.selectedSchedule)\r\n                      setSchedulePickerModalVisible(true)\r\n                    }}\r\n                    disabled={schedulePickerModalDisabled}\r\n                    style={styles.centeredTextAndIcon}\r\n                  >\r\n                    {/* TODO: Remove hardcoded margins. Those were set to make activity indicator and actual content to have same size */}\r\n\r\n                    {schedulePickerModalDisabled ? (\r\n                      <ActivityIndicator\r\n                        style={{ marginRight: 10, marginVertical: 3.5 }}\r\n                        size=\"small\"\r\n                        color={palette.navigationBackground}\r\n                      />\r\n                    ) : (\r\n                      <View\r\n                        style={{\r\n                          flexDirection: \"row\",\r\n                          alignItems: \"center\",\r\n                        }}\r\n                      >\r\n                        <AppText style={styles.settingValue}>\r\n                          {ensureNoExtension(settingsValues.selectedSchedule, \".json\")}\r\n                        </AppText>\r\n                        <EntypoIcon name=\"chevron-small-right\" style={styles.grayIcon}></EntypoIcon>\r\n                      </View>\r\n                    )}\r\n\r\n                    {/* TODO: remove the temp fix. The issue is that I don't know why updated prop doesn't rerender the modal */}\r\n                    {settingsValues.selectedSchedule != \"\" ? (\r\n                      <OptionPickerModal\r\n                        headerText=\"Вибери свою групу\"\r\n                        isOpen={schedulePickerModalVisible}\r\n                        options={schedulePickerData}\r\n                        selectedOption={settingsValues.selectedSchedule}\r\n                        onCloseModal={() => setSchedulePickerModalVisible(false)}\r\n                        onSelected={(selected) => {\r\n                          setSettingsValues({\r\n                            ...settingsValues,\r\n                            selectedSchedule: ensureExtension(selected, \".json\"),\r\n                          })\r\n                        }}\r\n                      />\r\n                    ) : (\r\n                      <View style={globalStyles.noDisplay} />\r\n                    )}\r\n                  </TouchableOpacity>\r\n                </View>\r\n\r\n                <View style={styles.separator} />\r\n\r\n                {constructSettingsRow(\r\n                  \"Відображати номер аудиторії\",\r\n                  <CustomSwitch\r\n                    initVal={settingsValues.displayRoomNumber}\r\n                    onValueChange={(nv) => {\r\n                      setSettingsValues({\r\n                        ...settingsValues,\r\n                        displayRoomNumber: nv,\r\n                      })\r\n                    }}\r\n                  />\r\n                )}\r\n\r\n                <View style={styles.separator} />\r\n\r\n                {constructSettingsRow(\r\n                  \"Відображати викладача\",\r\n                  <View>\r\n                    <TouchableOpacity\r\n                      onPress={() => setDisplayTeacherModeModalVisible(true)}\r\n                      style={styles.centeredTextAndIcon}\r\n                    >\r\n                      <AppText style={styles.settingValue}>{settingsValues.displayTeacherName}</AppText>\r\n                      <EntypoIcon name=\"chevron-small-right\" style={styles.grayIcon}></EntypoIcon>\r\n                    </TouchableOpacity>\r\n                    <OptionPickerModal\r\n                      hasSearchBar={false}\r\n                      isOpen={displayTeacherModeModalVisible}\r\n                      options={[\r\n                        DisplayTeacherMode.Full,\r\n                        DisplayTeacherMode.SurnameAndInitials,\r\n                        DisplayTeacherMode.Hide,\r\n                      ]}\r\n                      selectedOption={settingsValues.displayTeacherName}\r\n                      onCloseModal={() => setDisplayTeacherModeModalVisible(false)}\r\n                      onSelected={(selected) => {\r\n                        setSettingsValues({\r\n                          ...settingsValues,\r\n                          displayTeacherName: selected,\r\n                        })\r\n                      }}\r\n                    />\r\n                  </View>\r\n                )}\r\n\r\n                <View style={styles.separator}></View>\r\n\r\n                {constructSettingsRow(\r\n                  \"Порожні дні\",\r\n                  <View>\r\n                    <TouchableOpacity\r\n                      onPress={() => setEmptyDayDisplayModalVisible(true)}\r\n                      style={styles.centeredTextAndIcon}\r\n                    >\r\n                      <AppText style={styles.settingValue}>{settingsValues.displayEmptyDays}</AppText>\r\n                      <EntypoIcon name=\"chevron-small-right\" style={styles.grayIcon}></EntypoIcon>\r\n                    </TouchableOpacity>\r\n                    <OptionPickerModal\r\n                      hasSearchBar={false}\r\n                      isOpen={emptyDayDisplayModalVisible}\r\n                      options={[DisplayEmptyDaysMode.Display, DisplayEmptyDaysMode.Darken, DisplayEmptyDaysMode.Hide]}\r\n                      selectedOption={settingsValues.displayEmptyDays}\r\n                      onCloseModal={() => setEmptyDayDisplayModalVisible(false)}\r\n                      onSelected={(selected) => {\r\n                        setSettingsValues({\r\n                          ...settingsValues,\r\n                          displayEmptyDays: selected,\r\n                        })\r\n                      }}\r\n                    />\r\n                  </View>\r\n                )}\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </ScrollView>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst ActivityIndicatorLarge = (\r\n  <View style={[{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }, styles.loadingIndicatorOverlay]}>\r\n    <ActivityIndicator size=\"large\" color={palette.navigationBackground} />\r\n  </View>\r\n)\r\n\r\n// markdown constructors to avoid repeating the same layout code\r\nfunction constructCategoryHeader(categoryName: string, categoryIcon: JSX.Element) {\r\n  return (\r\n    <View style={styles.categoryHeader}>\r\n      {categoryIcon}\r\n      <AppText style={styles.settingsSectionName}>{categoryName}</AppText>\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction constructSettingsRow(settingDescription: string, changeSettingComponent: JSX.Element) {\r\n  return (\r\n    <View style={styles.settingRow}>\r\n      <AppText style={styles.settingName}>{settingDescription}</AppText>\r\n      {changeSettingComponent}\r\n    </View>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { View, Image, StyleSheet, TouchableOpacity, Linking } from \"react-native\"\r\nimport { globalStyles, palette } from \"../styles/global\"\r\nimport { teamMemberImages } from \"../constants/Images\"\r\nimport { images } from \"../constants/Images\"\r\nimport { FontAwesome5, Ionicons } from \"@expo/vector-icons\"\r\nimport AppText from \"../components/shared/AppText\"\r\nimport { ScrollView } from \"react-native-gesture-handler\"\r\nimport { useNavigation } from \"@react-navigation/native\"\r\nimport { DrawerRoutes } from \"../routes/DrawerRoutes\"\r\nimport { FontName } from \"../constants/Fonts\"\r\nimport appJson from \"../app.json\"\r\n\r\nexport default function AboutScreen() {\r\n  // TODO: read from config file\r\n  // const appVersion = \"1.1.0\"\r\n  const appVersion = appJson.expo.version\r\n  const navigation = useNavigation()\r\n\r\n  return (\r\n    <ScrollView style={globalStyles.screen}>\r\n      <View style={styles.card}>\r\n        <View style={[styles.row]}>\r\n          <AppText style={{ color: \"#333333\", letterSpacing: 0 }}>Перший в історії УАД</AppText>\r\n          {/* <SvgUri source={images.uad_logo_text} width=\"200\" height={\"200\"} /> */}\r\n          <Image\r\n            style={{\r\n              width: 73,\r\n              height: 34,\r\n              resizeMode: \"contain\",\r\n\r\n              // backgroundColor: \"red\",\r\n            }}\r\n            source={images.uad_logo_text_not_vector_hires}\r\n          />\r\n        </View>\r\n        <View style={[styles.row, { alignItems: \"flex-end\", marginTop: 45 }]}>\r\n          <AppText style={styles.header}>Інтерактивний {\"\\n\"}розклад</AppText>\r\n          <AppText\r\n            style={{\r\n              color: palette.textOnBackground,\r\n              fontStyle: \"italic\",\r\n              fontSize: 10,\r\n              letterSpacing: 0,\r\n            }}\r\n          >\r\n            і не тільки\r\n          </AppText>\r\n        </View>\r\n      </View>\r\n      <View style={[globalStyles.centered]}>\r\n        <View\r\n          style={[\r\n            styles.card,\r\n            globalStyles.centered,\r\n\r\n            {\r\n              flexDirection: \"row\",\r\n              // justifyContent: \"space-between\",\r\n              width: 110 * 2 + 20,\r\n            },\r\n          ]}\r\n        >\r\n          <TouchableOpacity\r\n            style={[\r\n              {\r\n                width: 110,\r\n                alignItems: \"center\",\r\n              },\r\n            ]}\r\n            onPress={() => {\r\n              navigation.navigate(DrawerRoutes.VIEWER)\r\n            }}\r\n          >\r\n            <Ionicons name=\"calendar\" color={palette.textOnBackground} size={48} />\r\n            <AppText style={styles.tileText}>Розклад</AppText>\r\n          </TouchableOpacity>\r\n\r\n          <View\r\n            style={[\r\n              {\r\n                justifyContent: \"center\",\r\n                alignSelf: \"center\",\r\n              },\r\n            ]}\r\n          >\r\n            <Ionicons name=\"add-sharp\" color={palette.textOnBackground} size={32} />\r\n          </View>\r\n\r\n          <TouchableOpacity\r\n            style={[\r\n              {\r\n                alignItems: \"center\",\r\n                width: 110,\r\n              },\r\n            ]}\r\n            onPress={() => {\r\n              navigation.navigate(DrawerRoutes.EDITOR)\r\n            }}\r\n          >\r\n            <Ionicons name=\"options\" color={palette.textOnBackground} size={48} />\r\n            <AppText style={styles.tileText}>Редактор</AppText>\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            style={[styles.card, styles.tile]}\r\n            onPress={() => {\r\n              navigation.navigate(DrawerRoutes.REGLAMENT)\r\n            }}\r\n          >\r\n            <Ionicons name=\"time-sharp\" color={palette.textOnBackground} size={48} />\r\n            <AppText style={styles.tileText}>Регламент</AppText>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity\r\n            style={[styles.card, styles.tile]}\r\n            onPress={() => {\r\n              navigation.navigate(DrawerRoutes.TEACHERS)\r\n            }}\r\n          >\r\n            <FontAwesome5 name=\"user-graduate\" color={palette.textOnBackground} size={48} />\r\n            <AppText style={styles.tileText}>Викладачі</AppText>\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n          }}\r\n        >\r\n          <TouchableOpacity\r\n            style={[styles.card, styles.tile]}\r\n            onPress={() => {\r\n              navigation.navigate(DrawerRoutes.CONTACTS)\r\n            }}\r\n          >\r\n            <Ionicons name=\"call\" color={palette.textOnBackground} size={48} />\r\n            <AppText style={styles.tileText}>Контакти</AppText>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity\r\n            style={[styles.card, styles.tile]}\r\n            onPress={() => {\r\n              navigation.navigate(DrawerRoutes.NEWS)\r\n            }}\r\n          >\r\n            <Ionicons name=\"chatbox-ellipses\" color={palette.textOnBackground} size={48} />\r\n            <AppText style={styles.tileText}>Новини</AppText>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n\r\n      <View style={[styles.card]}>\r\n        <AppText style={[styles.teamSectionHeader]}>Команда проекту</AppText>\r\n        <View style={[styles.tilesContainer]}>\r\n          <View style={[styles.row]}>\r\n            <View style={[styles.teamMemberTile]}>\r\n              {/* image container */}\r\n              <View style={styles.teamMemberImageWrapper}>\r\n                <Image style={styles.teamMemberImage} source={teamMemberImages.senchyk_andrii} />\r\n              </View>\r\n              {/* team member description */}\r\n              <View style={styles.teamMemberDescription}>\r\n                <AppText style={[styles.teamMemberName, styles.regularLetterSpacing]}>Сенчик Андрій</AppText>\r\n                <AppText style={[styles.teamMemberDetails]}>Програмування{\"\\n\"}</AppText>\r\n              </View>\r\n            </View>\r\n\r\n            <View style={[styles.teamMemberTile]}>\r\n              {/* image container */}\r\n              <View style={styles.teamMemberImageWrapper}>\r\n                <Image style={styles.teamMemberImage} source={teamMemberImages.zakharova_zarina} />\r\n              </View>\r\n              {/* team member description */}\r\n              <View style={styles.teamMemberDescription}>\r\n                <AppText style={[styles.teamMemberName, styles.regularLetterSpacing]}>Захарова Заріна</AppText>\r\n                <AppText style={[styles.teamMemberDetails]}>\r\n                  Керування проектом{\"\\n\"}\r\n                  Дизайн\r\n                </AppText>\r\n              </View>\r\n            </View>\r\n          </View>\r\n          <View\r\n            style={[\r\n              styles.row,\r\n              {\r\n                marginTop: 40,\r\n              },\r\n            ]}\r\n          >\r\n            <View style={[styles.teamMemberTile]}>\r\n              {/* image container */}\r\n              <View style={styles.teamMemberImageWrapper}>\r\n                <Image style={styles.teamMemberImage} source={teamMemberImages.shepita_julia} />\r\n              </View>\r\n              {/* team member description */}\r\n              <View style={styles.teamMemberDescription}>\r\n                <AppText style={[styles.teamMemberName, styles.regularLetterSpacing]}>Шепіта Юлія</AppText>\r\n                <AppText style={[styles.teamMemberDetails]}>Робота з контентом</AppText>\r\n              </View>\r\n            </View>\r\n\r\n            <View style={[styles.teamMemberTile]}>\r\n              {/* image container */}\r\n              <View style={styles.teamMemberImageWrapper}>\r\n                <Image style={styles.teamMemberImage} source={teamMemberImages.ivanov_mykhailo} />\r\n              </View>\r\n              {/* team member description */}\r\n              <View style={styles.teamMemberDescription}>\r\n                <AppText style={[styles.teamMemberName, styles.regularLetterSpacing]}>Іванов Михайло</AppText>\r\n                <AppText style={[styles.teamMemberDetails]}>Тестування</AppText>\r\n              </View>\r\n            </View>\r\n          </View>\r\n          <View>\r\n            <AppText\r\n              style={{\r\n                fontFamily: FontName.Montserrat600,\r\n                fontSize: 16,\r\n                marginVertical: 10,\r\n                marginTop: 25,\r\n                alignSelf: \"center\",\r\n              }}\r\n            >\r\n              Бета-тестувальники\r\n            </AppText>\r\n\r\n            <AppText style={styles.testerName}>Іваськів Роман</AppText>\r\n            <AppText style={styles.testerName}>Беницький Степан</AppText>\r\n            <AppText style={styles.testerName}>Астафурова Наталя</AppText>\r\n            <AppText style={styles.testerName}>Цюпа Вікторія</AppText>\r\n            <AppText style={styles.testerName}>Ступак Марко</AppText>\r\n          </View>\r\n        </View>\r\n      </View>\r\n\r\n      <View style={[styles.card]}>\r\n        <AppText style={[styles.teamSectionHeader, { marginBottom: 10 }]}>Зворотній зв'язок</AppText>\r\n        <AppText style={[{ fontSize: 13, fontFamily: FontName.Montserrat600, marginBottom: 5 }]}>\r\n          Виникли запитання або ідеї як покращити наш застосунок? Напиши нам!\r\n        </AppText>\r\n        <View style={[globalStyles.centered, { flexDirection: \"row\" }]}>\r\n          <Ionicons name=\"mail\" color={palette.navigationBackground} size={19} style={{ marginRight: 5 }} />\r\n          <AppText\r\n            onPress={() => {\r\n              Linking.openURL(\"mailto:schedule.uad@gmail.com\")\r\n            }}\r\n            style={styles.contactsEmail}\r\n          >\r\n            schedule.uad@gmail.com\r\n          </AppText>\r\n        </View>\r\n      </View>\r\n\r\n      <View style={[styles.card]}>\r\n        <AppText style={[styles.teamSectionHeader, { marginBottom: 10 }]}>Розвиток проекту</AppText>\r\n        <AppText style={[{ fontSize: 13, fontFamily: FontName.Montserrat600, marginBottom: 5 }]}>\r\n          Якщо у тебе є досвід роботи з React Native та бажаєш розвивати проект, залишаємо посилання на код застосунку:\r\n        </AppText>\r\n        <View style={[globalStyles.centered, { flexDirection: \"row\", alignItems: \"center\" }]}>\r\n          <Ionicons name=\"logo-github\" color={palette.navigationBackground} size={22} style={{ marginRight: 5 }} />\r\n          <AppText\r\n            onPress={() => {\r\n              Linking.openURL(\"https://github.com/Seagullie/InteractiveScheduleUAD\")\r\n            }}\r\n            style={[styles.contactsEmail, { textDecorationLine: \"none\", marginBottom: 0 }]}\r\n          >\r\n            Репозиторій на GitHub\r\n          </AppText>\r\n        </View>\r\n      </View>\r\n\r\n      <View style={[styles.copyrightContainer]}>\r\n        <AppText style={[{ textAlign: \"center\", fontFamily: FontName.CenturyGothic }]}>\r\n          Авторські права 2023 © Українська Академія Друкарства. Усі права захищені\r\n        </AppText>\r\n      </View>\r\n\r\n      <View style={[styles.appVersionContainer]}>\r\n        <AppText style={[{ fontFamily: FontName.CenturyGothic, color: \"#5A5A5A\" }]}>{appVersion} </AppText>\r\n      </View>\r\n    </ScrollView>\r\n  )\r\n}\r\n\r\nconst teamMemberImageWidth = 110\r\n\r\nconst styles = StyleSheet.create({\r\n  header: {\r\n    fontSize: 26,\r\n    color: palette.navigationBackground,\r\n    fontFamily: FontName.CenturyGothic,\r\n  },\r\n\r\n  row: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n\r\n  tile: {\r\n    borderRadius: 18,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    alignSelf: \"flex-start\",\r\n\r\n    width: 110,\r\n\r\n    padding: 15,\r\n  },\r\n\r\n  tilesContainer: {\r\n    // width: \"100%\",\r\n  },\r\n\r\n  teamMemberTile: {\r\n    width: \"50%\",\r\n    ...globalStyles.centered,\r\n  },\r\n\r\n  teamSectionHeader: {\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    letterSpacing: 0,\r\n    marginBottom: 20,\r\n  },\r\n\r\n  teamMemberName: {\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n    color: palette.navigationBackground,\r\n  },\r\n\r\n  teamMemberDetails: {\r\n    letterSpacing: 0,\r\n    fontFamily: FontName.Raleway600,\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  regularLetterSpacing: {\r\n    letterSpacing: 0,\r\n  },\r\n\r\n  teamMemberDescription: {\r\n    marginTop: 15,\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  teamMemberImage: {\r\n    width: teamMemberImageWidth,\r\n    height: teamMemberImageWidth,\r\n    borderRadius: 999,\r\n    resizeMode: \"contain\",\r\n  },\r\n\r\n  teamMemberImageWrapper: {\r\n    backgroundColor: \"gray\",\r\n\r\n    borderRadius: 999,\r\n\r\n    elevation: 3,\r\n    shadowOffset: { width: 1, height: 1 },\r\n    shadowColor: \"#333\",\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 2,\r\n  },\r\n\r\n  tileText: {\r\n    fontFamily: FontName.CenturyGothic,\r\n    fontSize: 14,\r\n  },\r\n\r\n  testerName: {\r\n    fontFamily: FontName.Montserrat500,\r\n    fontSize: 13,\r\n    color: palette.navigationBackground,\r\n    alignSelf: \"center\",\r\n  },\r\n\r\n  card: {\r\n    // marginVertical: 5,\r\n    // marginHorizontal: 10,\r\n    padding: 15,\r\n    margin: 10,\r\n    // paddingVertical: 12,\r\n    borderRadius: 10,\r\n    backgroundColor: \"white\",\r\n\r\n    elevation: 1,\r\n    shadowOffset: { width: 1, height: 1 },\r\n    shadowColor: \"#333\",\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 2,\r\n  },\r\n\r\n  contactsEmail: {\r\n    color: palette.navigationBackground,\r\n    fontSize: 16,\r\n    fontFamily: FontName.CenturyGothic,\r\n    textAlign: \"center\",\r\n    textDecorationLine: \"underline\",\r\n    marginBottom: 3,\r\n  },\r\n\r\n  copyrightContainer: {\r\n    marginTop: 5,\r\n\r\n    backgroundColor: palette.background,\r\n    paddingHorizontal: 50,\r\n    paddingVertical: 7,\r\n  },\r\n\r\n  appVersionContainer: {\r\n    backgroundColor: \"white\",\r\n    alignItems: \"flex-end\",\r\n    paddingVertical: 2,\r\n    paddingRight: 5,\r\n  },\r\n})\r\n","import React from \"react\"\r\nimport { View, Text, StyleSheet } from \"react-native\"\r\nimport AppText from \"./shared/AppText\"\r\nimport { FontName } from \"../constants/Fonts\"\r\n\r\ninterface TableProps {\r\n  headers: string[]\r\n  data: string[][]\r\n  columnWidths: number | string[]\r\n}\r\n\r\nconst Table: React.FC<TableProps> = ({ headers, data, columnWidths }) => {\r\n  const colsN = data[0].length\r\n  const rowsN = data.length\r\n\r\n  return (\r\n    <View style={styles.table}>\r\n      <View style={styles.tableRow}>\r\n        {headers.map((header, index) => (\r\n          <View\r\n            key={index}\r\n            style={[\r\n              styles.tableHeaderCell,\r\n              { maxWidth: columnWidths[index], minWidth: columnWidths[index] },\r\n              index === colsN - 1 ? { borderRightWidth: 0 } : {},\r\n            ]}\r\n          >\r\n            <AppText>{header}</AppText>\r\n          </View>\r\n        ))}\r\n      </View>\r\n      {data.map((row, rowIndex) => (\r\n        <View key={rowIndex} style={styles.tableRow}>\r\n          {row.map((cell, cellIndex) => (\r\n            <View\r\n              key={cellIndex}\r\n              style={[\r\n                styles.tableCell,\r\n                {\r\n                  maxWidth: columnWidths[cellIndex],\r\n                  minWidth: columnWidths[cellIndex],\r\n                },\r\n                cellIndex === colsN - 1 ? { borderRightWidth: 0 } : {},\r\n              ]}\r\n            >\r\n              <AppText\r\n                style={{\r\n                  fontFamily: FontName.MontserratRegular,\r\n                }}\r\n              >\r\n                {cell}\r\n              </AppText>\r\n            </View>\r\n          ))}\r\n        </View>\r\n      ))}\r\n    </View>\r\n  )\r\n}\r\n\r\nconst tableBorderColor = \"#B9B9B9\"\r\nconst tableBorderWidth = 1\r\n\r\nconst sharedCellStyle = {\r\n  padding: 10,\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  textAlign: \"center\",\r\n  //   height: \"100%\",\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  table: {\r\n    borderWidth: tableBorderWidth,\r\n    // borderRightWidth: 2,\r\n    borderRadius: 7,\r\n    borderColor: tableBorderColor,\r\n    // margin: 10,\r\n\r\n    overflow: \"hidden\",\r\n  },\r\n  tableRow: {\r\n    flexDirection: \"row\",\r\n    borderColor: tableBorderColor,\r\n  },\r\n\r\n  tableHeaderCell: {\r\n    ...sharedCellStyle, // Include shared cell styles\r\n    // fontWeight: \"bold\",\r\n    fontFamily: FontName.MontserratMedium,\r\n    fontSize: 12,\r\n    borderRightWidth: tableBorderWidth,\r\n    borderColor: tableBorderColor,\r\n\r\n    backgroundColor: \"rgba(0,0,0,0.06)\",\r\n  },\r\n  tableCell: {\r\n    ...sharedCellStyle, // Include shared cell styles\r\n    borderWidth: 0,\r\n    borderTopWidth: tableBorderWidth,\r\n    borderRightWidth: tableBorderWidth,\r\n    borderColor: tableBorderColor,\r\n    // backgroundColor: \"orange\",\r\n  },\r\n})\r\n\r\nexport default Table\r\n","import { useState } from \"react\"\r\nimport { View, TouchableOpacity, StyleSheet } from \"react-native\"\r\nimport AppText from \"./shared/AppText\"\r\nimport { globalStyles, palette } from \"../styles/global\"\r\nimport { FontName } from \"../constants/Fonts\"\r\n\r\nexport default function UnfoldableCard({ title, bodyComponent }: { title: string; bodyComponent: JSX.Element }) {\r\n  let [isBodyRevealed, setIsBodyRevealed] = useState(false)\r\n\r\n  return (\r\n    <View style={{ marginBottom: 12 }}>\r\n      <View style={UCStyles.unfoldableCard}>\r\n        {/* title | question */}\r\n\r\n        <View style={[globalStyles.horizontalCenteredFlex]}>\r\n          <AppText style={{ fontFamily: FontName.RalewayMedium, fontSize: 15, flex: 1, lineHeight: 20 }}>\r\n            {title}\r\n          </AppText>\r\n\r\n          {/* reveal button */}\r\n          <TouchableOpacity onPress={() => setIsBodyRevealed(!isBodyRevealed)} style={UCStyles.revealButton}>\r\n            <AppText style={{ fontFamily: FontName.CenturyGothic, color: palette.textOnBackground, fontSize: 36 }}>\r\n              {!isBodyRevealed ? \"+\" : \"-\"}\r\n            </AppText>\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n        {/* answer */}\r\n\r\n        {isBodyRevealed ? bodyComponent : <></>}\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport const UCStyles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: palette.backgroundLight,\r\n    padding: 10,\r\n    paddingTop: 16,\r\n  },\r\n\r\n  unfoldableCard: {\r\n    ...globalStyles.card,\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 10,\r\n  },\r\n\r\n  unfoldableCardText: {\r\n    marginVertical: 15,\r\n    fontFamily: FontName.RalewayRegular,\r\n    fontSize: 14,\r\n    lineHeight: 1.3 * 14,\r\n  },\r\n\r\n  revealButton: {\r\n    ...globalStyles.navigationButton,\r\n    width: 30,\r\n    borderColor: \"transparent\", // TODO: create separate reveal button instead of transforming navigation button to desired shape\r\n    paddingVertical: 0,\r\n  },\r\n})\r\n","import { View, Linking } from \"react-native\"\r\nimport AppText from \"../components/shared/AppText\"\r\nimport Table from \"../components/Table\"\r\nimport { ScrollView } from \"react-native-gesture-handler\"\r\nimport UnfoldableCard, { UCStyles } from \"../components/UnfoldableCard\"\r\nimport { LINK_TO_WEB_VERSION, WEB_VERSION_NAME } from \"../constants/Constants\"\r\n\r\nexport default function QnAScreen() {\r\n  return (\r\n    <ScrollView style={UCStyles.container}>\r\n      <UnfoldableCard\r\n        bodyComponent={\r\n          <View style={{ marginTop: 15 }}>\r\n            <Table\r\n              headers={[\"Адреса корпусу УАД\", \"Позначення аудиторії в розкладі\"]}\r\n              data={[\r\n                [\"вул. Під Голоском 19\", \"а. ХХХ\"],\r\n                [\"вул. Підвальна 17\", \"a. Х або а. XX\"],\r\n                [\"вул. Личаківська 3\", \"Л. Х\"],\r\n                [\"вул. Коцюбинського 21\", \"К. Х\"],\r\n                [\"вул. Винниченка 12\", \"В. Х\"],\r\n              ]}\r\n              columnWidths={[\"50%\", \"50%\"]}\r\n            />\r\n\r\n            <AppText style={UCStyles.unfoldableCardText}>\r\n              де ХХХ – трицифровий номер аудиторії,{\"\\n\"}Х та ХХ – одно- та двоцифровий номери{\"\\n\"}а Л, К, В – перші\r\n              літери адрес корпусів\r\n            </AppText>\r\n          </View>\r\n        }\r\n        title={\"Як зрозуміти, в якому корпусі буде проходити пара?\"}\r\n      />\r\n\r\n      <UnfoldableCard\r\n        bodyComponent={\r\n          <AppText style={UCStyles.unfoldableCardText}>\r\n            Для швидкого скасування всіх змін, що ви внесли в редакторі, видаліть та повторно встановіть застосунок.\r\n            Якщо це веб-версія, то видаліть дані сайту та оновіть сторінку.\r\n          </AppText>\r\n        }\r\n        title={\"Як анулювати всі зміни, які я зробив у редакторі розкладу?\"}\r\n      />\r\n\r\n      <UnfoldableCard\r\n        bodyComponent={\r\n          <AppText style={UCStyles.unfoldableCardText}>\r\n            Спробуйте поміняти розклад на суміжній, наприклад: КСГ-33 на КСГ-33_2\r\n          </AppText>\r\n        }\r\n        title={\"Багато невідповідностей в розкладі, що робити?\"}\r\n      />\r\n\r\n      <UnfoldableCard\r\n        bodyComponent={\r\n          <AppText style={UCStyles.unfoldableCardText}>\r\n            🙀. Напишіть про це нам на\r\n            <AppText\r\n              onPress={() => {\r\n                Linking.openURL(\"mailto:schedule.uad@gmail.com\")\r\n              }}\r\n            >\r\n              {\" \"}\r\n              schedule.uad@gmail.com\r\n            </AppText>{\" \"}\r\n            . А доки ми це фіксим, можна скористатись редактором й вписати туди правильний ПІБ.\r\n          </AppText>\r\n        }\r\n        title={\"Я помітив, що в розкладі зазначений не той викладач.\"}\r\n      />\r\n\r\n      <UnfoldableCard\r\n        bodyComponent={\r\n          <AppText style={UCStyles.unfoldableCardText}>\r\n            Усі розклади беруться зі сайту Академії й автоматично перетворюються в формат, сумісний зі застосунком. Таке\r\n            перетворення не завжди проходить правильно 🫠... тож для цього (й не тільки) було створено редактор, де\r\n            розклад можна підправити.\r\n          </AppText>\r\n        }\r\n        title={\"Звідки беруться розклади?\"}\r\n      />\r\n\r\n      <UnfoldableCard\r\n        bodyComponent={\r\n          <AppText style={UCStyles.unfoldableCardText}>\r\n            Переконайтесь, що в налаштуваннях застосунку у вас: {\"\\n\"}- Увімкнений перемикач «нагадувати про початок\r\n            пари» {\"\\n\"}- Налаштований необхідний час, за який вас застосунок має заздалегідь сповіщати про початок\r\n            пари. {\"\\n\\n\"}\r\n            Якщо все так, проте сповіщення все одно не приходять, перевірте налаштування телефону, а саме чи наданий\r\n            дозвіл на сповіщення застосунку «Розклад УАД».{\"\\n\\n\"}\r\n            Якщо і ця порада вам не допомогла, напишіть нам на schedule.uad@gmail.com\r\n          </AppText>\r\n        }\r\n        title={\"Що робити, якщо мені не приходять сповіщення про початок пар?\"}\r\n      />\r\n\r\n      <UnfoldableCard\r\n        bodyComponent={\r\n          <AppText style={UCStyles.unfoldableCardText}>\r\n            Якщо коротко: ще не знаєм.{\"\\n\\n\"}Зі iOS версією маємо наступні складнощі: публікація в App Store коштує\r\n            $100 на рік й потребує незначної адаптації застосунку (потрібен окремий іOS розробник).{\"\\n\\n\"}\r\n            Альтернативою iOS версії є веб версія:{\" \"}\r\n            <AppText\r\n              onPress={() => {\r\n                Linking.openURL(LINK_TO_WEB_VERSION)\r\n              }}\r\n            >\r\n              {\" \"}\r\n              {`${WEB_VERSION_NAME}`}\r\n            </AppText>\r\n          </AppText>\r\n        }\r\n        title={\"Чи є/буде версія для iOS?\"}\r\n      />\r\n    </ScrollView>\r\n  )\r\n}\r\n","import { init, trackEvent } from \"@aptabase/web\"\r\nimport { AptabaseAppKey } from \"../../constants/Keys\"\r\n\r\ninit(AptabaseAppKey)\r\n\r\nexport class AnalyticsService {\r\n  static async trackEvent(eventName: string, props?: Record<string, string | number | boolean>) {\r\n    return trackEvent(eventName, props)\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport { FallbackProps } from \"react-error-boundary\"\r\nimport { Text } from \"react-native\"\r\nimport { ScrollView } from \"react-native-gesture-handler\"\r\n\r\nexport function showErrorView({ error, resetErrorBoundary }: FallbackProps) {\r\n  const e = error\r\n  return (\r\n    <ScrollView>\r\n      <Text style={{ color: \"red\" }}>\r\n        Something went wrong. Something went wrong. Something went wrong. Something went wrong. Something went wrong.\r\n        Something went wrong.\r\n      </Text>\r\n      <Text style={{ color: \"red\" }}>\r\n        Something went wrong. Something went wrong. Something went wrong. Something went wrong. Something went wrong.\r\n        Something went wrong.\r\n      </Text>\r\n      <Text style={{ color: \"red\" }}>\r\n        Something went wrong. Something went wrong. Something went wrong. Something went wrong. Something went wrong.\r\n        Something went wrong.\r\n      </Text>\r\n      <Text>\r\n        {JSON.stringify(e.message, null, 4)}\r\n        {JSON.stringify(e.stack, null, 4)}\r\n      </Text>\r\n    </ScrollView>\r\n  )\r\n}\r\n","import { StyleSheet } from \"react-native\"\r\nimport { isLandscapeWeb } from \"../utilities/utilities\"\r\n\r\n// const drawerMenuWidthPx = 320\r\nconst landscapeWebStyles = StyleSheet.create({\r\n  root: {\r\n    width: \"50%\",\r\n    minWidth: \"50%\",\r\n    maxWidth: \"50%\",\r\n\r\n    maxHeight: \"100%\",\r\n\r\n    flexGrow: 1,\r\n    marginLeft: \"33%\", // free space divided by two and + drawerMenuWidthPx in % * 0.5\r\n    // TODO: unhardcode the percentage\r\n  },\r\n})\r\nconst nativeStyles = StyleSheet.create({\r\n  root: {\r\n    width: \"100%\",\r\n    flex: 1,\r\n  },\r\n})\r\nexport const AppStyles = isLandscapeWeb() ? landscapeWebStyles : nativeStyles\r\n","// EXTERNAL DEPENDENCIES\n\nimport * as SplashScreen from \"expo-splash-screen\"\nconsole.log(\"[IMPORTS 1] Imported SplashScreen\")\n// Keep the splash screen visible while we fetch resources\nSplashScreen.preventAutoHideAsync()\n\nimport \"react-native-gesture-handler\"\nimport { View } from \"react-native\"\nimport React, { useEffect, useState } from \"react\"\n\nimport { NavigationContainer } from \"@react-navigation/native\"\n\nimport { useFonts } from \"expo-font\"\nimport * as Font from \"expo-font\"\n\nimport { Entypo, FontAwesome, Ionicons, Octicons } from \"@expo/vector-icons\"\n\nimport { ErrorBoundary } from \"react-error-boundary\"\n\nimport \"react-native-url-polyfill/auto\"\n\nconsole.log(\"[IMPORTS] Imported all external dependencies\")\n\n// OWN MODULES\n\nimport DrawerMenu from \"./components/DrawerMenuComponent/DrawerMenu\"\nimport { DrawerRoutes } from \"./routes/DrawerRoutes\"\n\nimport { Drawer } from \"./routes/globalDrawer\"\nimport Header from \"./components/Header\"\n\n// screens\n\nimport ScheduleScreen from \"./screens/ScheduleScreen/ScheduleScreen\"\nimport ReglamentScreen from \"./screens/ReglamentScreen/ReglamentScreen\"\nimport TeachersScreen from \"./screens/TeachersScreen\"\nimport EditorStack from \"./routes/EditorStack\"\nimport ContactsStack from \"./routes/ContactsStack\"\nimport NewsScreen from \"./screens/NewsScreen/NewsScreen\"\nimport TestTabs from \"./routes/testTabs\"\nimport SettingsScreen from \"./screens/SettingsScreen/SettingsScreen\"\nimport AboutScreen from \"./screens/AboutScreen\"\nimport QnAScreen from \"./screens/QnAScreen\"\n\nimport { isRunningInBrowser } from \"./utilities/utilities\"\nimport { GetAllAppFonts } from \"./constants/Fonts\"\nimport { AnalyticsService } from \"./services/AnalyticsService/AnalyticsService\"\nimport { showErrorView } from \"./components/shared/FailureView\"\nimport { AppStyles } from \"./styles/AppStyles\"\n;(\"use client\")\n\nconsole.log(\"[IMPORTS] Imported all internal dependencies\")\n\nexport default function App() {\n  try {\n    console.log(\"Settings up App component\")\n\n    const [appIsReady, setAppIsReady] = useState(false)\n    const [fontsLoaded] = useFonts(GetAllAppFonts())\n\n    // preload icons to prevent text flicker effect on navigating to another page\n    if (isRunningInBrowser()) {\n      Font.loadAsync(FontAwesome.font)\n      Font.loadAsync(Entypo.font)\n      Font.loadAsync(Ionicons.font)\n      Font.loadAsync(Octicons.font)\n    }\n\n    useEffect(() => {\n      if (fontsLoaded) {\n        SplashScreen.hideAsync().then(() => setAppIsReady(true))\n      }\n    }, [fontsLoaded])\n\n    if (!appIsReady) {\n      return null\n    }\n\n    AnalyticsService.trackEvent(\"app\", { event: \"app started\" })\n\n    const markdown = (\n      <ErrorBoundary fallbackRender={showErrorView}>\n        <NavigationContainer>\n          <View style={AppStyles.root}>\n            <Drawer.Navigator\n              screenOptions={{\n                header: (props) => <Header navigation={props.navigation} title={props.route.name as DrawerRoutes} />,\n              }}\n              drawerContent={(props) => <DrawerMenu {...props} />}\n            >\n              <Drawer.Screen\n                name={DrawerRoutes.VIEWER}\n                component={ScheduleScreen}\n                options={{\n                  header: (props) => <View />,\n                }}\n              />\n\n              <Drawer.Screen name={DrawerRoutes.REGLAMENT} component={ReglamentScreen} />\n\n              <Drawer.Screen name={DrawerRoutes.TEACHERS} component={TeachersScreen} />\n\n              <Drawer.Screen name={DrawerRoutes.CONTACTS} component={ContactsStack} />\n\n              <Drawer.Screen name={DrawerRoutes.NEWS} component={NewsScreen} />\n\n              <Drawer.Screen name={DrawerRoutes.QnA} component={QnAScreen} />\n\n              <Drawer.Screen\n                name={DrawerRoutes.EDITOR}\n                options={{\n                  header: (props) => <View />,\n                }}\n                component={EditorStack}\n              />\n\n              <Drawer.Screen\n                name={DrawerRoutes.TESTS}\n                component={TestTabs}\n                options={{\n                  header: (props) => <View />,\n                }}\n              />\n\n              <Drawer.Screen name={DrawerRoutes.SETTINGS} component={SettingsScreen} />\n\n              <Drawer.Screen name={DrawerRoutes.ABOUT} component={AboutScreen} />\n            </Drawer.Navigator>\n          </View>\n        </NavigationContainer>\n      </ErrorBoundary>\n    )\n\n    return markdown\n  } catch (e) {\n    console.log(e)\n    return showErrorView(e)\n  }\n}\n","console.log(\"Parsing index.ts\")\n\nimport { registerRootComponent } from \"expo\"\n\nimport App from \"./App\"\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App)\n","var map = {\n\t\"./af\": 17582,\n\t\"./af.js\": 17582,\n\t\"./ar\": 93042,\n\t\"./ar-dz\": 54265,\n\t\"./ar-dz.js\": 54265,\n\t\"./ar-kw\": 92553,\n\t\"./ar-kw.js\": 92553,\n\t\"./ar-ly\": 85352,\n\t\"./ar-ly.js\": 85352,\n\t\"./ar-ma\": 67097,\n\t\"./ar-ma.js\": 67097,\n\t\"./ar-ps\": 76150,\n\t\"./ar-ps.js\": 76150,\n\t\"./ar-sa\": 84427,\n\t\"./ar-sa.js\": 84427,\n\t\"./ar-tn\": 7221,\n\t\"./ar-tn.js\": 7221,\n\t\"./ar.js\": 93042,\n\t\"./az\": 60458,\n\t\"./az.js\": 60458,\n\t\"./be\": 17596,\n\t\"./be.js\": 17596,\n\t\"./bg\": 93830,\n\t\"./bg.js\": 93830,\n\t\"./bm\": 27044,\n\t\"./bm.js\": 27044,\n\t\"./bn\": 58573,\n\t\"./bn-bd\": 13296,\n\t\"./bn-bd.js\": 13296,\n\t\"./bn.js\": 58573,\n\t\"./bo\": 25614,\n\t\"./bo.js\": 25614,\n\t\"./br\": 62041,\n\t\"./br.js\": 62041,\n\t\"./bs\": 91786,\n\t\"./bs.js\": 91786,\n\t\"./ca\": 75833,\n\t\"./ca.js\": 75833,\n\t\"./cs\": 52711,\n\t\"./cs.js\": 52711,\n\t\"./cv\": 71036,\n\t\"./cv.js\": 71036,\n\t\"./cy\": 84977,\n\t\"./cy.js\": 84977,\n\t\"./da\": 8770,\n\t\"./da.js\": 8770,\n\t\"./de\": 67342,\n\t\"./de-at\": 81566,\n\t\"./de-at.js\": 81566,\n\t\"./de-ch\": 87544,\n\t\"./de-ch.js\": 87544,\n\t\"./de.js\": 67342,\n\t\"./dv\": 82875,\n\t\"./dv.js\": 82875,\n\t\"./el\": 78536,\n\t\"./el.js\": 78536,\n\t\"./en-au\": 38617,\n\t\"./en-au.js\": 38617,\n\t\"./en-ca\": 79227,\n\t\"./en-ca.js\": 79227,\n\t\"./en-gb\": 59754,\n\t\"./en-gb.js\": 59754,\n\t\"./en-ie\": 37217,\n\t\"./en-ie.js\": 37217,\n\t\"./en-il\": 85418,\n\t\"./en-il.js\": 85418,\n\t\"./en-in\": 80800,\n\t\"./en-in.js\": 80800,\n\t\"./en-nz\": 67299,\n\t\"./en-nz.js\": 67299,\n\t\"./en-sg\": 76305,\n\t\"./en-sg.js\": 76305,\n\t\"./eo\": 8673,\n\t\"./eo.js\": 8673,\n\t\"./es\": 71301,\n\t\"./es-do\": 3187,\n\t\"./es-do.js\": 3187,\n\t\"./es-mx\": 48223,\n\t\"./es-mx.js\": 48223,\n\t\"./es-us\": 37634,\n\t\"./es-us.js\": 37634,\n\t\"./es.js\": 71301,\n\t\"./et\": 4976,\n\t\"./et.js\": 4976,\n\t\"./eu\": 11847,\n\t\"./eu.js\": 11847,\n\t\"./fa\": 74372,\n\t\"./fa.js\": 74372,\n\t\"./fi\": 41628,\n\t\"./fi.js\": 41628,\n\t\"./fil\": 56802,\n\t\"./fil.js\": 56802,\n\t\"./fo\": 42874,\n\t\"./fo.js\": 42874,\n\t\"./fr\": 9853,\n\t\"./fr-ca\": 87170,\n\t\"./fr-ca.js\": 87170,\n\t\"./fr-ch\": 22825,\n\t\"./fr-ch.js\": 22825,\n\t\"./fr.js\": 9853,\n\t\"./fy\": 68876,\n\t\"./fy.js\": 68876,\n\t\"./ga\": 93533,\n\t\"./ga.js\": 93533,\n\t\"./gd\": 82770,\n\t\"./gd.js\": 82770,\n\t\"./gl\": 98602,\n\t\"./gl.js\": 98602,\n\t\"./gom-deva\": 63059,\n\t\"./gom-deva.js\": 63059,\n\t\"./gom-latn\": 48212,\n\t\"./gom-latn.js\": 48212,\n\t\"./gu\": 23409,\n\t\"./gu.js\": 23409,\n\t\"./he\": 17210,\n\t\"./he.js\": 17210,\n\t\"./hi\": 4750,\n\t\"./hi.js\": 4750,\n\t\"./hr\": 51315,\n\t\"./hr.js\": 51315,\n\t\"./hu\": 47626,\n\t\"./hu.js\": 47626,\n\t\"./hy-am\": 91317,\n\t\"./hy-am.js\": 91317,\n\t\"./id\": 26892,\n\t\"./id.js\": 26892,\n\t\"./is\": 97577,\n\t\"./is.js\": 97577,\n\t\"./it\": 57628,\n\t\"./it-ch\": 3046,\n\t\"./it-ch.js\": 3046,\n\t\"./it.js\": 57628,\n\t\"./ja\": 92504,\n\t\"./ja.js\": 92504,\n\t\"./jv\": 25917,\n\t\"./jv.js\": 25917,\n\t\"./ka\": 64513,\n\t\"./ka.js\": 64513,\n\t\"./kk\": 94935,\n\t\"./kk.js\": 94935,\n\t\"./km\": 96661,\n\t\"./km.js\": 96661,\n\t\"./kn\": 89964,\n\t\"./kn.js\": 89964,\n\t\"./ko\": 98067,\n\t\"./ko.js\": 98067,\n\t\"./ku\": 61165,\n\t\"./ku-kmr\": 85158,\n\t\"./ku-kmr.js\": 85158,\n\t\"./ku.js\": 61165,\n\t\"./ky\": 11177,\n\t\"./ky.js\": 11177,\n\t\"./lb\": 2967,\n\t\"./lb.js\": 2967,\n\t\"./lo\": 81972,\n\t\"./lo.js\": 81972,\n\t\"./lt\": 58469,\n\t\"./lt.js\": 58469,\n\t\"./lv\": 33155,\n\t\"./lv.js\": 33155,\n\t\"./me\": 87935,\n\t\"./me.js\": 87935,\n\t\"./mi\": 74483,\n\t\"./mi.js\": 74483,\n\t\"./mk\": 32501,\n\t\"./mk.js\": 32501,\n\t\"./ml\": 73120,\n\t\"./ml.js\": 73120,\n\t\"./mn\": 20266,\n\t\"./mn.js\": 20266,\n\t\"./mr\": 19406,\n\t\"./mr.js\": 19406,\n\t\"./ms\": 80109,\n\t\"./ms-my\": 90864,\n\t\"./ms-my.js\": 90864,\n\t\"./ms.js\": 80109,\n\t\"./mt\": 22904,\n\t\"./mt.js\": 22904,\n\t\"./my\": 44067,\n\t\"./my.js\": 44067,\n\t\"./nb\": 21301,\n\t\"./nb.js\": 21301,\n\t\"./ne\": 81152,\n\t\"./ne.js\": 81152,\n\t\"./nl\": 76735,\n\t\"./nl-be\": 97761,\n\t\"./nl-be.js\": 97761,\n\t\"./nl.js\": 76735,\n\t\"./nn\": 37569,\n\t\"./nn.js\": 37569,\n\t\"./oc-lnc\": 20833,\n\t\"./oc-lnc.js\": 20833,\n\t\"./pa-in\": 3044,\n\t\"./pa-in.js\": 3044,\n\t\"./pl\": 34249,\n\t\"./pl.js\": 34249,\n\t\"./pt\": 87585,\n\t\"./pt-br\": 26826,\n\t\"./pt-br.js\": 26826,\n\t\"./pt.js\": 87585,\n\t\"./ro\": 62526,\n\t\"./ro.js\": 62526,\n\t\"./ru\": 62204,\n\t\"./ru.js\": 62204,\n\t\"./sd\": 43270,\n\t\"./sd.js\": 43270,\n\t\"./se\": 61541,\n\t\"./se.js\": 61541,\n\t\"./si\": 71921,\n\t\"./si.js\": 71921,\n\t\"./sk\": 49935,\n\t\"./sk.js\": 49935,\n\t\"./sl\": 46254,\n\t\"./sl.js\": 46254,\n\t\"./sq\": 59897,\n\t\"./sq.js\": 59897,\n\t\"./sr\": 42496,\n\t\"./sr-cyrl\": 11135,\n\t\"./sr-cyrl.js\": 11135,\n\t\"./sr.js\": 42496,\n\t\"./ss\": 32215,\n\t\"./ss.js\": 32215,\n\t\"./sv\": 84716,\n\t\"./sv.js\": 84716,\n\t\"./sw\": 50803,\n\t\"./sw.js\": 50803,\n\t\"./ta\": 31538,\n\t\"./ta.js\": 31538,\n\t\"./te\": 2302,\n\t\"./te.js\": 2302,\n\t\"./tet\": 25280,\n\t\"./tet.js\": 25280,\n\t\"./tg\": 14100,\n\t\"./tg.js\": 14100,\n\t\"./th\": 95385,\n\t\"./th.js\": 95385,\n\t\"./tk\": 736,\n\t\"./tk.js\": 736,\n\t\"./tl-ph\": 79726,\n\t\"./tl-ph.js\": 79726,\n\t\"./tlh\": 41873,\n\t\"./tlh.js\": 41873,\n\t\"./tr\": 36463,\n\t\"./tr.js\": 36463,\n\t\"./tzl\": 27491,\n\t\"./tzl.js\": 27491,\n\t\"./tzm\": 29500,\n\t\"./tzm-latn\": 80196,\n\t\"./tzm-latn.js\": 80196,\n\t\"./tzm.js\": 29500,\n\t\"./ug-cn\": 91287,\n\t\"./ug-cn.js\": 91287,\n\t\"./uk\": 35341,\n\t\"./uk.js\": 35341,\n\t\"./ur\": 36246,\n\t\"./ur.js\": 36246,\n\t\"./uz\": 55550,\n\t\"./uz-latn\": 77254,\n\t\"./uz-latn.js\": 77254,\n\t\"./uz.js\": 55550,\n\t\"./vi\": 78796,\n\t\"./vi.js\": 78796,\n\t\"./x-pseudo\": 22736,\n\t\"./x-pseudo.js\": 22736,\n\t\"./yo\": 28621,\n\t\"./yo.js\": 28621,\n\t\"./zh-cn\": 67601,\n\t\"./zh-cn.js\": 67601,\n\t\"./zh-hk\": 39053,\n\t\"./zh-hk.js\": 39053,\n\t\"./zh-mo\": 71248,\n\t\"./zh-mo.js\": 71248,\n\t\"./zh-tw\": 74725,\n\t\"./zh-tw.js\": 74725\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 35358;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [793], () => (__webpack_require__(61461)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["ContentfulSpace","ContentfulContentDeliveryAccessToken","STORAGE_KEY","REGLAMENT_DATA","MAX_CLASSES_PER_DAY","NOTIFICATIONS_CHANNEL_ID","WEB_VERSION_NAME","LINK_TO_WEB_VERSION","GetTimeDifference","earlier","later","momentA","moment","momentB","hourDifference","diff","minuteDifference","hours","minutes","seconds","determineInterval","timepoint","arguments","length","undefined","Date","interval","forEach","class_","value","start","hourAndMinuteStart","hourStart","split","minuteStart","hourAndMinuteEnd","hourEnd","minuteEnd","now","getFullYear","getMonth","getDate","parseInt","getContentfulClient","createClient","space","environment","accessToken","ensureExtension","filename","extension","endsWith","ensureNoExtension","slice","ensureEnding","text","ending","isMail","includes","isLandscapeWeb","window","innerWidth","innerHeight","_ref","_asyncToGenerator","pathToJSONFile","fileName","filePath","FileSystem","documentDirectory","fileContents","readAsStringAsync","JSON","parse","e","FontName","palette","background","backgroundLight","textOnBackground","navigationBackground","numbers","grayedOut","grayishBlue","ongoingClass","globalStyles","StyleSheet","create","container","padding","scrollView","marginBottom","screen","flex","backgroundColor","centered","justifyContent","alignItems","fontFamily","CinzelRegular","fontSize","paragraph","marginVertical","lineHeight","sectionHeader","marginLeft","input","borderWidth","borderColor","borderRadius","errorText","color","fontWeight","marginTop","textAlign","navIcon","paddingHorizontal","paddingRight","separator","height","width","noDisplay","display","margin","zIndex","invisible","opacity","row","flexDirection","grayIcon","card","paddingVertical","elevation","shadowOffset","shadowColor","shadowOpacity","shadowRadius","link","underlinedLink","textDecorationLine","captionWithIcon","navigationButton","modalContentContainer","position","top","marginHorizontal","searchBar","Montserrat500","horizontalCenteredFlex","previewImagesFull","require","schedule","reglamentPreview","editorPreview","settingsPreview","images","uad_logo_text_not_vector","uad_logo_text_not_vector_hires","teamMemberImages","senchyk_andrii","zakharova_zarina","shepita_julia","ivanov_mykhailo","editorImages","lightbulb","drawerMenuImages","uad_logo_white_outline","imageIcons","museum","tiktok","warning_triangle","DrawerRoutes","EXAMPLE_NEWS","title","body","createdAt","NewsLoaderService","_createClass","_classCallCheck","_newsCached","key","_init","apply","_getNewsFromContentful","this","news","fetchContentfulEntries","items","map","entry","fields","sys","sort","a","b","getTime","_fetchContentfulEntries","client","getEntries","content_type","_getNewestArticleDate","getNewsFromContentful","_GetInstance","instance","init","_defineProperty","VIEWER","_jsx","Ionicons","name","size","REGLAMENT","TEACHERS","FontAwesome5","CONTACTS","NEWS","QnA","FontAwesome","TESTS","EDITOR","SETTINGS","ABOUT","YellowCircle","_ref$filled","filled","View","style","alignSelf","styles","pageLinkContainer","pageLink","CenturyGothic","drawerContainer","paddingTop","paddingBottom","drawerContainerBottom","activePageLink","drawerContainerHeader","borderBottomColor","borderBottomWidth","ASYNC_STORAGE_KEY_NEWS_CHECKED_DATE","shouldDisplayYellowCircle","RouteButtonFactory","currentRoute","routeNameToIconRef","_ref2","route","index","navigation","useNavigation","routeName","isCurrentRoute","isNewsRoute","yellowCircle","TouchableOpacity","onPress","screenName","AsyncStorage","setItem","toString","navigate","children","_jsxs","_objectSpread","current","Text","DrawerMenu","useRef","RouteIcons","routesContainer","useNavigationState","state","routes","isRunningInExpoGo_","constants","executionEnvironment","ExecutionEnvironment","StoreClient","breakpoint","topRoutes","bottomRoutes","_","RouteButton","Image","marginRight","source","ActivityIndicator","GetInstance","then","newestArticleDate","getNewestArticleDate","lastSeenArticle","getItem","lastSeenArticleDate","_x","Drawer","createDrawerNavigator","getRouteIcon","headerText","RouteIconConstructor","type","RouteIcon","props","MaterialIcons","openDrawer","BaseHeader","icon","headerContentContainer","GlobalHeader","headerContentElement","headerContent","SafeAreaView","header","WeekType","SEMESTER_START","SEMESTER_START_TYPE","Denominator","GetWeekType","timeDifferenceInDays","Math","trunc","Nominator","getStrict","array","Error","workDays","workDaysEn","workDaysEnLower","day","toLowerCase","CLASS_TYPE","CLASS_TYPE_SHORT","LECTURE","PRACTICE","LAB","ScheduleClass","data","_data$isBiweekly","_data$classType","weekName","isBiweekly","teacher","room","isSharedClass","classType","setWeek","week","getDay","isInCurrentTimeSlot","isMatchingWeekType","sampleName","sampleRoom","sampleTeacher","DisplayEmptyDaysMode","DisplayTeacherMode","SettingsContext","React","AppText","android_hyphenationFrequency","appText","ScheduleText","MontserratMedium","letterSpacing","WeekTypeContext","classContainer","startAndEndTimesContainer","MontserratRegular","classStartText","classEndText","classNameText","flexGrow","teacherNameText","roomNumberText","classTypeAndRoomNumberContainer","roomNumberContainer","classAndTeacherBlock","flexBasis","TEACHER_NOT_FOUND_STRING","TeacherModel","teachers","teachersJson","teachersFuse","Fuse","keys","threshold","surname","match","search","item","getTeacherBySurname","teacherFullNameBits","patronymic","formatRoomName","scheduleClassInstance","unfoldClassText","join","replace","formatTeacherName","isEditable","settings","teacherTable","teacherSurname","surnameIsNull","surnameIsArray","isArray","_formatTeacherString","sn","getSurnameAndInitialsBySurname","displayTeacherNameMode","Full","displayTeacherName","getFullNameBySurname","SurnameAndInitials","ScheduleClassComponent","idx","displayRoomNumber","_ref$isEditable","_ref$highlightAsOngoi","highlightAsOngoing","_React$useState","_React$useState2","_slicedToArray","setState","isCurrentClassRef","isCurrent","_React$useState3","_React$useState4","setUnfoldClassText","_React$useState5","_React$useState6","unfoldTeacherText","setUnfoldTeacherText","useContext","selectedWeekType","_useState","useState","_useState2","isOngoingClass","setIsOngoingClass","className","shouldDisplayTeacher","Hide","_useState3","_useState4","isReady","setIsReady","useEffect","rerenderInterval","setInterval","isCurrentClass","clearInterval","reglamentClass","classStart","classEnd","testID","onLongPress","Clipboard","setStringAsync","ellipsizeMode","numberOfLines","Separator","upperElement","lowerElement","_ref$width","localStyles","UnderlayRightSide","onDeleteButtonPress","close","useSwipeableItemParams","underlayLeft","EditedSchedulesStorageService","_this","results","ScheduleLoaderService","scheduleFiles","scheduleFile","isOutdated","removeEditedSchedule","Promise","all","_createVersionForEdits","saveEditedSchedule","_x2","_saveEditedSchedule","scheduleLoader","jsonToDump","metadata","getScheduleFileMetadata","getScheduleFileByFileName","scheduleDays","stringify","_x3","_loadEditedSchedule","scheduleFileName","scheduleWithMetadata","_x4","_isOutdated","contentfulScheduleFile","editVer","loadEditedSchedule","editVerMetadata","contentfulVerMetadata","_x5","scheduleName","removeItem","_hasEditedVersion","_x6","_ScheduleLoaderServic","_callSuper","_inherits","getSchedulesFromContentful","replaceContentfulSchedulesWithEditedVersions","sf","_replaceContentfulSchedulesWithEditedVersions","editedSchedulesStorage","editedCounterpartsPromises","editedSchedule","json_parsed","editedCounterparts","_dumpSchedule","editedScheduleStorage","resolve","ScheduleLoaderServiceBase","pathToScheduleFolder","getInfoAsync","exists","getSchedulesFromFileSystem","checkForUpdatesAsync","getExampleSchedules","makeDirectoryAsync","intermediates","_getSchedulesFromFileSystem","allScheduleFileNames","readDirectoryAsync","file","json","revision","updatedAt","_getSchedulesFromContentful","_this2","assets","getAssets","limit","scheduleClassesJson","linkToFile","url","res","fetch","blob","ExampleScheduleKN","ExampleScheduleIST","ExampleScheduleTE","find","_checkForUpdatesAsync","_this3","netInfo","NetInfo","isConnected","isInternetReachable","scheduleFileMetadatas","_ref3","updatedScheduleFiles","_ref4","sfm","oldSchedule","linkToDestFile","downloadAsync","writeAsStringAsync","LocalNotificationsService","exampleNotificationContent","subtitle","someData","notificationChannelId","identifier","Notifications","handleNotification","_handleNotification","shouldShowAlert","priority","MAX","shouldPlaySound","shouldSetBadge","registerNotificationsChannel","_registerNotificationsChannel","_sendNotification","content","message","trigger","channelId","catch","_scheduleNotification","nextTriggerDate","date","_sendExampleNotification","sendNotification","_scheduleExampleNotificationViaDate","secondsFromNow","scheduleNotification","_scheduleRepeatableExampleNotification","repeats","_scheduleRepeatableDailyExampleNotification","hour","minute","Event","SettingsService","displayEmptyDays","Display","currentScheduleName","notifyBeforeClass","notifyBeforeClassOffsetMinutes","SettingsEventEmitter","EventEmitter","fetchedSettings","readFromStorage","Object","entries","settingsObject","_saveToStorage","constructSettingsObjectFromProperties","jsonValue","emit","SETTINGS_UPDATED","_readFromStorage","_openAndroidSystemSettingsForNotifications","pkg","Constants","expoConfig","android","package","IntentLauncher","startActivityAsync","extra","ClassNotificationBuilder","notificationsService","negativeOffsetInMins","teachersTable","signature","getUniqueStringSignature","hourAndMinute","scheduleDay","monthDay","notificationDate","distance","setDate","setDayOnDate","dayNames","indexOf","twoWeeksInSeconds","offset","sequenceSize","spacingInSeconds","sequence","next","push","createEvenlySpacedTimeSequence","SEMESTER_MONTHS","notifDate","teacherName","hourPadded","minutePadded","weekday","ScheduleNotificationsService","_LocalNotificationsSe","_len","args","Array","_key","concat","onConfigureNotificationsForScheduleStart","onConfigureNotificationsForScheduleEnd","_configureNotificationsForSchedule","_this$onConfigureNoti","_this$onConfigureNoti2","call","EditorStackRoutes","NoClassesText","SDstyles","noClassesText","Montserrat600","fadedDayContainerView","dayNameHeader","scheduleDayCard","ScheduleDayComponent","classesCollection","scheduleObject","dayName","_ref$weekType","weekType","fade","configureNotificationsCallback","useCallback","updatedSchedule","configureNotificationsForSchedule","classes","setClasses","dayNameEnRef","d","mapUkrWorkDayToEnWorkDay","saveEditedClasses","classesWithoutPlaceholders","filter","isSampleClass","thisDay","biweeklyClassesOfOtherWeek","_toConsumableArray","dumpSchedule","addPlaceholders","extendedContainer","fill","GetPlaceholder","placeholderClasses","sortedClasses","ListComponent","DraggableFlatList","FlatList","Darken","keyExtractor","onDragEnd","ListEmptyComponent","scrollEnabled","nestedScrollEnabled","ItemSeparatorComponent","renderItem","drag","isActive","scheduleClassComponent","editableScheduleClassWrapper","SwipeableItem","renderUnderlayLeft","filteredClasses","filteredClassesWithPlaceholders","onDeleteButtonPressed","snapPointsLeft","snapPointsRight","activationThreshold","SCHEDULE_CLASS_FORM","scheduleClass","currentlyViewedWeek","onFormDataUpdated","values","updatedClasses","t","trim","r","ScheduleDay","currentWeekType","otherWeek","matchingClass","ScheduleModel","specialtyName","year","weekendDays","dayClasses","objectName","_getScheduleFromScheduleLoader","startsWith","setSchedule","_getScheduleFromEditedSchedulesStorage","editedScheduleService","dayIndex","todayClasses","currentClass","modal","horizontalFlex","searchBarContainer","overlay","left","option","selectedOption","MontserratBold","closeButton","closeButtonText","checkIcon","right","OptionPickerModal","_ref$hasSearchBar","hasSearchBar","_ref$headerText","_ref$isOpen","isOpen","_ref$displaySeparator","displaySeparators","optionsParam","options","selectedOptionParam","onCloseModalCallback","onCloseModal","onSelected","optionIcon","_ref$isOptionSelectab","isOptionSelectable","windowHeight","useWindowDimensions","searchQuery","setSearchQuery","filteredOptions","FilterOptions","setSelectedOption","closeModal","Modal","animationType","transparent","visible","TextInput","onChangeText","placeholder","ScrollView","Pressable","page","pageTitle","imageContainer","overflow","previewImage","objectFit","objectPosition","centeredDescriptionText","pageDescriptionText","documentHeight","swiperWidth","carouselContainer","viewPager","paginationCircles","circle","circleActive","pageBody","pagerNavigation","maxHeight","halfImageContainer","flexShrink","backButton","forwardButton","selectScheduleText","InroductoryCarouselScreen","onClose","currentPage","setCurrentPage","swiperRef","setIsVisible","_useState5","_useState6","schedulePickerModalVisible","setSchedulePickerModalVisible","_useState7","_useState8","schedulePickerData","setSchedulePickerData","f","slideTo","lastPageIndex","i","Swiper","initialSlide","onSwiper","swiper","onSlideChange","activeIndex","SwiperSlide","src","accessibilityLabel","selected","saveToStorage","newCurrentPage","setStatusBarHidden","baseStyles","scheduleHeaderStyles","backroundImage","sideMenuIcon","currentlyViewedDay","weekTypeText","weekTextContainer","selectedContainer","selectedText","ScheduleHeader","onWeekTypeChanged","navigation_","setWeekType","weekTypeInUkrainian","useRoute","EditActionsExplanatoryCard","paddingLeft","DateOverviewCard","currentDayString","toLocaleDateString","currentDayDate","month","currentWorkWeekInterval","currentDate","currentDayOfWeek","currentMonth","currentYear","mondayDate","fridayDate","upperRowText","lowerRowText","verticalSeparator","rootContainer","modalToggle","modalClose","modalContent","placeholderView","cardContainer","scheduleDaySelector","IS_FIRST_TIME_LAUNCH_KEY","ScheduleScreen","closeDrawer","todayIndex","ldash","isFirstTimeLaunch","setIsFirstTimeLaunch","scheduleRef","scheduleFileRef","settingsServiceRef","scrollViewContainerRef","scheduleLoaded","setScheduleLoaded","setScheduleName","_useState9","_useState10","dataSourceCords","setDataSourceCords","scheduleNameRef","onSettingsUpdated","settingsService","_ldash$cloneDeep","newSchedule","getScheduleFromScheduleLoader","notifService","_onMount","scheduleLoaderInstance","firstScheduleFile","nameOfScheduleToLoad","on","onMount","removeListener","useFocusEffect","currentScheduleFile","_ldash$cloneDeep2","IntroductoryCarousel","Provider","contentContainerStyle","ref","isEmpty","getNominatorClasses","getDenominatorClasses","shouldDisplayEmptyDay","onLayout","event","layout","nativeEvent","y","scrolledToToday","scrollTo","x","animated","animating","reglamentClassIndex","reglamentContainer","timePointTextContainer","timePointText","indexTextContainer","indexText","MontserratSemiBold","timePointDate","timeDataCard","currentClassIndexText","reglamentClassContainer","borderRightWidth","head","headText","ReglamentClass","classData","getReglamentClass","classStartTime","classEndTime","currentTimeInterval","wasCurrent","ReglamentScreen","TeachersScreen","filteredTeachers","userSelect","teacherCard","teacherDataText","selectable","Кваліфікаця","Linking","openURL","StackHeader","_ref$useSafeAreaView","useSafeAreaView","_ref$hasBackground","hasBackground","_ref$captionStyles","captionStyles","ViewComponent","headerTitle","goBack","CustomSwitch","onValueChange","_ref$initVal","initVal","_ref$disabled","disabled","otherProps","_objectWithoutProperties","_excluded","isEnabled","setIsEnabled","Switch","switch","trackColor","false","true","thumbColor","activeThumbColor","newValue","previousState","BlueCircle","RadioButtonGroup","onOptionSelected","_ref$selectedOptionIn","selectedOptionIndex","selectedIndex","setIndex","CheckBox","checked","checkedIcon","uncheckedIcon","optionTitle","containerStyle","checkboxContainer","AutoSubmitFormData","_useFormikContext","useFormikContext","initialValues","submitFormCallback","isSubmitting","submitForm","FormTextInput","formField","fieldCaption","captionText","cursorColor","textInputText","underline","noteText","ScheduleClassForm","_scheduleClass$teache","params","dayUkrIndex","findIndex","dayUkr","weekTypeUkr","initialFormikValues","Formik","onSubmit","handleChange","handleBlur","headerTextPrimary","headerTextSecondary","autoCapitalize","code_name","o","autocompleteContainer","ScheduleEditorScreen","Stack","createStackNavigator","EditorStack","Navigator","screenOptions","Screen","component","FacultiesTestScreen","renderFacultyCard","nameAbbreviation","nameFull","address","phone","mail","facultyCard","ContactsStackRoutes","corpsModalItems","corps","rectorateModalItems","isPhone","isLink","preparationDepartmentModalItems","internationalAffairsAndInformationDepartmentModalItems","admissionsCommitteeModalItems","accountingModalItems","contractEducationDepartmentModalItems","studentUnionModalItems","studentCouncilModalItems","linkName","socialMediaModalItems","screenBodyContainer","category","navigateToSubcategoryButton","subcategoryButtonContainer","categoryTitle","subcategoryTitle","optionText","WarningBar","warningTriangleImage","warningText","RalewayMedium","Category","titleIcon","subcategories","itemOnPress","ItemType","itemWithoutOnPress","EntypoIcon","constructModalItem","constructContentPresenterModal","initialOptions","ContactsScreen","corpsModalIsOpen","setCorpsModalIsOpen","rectorateModalIsOpen","setRectorateModalIsOpen","admissionCommitteeModalIsOpen","setAdmissionCommitteeModalIsOpen","_React$useState7","_React$useState8","preparationDepartmentModalIsOpen","setPreparationDepartmentModalIsOpen","_React$useState9","_React$useState10","internationalAffairsAndInformationDepartmentModalIsOpen","setInternationalAffairsAndInformationDepartmentModalIsOpen","_React$useState11","_React$useState12","accountingModalIsOpen","setAccountingModalIsOpen","_React$useState13","_React$useState14","contractEducationModalIsOpen","setContractEducationModalIsOpen","_React$useState15","_React$useState16","studentUnionModalIsOpen","setStudentUnionModalIsOpen","_React$useState17","_React$useState18","studentCouncilModalIsOpen","setStudentCouncilModalIsOpen","_React$useState19","_React$useState20","socialMediaModalIsOpen","setSocialMediaModalIsOpen","Octicons","ContactsStack","CONTACTS_MENU","FACULTIES","newsArticleCard","moreButton","CustomAutolink","rest","markdownLinkRegex","parsedText","inputText","lastIndex","result","linkText","parseMarkdownLinks","part","Autolink","linkStyle","NewsCard","dateObj","maxLength","isBodyExpanded","setIsBodyExpanded","bodyStateAdjustedText","shouldShowLengthControlButton","lengthControlButton","NewsScreen","setNews","fetchedNews","newsLoaderService","getExampleNews","Card","_ref$shadows","shadows","cardContentStyle","noShadow","cardContent","NotificationTestsScreen","ready","setReady","permission","setPermission","setScheduledNotifications","delayForExampleNotificationViaDate","setDelayForExampleNotificationViaDate","notification","setNotification","localNotificationsServiceRef","notificationListener","responseListener","requestConfigurePermissions","response","notifications","registeredNotifications","getAllScheduledNotificationsAsync","permissions","checkPermissionsAsync","status","request","Button","sendExampleNotification","Input","keyboardType","defaultValue","scheduleExampleNotificationViaDate","scheduleRepeatableExampleNotification","scheduleRepeatableDailyExampleNotification","cancelAllScheduledNotificationsAsync","Expander","collapsed","setCollapsed","Collapsible","ScheduledNotificationsScreen","showRegularClasses","setShowRegularClasses","showBiweeklyClasses","setShowBiweeklyClasses","filterQuery","setFilterQuery","scheduledNotifications","filteredScheduledNotifications","n","toUTCString","sortedScheduledNotifications","ToastAndroid","show","SHORT","minHeight","horizontal","onBlur","cancelScheduledNotificationAsync","ContentViewModal","modalChildren","FlatButton","button","FileSystemScreen","fileContentModalVisible","setFileContentModalVisible","selectedFileContent","setSelectedFileContent","currentDir","setCurrentDir","allFiles","setAllFiles","firstFieldText","setFirstFieldText","secondFieldText","setSecondFieldText","contentfulSchedule","setContentfulSchedule","contentfulScheduleAsAsset","setContentfulScheduleAsAsset","contentfulScheduleAsDownloadedAsset","setContentfulScheduleAsDownloadedAsset","_React$useState21","_React$useState22","allContentfulAssets","setAllContentfulAssets","saveToFile","path","initFields","_initFields","lines","getEntry","getAsset","asset","uri","assetNames","deleteAsync","isDirectory","ScheduleEditor","setSampleDay","currentRouteName","getId","firstScheduleFilename","isSlot","setData","random","dataElem","draggable","updatedClass","reorderable","TestEditorStack","ContactsModalTestScreen","ContactsTestStack","DeviceInfoScreen","_useWindowDimensions","aspectRatio","pixelRatio","PixelRatio","get","dpi","Tab","createBottomTabNavigator","TestTabs","headerShown","tabBarStyle","initialRouteName","tabBarIcon","_ref5","_ref6","_ref7","scrollViewContentContainer","loadingIndicatorOverlay","scrollViewDirect","pageBackground","settingValueContainer","categoryHeader","settingsSectionName","Raleway600","settingsCategory","borderTopWidth","centeredTextAndIcon","settingName","Raleway500","settingValue","settingsSectionIcon","settingRow","Settings","selectedSchedule","settingsValues","setSettingsValues","schedulePickerModalDisabled","setSchedulePickerModalDisabled","emptyDayDisplayModalVisible","setEmptyDayDisplayModalVisible","_useState11","_useState12","displayTeacherModeModalVisible","setDisplayTeacherModeModalVisible","_useState13","_useState14","_useState15","_useState16","_settingsServiceRef$c","ActivityIndicatorLarge","constructCategoryHeader","FontAwesomeIcon","constructSettingsRow","nv","categoryName","categoryIcon","settingDescription","changeSettingComponent","AboutScreen","appVersion","appJson","resizeMode","fontStyle","tileText","tile","teamSectionHeader","tilesContainer","teamMemberTile","teamMemberImageWrapper","teamMemberImage","teamMemberDescription","teamMemberName","regularLetterSpacing","teamMemberDetails","testerName","contactsEmail","copyrightContainer","appVersionContainer","tableBorderColor","sharedCellStyle","table","tableRow","tableHeaderCell","tableCell","headers","columnWidths","colsN","maxWidth","minWidth","rowIndex","cell","cellIndex","UnfoldableCard","bodyComponent","isBodyRevealed","setIsBodyRevealed","UCStyles","unfoldableCard","revealButton","_Fragment","unfoldableCardText","RalewayRegular","QnAScreen","Table","AnalyticsService","_trackEvent2","eventName","trackEvent","showErrorView","error","resetErrorBoundary","stack","landscapeWebStyles","root","nativeStyles","AppStyles","SplashScreen","registerRootComponent","appIsReady","setAppIsReady","_useFonts","useFonts","_FONTS","LatoRegular","LatoBold","CenturyGothicBold","CenturyGothicItalic","GetAllAppFonts","fontsLoaded","Font","loadAsync","font","Entypo","markdown","ErrorBoundary","fallbackRender","NavigationContainer","Header","drawerContent","SettingsScreen","webpackContext","req","id","webpackContextResolve","__webpack_require__","code","module","exports","__webpack_module_cache__","moduleId","cachedModule","loaded","__webpack_modules__","m","deferred","O","chunkIds","fn","notFulfilled","Infinity","fulfilled","j","every","splice","getter","__esModule","leafPrototypes","getProto","getPrototypeOf","obj","mode","ns","def","getOwnPropertyNames","definition","defineProperty","enumerable","g","globalThis","Function","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}