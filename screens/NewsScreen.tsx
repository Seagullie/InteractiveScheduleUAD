import React, { useEffect, useState } from "react"
import { View, StyleSheet } from "react-native"
import AppText from "../shared/AppText"
import { globalStyles, palette } from "../styles/global"
import { FlatList, TouchableOpacity } from "react-native-gesture-handler"
import _ from "lodash"
import NewsLoaderService, { NewsArticle } from "../services/NewsLoaderService"
import { truncateText } from "../utilities/utilities"
import { FontName } from "../constants/Fonts"

function NewsCard({ date, title, body }: { date: string; title: string; body: string }) {
  // convert date into day/month/year format
  let dateObj = new Date(date)
  let day = dateObj.getDate()
  let month = dateObj.getMonth() + 1
  let year = dateObj.getFullYear()
  date = `${day}.${month}.${year}`

  let [isBodyExpanded, setIsBodyExpanded] = useState(false)

  return (
    <View style={{ marginBottom: 15 }}>
      <AppText style={{ alignSelf: "center" }}>{date}</AppText>
      <View style={styles.newsArticleCard}>
        <AppText style={{ fontFamily: FontName.MontserratBold, fontSize: 14 }}>{title}</AppText>
        <AppText style={{ marginVertical: 15, fontFamily: FontName.MontserratRegular }}>
          {isBodyExpanded ? body : truncateText(body, 280)}
        </AppText>
        <TouchableOpacity onPress={() => setIsBodyExpanded(!isBodyExpanded)} style={styles.moreButton}>
          <AppText style={{ fontFamily: FontName.MontserratSemiBold, color: palette.navigationBackground }}>
            {!isBodyExpanded ? "–î–µ—Ç–∞–ª—å–Ω—ñ—à–µ" : "–ó–≥–æ—Ä–Ω—É—Ç–∏"}
          </AppText>
        </TouchableOpacity>
      </View>
    </View>
  )
}

export default function NewsScreen() {
  let [news, setNews] = useState<NewsArticle[]>([
    //     {
    //       //   createdAt: "14.04.2023",
    //       createdAt: new Date().toDateString(),
    //       title: "–ù–æ–≤–∏–π –≤–∏–ø—É—Å–∫ –∂—É—Ä–Ω–∞–ª—É ‚Äú–°—Ç—É–¥–µ–Ω—Ç—Å—å–∫–∏–π MOOD‚Äù",
    //       body: `–ü—Ä–∏–≤—ñ—Ç–∏–∫–∏ –¥—Ä—É–∑—ñ! –ü—Ä–∏–π—à–ª–∞ –≤–µ—Å–Ω–∞ —ñ –≤–∂–µ –ø–æ—á–∏–Ω–∞—î —Ä–∞–¥—É–≤–∞—Ç–∏ –Ω–∞—Å —Å–æ–Ω–µ—á–∫–æ–º —Ç–∞ –∑–µ–ª–µ–Ω–Ω—é üå∑
    // –°—å–æ–≥–æ–¥–Ω—ñ –∂ –∑–∞–º—ñ—Å—Ç—å —Å–æ–Ω—Ü—è - –Ω–∞—à "–°—Ç—É–¥–µ–Ω—Ç—Å—å–∫–∏–π MOOD"!
    // –ü—ñ–¥–≥–æ—Ç—É–≤–∞–ª–∏ –≤–∞–º —Ç–µ–∫—Å—Ç–∏ –ø—Ä–æ –≤—ñ–¥–ø–æ—á–∏–Ω–æ–∫, –≤—ñ–π–Ω—É —Ç–∞ —ñ–Ω—à–µ)
    // –ß–∏—Ç–∞–π—Ç–µ, –ø—ñ–∫–ª—É–π—Ç–µ—Å—è –ø—Ä–æ —Å–µ–±–µ —ñ –±–ª–∏–∑—å–∫–∏—Ö, —ñ —Ö–∞–π –≤–µ—Å–Ω–∞ –ø—Ä–∏–Ω–µ—Å–µ –≤—Å—ñ–º –Ω–∞–º –ª–∏—à–µ —Ö–æ—Ä–æ—à—ñ –Ω–æ–≤–∏–Ω–∏! üå±`.repeat(2),
    //     },
  ])

  useEffect(() => {
    async function onMount() {
      const newsLoaderService = await NewsLoaderService.GetInstance()
      let fetchedNews
      try {
        fetchedNews = await newsLoaderService.getNewsFromContentful()
      } catch (e) {
        fetchedNews = newsLoaderService.getExampleNews()
      }

      setNews([...news, ...fetchedNews])
    }

    onMount()
  }, [])

  return (
    <FlatList
      data={news}
      renderItem={({ item }) => <NewsCard date={item.createdAt} title={item.title} body={item.body} />}
      style={styles.container}
    />
  )
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    padding: 10,
  },

  newsArticleCard: {
    ...globalStyles.card,
    paddingVertical: 15,
    paddingHorizontal: 15,

    marginVertical: 5,
  },

  moreButton: {
    ...globalStyles.navigationButton,
    width: "100%",
    paddingVertical: 7,
  },
})
